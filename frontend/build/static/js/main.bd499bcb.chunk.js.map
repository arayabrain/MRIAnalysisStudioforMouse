{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/selectors/run/RunSelectors.ts","const/API.ts","api/run/Run.ts","store/slice/Dataset/DatasetSelector.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Project/ProjectSelector.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/Dataset/DatasetType.ts","utils/auth/index.ts","api/auth/index.ts","utils/axios.ts","api/dataset/index.ts","store/slice/Dataset/DatasetAction.ts","store/slice/Dataset/DatasetSlice.ts","store/slice/Experiments/ExperimentsSlice.ts","store/slice/Pipeline/PipelineHook.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/Snakemake.tsx","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/DialogContext.tsx","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","store/slice/DisplayData/DisplayDataSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","components/Visualize/DataContext.tsx","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","components/Visualize/Plot/CsvPlot.tsx","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/common/Loading.tsx","components/ImageAlignment/index.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","components/FlowChart/NWB.tsx","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Experiment/Experiment.tsx","components/VisualizeNew/index.tsx","components/Project.tsx","store/slice/Project/ProjectType.ts","providers/index.ts","components/Header.tsx","components/Layout.tsx","pages/Dashboard/index.tsx","components/common/Input.tsx","components/ModalDeleteAccount/index.tsx","components/Table/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","components/InputPassword/index.tsx","components/ModalChangePassword/index.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","api/project/index.ts","store/slice/Project/ProjectAction.ts","pages/Projects/index.tsx","components/DatabaseTable.tsx","components/ImageView/ChangeSize.tsx","api/rawdb/index.tsx","components/ImageView/index.tsx","utils/database/index.ts","pages/Database/index.tsx","pages/Login/index.tsx","store/slice/Project/ProjectSlice.ts","pages/Projects/Create.tsx","pages/ResetPassword/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","data","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","filter","id","label","convertToRunResult","nodeResultDto","outputPath","outputPaths","message","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunAlreadyDisabled","runAlreadyDisabled","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectInputNodeParam","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","inputNodePosyData","isEdge","edge","HOST","process","PORT","BASE_URL","DATABASE_URL_HOST","runApi","projectId","a","axios","post","response","runByUidApi","pendingNodeIdList","selectDataset","dataset","selectCurrentProjectId","project_id","getUrlFromSubfolder","subfolders","urls","sub","sub_folders","images","urlsImage","image","url","image_url","selectListImageUrl","createAsyncThunk","thunkAPI","getState","responseData","rejectWithValue","runByCurrentUid","currentUid","pollRunResult","getExperimentsApi","get","deleteExperimentByUidApi","delete","deleteExperimentByListApi","uidList","importExperimentByUidApi","fetchExperimentApi","EXPERIMENTS_SLICE_NAME","selectLoadingProject","project","loading","currentProject","selectProjectList","projects","selectCurrentProject","getExperiments","_","fetchExperiment","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","convertToExperimentType","functions","function","unique_id","convertToExperimentStatus","success","hasNWB","timestamp","started_at","convertFunctionsToRunResultDTO","key","initialState","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","extraReducers","builder","addCase","fulfilled","rejected","meta","_state","_action","addMatcher","isAnyOf","pending","actions","PROJECT_SLICE_NAME","saveToken","access_token","localStorage","setItem","getToken","getItem","saveRefreshToken","refresh_token","removeToken","removeItem","isAdmin","role","isReseacher","optionsRole","code","login","refreshToken","getMe","listUser","query","createUser","editUser","userId","put","deleteUser","deleteAccountProfile","editNameProfile","editPassProfile","saveParams","loadParams","resetPassword","email","axiosLibrary","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","ExToken","error","Promise","reject","res","getDatasetListApi","createDatasetApi","getDatasetList","records","last_updated_time","createDataset","callback","undefined","datasetSlice","reset","experimentsSlice","setLoadingExpriment","experimentList","convertToExperimentListType","v","dayjs","extend","utc","timezone","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","ImageFileNode","CsvFileNode","HDF5FileNode","FluoFileNode","AlgorithmNode","BehaviorFileNode","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","position","newNode","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","style","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","find","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","max","random","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","twoDimarrayEqualityFn","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","SnakemakeButton","Button","endIcon","SnakemakeContents","paramKeyList","className","Component","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","errorMessage","prevOpen","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","navigate","useNavigate","float","textAlign","top","right","zIndex","textTransform","useHandleColor","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","createContext","onOpen","onOpenDialogFile","onMessageError","onOpenImageAlignment","FileSelect","multiSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","useSearchParams","searchParams","useContext","alignments","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","alpha","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","title","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","defaultValueParams","x_pos","x_resize","x_rotate","y_pos","y_resize","y_rotate","z_pos","z_resize","z_rotate","initParams","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeParamAlignment","setInputNodeHDF5Path","setSelectedFilePath","typeFileNode","setHeader","setIndex","transpose","newState","valueParams","image_id","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","DisplayDataContext","dataType","itemId","NaN","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectVisualizeItems","visualaizeItem","items","selectVisualizeItemById","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectRoiItemFilePath","roiItem","selectImageItemStartIndex","selectImageItemEndIndex","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","selectTimeSeriesItemFilePath","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","CsvPlot","isInitialized","isPending","isFulfilled","CsvPlotImple","selectCsvItemTranspose","selectCsvItemSetHeader","selectCsvItemSetIndex","PresentationalCsvPlot","csvData","useMemo","col","row","header","headerData","field","headerName","idx","rows","row_id","rowObj","fromEntries","columns","CsvFileNodeImple","ParamSettingDialog","setOpen","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","p","m","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","shape","nbytes","FluoFileNodeImple","fluoColor","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","setImageItemClikedDataId","clickedDataId","drawOrderList","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","isWorkflowDialog","imageItemInitialValue","showticklabels","showline","zsmooth","showgrid","showscale","colors","rgb","offset","activeIndex","roiAlpha","duration","timeSeriesItemInitialValue","span","zeroline","xrange","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","selectedItemId","layout","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","selectHeatMapItemShowScale","colorscale","selectHeatMapItemColors","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","selectImageItemShowticklabels","selectImageItemShowLine","selectImageItemZsmooth","selectImageItemShowGrid","selectImageItemShowScale","selectImageItemColors","selectImageItemAlpha","timeDataMaxIndex","maxIdx","selectRoiItemIndex","selectImageItemRoiAlpha","colorscaleRoi","createColormap","colormap","nshades","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","ml","PlayBack","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","text","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","selectTimeSeriesItemOffset","selectTimeSeriesItemSpan","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","selectTimeSeriesItemXrange","selectTimeSeriesItemDrawOrderList","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","selectVisualizeDataFilePath","selectVisualizeDataNodeId","selectVisualizeDataType","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allChecked","allNotChecked","indeterminate","TreeItemLabel","checkboxProps","Checkbox","disableRipple","LoaderWrapper","bottom","backgroundColor","rotate","keyframes","prixClipFix","Loader","animation","content","boxSizing","inset","Loading","ButtonClose","ButtonPre","cursor","ButtonNext","InputImage","ImageViewWrapper","justifyContent","ContentSet","Flex","Text","ButtonSet","BoxSet","SwitchImage","flexDirection","SwitchContent","ButtonOk","ButtonCanCel","CloseIconWrapper","CloseIcon","ImageAlignment","readOnly","viewerRef","setUrl","file","setLoading","refVoxel","volumes","urlRef","stateParams","setStateParams","paramAligment","loadFile","clearVolumes","loadFileIndex","paramInit","setValueToBraibrowser","setResize","setRadian","setVoxelCoords","j","k","redrawVolumes","onChangeValue","newParams","align","onBlurValue","onBlurRadian","valueRadian","isNaN","PI","pre","loadVolumes","nii_url","template","element_id","viewer_insert_className","overlay","complete","volumeLoaded","brainbrowser","window","BrainBrowser","volume","utils","isFunction","getVoxelCoords","voxelGet","gerenateValueNumber","color_map_config","VolumeViewer","start","viewer","addEventListener","urlColor","cursor_color","loadDefaultColorMapFromURL","setDefaultPanelSize","render","Modal","minHeight","onBlur","gap","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","selectLoadingExperiment","initDialogFile","ReactFlowComponent","loadingExpriment","openPopupAlignment","setOpenPopupAlignment","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","accept","drop","monitorOffset","getClientOffset","offsetLeft","offsetTop","flag","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","preventDefault","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","Popover","anchorOrigin","vertical","horizontal","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","getNWBParamsApi","getNWBParams","nwbSlice","NWBSettingContents","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","borderRight","paddingTop","transitions","easing","sharp","leavingScreen","easeOut","enteringScreen","ExperimentStatusIcon","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","unmountOnExit","Table","Head","Body","TableHead","TableBody","TableRowOfFunction","popup","setPopup","component","scope","ExperimentUidContext","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListKeys","recordsIsEmpty","startTime","finishTime","page","storageKey","initialValue","parseFn","savedStr","JSON","parse","setValue","stringify","useLocalStorage","valueNum","rowsPerPage","emptyRows","flexGlow","TableContainer","RowItem","secondary","Fragment","tableCellClasses","root","borderBottomWidth","Experiment","regexThreshold","regexCutCoords","AlertDialog","onSaveParams","DialogContentText","WrapperInput","VisualizeInput","SpanError","Title","fontWeight","CutCoords","VisualizeInputWrapper","ParamsButton","ButtonWrapper","VisualizeButton","ImageWrapper","Image","objectFit","VisualizeNew","setIsLoading","cut_coords","coronal","sagittal","threshold","dataParams","setDataParams","errors","setErrors","onLoadParams","newCutCoords","toNumberArr","validateParams","newArr","checkArr","some","test","onChangeParams","checkChar","Container","src","alt","StyledAppBar","drawer","TabPanel","other","hidden","a11yProps","Project","ProjectTypeValue","setParams","runPipeline","appDispatch","isCanceled","location","useLocation","removeStateIsEdit","cancel","then","unwrap","finished_at","diff","catch","removeEventListener","pathname","intervalId","prevStatus","setPrevStatus","useRunPipeline","set","centered","textColor","UserContext","setUser","useUser","BoxDropdown","listStyleType","backgroundClip","outline","BoxWrapper","BoxMenu","userSelect","BoxInfo","BoxMenuItem","transform","BoxMenuItemLogout","TitleLogo","HeaderWrapper","Header","user","refMenu","blur","display_name","drawerWidth","ignorePaths","MenuLeft","onResize","isClose","MenuLeftWrapper","BoxBack","ButtonBack","BoxDivider","KeyboardBackspaceIcon","LinkWrapper","to","active","TypographyMenu","Link","textDecoration","LayoutWrapper","ContentBodyWrapper","paddingRight","ChildrenWrapper","KeyboardBackspace","shouldForwardProp","listStyle","lineHeight","Layout","setWidth","checkkAuth","token","isPageLogin","DashboardWrapper","DashboardContent","flexWrap","TitleMenu","Dashboard","Input","ContentDelete","ButtonConfirm","BoxConfirm","ModalDeleteAccount","onSubmit","titleSubmit","description","textDelete","setTextDelete","whiteSpace","placeholder","MyPaginate","ReactPaginate","borderCollapse","Thead","Tr","Th","borderTopLeftRadius","borderTopRightRadius","TBody","Td","maxWidth","wordBreak","NoData","ArrowDownwardIconOrder","ArrowDownwardIcon","TableComponent","paginate","orderBy","orderKey","pageCount","page_size","renderCol","dataIndex","iCol","nameCol","disableInitialCallback","marginPagesDisplayed","pageRangeDisplayed","breakLabel","previousLabel","nextLabel","TextError","InputError","autoComplete","SelectModal","SelectError","options","initState","password","lab","confirmPassword","regexPassword","regexEmail","regexIgnoreS","ModalComponent","onSubmitEdit","setIsOpenModal","dataEdit","setFormData","isDisabled","setIsDisabled","validateEmail","validateField","validatePassword","isConfirm","errorLength","validateLength","datas","validateForm","errorName","errorEmail","errorLab","errorRole","onChangeData","newDatas","errorConfirm","toLowerCase","newErrors","alert","ModalBox","TitleModal","BoxData","LabelModal","ButtonModal","AccountManagerWrapper","BoxButton","ButtonAdd","ALink","button","AccountManager","openDelete","setOpenDelete","isOpenModal","setDataEdit","idDel","setIdDel","setData","per_page","next_page_token","setPaginate","getList","nextPageToken","newData","total_page","handleCloseDelete","onDelete","onForgotPassword","onPageChange","InputPassword","setType","BoxTitle","FormInline","Label","ModalChangePassword","setValues","validate","confirm_password","validateReEnter","new_password","onChangePass","onCloseModal","reEnter","AccountWrapper","BoxFlex","TitleData","ButtonSubmit","Account","isEditName","setIsEditName","openChangePw","setOpenChangePw","onEditName","handleCloseChangePw","onChangePw","oldPass","newPass","old_password","mt","AccountDelete","getProjectListApi","getProjectApi","createProjectApi","updateProjectApi","deleteProjectApi","getProjectList","getProjectId","createProject","editProject","deleteProject","ProjectsWrapper","ProjectsTitle","BoxAction","letterSpacing","Projects","idDelete","setIdDelete","onEdit","onWorkflow","onResults","addNewProject","onDeleteSubmit","RenderChild","propsColumn","indexChild","recordIndex","openChild","setOpenChild","column","BoxCenter","session_index","subject_index","session_id","datatype_index","image_index","datatype_label","subject_id","parent_id","record_index","RenderColumn","rowClick","drags","onMouseDown","draggable","onDrag","openChildParent","setOpenChildPrent","subjects","openSubjects","setOpenSubjects","isDrag","drag","onDragEvent","datatypes","subId","o","sessions","session","ii","onDragStart","DatabaseTableComponent","addProject","onSort","onBeginDragProps","onBeginDrag","setDrags","pageX","pageY","mouseMoveRect","setMouseMoveRect","timeoutClick","ctrRef","refTable","refTdSelect","mouseStart","beginDrag","setBeginDrag","onKeydownEvent","onKeyupEvent","onMouseUp","onMouseMove","ctrlKey","metaKey","onRowClickEvent","idDom","tds","currentTarget","getElementsByTagName","dom","innerHTML","TableWrap","DataTable","order","onSortHandle","allowMutilKey","draggableProps","el","rowId","trNow","getBoundingClientRect","BoxDrag","td","overflowX","Dot","TitleScale","BoxLine","ScaleWrapper","ChangeDrag","onChangeMin","showInputMax","mouseDown","refDrag","refDot","getWidth","clientWidth","onTouchStart","touches","mouseInit","scale","onTouchMove","toPrecision","onTouchEnd","getDataBaseTree","getDataBaseList","getRawdb","editAttributes","handleSaveAttributes","BoxLoading","ButtonPrevious","BoxContentData","WrapperJson","WrapArea","borderLeft","TextArea","ArrowBackIosIconWrapper","ArrowBackIosIcon","ArrowForwardIosIconWrapper","ArrowForwardIosIcon","WrapperButton","ImageView","editAttribute","onNext","onPrevious","jsonData","worldCoords","setWorldCoords","voxelCoords","setOpacity","thresholds","setThresholds","maxThres","setMaxThres","contracts","setContracts","brightness","setBrightness","isLoadFile","setIsLoadFile","openSave","setOpenSave","textAttribute","setTextAttribute","errorAttribute","setErrorAttribute","refTextArea","intensity_min","intensity_max","getIntensityValue","getWorldCoords","handleCloseSave","num","showInputMin","setContrast","refreshPanels","focus","onChangeJson","onRowClick","view","checkNext","onGet","checkPre","isSub","indexImageNow","record","dataNow","subjectNow","sessionNow","datatypeNow","imagePre","datatypeImagePre","imageNext","datatypeNext","sortWithLabName","datasTable","typeOrder","sort","sortSubjectTree","dataA","dataB","subjectsA","subA","subB","subjectsB","sortSessionTree","sessionsA","sA","sB","flat","sessionsB","subSessA","subSessB","ssA","ssB","sortDataTypeTree","ses","ss","dataTypeA","dataTypeB","typeA","typeB","sortAttributesTypeTree","s","imageA","imageB","image_attributes","sortWithKey","valueA","valueB","sortWithTime","Date","recording_time","onFilterValue","initDataTable","arrRecord","arrSub","subject","arrSess","session_label","arrDt","dt","datatypes_label","image_type","protocol","PopupSearch","onFilter","Popup","PopupInner","HeaderTitle","ButtonControl","InputSearch","defaultDatabase","pagenation","limit","total_pages","child","DatabaseWrapper","ButtonFilter","BoxSelectTypeView","Database","openPopup","setOpenPopup","setViewer","databases","setDatabases","columnSort","setOrderByAndTypeAndSort","initDatabases","setInitDatabases","setDisabled","fetchData","api","DatabaseTable","defaultExpand","orderByValue","filterValue","LoginWrapper","LoginContent","FormSignUp","LabelField","LableRequired","Description","LinkWrappper","ButtonLogin","Login","validateSubmit","ex_token","getUser","Stack","projectSlice","resetCurrentProject","nameDefault","defaultFactor","within","remapDatasetToDataFactor","ids","datasets","folder_name","sub_within","project_name","attributes","datatype","project_type","image_count","TextName","borderWidth","BoxItem","TypographyBoxItem","BoxFactor","BoxOptions","RadioGroup","InputName","DropAndDropBox","DragBox","DropBox","NewRowButton","borderStyle","BoxFilter","ProjectFormComponent","idEdit","setOrdeBy","setColumnSort","routeGoback","isPendingDrag","databasese","projectName","setProjectName","FACTOR","projectType","setProjectType","openFilter","setOpenFilter","rowDrag","setRowDrag","dataFactors","setDataFactors","imageIDs","setImageIDs","errorProjectEmpty","all","getDataTree","onMouseOver","factor","onDropData","newIds","w","onDragLeave","renderData","rowDataClick","onCancle","generateName","getBorderDrag","onOk","source_image_ids","iWithin","isSuccess","WITHIN_FACTOR","Radio","onChangeNameFactor","rowData","onChangeNameWithinFactor","onDeleteWithin","onDeleteDataWithin","onDrop","onDeleteDataFactor","idFactor","mouseup","Heading","ButtonSignIn","ResetPassword","onReset","errorCheck","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","deleteData","prevDataType","prevFilePath","roi1Ddata","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","projectReducer","datasetReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.bd499bcb.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { SubFolder } from '../Dataset/DatasetType'\nimport { ExperimentDTO } from 'api/experiments/Experiments'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n  runAlreadyDisabled?: boolean\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n\nexport type DataPipeLine = {\n  dataset?: SubFolder[]\n  experiment: ExperimentDTO | undefined\n  isUpdateDataset: boolean\n}\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else if (nodeResultDto.status === 'running') {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: nodeResultDto.name,\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunAlreadyDisabled = (state: RootState) => {\n  return state.pipeline.runAlreadyDisabled ?? false\n}\n\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type Params = {\n  image_id: number | string\n  x_pos: number\n  y_pos: number\n  z_pos: number\n  x_rotate: number\n  y_rotate: number\n  z_rotate: number\n  x_resize: number\n  y_resize: number\n  z_resize: number\n}\n\nexport type AlignmentData = {\n  alignments: {\n    path: string\n    type: string\n    value: Params[]\n  }\n}\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode\n  extends InputNodeBaseType<'image', AlignmentData> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\nconst HOST_DATABASE = process.env.REACT_APP_SERVER_DATABASE_HOST\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\nexport const DATABASE_URL_HOST = `${HOST_DATABASE}`\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(\n  projectId: string,\n  data: RunPostData,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${projectId}`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  projectId: string,\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${projectId}/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  projectId: string\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { projectId, uid, pendingNodeIdList } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/result/${projectId}/${uid}`,\n    {\n      pendingNodeIdList,\n    },\n  )\n  return response.data\n}\n","import { RootState } from 'store/store'\nimport { SubFolder } from './DatasetType'\n\nexport const selectDataset = (state: RootState) => state.dataset\n\nexport const selectCurrentProjectId = (state: RootState) =>\n  state.dataset.project_id\n\nexport const getUrlFromSubfolder = (\n  subfolders: SubFolder[] = [],\n  urls: { id: string | number; url: string }[],\n) => {\n  subfolders.forEach((sub) => {\n    if (sub.sub_folders) {\n      getUrlFromSubfolder(sub.sub_folders, urls)\n    } else if (sub.images?.length) {\n      const urlsImage = sub.images.map((image) => ({\n        url: image.image_url,\n        id: image.id,\n      }))\n      urls.push(...urlsImage)\n    }\n  })\n  return urls\n}\n\nexport const selectListImageUrl = (\n  state: RootState,\n): { id: string | number; url: string }[] => {\n  if (!state.dataset.dataset) return []\n  let urls: { id: string | number; url: string }[] = []\n  urls = getUrlFromSubfolder(state.dataset.dataset, urls)\n  return urls\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\nimport { selectCurrentProjectId } from '../Dataset/DatasetSelector'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  if (projectId) {\n    try {\n      const responseData = await runApi(projectId, runPostData)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('projectId does not exist.')\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const projectId = selectCurrentProjectId(thunkAPI.getState())\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (projectId && currentUid != null) {\n      try {\n        const responseData = await runByUidApi(\n          projectId,\n          currentUid,\n          runPostData,\n        )\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('projectId or currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  if (projectId) {\n    try {\n      const responseData = await runResult({\n        projectId,\n        uid,\n        pendingNodeIdList,\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('projectId does not exist.')\n  }\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { EdgeDict, NodeDict, OutputPathsDTO, RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type FunctionsDTO = {\n  [nodeId: string]: {\n    name: string\n    success: string\n    unique_id: string\n    hasNWB: boolean\n    message?: string\n    started_at?: string\n    finished_at?: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type ExperimentDTO = {\n  function: FunctionsDTO\n  name: string\n  success?: EXPERIMENTS_STATUS\n  started_at: string\n  finished_at?: string\n  project_id: string\n  unique_id: string\n  hasNWB: boolean\n  edgeDict: EdgeDict\n  nodeDict: NodeDict\n}\n\nexport async function getExperimentsApi(\n  projectId: string,\n): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/${projectId}`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function fetchExperimentApi(\n  projectId: string,\n): Promise<ExperimentDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/fetch/${projectId}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments = (\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n) & { loading: boolean }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  status?: EXPERIMENTS_STATUS\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { RootState } from 'store/store'\n\nexport const selectProject = (state: RootState) => state.project\n\nexport const selectLoadingProject = (state: RootState) => state.project.loading\nexport const selectCurrentProjectId = (state: RootState) =>\n  state.project.currentProject?.id\n  \nexport const selectProjectList = (state: RootState) => state.project.projects\n\nexport const selectCurrentProject = (state: RootState) => state.project.currentProject\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n  ExperimentDTO,\n  fetchExperimentApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\nimport { selectCurrentProjectId } from '../Project/ProjectSelector'\nimport { ThunkApiConfig } from 'store/store'\n\nexport const getExperiments = createAsyncThunk<\n  ExperimentsDTO,\n  undefined,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/getExperiments`, async (_, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  if (projectId) {\n    try {\n      const response = await getExperimentsApi(projectId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('project id does not exist.')\n  }\n})\n\nexport const fetchExperiment = createAsyncThunk<\n  { data: ExperimentDTO; urls: { id: number | string; url: string }[] },\n  { projectId: string; urls: { id: number | string; url: string }[] }\n>(\n  `${EXPERIMENTS_SLICE_NAME}/fetchExperiment`,\n  async ({ projectId, urls }, thunkAPI) => {\n    try {\n      const response = await fetchExperimentApi(projectId)\n      return { data: response, urls }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<\n  { data: RunPostData; urls: { id: number | string; url: string }[] },\n  { uid: string; urls: { id: number | string; url: string }[] }\n>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async ({ uid, urls }, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return { data: response, urls }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import type {\n  ExperimentDTO,\n  ExperimentsDTO,\n  FunctionsDTO,\n} from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\nimport { RunResultDTO } from 'api/run/Run'\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.started_at,\n    status: dto.success,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nexport function convertFunctionsToRunResultDTO(\n  dto: FunctionsDTO,\n): RunResultDTO {\n  const result: RunResultDTO = {}\n  Object.entries(dto).forEach(([key, value]) => {\n    result[key] = {\n      status: value.success,\n      message: value.message ?? '',\n      name: value.name,\n      outputPaths: value.outputPaths,\n    }\n  })\n  return result\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\nimport { convertFunctionsToRunResultDTO } from '../Experiments/ExperimentsUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n      state.runAlreadyDisabled = false\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n        runAlreadyDisabled?: boolean\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n      state.runAlreadyDisabled = action.payload.runAlreadyDisabled ?? false\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n            state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n            state.runAlreadyDisabled = false\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.runAlreadyDisabled = false\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        if (action.meta.arg.uid === 'default') {\n          state.runBtn = RUN_BTN_OPTIONS.RUN_NEW\n          state.runAlreadyDisabled = true\n        } else {\n          state.currentPipeline = {\n            uid: action.meta.arg.uid,\n          }\n          state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        }\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.payload.data.unique_id,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.runAlreadyDisabled = false\n        state.run = {\n          uid: action.payload.data.unique_id,\n          status: RUN_STATUS.START_SUCCESS,\n          runResult: {\n            ...convertToRunResult(\n              convertFunctionsToRunResultDTO(action.payload.data.function),\n            ),\n          },\n          runPostData: {\n            name: action.payload.data.name,\n            nodeDict: action.payload.data.nodeDict,\n            edgeDict: action.payload.data.edgeDict,\n            snakemakeParam: {},\n            nwbParam: {},\n            forceRunList: [],\n          },\n        }\n\n        const runResultPendingList = Object.values(state.run.runResult).filter(\n          isNodeResultPending,\n        )\n        if (runResultPendingList.length === 0) {\n          state.run.status = RUN_STATUS.FINISHED\n        }\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { ObjectType } from 'pages/Database'\n\nexport const PROJECT_SLICE_NAME = 'project'\n\nexport type DatasetPostType = {\n  folder_name: string\n  sub_folders: { folder_name: string; source_image_ids: number[] }[]\n  source_image_ids: number[]\n}\n\nexport type DatasetType = {\n  folder_name: string\n  sub_folders: { folder_name: string; images: number[] }[]\n  images: number[]\n}\n\nexport type SubFolder = {\n  folder_name: string\n  id: string\n  images?: {\n    attributes: ObjectType\n    id: number\n    image_url: string\n    parent_id: string\n  }[]\n  parent_id: string\n  sub_folders?: SubFolder[]\n}\n\nexport type Dataset = {\n  dataset?: SubFolder[]\n  project_id: string | null\n  last_updated_time: string | null\n}\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\nexport const saveRefreshToken = (refresh_token: string) => {\n  localStorage.setItem('refresh_token', refresh_token)\n}\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refresh_token')\n}\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\nexport const saveExToken = (ExToken: string) => {\n  localStorage.setItem('ExToken', ExToken)\n}\nexport const getExToken = () => {\n  return localStorage.getItem('ExToken')\n}\nexport const removeExToken = () => {\n  return localStorage.removeItem('ExToken')\n}\n\nexport const isAdmin = (role?: number | string) => {\n  return role === 1\n}\n\nexport const isReseacher = (role?: string | number) => {\n  return role === 20\n}\n\nexport const optionsRole = [\n  {\n    code: 1,\n    name: 'Admin',\n  },\n  {\n    code: 10,\n    name: 'Data Manager',\n  },\n  {\n    code: 20,\n    name: 'User',\n  },\n]\n","import { getRefreshToken } from 'utils/auth'\nimport axios from 'utils/axios'\n\nexport const login = async (data: { email: string; password: string }) => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const refreshToken = async () => {\n  const response = await axios.post('/auth/refresh', {\n    refresh_token: getRefreshToken(),\n  })\n  return response.data\n}\n\nexport const getMe = async () => {\n  const response = await axios.get('/auth/me')\n  return response.data\n}\n\nexport const listUser = async (query?: object) => {\n  const response = await axios.get('/admin/user', { params: query })\n  return response.data\n}\n\nexport const createUser = async (data: object) => {\n  const response = await axios.post(`/admin/user`, data)\n  return response.data\n}\n\nexport const editUser = async (userId: string | number, data: object) => {\n  const response = await axios.put(`/admin/user/${userId}`, data)\n  return response.data\n}\n\nexport const deleteUser = async (userId: string | number) => {\n  const response = await axios.delete(`/admin/user/${userId}`)\n  return response.data\n}\n\nexport const deleteAccountProfile = async () => {\n  const response = await axios.delete(`/auth/me`)\n  return response.data\n}\n\nexport const editNameProfile = async (data: object) => {\n  const response = await axios.put(`/auth/me`, data)\n  return response.data\n}\n\nexport const editPassProfile = async (data: object) => {\n  const response = await axios.put(`/auth/change-password`, data)\n  return response.data\n}\n\nexport const saveParams = async (data: object) => {\n  const response = await axios.post(`/image_stat/param`, data)\n  return response.data\n}\n\nexport const loadParams = async () => {\n  const response = await axios.get(`/image_stat/param`)\n  return response.data\n}\n\nexport const resetPassword = async (email: string) => {\n  const response = await axios.post(\n    `/admin/user/send_reset_password?email=${email}`,\n    email,\n  )\n  return response.data\n}\n","import { refreshToken } from 'api/auth'\nimport axiosLibrary from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { getExToken, getToken, saveToken } from 'utils/auth'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    config.headers.ExToken = getExToken()\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\naxios.interceptors.response.use(\n  async (res) => res,\n  async (error) => {\n    if (error?.response?.status === 401) {\n      const { access_token } = await refreshToken()\n      saveToken(access_token)\n      error.config.headers.Authorization = `Bearer ${access_token}`\n      return axiosLibrary(error.config)\n    }\n    return Promise.reject(error)\n  },\n)\n\nexport default axios\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from '../../const/API'\nimport { DatasetPostType } from 'store/slice/Dataset/DatasetType'\n\nexport const getDatasetListApi = async (project_id: string) => {\n  const response = await axios.get(\n    `${DATABASE_URL_HOST}/workdb/dataset/${project_id}/search`,\n  )\n  return response.data\n}\n\nexport const createDatasetApi = async (\n  data: DatasetPostType[],\n  project_id: number,\n) => {\n  const response = await axios.post(\n    `${DATABASE_URL_HOST}/workdb/dataset/${project_id}`,\n    data,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  PROJECT_SLICE_NAME,\n  Dataset,\n  DatasetPostType,\n  SubFolder,\n} from './DatasetType'\nimport { createDatasetApi, getDatasetListApi } from 'api/dataset'\n\nexport const getDatasetList = createAsyncThunk<Dataset, { project_id: string }>(\n  `${PROJECT_SLICE_NAME}/getDatasets`,\n  async (param, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getDatasetListApi(param.project_id)\n      return {\n        dataset: response?.records as SubFolder[],\n        project_id: param.project_id,\n        last_updated_time: response?.last_updated_time,\n      }\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const createDataset = createAsyncThunk<\n  Dataset,\n  {\n    dataset: DatasetPostType[]\n    project_id: number\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/createDataset`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await createDatasetApi(param.dataset, param.project_id)\n    param.callback?.(true)\n    return response\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n","import { createSlice } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Dataset } from './DatasetType'\nimport { getDatasetList } from './DatasetAction'\n\nconst initialState: Dataset = {\n  dataset: undefined,\n  project_id: null,\n  last_updated_time: null,\n}\n\nexport const datasetSlice = createSlice({\n  name: PROJECT_SLICE_NAME,\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.project_id = null\n      state.dataset = undefined\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getDatasetList.fulfilled, (state, action) => {\n      state.dataset = action.payload.dataset\n      state.project_id = action.payload.project_id\n    })\n  },\n})\n\nexport const { reset } = datasetSlice.actions\nexport default datasetSlice.reducer\n","import { PayloadAction, createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n  fetchExperiment,\n} from './ExperimentsActions'\nimport {\n  convertToExperimentListType,\n  convertToExperimentType,\n} from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n  loading: true,\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {\n    setLoadingExpriment: (\n      state,\n      action: PayloadAction<{\n        loading: boolean\n      }>,\n    ) => {\n      state.loading = action.payload.loading\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n          loading: true,\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n          loading: false,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n          loading: false,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          state.experimentList[action.payload.data.unique_id] =\n            convertToExperimentType(action.payload.data)\n        }\n        state.loading = false\n      })\n      .addCase(fetchExperiment.rejected, (state, action) => {\n        state.loading = false\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n          loading: false,\n        }\n      })\n  },\n})\nexport const { setLoadingExpriment } = experimentsSlice.actions\n\nexport default experimentsSlice.reducer\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useSearchParams, useLocation, useNavigate } from 'react-router-dom'\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline, setRunBtnOption } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_BTN_OPTIONS, RUN_STATUS } from './PipelineType'\nimport {\n  fetchExperiment,\n  getExperiments,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { reset } from '../Dataset/DatasetSlice'\nimport { getDatasetList } from '../Dataset/DatasetAction'\nimport { AppDispatch } from 'store/store'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone' // dependent on utc plugin\nimport { setLoadingExpriment } from '../Experiments/ExperimentsSlice'\nimport { getUrlFromSubfolder } from '../Dataset/DatasetSelector'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const appDispatch: AppDispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const [searchParams] = useSearchParams()\n  const projectId = searchParams.get('id')\n  const navigate = useNavigate()\n\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const location = useLocation()\n\n  React.useEffect(() => {\n    window.addEventListener('beforeunload', removeStateIsEdit)\n    if (!projectId) {\n      navigate('/projects')\n    } else {\n      if (!location.state?.cancel) {\n        appDispatch(getDatasetList({ project_id: projectId }))\n          .unwrap()\n          .then(({ dataset, last_updated_time }) => {\n            let urls: { id: string | number; url: string }[] = []\n            getUrlFromSubfolder(dataset, urls)\n            appDispatch(fetchExperiment({ projectId, urls }))\n              .unwrap()\n              .then(({ data: { finished_at } }) => {\n                const imgsetUpdatedSinceLastRun = dayjs(\n                  dayjs(last_updated_time).format('YYYY-MM-DD HH:mm'),\n                ).diff(\n                  dayjs(dayjs(finished_at).format('YYYY-MM-DD HH:mm')),\n                  'm',\n                ) > 0\n                imgsetUpdatedSinceLastRun && dispatch(\n                  setRunBtnOption({\n                    runBtnOption: RUN_BTN_OPTIONS.RUN_NEW,\n                    runAlreadyDisabled: true,\n                  }),\n                )\n              })\n              .catch((_) => {\n                appDispatch(\n                  importExperimentByUid({ uid: 'default', urls }),\n                )\n              })\n          })\n      } else {\n        appDispatch(getDatasetList({ project_id: projectId })).then(() => {\n          dispatch(setLoadingExpriment({ loading: false }))\n        })\n      }\n    }\n\n    return () => {\n      dispatch(reset())\n      dispatch(setLoadingExpriment({ loading: true }))\n      window.removeEventListener('beforeunload', removeStateIsEdit)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const removeStateIsEdit = () => {\n    navigate(location.pathname, { replace: true })\n  }\n\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n\n  const status = useSelector(selectPipelineStatus)\n\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.START_SUCCESS) {\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n        dispatch(getExperiments())\n      }\n      setPrevStatus(status)\n    }\n  }, [dispatch, status, prevStatus, enqueueSnackbar])\n\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 130,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { FlowElement, Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node as FlowElement<NodeData>)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node as FlowElement<NodeData>)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.data.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.data.edgeDict),\n        )\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.data.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.data.edgeDict),\n        )\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n  // editFlowElementParamsAlignmentById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n      .addCase(fetchExperiment.fulfilled, (_state, _action) => initialState)\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn, selectRunAlreadyDisabled } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n  const runAlreadyDisabled = useSelector(selectRunAlreadyDisabled)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        (!uidExists || runAlreadyDisabled) && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n// import { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n      }}\n    >\n      <Button onClick={() => navigate('/projects')}>\n        <ArrowBackIosIcon />\n        Projects\n      </Button>\n      <SnakemakeButton />\n      {/*<NWBSettingButton />*/}\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n  images: { id: string | number; url: string }[]\n  onOpenImageAlignment: (\n    v: boolean,\n    params?: { nodeId: string; alignments: Params[] },\n  ) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n  onOpenImageAlignment: () => null,\n  images: [],\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { AlignmentData, FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { DialogContext } from '../DialogContext'\nimport { useSelector } from 'react-redux'\nimport { selectInputNodeParam } from 'store/slice/InputNode/InputNodeSelectors'\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const { onUploadFile, pending, uninitialized, progress, error } =\n    useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        nodeId={nodeId}\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n  nodeId?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({ filePath, nodeId }) => {\n    const navigate = useNavigate()\n    const [searchParams] = useSearchParams()\n    const { onOpenImageAlignment } = useContext(DialogContext)\n\n    const inputNode = useSelector(\n      selectInputNodeParam(nodeId || ''),\n    ) as AlignmentData\n\n    const id = searchParams.get('id')\n\n    const getNameSelectec = () => {\n      if (Array.isArray(filePath)) {\n        return `${filePath.length} images selected.`\n      }\n      return `${filePath ? 1 : 0} images selected.`\n    }\n\n    return (\n      <div style={{ padding: 16 }}>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: 'auto' }}>\n          <Button\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n            onClick={() =>\n              navigate(\n                `/projects/new-project?id=${id}&nodeId=${nodeId}&back=/projects/workflow?tab=0&id=${id}`,\n              )\n            }\n          >\n            EDIT IMAGESET\n          </Button>\n        </ButtonGroup>\n        <div style={{ marginTop: 8 }}>\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {getNameSelectec()}\n          </Typography>\n        </div>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: '8px 0' }}>\n          <Button\n            disabled={!filePath || !filePath.length}\n            onClick={() => {\n              if (!nodeId) return\n              onOpenImageAlignment(true, {\n                nodeId,\n                alignments: inputNode?.alignments?.value || [],\n              })\n            }}\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n          >\n            ALIGNMENT\n          </Button>\n        </ButtonGroup>\n      </div>\n    )\n  },\n)\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport {\n  INITIAL_IMAGE_ELEMENT_ID,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n  Params,\n  ImageInputNode,\n  AlignmentData,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\nimport { getUrlFromSubfolder } from '../Dataset/DatasetSelector'\nimport { NodeDict } from 'api/run/Run'\nimport { SubFolder } from '../Dataset/DatasetType'\n\nconst defaultValueParams = {\n  x_pos: 0,\n  x_resize: 1,\n  x_rotate: 0,\n  y_pos: 0,\n  y_resize: 1,\n  y_rotate: 0,\n  z_pos: 0,\n  z_resize: 1,\n  z_rotate: 0,\n}\n\nconst initParams: AlignmentData = {\n  alignments: {\n    path: 'alignments',\n    type: 'child',\n    value: [],\n  },\n}\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: initParams,\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeParamAlignment(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: Params[]\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId] as ImageInputNode\n      if (!inputNode.param?.alignments) return\n      inputNode.param.alignments.value = param\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n    setSelectedFilePath(\n      state,\n      action: PayloadAction<{\n        dataset: SubFolder[] | undefined\n        nodeDict?: NodeDict\n      }>,\n    ) {\n      const { dataset, nodeDict } = action.payload\n      let urls: { id: string | number; url: string }[] = []\n      dataset && getUrlFromSubfolder(dataset, urls)\n      if (nodeDict) {\n        const typeFileNode = Object.keys(REACT_FLOW_NODE_TYPE_KEY)\n        Object.keys(nodeDict).forEach((key) => {\n          if (typeFileNode.includes(nodeDict[key].type as string)) {\n            const targetNode = state[key]\n            if (!targetNode) return\n            targetNode.selectedFilePath = urls.map(({ url }) => url)\n            if (isHDF5InputNode(targetNode)) {\n              targetNode.hdf5Path = undefined\n            }\n          }\n        })\n      } else {\n        const targetNode = state[INITIAL_IMAGE_ELEMENT_ID]\n        targetNode.selectedFilePath = urls.map(({ url }) => url)\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: initParams,\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        const { urls } = action.payload\n        Object.values(action.payload.data.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                const valueParams = urls.map((element) => ({\n                  image_id: element.id,\n                  ...defaultValueParams,\n                }))\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: urls.map(({ url }) => url) as string[],\n                  param: {\n                    ...initParams,\n                    alignments: {\n                      ...initParams.alignments,\n                      value: valueParams,\n                    },\n                  },\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        const { urls } = action.payload\n        Object.values(action.payload.data.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            const { data } = node\n            const param = data?.param as AlignmentData\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                const valueParams = urls.map((element) => ({\n                  image_id: element.id,\n                  ...defaultValueParams,\n                }))\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: urls.map(({ url }) => url),\n                  param: {\n                    ...initParams,\n                    alignments: {\n                      ...initParams.alignments,\n                      value: valueParams,\n                    },\n                  },\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param,\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const {\n  setCsvInputNodeParam,\n  setInputNodeHDF5Path,\n  setInputNodeParamAlignment,\n  setSelectedFilePath,\n} = inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        label=\"dur[msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import {Box, keyframes, styled} from \"@mui/material\";\n\nconst Loading = () => {\n    return (\n        <LoaderWrapper>\n            <Loader />\n        </LoaderWrapper>\n    )\n}\n\nconst LoaderWrapper = styled(Box)(({theme}) => ({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    position: 'fixed',\n    backgroundColor: 'rgba(255,255,255,0.6)',\n    zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme })=> ({\n    display: 'block',\n    width: 48,\n    height: 48,\n    borderRadius: '50%',\n    position: 'relative',\n    zIndex: 100,\n    top: 'calc(50% - 24px)',\n    left: 'calc(50% - 24px)',\n    animation: `${rotate} 1s linear infinite`,\n    '&:before': {\n        content: \"''\",\n        boxSizing: 'border-box',\n        position: 'absolute',\n        inset: 0,\n        borderRadius: '50%',\n        border: '3px solid rgba(0,0,0,0.8)',\n        animation: `${prixClipFix} 2s linear infinite`\n    }\n}))\n\nexport default Loading\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { ChangeEvent, FC, useEffect, useMemo, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { ObjectType } from 'pages/Database'\nimport { useDispatch } from 'react-redux'\nimport { setInputNodeParamAlignment } from 'store/slice/InputNode/InputNodeSlice'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\nimport { DATABASE_URL_HOST } from 'const/API'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\nimport { RUN_BTN_OPTIONS } from 'store/slice/Pipeline/PipelineType'\nimport Loading from 'components/common/Loading'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  urls: { id: string | number; url: string }[]\n  jsonData?: ObjectType\n  disabled?: { left: boolean; right: boolean }\n  params?: { nodeId: string; alignments: Params[] }\n  readOnly?: boolean\n}\n\nconst ImageAlignment: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  urls,\n  params = { nodeId: '', alignments: [] },\n  readOnly = false,\n}) => {\n  const viewerRef = useRef<any>()\n  const [image, setUrl] = useState(urls[0])\n  const [loading, setLoading] = useState({\n    file: false,\n    loaded: false,\n    error: false,\n  })\n  const refVoxel = useRef<\n    undefined | { i: number; j: number; k: number; url: string }\n  >()\n  const volumes = useRef<any>()\n  const dispatch = useDispatch()\n  const urlRef = useRef(image)\n  const [stateParams, setStateParams] = useState<Params[]>(params.alignments)\n\n  const paramAligment = useMemo(() => {\n    return stateParams.find((param) => param.image_id === image?.id)\n  }, [image?.id, stateParams])\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 200)\n    }\n    return () => {\n      viewerRef.current.clearVolumes?.()\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    urlRef.current = image\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [image])\n\n  useEffect(() => {\n    if (loading.loaded) {\n      const paramInit = params.alignments?.find(\n        (param) => param.image_id === image?.id,\n      )\n      setValueToBraibrowser(paramInit)\n    }\n    //eslint-disable-next-line\n  }, [loading.loaded, image?.id])\n\n  const onOk = () => {\n    if (params?.nodeId && stateParams) {\n      dispatch(\n        setInputNodeParamAlignment({\n          nodeId: params.nodeId,\n          param: stateParams,\n        }),\n      )\n      dispatch(\n        setRunBtnOption({\n          runBtnOption: RUN_BTN_OPTIONS.RUN_NEW,\n          runAlreadyDisabled: true,\n        }),\n      )\n    }\n    onClose?.()\n  }\n\n  const onPreImage = () => {\n    const index = urls.findIndex((item) => item.id === image?.id)\n    if (index === 0) return\n    setUrl(urls[index - 1])\n  }\n\n  const onNextImage = () => {\n    const index = urls.findIndex((item) => item.id === image?.id)\n    if (index === urls.length - 1) return\n    setUrl(urls[index + 1])\n  }\n\n  const setValueToBraibrowser = (valueParams?: Params) => {\n    if (valueParams && refVoxel.current) {\n      volumes.current.setResize({\n        x: Number(valueParams.x_resize),\n        y: Number(valueParams.y_resize),\n        z: Number(valueParams.z_resize),\n      })\n      volumes.current.setRadian(\n        Number(valueParams.y_rotate),\n        Number(valueParams.x_rotate),\n        Number(valueParams.z_rotate),\n      )\n      volumes.current.setVoxelCoords(\n        Number(Number(valueParams.y_pos) + refVoxel.current.i),\n        Number(Number(valueParams.z_pos) + refVoxel.current.j),\n        Number(Number(valueParams.x_pos) + refVoxel.current.k),\n      )\n      viewerRef.current.redrawVolumes()\n    }\n  }\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === image?.id ? { ...align, [name]: value } : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const onBlurValue = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === image?.id\n          ? { ...align, [name]: Number(value || 0) }\n          : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const onBlurRadian = (e: any) => {\n    const { name, value } = e.target\n    let valueRadian = Number(value)\n    if (isNaN(valueRadian)) {\n      valueRadian = 0\n    } else if (valueRadian < 0) {\n      valueRadian = 0\n    } else if (valueRadian > 2 * Math.PI) {\n      valueRadian = 0\n    }\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === image?.id\n          ? { ...align, [name]: valueRadian }\n          : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const loadFileIndex = () => {\n    if (!image?.url || loading.file || !viewerRef.current) return\n    setLoading((pre) => ({ ...pre, file: true }))\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: `${DATABASE_URL_HOST}${image.url}`,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n        },\n      ],\n      complete: () => {\n        setValueToBraibrowser(paramAligment)\n        setLoading((pre) => ({ ...pre, file: false, loaded: true }))\n      },\n    })\n  }\n\n  const volumeLoaded = (event: any) => {\n    const brainbrowser = (window as any).BrainBrowser\n    const { volume } = event\n    volumes.current = volume\n    if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n      const voxelGet = volume.getVoxelCoords()\n      if (!refVoxel.current || refVoxel.current?.url !== urlRef.current.url) {\n        refVoxel.current = { ...voxelGet, url: urlRef.current.url }\n      } else if (refVoxel.current?.url === urlRef.current.url) {\n        setStateParams((params) =>\n          params.map((param) => {\n            if (param.image_id === urlRef.current.id) {\n              return {\n                ...param,\n                x_pos: voxelGet.k - (refVoxel.current?.k || 0),\n                y_pos: voxelGet.i - (refVoxel.current?.i || 0),\n                z_pos: voxelGet.j - (refVoxel.current?.j || 0),\n              }\n            }\n            return param\n          }),\n        )\n      }\n    }\n    setLoading((pre) => ({ ...pre, file: false, error: false, loaded: true }))\n  }\n\n  const gerenateValueNumber = (value?: number) => {\n    if (typeof value === 'undefined') return ''\n    return value\n  }\n\n  const loadFile = () => {\n    if (!image.url || (loading.file && !loading.error)) return\n    setLoading((pre) => ({ ...pre, file: true, loaded: false }))\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', volumeLoaded)\n        viewer.addEventListener('sliceupdate', volumeLoaded)\n        viewer.addEventListener('error', () => {\n          setLoading((pre) => ({ ...pre, error: false }))\n          setTimeout(loadFile, 200)\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        setTimeout(() => {\n          viewer.setDefaultPanelSize(256, 256)\n          viewer.render()\n          viewer.clearVolumes()\n          viewer.loadVolumes({\n            volumes: [\n              {\n                type: 'nifti1',\n                nii_url: `${DATABASE_URL_HOST}${image.url}`,\n                template: {\n                  element_id: 'volume-ui-template',\n                  viewer_insert_className: 'volume-viewer-display',\n                },\n                overlay: {\n                  template: {\n                    element_id: 'overlay-ui-template',\n                    viewer_insert_className: 'overlay-viewer-display',\n                  },\n                },\n              },\n            ],\n          })\n        }, 500)\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div style={{ alignItems: 'stretch' }}>\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#000',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              <Flex>\n                <BoxSet>\n                  <ContentSet>\n                    <Flex>\n                      <Text>right {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"x_pos\"\n                        value={gerenateValueNumber(paramAligment?.x_pos)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>forward {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"y_pos\"\n                        value={gerenateValueNumber(paramAligment?.y_pos)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>up {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"z_pos\"\n                        value={gerenateValueNumber(paramAligment?.z_pos)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>roll {'{rad}'}</Text>\n                      <input\n                        name=\"x_rotate\"\n                        value={gerenateValueNumber(paramAligment?.x_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>pitch {'{rad}'}</Text>\n                      <input\n                        name=\"y_rotate\"\n                        value={gerenateValueNumber(paramAligment?.y_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>yaw {'{rad}'}</Text>\n                      <input\n                        name=\"z_rotate\"\n                        value={gerenateValueNumber(paramAligment?.z_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{x}'}</Text>\n                      <input\n                        name=\"x_resize\"\n                        value={gerenateValueNumber(paramAligment?.x_resize)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{y}'}</Text>\n                      <input\n                        value={gerenateValueNumber(paramAligment?.y_resize)}\n                        name=\"y_resize\"\n                        onChange={onChangeValue}\n                        onBlur={onBlurValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{z}'}</Text>\n                      <input\n                        value={gerenateValueNumber(paramAligment?.z_resize)}\n                        name=\"z_resize\"\n                        onChange={onChangeValue}\n                        onBlur={onBlurValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <ButtonSet\n                      onClick={() => setValueToBraibrowser(paramAligment)}\n                    >\n                      Set Origin\n                    </ButtonSet>\n                  </ContentSet>\n                </BoxSet>\n                <Flex\n                  sx={{\n                    flexDirection: 'column',\n                    position: 'relative',\n                    gap: 15,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <SwitchImage>\n                    <span>Select Image</span>\n                    <SwitchContent>\n                      <ButtonPre onClick={onPreImage}>{'<'}</ButtonPre>\n                      <InputImage value={image.url} readOnly />\n                      <ButtonNext onClick={onNextImage}>{'>'}</ButtonNext>\n                    </SwitchContent>\n                    <span>{`(${\n                      urls.findIndex((item) => item.id === image?.id) + 1\n                    }/${urls.length})`}</span>\n                  </SwitchImage>\n                  <Flex sx={{ gap: 5 }}>\n                    <ButtonCanCel onClick={onClose}>CANCEL</ButtonCanCel>\n                    <ButtonOk onClick={onOk}>OK</ButtonOk>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </div>\n          </div>\n          {loading.file && <Loading />}\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  right: '10%',\n  top: '10%',\n  zIndex: 100001,\n  background: 'rgba(0, 0, 0, 0.6)',\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.8)',\n  },\n})\n\nconst ButtonPre = styled('button')({\n  width: 50,\n  height: 50,\n  position: 'unset',\n  zIndex: 1,\n  borderRadius: '50%',\n  backgroundColor: 'unset',\n  border: 'none',\n  cursor: 'pointer',\n  fontSize: 20,\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.1)',\n  },\n})\n\nconst ButtonNext = styled(ButtonPre)({\n  right: '10%',\n})\n\nconst InputImage = styled('input')({\n  height: 'fit-content',\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: '#fff',\n})\n\nconst ContentSet = styled(Box)({\n  padding: 20,\n})\n\nconst Flex = styled(Box)({\n  display: 'flex',\n})\n\nconst Text = styled('span')({\n  display: 'block',\n  minWidth: 150,\n})\n\nconst ButtonSet = styled('button')({\n  marginTop: 20,\n  cursor: 'pointer',\n})\n\nconst BoxSet = styled(Box)({\n  border: '2px solid #000',\n  width: 'fit-content',\n  margin: '30px 50px',\n})\n\nconst SwitchImage = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n})\n\nconst SwitchContent = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst ButtonOk = styled('button')({\n  padding: '10px 20px',\n  background: '#000000c7',\n  border: '2px solid #000',\n  color: '#fff',\n  cursor: 'pointer',\n})\n\nconst ButtonCanCel = styled('button')({\n  padding: 10,\n  border: '2px solid #000',\n  cursor: 'pointer',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageAlignment\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectLoadingExperiment = (state: RootState) =>\n  state.experiments.loading\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const experiment = selectExperimentList(state)[uid]\n    if (experiment.status) {\n      return experiment.status\n    } else {\n      const functions = selectExperimentList(state)[uid].functions\n      const statusList = Object.values(functions).map((f) => f.status)\n      if (statusList.findIndex((status) => status === 'error') >= 0) {\n        return 'error'\n      } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n        return 'running'\n      } else {\n        return 'success'\n      }\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\nimport ImageAlignment from '../ImageAlignment'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\nimport { selectListImageUrl } from 'store/slice/Dataset/DatasetSelector'\nimport { selectLoadingExperiment } from 'store/slice/Experiments/ExperimentsSelectors'\nimport Loading from 'components/common/Loading'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n    const urls = useSelector(selectListImageUrl)\n\n    const loadingExpriment = useSelector(selectLoadingExperiment)\n\n    const [openPopupAlignment, setOpenPopupAlignment] = useState<{\n      open: boolean\n      params?: { nodeId: string; alignments: Params[] }\n    }>({\n      open: false,\n      params: { nodeId: '', alignments: [] },\n    })\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            images: urls,\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n            onOpenImageAlignment: (flag, params) => {\n              setOpenPopupAlignment({ open: flag, params })\n            },\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                elements={flowElements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                onLoad={onLoad}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition.x, flowPosition.y]}\n                defaultZoom={flowPosition.zoom}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          {openPopupAlignment.open && (\n            <ImageAlignment\n              open={openPopupAlignment.open}\n              onClose={() => setOpenPopupAlignment({ open: false })}\n              urls={urls}\n              params={openPopupAlignment.params}\n            />\n          )}\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({ anchorElRef: { current: null }, message: '' })\n              }\n              anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n              transformOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n          {loadingExpriment && <Loading />}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.data.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.data.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { Box } from '@mui/material'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer>\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n  height: '100%',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n    paddingTop: theme.spacing(1.125),\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, {useState} from 'react'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nimport {MouseType} from './ExperimentTable'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport {Button} from \"@mui/material\";\nimport ImageAlignment from \"../ImageAlignment\";\n\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n  data?: MouseType[]\n}>(({ open , data}) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Table size=\"small\" aria-label=\"purchases\">\n            <Head />\n            {data && data.map((item) => {\n              return (\n                <Body key={item?.unique_id} data={item}/>\n              )\n            })}\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>Output</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo<{\n    data: MouseType\n}>(({data}) => {\n  return (\n    <TableBody>\n      <TableRowOfFunction data={data} />\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = ({ data } : {data: MouseType}) => {\n    const {name, success, unique_id} = data\n    const [popup, setPopup] = useState(false)\n  return (\n    <>\n        <TableRow >\n            <TableCell component=\"th\" scope=\"row\">\n                {name}\n            </TableCell>\n            <TableCell>{unique_id}</TableCell>\n            <TableCell>\n                <ExperimentStatusIcon status={success} />\n            </TableCell>\n            <TableCell>\n                <Button disabled={success === 'success'? false : true} onClick={() => setPopup(true)}>\n                    <OpenInNewIcon />\n                </Button>\n            </TableCell>\n        </TableRow>\n        <ImageAlignment\n            open={popup}\n            urls={[]}\n            onClose={() => setPopup(false)}\n            readOnly={true}\n        />\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableRow from '@mui/material/TableRow'\n// import TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\n// import ReplayIcon from '@mui/icons-material/Replay'\n// import DeleteIcon from '@mui/icons-material/Delete'\n// import Dialog from '@mui/material/Dialog'\n// import DialogActions from '@mui/material/DialogActions'\n// import DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  // deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { EXPERIMENTS_STATUS} from 'store/slice/Experiments/ExperimentsType'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport {useNavigate} from \"react-router-dom\";\n\nexport type MouseType = {\n    unique_id: string\n    name: string\n    success: EXPERIMENTS_STATUS\n    outputs: string[]\n}\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\ntype Data = {\n    pagenation: object\n    records: {\n        id: number\n        name: string\n        data?: MouseType[]\n    }[]\n    nodeDict: object\n    edgeDict: object\n    startTime: string\n    finishTime: string\n}\n\nconst data: Data = {\n  \"pagenation\": {\n    \"page\": 0,\n    \"limit\": 0,\n    \"total\": 0,\n    \"total_pages\": 0\n  },\n  \"records\": [{\n      \"id\": 0,\n      \"name\": \"MOUSE1\",\n      \"data\": [{\n          \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n          \"name\": \"caiman_cnmf\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"caiman_mc_2rg3nrb410\",\n          \"name\": \"caiman_mc\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"input_0\",\n          \"name\": \"mouse2p_2_donotouse.tiff\",\n          \"success\": \"success\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]}\n        ]\n      },\n      {\n          \"id\": 1,\n          \"name\": \"MOUSE2\",\n          \"data\": [{\n              \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n              \"name\": \"caiman_cnmf\",\n              \"success\": \"error\",\n              \"outputs\": [\n                  \"/lib/test.nii\",\n                  \"/lib/test0.nii\",\n                  \"/lib/test1.nii\"\n              ]},\n              {\n                  \"unique_id\": \"caiman_mc_2rg3nrb410\",\n                  \"name\": \"caiman_mc\",\n                  \"success\": \"error\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]},\n              {\n                  \"unique_id\": \"input_0\",\n                  \"name\": \"mouse2p_2_donotouse.tiff\",\n                  \"success\": \"success\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]}\n          ]\n      },\n      {\n          \"id\": 2,\n          \"name\": \"MOUSE3\"\n      }\n  ],\n      \"nodeDict\": {},\n      \"edgeDict\": {},\n      \"startTime\":\"2023/05/16 04:28\",\n      \"finishTime\":\"2023/05/16 04:28\"\n}\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'studio_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  // const dispatch = useDispatch()\n  const navigate = useNavigate()\n  // const onClickReload = () => {\n  //   dispatch(getExperiments())\n  // }\n  // const [checkedList, setCheckedList] = useState<string[]>([])\n  // const [open, setOpen] = React.useState(false)\n  const recordsIsEmpty = experimentListKeys.length === 0\n  const startTime = data.startTime.split(' ')\n  const finishTime = data.finishTime.split(' ')\n\n  // const onClickDelete = () => {\n  //   setOpen(true)\n  // }\n  // const onClickCancel = () => {\n  //   setOpen(false)\n  // }\n  // const onClickOk = () => {\n  //   dispatch(deleteExperimentByList(checkedList))\n  //   setCheckedList([])\n  //   setOpen(false)\n  // }\n\n  const onClickBack = () => {\n    navigate('/projects')\n  }\n\n  const [page,\n    // setPage\n  ] = useState(0)\n\n  // const handleChangePage = (event: unknown, newPage: number) => {\n  //   setPage(newPage)\n  // }\n\n  const [rowsPerPage,\n    // setRowsPerPage\n  ] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  // const handleChangeRowsPerPage = (\n  //   event: React.ChangeEvent<HTMLInputElement>,\n  // ) => {\n  //   const newValue = parseInt(event.target.value, 10)\n  //   setRowsPerPage(newValue)\n  //   setPage(0)\n  // }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 5 }}>\n      <Button onClick={onClickBack}\n        sx={{width: 'fit-content', textTransform: 'unset', fontSize: 20}}\n      >\n        <KeyboardBackspaceIcon /> Projects\n      </Button>\n          <Box sx={{\n            display: 'flex',\n            gap : 4,\n            width: '90%',\n            margin: 'auto',\n            alignItems: 'flex-start'\n          }}>\n              <Typography>\n                  Status:\n              </Typography>\n              <Box>\n                  <ExperimentStatusIcon status={'success'}/>\n              </Box>\n              <Box>\n                  <Typography>Start time: {startTime[0]} {startTime[1]}</Typography>\n                  <Typography>Finish time: {finishTime[0]} {finishTime[1]}</Typography>\n              </Box>\n          </Box>\n          {/*<Box*/}\n          {/*    sx={{*/}\n          {/*        display: 'flex',*/}\n          {/*        justifyContent: 'flex-end',*/}\n          {/*        alignItems: 'center',*/}\n          {/*    }}*/}\n          {/*>*/}\n              {/*<Button*/}\n              {/*  sx={{*/}\n              {/*    margin: (theme) => theme.spacing(0, 1, 1, 0),*/}\n              {/*  }}*/}\n              {/*  variant=\"outlined\"*/}\n              {/*  endIcon={<ReplayIcon />}*/}\n              {/*  onClick={onClickReload}*/}\n              {/*>*/}\n              {/*  Reload*/}\n              {/*</Button>*/}\n              {/*<Button*/}\n              {/*  sx={{*/}\n              {/*    marginBottom: (theme) => theme.spacing(1),*/}\n              {/*  }}*/}\n              {/*  variant=\"outlined\"*/}\n              {/*  color=\"error\"*/}\n              {/*  endIcon={<DeleteIcon />}*/}\n              {/*  onClick={onClickDelete}*/}\n              {/*  disabled={checkedList.length === 0}*/}\n              {/*>*/}\n              {/*  Delete*/}\n              {/*</Button>*/}\n          {/*</Box>*/}\n          {/*<Dialog open={open}>*/}\n          {/*    <DialogTitle>Are you sure you want to delete?</DialogTitle>*/}\n          {/*    <DialogActions>*/}\n          {/*        <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">*/}\n          {/*            Cancel*/}\n          {/*        </Button>*/}\n          {/*        <Button onClick={onClickOk} variant=\"outlined\" autoFocus>*/}\n          {/*            OK*/}\n          {/*        </Button>*/}\n          {/*    </DialogActions>*/}\n          {/*</Dialog>*/}\n          <Paper\n              elevation={0}\n              variant=\"outlined\"\n              sx={{\n                  flexGlow: 1,\n                  height: '100%',\n                  width: '90%',\n                  margin: 'auto'\n              }}\n          >\n              {\n                  data.records.map((item) => {\n                      const { name, id } = item\n                      return (\n                          <TableContainer key={id} component={Paper} elevation={0}>\n                              <Table aria-label=\"collapsible table\">\n                                  <TableBody>\n                                      <ExperimentUidContext.Provider\n                                          value={String(id)}\n                                          key={id}\n                                      >\n                                          <RowItem\n                                              data={item.data}\n                                              name={name}\n                                          />\n                                      </ExperimentUidContext.Provider>\n                                      {emptyRows > 0 && (\n                                          <TableRow\n                                              style={{\n                                                  height: 53 * emptyRows,\n                                              }}\n                                          >\n                                              <TableCell colSpan={10} />\n                                          </TableRow>\n                                      )}\n                                      {recordsIsEmpty && (\n                                          <TableRow>\n                                              <TableCell colSpan={10}>\n                                                  <Typography\n                                                      sx={{\n                                                          color: (theme) => theme.palette.text.secondary,\n                                                          display: 'flex',\n                                                          alignItems: 'center',\n                                                          justifyContent: 'center',\n                                                          height: '300px',\n                                                          textAlign: 'center',\n                                                      }}\n                                                      variant=\"h6\"\n                                                  >\n                                                      No Rows...\n                                                  </Typography>\n                                              </TableCell>\n                                          </TableRow>\n                                      )}\n                                  </TableBody>\n                              </Table>\n                          </TableContainer>\n                      )\n                  })\n              }\n              {/*<TablePagination*/}\n              {/*    rowsPerPageOptions={[5, 10, 25]}*/}\n              {/*    component=\"div\"*/}\n              {/*    count={experimentListKeys.length}*/}\n              {/*    rowsPerPage={rowsPerPage}*/}\n              {/*    page={page}*/}\n              {/*    onPageChange={handleChangePage}*/}\n              {/*    onRowsPerPageChange={handleChangeRowsPerPage}*/}\n              {/*/>*/}\n          </Paper>\n    </Box>\n  )\n})\n\nconst RowItem = React.memo<{\n  name: string\n  data?: MouseType[]\n}>(({ name, data }) => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <React.Fragment>\n      <TableRow\n        onClick={() => data && setOpen((prevOpen) => !prevOpen)}\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell\n          sx={{padding: '20px',\n               display: 'flex',\n               alignItems: 'center'\n          }}\n        >\n          {name} {data && (!open ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />)}\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable data={data} open={open} />\n    </React.Fragment>\n  )\n})\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex', height: 'calc(100% - 58px)' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100%',\n          padding: 16,\n        }}\n      >\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import {\n  styled,\n  Box,\n  Typography,\n  Container,\n  Button,\n  DialogContent,\n  Dialog,\n  DialogActions,\n  DialogContentText\n} from \"@mui/material\";\nimport { useCallback, useState } from \"react\";\nimport { loadParams, saveParams } from \"api/auth\";\nimport Loading from \"../common/Loading\";\n\ntype InputType = {\n  text: string\n  value?: string\n  onChange: (e: any) => void\n  error: string\n}\n\ntype ParamsType = {\n  cut_coords: any\n  threshold: string\n}\n\ntype AlertDialogProps = {\n  open: boolean\n  handleClose: () => void\n  onSaveParams: () => void\n}\n\nconst regexThreshold = /[^0-9,.-]/\nconst regexCutCoords = /[^0-9,-]/\n\nconst  AlertDialog = ({open, handleClose, onSaveParams}: AlertDialogProps) => {\n  return (\n      <div>\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogContent>\n            <DialogContentText>\n              Save parameters OK?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={onSaveParams} autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  );\n}\n\nconst WrapperInput = ({text, value, onChange, error} : InputType) => {\n    return (\n        <Box sx={{display: 'flex'}}>\n              <Typography sx={{minWidth: 100}}>{text}</Typography>\n              <Box sx={{display: 'flex', flexDirection: 'column'}}>\n                <VisualizeInput\n                    name={text}\n                    sx={{width: 250}}\n                    value={value}\n                    onChange={(event: any) => onChange(event)}\n                    onBlur={(event: any) => onChange(event)}\n                />\n                <SpanError>{error}</SpanError>\n              </Box>\n        </Box>\n    )\n}\n\nconst VisualizeNew = () => {\n  const [open, setOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false)\n  const [dataParams, setDataParams] = useState<ParamsType>({\n    cut_coords: {\n      coronal: '',\n      sagittal: '',\n      horizontal: '',\n    },\n    threshold: ''\n  })\n  const [errors, setErrors] = useState<ParamsType>({\n    cut_coords: {\n      coronal: '',\n      sagittal: '',\n      horizontal: '',\n    },\n    threshold: ''\n  })\n\n  const onLoadParams = async () => {\n    setIsLoading(true)\n    try {\n      const res = await loadParams()\n      const { coronal, sagittal, horizontal} = res.cut_coords\n      const newCutCoords = {\n        coronal: coronal.join(','),\n        sagittal: sagittal.join(','),\n        horizontal: horizontal.join(',')\n      }\n      setDataParams({cut_coords: newCutCoords, threshold: res.threshold.join(',')})\n    }\n    finally {\n      setIsLoading(false)\n      setErrors({\n        cut_coords: {\n          coronal: '',\n          sagittal: '',\n          horizontal: '',\n        },\n        threshold: ''\n      }\n      )}\n  }\n\n  const toNumberArr = useCallback((value: string) => {\n    return value.split(',').map((item: string) => Number(item))\n  },[])\n\n  const onSaveParams = async () => {\n    const { coronal, sagittal, horizontal} = dataParams.cut_coords\n    const newParams = {\n      threshold: toNumberArr(dataParams.threshold),\n      cut_coords: {\n        coronal: toNumberArr(coronal),\n        sagittal: toNumberArr(sagittal),\n        horizontal: toNumberArr(horizontal)\n      }\n    }\n    setIsLoading(true)\n    try {\n      await saveParams(newParams)\n    }\n    finally {\n      setIsLoading(false)\n      setOpen(false)\n    }\n  }\n\n  const validateParams = (value: string, name: string) => {\n    if (!value) return 'This field is required'\n    const newArr = value.split(',')\n    const checkArr = newArr.some((item: string) => !Number(item) && item !== '0')\n    if (name === 'threshold') {\n      if (checkArr || newArr.length !== 2) {\n        return 'wrong format [float, float]'\n      }\n      return ''\n    }\n    if(checkArr || regexCutCoords.test(value)) {\n      return 'wrong format [int,...]'\n    }\n    return ''\n  }\n\n  const onChangeParams = (event: any) => {\n    let { value, name } = event.target\n    if(name === 'threshold') setErrors({...errors, threshold: validateParams(value, name)})\n    if(name !== 'threshold') setErrors({...errors, cut_coords: {...errors.cut_coords, [name]: validateParams(value, name)}})\n    if((name === 'threshold' && regexThreshold.test(value)) || (name !== 'threshold' && regexCutCoords.test(value))) {\n      const checkChar = (checkChar: any, value: string) => {\n        const arrValue = value.split('')\n        const index = arrValue.findIndex((item: string) => {\n          if(name === 'threshold') {\n            return regexThreshold.test(item)\n          }\n          return regexCutCoords.test(item)\n        })\n        if(index !== -1) {\n          value = value.replace(value[index], '')\n          return checkChar(checkChar, value)\n        }\n        return value\n      }\n      value = checkChar(checkChar, value)\n    }\n    if(name === 'threshold') {\n       setDataParams({...dataParams, threshold: value})\n      return\n    }\n    const newCutCoords = {...dataParams.cut_coords, [name]: value}\n    setDataParams({...dataParams, cut_coords: newCutCoords})\n  }\n  \n  const handleClickOpen = () => {\n    const { coronal, sagittal, horizontal} = dataParams.cut_coords\n    const { cut_coords } = errors\n    setErrors({\n      cut_coords: {\n        coronal: validateParams(coronal, 'coronal'),\n        sagittal: validateParams(sagittal, 'sagittal'),\n        horizontal: validateParams(horizontal, 'horizontal'),\n      },\n      threshold: validateParams(dataParams.threshold, 'threshold')\n    })\n    if( !coronal || ! sagittal || !horizontal || !dataParams.threshold ) return\n    if(Object.keys(cut_coords).some(item => !!cut_coords[item]) || errors.threshold) return\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n      <Container>\n          <AlertDialog\n            open={open}\n            handleClose={handleClose}\n            onSaveParams={onSaveParams}\n          />\n          <Title>STAT IMAGES</Title>\n          <VisualizeInputWrapper>\n            <Box>\n                <WrapperInput\n                    text={'threshold'}\n                    value={dataParams?.threshold || ''}\n                    onChange={onChangeParams}\n                    error={errors.threshold}\n                />\n            </Box>\n            <CutCoords>\n                <Typography>cut_coords</Typography>\n                <Box>\n                    <WrapperInput\n                        text={'coronal'}\n                        value={dataParams?.cut_coords.coronal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.coronal}\n                    />\n                    <WrapperInput\n                        text={'sagittal'}\n                        value={dataParams?.cut_coords.sagittal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.sagittal}\n                    />\n                    <WrapperInput\n                        text={'horizontal'}\n                        value={dataParams?.cut_coords.horizontal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.horizontal}\n                    />\n                </Box>\n            </CutCoords>\n            <Box sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 2\n            }}>\n              <ParamsButton onClick={handleClickOpen}>Save Params</ParamsButton>\n              <ParamsButton onClick={onLoadParams}>Load Params</ParamsButton>\n            </Box>\n          </VisualizeInputWrapper>\n          <ButtonWrapper>\n              <VisualizeButton>GENERATE</VisualizeButton>\n              <VisualizeButton>DOWNLOAD</VisualizeButton>\n          </ButtonWrapper>\n          <ImageWrapper>\n              <Image src={'/Images/image-visualize.png'} alt={''} />\n          </ImageWrapper>\n        {\n          isLoading &&\n          <Loading />\n        }\n      </Container>\n  )\n}\n\nconst Title = styled(Typography)({\n    fontSize: 25,\n    fontWeight: 700,\n    margin: '50px 0',\n})\n\nconst CutCoords = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeInputWrapper = styled(Box)({\n    display: 'flex',\n    justifyContent: 'space-between'\n})\n\nconst ParamsButton = styled('button')({\n  height: 'fit-content',\n  padding: 5,\n  '&:hover': {\n    cursor: 'pointer',\n    background: '#d1d7e0',\n  }\n})\n\nconst ButtonWrapper = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeButton = styled('button')({\n    border: '1px solid #006fff',\n    color: '#006fff',\n    padding: 10,\n    '&:hover': {\n        cursor: 'pointer',\n        background: '#d1d7e0'\n    }\n})\n\nconst VisualizeInput = styled('input')({\n    height: 'fit-content',\n})\n\nconst SpanError = styled('span')({\n  color: 'red'\n})\n\nconst ImageWrapper = styled(Box)({\n    width: '80%',\n    margin: 'auto'\n})\n\nconst Image = styled('img')({\n    width: '100%',\n    objectFit: 'contain',\n})\n\nexport default VisualizeNew\n","import React from 'react'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Toolbar from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport FlowChart from './FlowChart/FlowChart'\nimport Experiment from './Experiment/Experiment'\nimport { Box } from '@mui/material'\nimport { useSearchParams } from 'react-router-dom'\nimport VisualizeNew from \"./VisualizeNew\";\n\nconst Project: React.FC = () => {\n  const [searchParams, setParams] = useSearchParams()\n  const [value, setValue] = React.useState(Number(searchParams.get('tab') || 0))\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    searchParams.set('tab', String(newValue))\n    setParams(searchParams)\n    setValue(newValue)\n  }\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n  return (\n    <RootDiv>\n      <StyledAppBar color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Result\" {...a11yProps(1)} />\n            <Tab label=\"Visualize\" {...a11yProps(2)} />\n          </Tabs>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <VisualizeNew />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\nconst StyledAppBar = styled(Box)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Project\n","export const PROJECT_SLICE_NAME = 'project'\n\nexport enum ProjectTypeValue {\n  FACTOR = 0,\n  WITHIN_FACTOR = 1,\n}\n\nexport type CurrentProject = {\n  id: string\n  created_time: string\n  image_count: number\n  project_name: string\n  project_type: ProjectTypeValue\n  updated_time: string\n}\n\nexport type Project = {\n  projects: ProjectType[]\n  loading: boolean\n  currentProject?: CurrentProject\n}\n\nexport type ProjectCreate = {\n  project_name: string\n  project_type: ProjectTypeValue\n}\n\nexport type ProjectType = {\n  id: number | string\n  uid?: number | string\n  created_time: string\n  updated_time: string\n  role?: string | number\n  image_count: number\n} & ProjectCreate\n","import { createContext, useContext } from 'react'\n\nexport type User = {\n  created_time: null | string\n  display_name: null | string\n  email: string\n  last_login_time: null | string\n  role: string\n  uid: string\n}\n\nexport const UserContext = createContext<{ user?: User; setUser: Function }>({\n  setUser: () => null,\n})\n\nexport const useUser = () => useContext(UserContext)\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useRef, useState } from 'react'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { useUser } from 'providers'\nimport { removeToken } from 'utils/auth'\nimport { useNavigate } from 'react-router-dom'\n\nconst Header: FC = () => {\n  const [open, setOpen] = useState(false)\n  const navigate = useNavigate()\n  const { user } = useUser()\n\n  const refMenu = useRef<HTMLDivElement | null>(null)\n\n  const closeMenu = () => {\n    setTimeout(() => {\n      setOpen(false)\n    }, 100)\n  }\n\n  const onClick = () => {\n    if (open) {\n      return refMenu.current?.blur?.()\n    }\n    setOpen(true)\n  }\n\n  const onLogout = () => {\n    removeToken()\n    navigate('/login')\n  }\n\n  const onNavigateAccount = () => {\n    navigate('/account')\n  }\n\n  return (\n    <HeaderWrapper>\n      <BoxWrapper>\n        {/* <Image src=\"/static/favicon.ico\" alt=\"logo\" /> */}\n        <TitleLogo>MRI Analysis Studio</TitleLogo>\n      </BoxWrapper>\n      <BoxMenu ref={refMenu} tabIndex={1} onClick={onClick} onBlur={closeMenu}>\n        <AccountCircleIcon />\n        {open && (\n          <BoxDropdown>\n            <BoxInfo>\n              <AccountCircleIcon />\n              <Box>\n                <Typography>{user?.display_name}</Typography>\n                <Typography>{user?.email}</Typography>\n              </Box>\n            </BoxInfo>\n            <BoxMenuItem onClick={onNavigateAccount}>\n              <PortraitIcon /> Account Profile\n            </BoxMenuItem>\n            <BoxMenuItemLogout onClick={onLogout}>\n              SIGN OUT\n            </BoxMenuItemLogout>\n          </BoxDropdown>\n        )}\n      </BoxMenu>\n    </HeaderWrapper>\n  )\n}\n\nconst BoxDropdown = styled(Box)({\n  position: 'absolute',\n  backgroundColor: '#ffffff',\n  padding: '8px 16px 0',\n  top: 30,\n  right: 0,\n  listStyleType: 'none',\n  backgroundClip: 'padding-box',\n  borderRadius: 3,\n  outline: 'none',\n  boxShadow:\n    '0 6px 16px 0 rgb(0 0 0 / 8%), 0 3px 6px -4px rgb(0 0 0 / 12%), 0 9px 28px 8px rgb(0 0 0 / 5%)',\n  cursor: 'default',\n  zIndex: 1,\n  minWidth: 250,\n})\n\n/*\nconst Image = styled('img')({\n  height: 46,\n})\n*/\n\nconst BoxWrapper = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 8,\n})\n\nconst BoxMenu = styled(BoxWrapper)({\n  cursor: 'pointer',\n  position: 'relative',\n  userSelect: 'none',\n})\n\nconst BoxInfo = styled(BoxWrapper)({\n  borderBottom: `1px solid #e7e7e7`,\n  padding: '8px 0',\n  cursor: 'default',\n})\n\nconst BoxMenuItem = styled(BoxWrapper)({\n  padding: '8px 0',\n  cursor: 'pointer',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.05) translateX(5px)',\n  },\n})\n\nconst BoxMenuItemLogout = styled(BoxMenuItem)({\n  color: '#1a73e8',\n  fontWeight: 600,\n  marginTop: 30,\n  justifyContent: 'flex-end',\n  '&:hover': {\n    transform: 'scale(1.02)',\n  },\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nconst HeaderWrapper = styled(Box)({\n  height: 48,\n  backgroundColor: '#E1DEDB',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  color: 'rgba(0, 0, 0, 0.87)',\n  boxShadow:\n    '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n  position: 'fixed',\n  width: 'calc(100% - 32px)',\n  padding: '0 16px',\n  zIndex: 9999,\n})\n\nexport default Header\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useEffect, useState } from 'react'\nimport Header from './Header'\nimport { KeyboardBackspace } from '@mui/icons-material'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { User, UserContext, useUser } from 'providers'\nimport {\n  getToken,\n  isAdmin,\n  removeExToken,\n  removeToken,\n} from 'utils/auth'\nimport { getMe } from 'api/auth'\n\nexport const drawerWidth = 240\n\nconst ignorePaths = ['/login', '/account-delete', '/reset-password']\n\nconst Layout: FC = ({ children }) => {\n  const [user, setUser] = useState<User | undefined>()\n  const location = useLocation()\n  const [width, setWidth] = useState(drawerWidth)\n  const navigate = useNavigate()\n  const onResize = () => {\n    setWidth(width === drawerWidth ? 54 : drawerWidth)\n  }\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname])\n\n  const checkkAuth = async () => {\n    if (user) return\n    const token = getToken()\n    const isPageLogin = ['/login', '/reset-password'].includes(\n      window.location.pathname,\n    )\n    try {\n      if (token) {\n        const data = await getMe()\n        setUser(data)\n        if (isPageLogin) navigate('/')\n      } else if (!isPageLogin) throw new Error('fail auth')\n    } catch {\n      removeToken()\n      removeExToken()\n      navigate('/login')\n    }\n  }\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <LayoutWrapper>\n        {ignorePaths.includes(location.pathname) ? null : <Header />}\n        <ContentBodyWrapper>\n          {ignorePaths.includes(location.pathname) ? null : (\n            <MenuLeft onResize={onResize} width={width} />\n          )}\n          <ChildrenWrapper\n            style={{\n              width: `calc(100% - ${\n                ignorePaths.includes(location.pathname) ? 0 : width + 10\n              }px)`,\n              height: '100%',\n              overflow: 'auto',\n            }}\n          >\n            {children}\n          </ChildrenWrapper>\n        </ContentBodyWrapper>\n      </LayoutWrapper>\n    </UserContext.Provider>\n  )\n}\n\nconst MenuLeft: FC<{ onResize: () => void; width: number }> = ({\n  onResize,\n  width,\n}) => {\n  const { user } = useUser()\n  const { pathname } = useLocation()\n  const isClose = width !== drawerWidth\n  return (\n    <MenuLeftWrapper style={{ width, minWidth: width }}>\n      <BoxBack>\n        <ButtonBack\n          onClick={onResize}\n          style={{ transform: `rotate(${width === drawerWidth ? 0 : 180}deg)` }}\n        >\n          <BoxDivider />\n          <KeyboardBackspaceIcon />\n        </ButtonBack>\n      </BoxBack>\n      <MenuList>\n        <LinkWrapper to=\"/\">\n          <MenuItem isClose={isClose} active={pathname === '/'}>\n            <HomeIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Dashboard\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/database\">\n          <MenuItem isClose={isClose} active={pathname === '/database'}>\n            <StorageIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Database\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/projects\">\n          <MenuItem isClose={isClose} active={pathname.includes('/projects')}>\n            <SourceIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Projects\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        {isAdmin(user?.role) ? (\n          <LinkWrapper to=\"/account-manager\">\n            <MenuItem\n              isClose={isClose}\n              active={pathname === '/account-manager'}\n            >\n              <GroupIcon />\n              <TypographyMenu\n                style={{ opacity: Number(width === drawerWidth) }}\n              >\n                Account Manager\n              </TypographyMenu>\n            </MenuItem>\n          </LinkWrapper>\n        ) : null}\n      </MenuList>\n    </MenuLeftWrapper>\n  )\n}\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: 48,\n  height: 'calc(100% - 48px)',\n  paddingRight: 10,\n  overflow: 'hidden',\n}))\n\nconst ChildrenWrapper = styled(Box)(() => ({\n  height: 'calc(100% - 10px)',\n  display: 'flex',\n  paddingTop: 10,\n  paddingLeft: 10,\n}))\n\nconst MenuLeftWrapper = styled(Box)({\n  height: '100%',\n  backgroundColor: '#283237',\n  overflow: 'auto',\n  transition: 'all 0.3s',\n})\n\nconst BoxBack = styled(Box)({\n  width: '100%',\n  height: 54,\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonBack = styled(Box)({\n  height: 54,\n  width: 54,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n})\n\nconst BoxDivider = styled(Box)({\n  height: 15,\n  width: 1,\n  backgroundColor: '#ffffff',\n  marginRight: -2,\n})\n\nconst KeyboardBackspaceIcon = styled(KeyboardBackspace)({\n  color: '#ffffff',\n  fontSize: 20,\n})\n\nconst MenuList = styled('ul')({\n  margin: 0,\n  padding: 0,\n})\n\nconst MenuItem = styled('li', {\n  shouldForwardProp: (props) => props !== 'isClose' && props !== 'active',\n})<{ isClose: boolean; active: boolean }>(({ isClose, active }) => ({\n  padding: '0 15px',\n  color: '#ffffff',\n  listStyle: 'none',\n  height: 38,\n  minHeight: 38,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  width: 'calc(100% - 30px)',\n  minWidth: 'max-content',\n  transition: 'all 0.3s',\n  cursor: 'pointer',\n  backgroundColor: active ? 'rgba(255,255,255,0.4) !important' : 'transparent',\n  '&:hover': {\n    transform: isClose\n      ? 'scale(1.05) translateX(2px)'\n      : 'scale(1.05) translateX(10px)',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n  },\n}))\n\nconst TypographyMenu = styled(Typography)({\n  lineHeight: '20px',\n  marginTop: 4,\n  fontWeight: 500,\n  transition: 'opacity 0.3s',\n})\n\nexport default Layout\n","import { Box, styled, Typography } from '@mui/material'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Link } from 'react-router-dom'\nimport { useUser } from 'providers'\nimport { isAdmin } from 'utils/auth'\n\nconst Dashboard = () => {\n  const { user } = useUser()\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/database\">\n            <BoxMenu>\n              <Box>\n                <SourceIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/projects\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Projects</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/account\">\n            <BoxMenu>\n              <Box>\n                <AccountCircleIcon fontSize=\"large\" />\n                <TitleMenu>Account</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {isAdmin(user?.role) ? (\n            <LinkWrapper to=\"/account-manager\">\n              <BoxMenu>\n                <Box>\n                  <GroupIcon fontSize=\"large\" />\n                  <TitleMenu>Account Manager</TitleMenu>\n                </Box>\n              </BoxMenu>\n            </LinkWrapper>\n          ) : null}\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { styled } from '@mui/material'\n\nexport const Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\nimport Loading from \"../common/Loading\";\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description?: string\n  isLoading?: boolean\n}\nconst ModalDeleteAccount: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description || 'Delete account will erase all of your data.'}This\n            operation cannot be undone. To continue, type \"\n            <span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <ButtonConfirm onClick={onConfirm} sx={{ backgroundColor: 'red !important' }}>{titleSubmit}</ButtonConfirm>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default ModalDeleteAccount\n","import { Box, styled, Typography } from '@mui/material'\nimport { FC, useCallback } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport { ProjectType } from 'store/slice/Project/ProjectType'\nimport dayjs from \"dayjs\";\n\nexport type Column = {\n  width?: number | string\n  title: string\n  dataIndex?: string\n  name?: string\n  align?: string\n  filter?: boolean\n  render?: (\n    item: ProjectType,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined\n}\n\ntype TableComponentProps = {\n  data?: ProjectType[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  className?: string\n  columns?: Column[]\n  paginate?: {\n    page: number\n    total: number\n    page_size: number\n    breakLabel?: string\n    nextLabel?: string\n    previousLabel?: string\n    pageRangeDisplayed?: number\n    renderOnZeroPageCount?: string\n    onPageChange?: (selectedItem: { selected: number }) => any\n  }\n}\n\nconst TableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    data = [],\n    columns = [],\n    paginate,\n    className,\n    orderBy,\n    orderKey,\n  } = props\n  const pageCount = (paginate?.total || 0) / (paginate?.page_size || 1)\n\n  const renderCol = useCallback(\n    (col: Column, item: ProjectType, index: number) => {\n      if(col.name === 'created_time' || col.name === 'updated_time') {\n        return dayjs(item[col.name]).format('YYYY-MM-DD HH:mm')\n      }\n      const value = item[(col.name || col.dataIndex || '') as keyof ProjectType]\n      if (col.render) return col.render(item, value, index)\n      return value || null\n    },\n    [],\n  )\n\n  return (\n    <Box className={className}>\n      <Table>\n        <Thead>\n          <Tr>\n            {columns.map((col, iCol) => {\n              const nameCol = col.name || col.dataIndex || ''\n              return (\n                <Th\n                  style={{ width: col.width, textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {col.title}\n                  <ArrowDownwardIconOrder\n                    style={{\n                      transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                      opacity:\n                        orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                  />\n                </Th>\n              )\n            })}\n          </Tr>\n        </Thead>\n        <TBody>\n          {data.map((item, index) => (\n            <Tr key={item.id || index}>\n              {columns.map((col, iCol) => (\n                <Td\n                  style={{ textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {renderCol(col, item, index)}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n        </TBody>\n      </Table>\n      {!data.length ? <NoData>No Data</NoData> : null}\n      {pageCount ? (\n        <MyPaginate\n          disableInitialCallback\n          marginPagesDisplayed={3}\n          pageRangeDisplayed={3}\n          breakLabel={'...'}\n          pageCount={pageCount}\n          previousLabel={<KeyboardArrowLeftIcon />}\n          nextLabel={<ChevronRightIcon />}\n          {...paginate}\n        />\n      ) : null}\n    </Box>\n  )\n}\n\nconst MyPaginate = styled(ReactPaginate)<any>`\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  list-style-type: none;\n  padding: 1rem 0;\n  li a {\n    padding: 0.6rem 1rem;\n    cursor: pointer;\n  }\n  li.previous,\n  li.next {\n    margin-top: -2px;\n  }\n  li.previous.disabled,\n  li.next.disabled {\n    opacity: 0.4;\n  }\n  li.previous a,\n  li.next a,\n  li.break a {\n    border-color: transparent;\n  }\n  li.active a {\n    background-color: #0366d6;\n    border-color: transparent;\n    color: white;\n    min-width: 32px;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n  li.selected {\n    color: #1677ff;\n    font-weight: 600;\n  }\n`\n\nconst Table = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  maxWidth: 155,\n  wordBreak: 'break-word',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nexport default TableComponent\n","import { InputProps, styled, Typography } from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n  errorMessage: string\n  value?: string\n}\n\nconst InputError = ({\n  errorMessage,\n  onChange,\n  value,\n  type,\n  onBlur,\n  name,\n}: InputErrorProps) => {\n  return (\n    <>\n      <Input\n        autoComplete=\"Off\"\n        error={!!errorMessage}\n        onChange={onChange}\n        value={value}\n        type={type}\n        name={name}\n        onBlur={onBlur}\n      />\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\n\nexport default InputError\n","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  name?: string\n  options: {\n    code: number\n    name: string\n  }[]\n}\n\nconst SelectError: FC<SelectErrorProps> = ({\n  value,\n  onChange,\n  onBlur,\n  errorMessage,\n  options,\n  name,\n}) => {\n  return (\n    <>\n      <SelectModal\n        name={name}\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: { code: number, name: string }) => {\n          return (\n            <MenuItem key={item.code} value={item.code}>\n              {item.name}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import { Box, Button, SelectChangeEvent, styled } from '@mui/material'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport TableComponent, { Column } from 'components/Table'\nimport {\n  ChangeEvent,\n  FC,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InputError from 'components/common/InputError'\nimport SelectError from 'components/common/SelectError'\nimport { createUser, deleteUser, editUser, listUser } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ProjectType } from 'store/slice/Project/ProjectType'\nimport { isAdmin, optionsRole } from 'utils/auth'\nimport Loading from 'components/common/Loading'\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setIsOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role: '',\n  lab: '',\n  display_name: '',\n  confirmPassword: '',\n}\n\nexport const regexPassword = /^(?=.*\\d)(?=.*[!#$%&()*+,-./@_|])(?=.*[a-zA-Z]).{6,255}$/\nexport const regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\nexport const regexIgnoreS = /[^!#$%&()*+,-./@_|a-zA-Z0-9]/\n\nconst ModalComponent: FC<ModalComponentProps> = ({\n  onSubmitEdit,\n  setIsOpenModal,\n  dataEdit,\n}) => {\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n    dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255, value)\n    if (error) return error\n    if (!regexEmail.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (\n    value: string,\n    isConfirm: boolean = false,\n    values?: { [key: string]: string },\n  ): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255, value)\n    if (errorLength) {\n      return errorLength\n    }\n    let datas = values || formData\n    if (!regexPassword.test(value) && value) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)){\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    if (isConfirm && datas.password !== value && value) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number, value?: string) => {\n    if (!value) return 'This field is required'\n    return validateLength(name, length, value)\n  }\n\n  const validateLength = (name: string, length: number, value?: string) => {\n    if (value && value.length > length)\n      return `The text may not be longer than ${length} characters`\n    if (formData[name]?.length && value && value.length > length) {\n      return `The text may not be longer than ${length} characters`\n    }\n    return ''\n  }\n\n  const validateForm = (): { [key: string]: string } => {\n    const errorName = validateField('display_name', 100, formData.display_name)\n    const errorEmail = validateEmail(formData.email)\n    const errorLab = validateField('lab', 100, formData.lab)\n    const errorRole = validateField('role', 50, formData.role)\n    const errorPassword = validatePassword(formData.password)\n    const errorConfirmPassword = validatePassword(\n      formData.confirmPassword,\n      true,\n    )\n    return {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      display_name: errorName,\n      lab: errorLab,\n      role: errorRole,\n    }\n  }\n\n  const onChangeData = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | SelectChangeEvent,\n    length: number,\n  ) => {\n    const { value, name } = e.target\n    const newDatas = { ...formData, [name]: value }\n    setFormData(newDatas)\n    let error: string =\n      name === 'email'\n        ? validateEmail(value)\n        : validateField(name, length, value)\n    let errorConfirm = errors.confirmPassword\n    if (name.toLowerCase().includes('password')) {\n      error = validatePassword(value, name === 'confirmPassword', newDatas)\n      if (name !== 'confirmPassword' && formData.confirmPassword) {\n        errorConfirm = validatePassword(\n          newDatas.confirmPassword,\n          true,\n          newDatas,\n        )\n      }\n    }\n    setErrors({ ...errors, confirmPassword: errorConfirm, [name]: error })\n  }\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const newErrors = validateForm()\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.uid, formData)\n      setTimeout(() => {\n        if (!dataEdit?.uid) {\n          alert('Your account has been created successfully!')\n        } else {\n          alert('Your account has been successfully updated!')\n        }\n      }, 1)\n      setIsOpenModal(false)\n    } catch {\n      if (!dataEdit?.uid) {\n        setTimeout(() => {\n          alert('This email already exists!')\n        }, 300)\n      }\n    } finally {\n      setIsDisabled(false)\n    }\n  }\n  const onCancel = () => {\n    setIsOpenModal(false)\n  }\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.uid ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Lab: </LabelModal>\n          <InputError\n            name=\"lab\"\n            value={formData?.lab || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.lab}\n          />\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            name=\"display_name\"\n            value={formData?.display_name || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.display_name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role || ''}\n            options={optionsRole}\n            name=\"role\"\n            onChange={(e) => onChangeData(e, 50)}\n            onBlur={(e) => onChangeData(e, 50)}\n            errorMessage={errors.role}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            name=\"email\"\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 255)}\n            onBlur={(e) => onChangeData(e, 255)}\n            errorMessage={errors.email}\n          />\n          {!dataEdit?.uid ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                name=\"password\"\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                name=\"confirmPassword\"\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n        </ButtonModal>\n      </ModalBox>\n      {isDisabled ? <Loading /> : null}\n    </Modal>\n  )\n}\nconst AccountManager = () => {\n  const [openDelete, setOpenDelete] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [dataEdit, setDataEdit] = useState({})\n  const [idDel, setIdDel] = useState<string | undefined>()\n  const [data, setData] = useState<any[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [paginate, setPaginate] = useState({\n    total: 0,\n    per_page: 10,\n    page: -1,\n    next_page_token: [],\n  })\n  const { user } = useUser()\n\n  useEffect(() => {\n    getList()\n    //eslint-disable-next-line\n  }, [])\n\n  const getList = async (page: number = 0) => {\n    const query: { [key: string]: string | number } = {\n      offset: paginate.per_page * page,\n    }\n    if (paginate.next_page_token[page - 1]) {\n      query.next_page_token = paginate.next_page_token[page - 1]\n    }\n    setIsLoading(true)\n    try {\n      const data = await listUser(query)\n      const nextPageToken: string[] = paginate.next_page_token\n      if (page > paginate.page) {\n        nextPageToken.push(data.next_page_token)\n      }\n      const newData = data.data.map((item: any) => {\n        const name = optionsRole.find((role) => item.role === role.code)?.name\n        return { ...item, role: name }\n      })\n      setData(newData)\n      setPaginate((pre) => ({\n        ...pre,\n        total: data.total_page * paginate.per_page,\n        next_page_token: nextPageToken as any,\n        page,\n      }))\n    }\n    finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onOpenModal = () => {\n    setIsOpenModal(true)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = (id?: string | number) => {\n    setIdDel(String(id))\n    setOpenDelete(true)\n  }\n\n  const onForgotPassword = (data: ProjectType) => {\n    const code = optionsRole.find(\n      (role) => String(role.name) === String(data.role),\n    )?.code\n    //todo call api\n    setDataEdit({ ...data, role: code })\n    setIsOpenModal(true)\n  }\n\n  const onDelete = async () => {\n    if (idDel === undefined) return\n    setIsLoading(true)\n    try {\n      await deleteUser(idDel)\n      setIsLoading(false)\n      setTimeout(() => {\n        alert('Your account has been successfully deleted!')\n      }, 100)\n      handleCloseDelete()\n      setIdDel(undefined)\n      setOpenDelete(false)\n      getList()\n    } catch {\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    if (id !== undefined) {\n      await editUser(id, data)\n      setIsOpenModal(false)\n    } else {\n      await createUser(data)\n    }\n    await getList(id !== undefined ? paginate.page : 0)\n    return undefined\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'UID', name: 'uid' },\n      { title: 'Lab', name: 'lab' },\n      { title: 'Name', name: 'display_name' },\n      { title: 'Role', name: 'role' },\n      { title: 'Mail', name: 'email' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data) => {\n          return (\n            <>\n              <ALink\n                sx={{ color: 'red' }}\n                onClick={() => onForgotPassword(data)}\n              >\n                <EditIcon sx={{ color: 'black' }} />\n              </ALink>\n              {\n                !(data?.uid === user?.uid) &&\n                <ALink\n                    sx={{ ml: 1.25 }}\n                    onClick={() => onConfirmDelete(data?.uid)}\n                >\n                  <DeleteIcon sx={{ color: 'red' }} />\n                </ALink>\n              }\n            </>\n          )\n        },\n      },\n    ],\n    [user?.uid],\n  )\n\n  if (!isAdmin(user?.role)) {\n    return null\n  }\n\n  return (\n    <AccountManagerWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Account Manager</h1>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        isLoading={isLoading}\n        onSubmit={onDelete}\n      />\n      <BoxButton>\n        <ButtonAdd onClick={() => onOpenModal()} variant=\"contained\">\n          Add\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{\n          total: paginate.total,\n          page: paginate.page,\n          page_size: paginate.per_page,\n          onPageChange: ({ selected }) => {\n            getList(selected)\n          },\n        }}\n        data={data}\n        columns={columns}\n      />\n      {isOpenModal ? (\n        <ModalComponent\n          onSubmitEdit={onSubmitEdit}\n          setIsOpenModal={(flag) => {\n            setIsOpenModal(flag)\n            if (!flag) {\n              setDataEdit({})\n            }\n          }}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst BoxButton = styled(Box)({\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  width: 100,\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  height: 550,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport InputPassword from 'components/InputPassword'\nimport { ChangeEvent, FC, useState } from 'react'\nimport { regexIgnoreS, regexPassword } from \"pages/AccountManager\";\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: (oldPass: string, newPass: string) => void\n}\n\nconst ModalChangePassword: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    if(name === 'new_password' && values.confirm_password) {\n      if(!validate?.(value)) {\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: value !== values.confirm_password ? 'Passwords do not match' : ''})\n        return\n      }\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: ''})\n        return\n    }\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if(value.length > 255) return 'The text may not be longer than 255 characters'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.new_password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, new_password } = values\n    if (!new_password) setErrors((pre) => ({ ...pre, new_password: 'This field is required' }))\n    if (reEnter && reEnter !== new_password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  const validateForm = () => {\n    const errorPass = validatePassword(values.password)\n    const errorNewPass = validatePassword(values.new_password)\n    const errorConfirmPass = validatePassword(values.confirm_password)\n    return {\n      password: errorPass,\n      new_password: errorNewPass,\n      confirm_password: errorConfirmPass\n    }\n  }\n\n  const onChangePass = () => {\n    const newErrors: { [key: string]: string } = validateForm()\n    if(errors.password || errors.new_password || errors.confirm_password) return\n    if(newErrors.password || newErrors.new_password || newErrors.confirm_password) {\n      setErrors(newErrors)\n      return\n    }\n    onSubmit(values.password, values.new_password)\n  }\n\n  const onCloseModal = () => {\n    setErrors({})\n    setValues({})\n    onClose()\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              onBlur={(e) => onChangeValue(e, validatePassword)}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n              onBlur={(e) => onChangeValue(e, validateReEnter)}\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={() => onChangePass()}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onCloseModal}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ModalChangePassword\n","import { Box, Button, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport ModalChangePassword from 'components/ModalChangePassword'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { useUser } from 'providers'\nimport { useState } from 'react'\nimport { isAdmin, optionsRole } from \"utils/auth\";\nimport {deleteAccountProfile, editNameProfile, editPassProfile} from \"api/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"components/common/Loading\";\n\nconst Account = () => {\n  const { user, setUser } = useUser()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [openChangePw, setOpenChangePw] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const onEditName = async (e: any) => {\n    const { value } = e.target\n    if(!value) {\n      alert('This field is required')\n      setIsEditName(false)\n      return\n    }\n    setIsLoading(true)\n    try {\n      setUser({...user, display_name: value})\n      await editNameProfile({...user, display_name: value})\n    }\n    catch {}\n    finally {\n      setIsLoading(false)\n      setIsEditName(false)\n    }\n  }\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = () => {\n    setOpenDelete(true)\n  }\n\n  const onDelete = async () => {\n    //todo call api\n    if(!user) return\n    setIsLoading(true)\n    try {\n      await deleteAccountProfile()\n      navigate('/login')\n    }\n    catch {}\n    finally {\n      setIsLoading(false)\n    }\n    handleCloseDelete()\n  }\n\n  const handleCloseChangePw = () => {\n    setOpenChangePw(false)\n  }\n\n  const onConfirmChangePw = () => {\n    setOpenChangePw(true)\n  }\n\n  const onChangePw = async (oldPass: string, newPass: string) => {\n    //todo call api\n    setIsLoading(true)\n    try {\n      await editPassProfile({old_password: oldPass, new_password: newPass})\n      alert('Your password has been successfully changed.')\n      handleCloseChangePw()\n    }\n    catch {\n      alert('Failed to Change Password!')\n    }\n    finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <AccountWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ModalChangePassword\n        onSubmit={onChangePw}\n        open={openChangePw}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData sx={{ marginTop: isEditName ? -2 : 0 }}>Full name</TitleData>\n        <BoxData>\n          {isEditName ? (\n            <Input\n              autoFocus\n              defaultValue={user?.display_name || ''}\n              onBlur={(e) => onEditName(e)}\n              placeholder=\"Full name\"\n            />\n          ) : (\n            <>\n              {user?.display_name || \"--\"}\n              <Button sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n                Edit\n              </Button>\n            </>\n          )}\n        </BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{optionsRole.find(role => String(role.code) === String(user?.role))?.name}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10 }}>\n        <ButtonSubmit onClick={onConfirmChangePw}>Change Password</ButtonSubmit>\n        {\n          !isAdmin(user?.role) &&\n          <ButtonSubmit onClick={onConfirmDelete}>Delete Account</ButtonSubmit>\n        }\n      </BoxFlex>\n      {\n        isLoading && <Loading />\n      }\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n})\n\nconst ButtonSubmit = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from '../../const/API'\nimport { ProjectCreate } from 'store/slice/Project/ProjectType'\n\nexport const getProjectListApi = async () => {\n  const response = await axios.get(\n    `${DATABASE_URL_HOST}/workdb/projects/search`,\n  )\n  return response.data\n}\nexport const getProjectApi = async (project_id: string | number) => {\n  const response = await axios.get(\n    `${DATABASE_URL_HOST}/workdb/project/${project_id}`,\n  )\n  return response.data\n}\n\nexport const createProjectApi = async (data: ProjectCreate) => {\n  const response = await axios.post(`${DATABASE_URL_HOST}/workdb/project`, data)\n  return response.data\n}\n\nexport const updateProjectApi = async (id: string, data: ProjectCreate) => {\n  const response = await axios.put(\n    `${DATABASE_URL_HOST}/workdb/project/${id}`,\n    data,\n  )\n  return response.data\n}\n\nexport const deleteProjectApi = async (project_id: number) => {\n  const response = await axios.delete(\n    `${DATABASE_URL_HOST}/workdb/project/${project_id}`,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  CurrentProject,\n  PROJECT_SLICE_NAME,\n  Project,\n  ProjectCreate,\n  ProjectType,\n} from './ProjectType'\nimport {\n  createProjectApi,\n  deleteProjectApi,\n  getProjectApi,\n  getProjectListApi,\n  updateProjectApi,\n} from 'api/project'\nimport { DatasetPostType } from '../Dataset/DatasetType'\nimport { createDataset } from '../Dataset/DatasetAction'\n\nexport const getProjectList = createAsyncThunk<\n  Project,\n  { callback?: (isSuccess: boolean) => void } | undefined\n>(`${PROJECT_SLICE_NAME}/getProjects`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getProjectListApi()\n    param?.callback?.(true)\n    return response\n  } catch (e) {\n    param?.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const getProjectId = createAsyncThunk<\n  CurrentProject,\n  { project_id: string; callback?: (isSuccess: boolean) => void } | undefined\n>(`${PROJECT_SLICE_NAME}/getProjectId`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    if (!param?.project_id) return undefined\n    const response = await getProjectApi(param.project_id)\n    param?.callback?.(true)\n    return response\n  } catch (e) {\n    param?.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const createProject = createAsyncThunk<\n  ProjectType,\n  {\n    project: ProjectCreate\n    dataset: DatasetPostType[]\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/createProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await createProjectApi(param.project)\n    thunkAPI.dispatch(\n      createDataset({\n        project_id: response.id,\n        dataset: param.dataset,\n        callback: param.callback,\n      }),\n    )\n    return response\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const editProject = createAsyncThunk<\n  ProjectType,\n  {\n    project: ProjectCreate\n    project_id: string\n    dataset: DatasetPostType[]\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/editProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await updateProjectApi(param.project_id, param.project)\n    await thunkAPI.dispatch(\n      createDataset({\n        project_id: Number(param.project_id),\n        dataset: param.dataset,\n        callback: param.callback,\n      }),\n    )\n    param.callback?.(true)\n    return response\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const deleteProject = createAsyncThunk<\n  null,\n  {\n    project_id: number\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/deleteProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    await deleteProjectApi(param.project_id)\n    thunkAPI.dispatch(getProjectList({ callback: param.callback }))\n    return null\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n","import { Box, Button, styled } from '@mui/material'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TableComponent, { Column } from 'components/Table'\nimport { useNavigate } from 'react-router-dom'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport {selectLoadingProject, selectProjectList} from 'store/slice/Project/ProjectSelector'\nimport {\n  deleteProject,\n  getProjectList,\n} from 'store/slice/Project/ProjectAction'\nimport Loading from \"../../components/common/Loading\";\n\nexport type DataProject = {\n  id: number | string\n  uid?: number | string\n  name: string\n  project_type: number\n  image_count: number\n  created_time: string\n  updated_time: string\n  role?: string | number\n}\n\nconst Projects = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const projects = useSelector(selectProjectList)\n  const loading = useSelector(selectLoadingProject)\n  const [idDelete, setIdDelete] = useState<number | string | undefined>()\n\n  useEffect(() => {\n    dispatch(getProjectList())\n    //eslint-disable-next-line\n  }, [])\n\n  const onEdit = useCallback((id: number | string) => {\n    navigate(`/projects/new-project?id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onWorkflow = useCallback((id: number | string) => {\n    navigate(`/projects/workflow?tab=0&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onResults = useCallback((id: number | string) => {\n    navigate(`/projects/workflow?tab=1&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addNewProject = useCallback(() => {\n    navigate('/projects/new-project')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onDelete = (id: number | string) => {\n    setIdDelete(id)\n  }\n\n  const onDeleteSubmit = async () => {\n    const id = idDelete\n    if (!id) return\n      await dispatch(deleteProject({ project_id: Number(id) }))\n      setIdDelete(undefined)\n  }\n\n  const handleCloseDelete = () => {\n    setIdDelete(undefined)\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'Project Name', name: 'project_name' },\n      { title: 'Created', name: 'created_time' },\n      { title: 'Updated', name: 'updated_time' },\n      { title: 'Images', name: 'image_count', align: 'center' },\n      {\n        title: '',\n        name: 'action',\n        width: 400,\n        render: (data) => {\n          return (\n            <BoxAction>\n              <ButtonAdd variant=\"contained\" onClick={() => onEdit(data.id)}>\n                Edit\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onWorkflow(data.id)}\n                sx={{ backgroundColor: '#1976D2 !important' }}\n              >\n                Workflow\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onResults(data.id)}\n                sx={{ backgroundColor: '#1976D2 !important' }}\n              >\n                Result\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onDelete(data.id)}\n                sx={{ backgroundColor: 'red !important' }}\n              >\n                Del\n              </ButtonAdd>\n            </BoxAction>\n          )\n        },\n      },\n    ],\n    [onWorkflow, onResults, onEdit],\n  )\n  return (\n    <ProjectsWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Project\"\n        description=\"Delete My Project\"\n        onClose={handleCloseDelete}\n        open={!!idDelete}\n        onSubmit={onDeleteSubmit}\n      />\n      <ProjectsTitle>Projects</ProjectsTitle>\n      <BoxButton>\n        <ButtonAdd\n          variant=\"contained\"\n          onClick={addNewProject}\n          sx={{ marginBottom: 2 }}\n        >\n          Add Project\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        data={projects}\n        columns={columns}\n      />\n      {\n        loading ? <Loading /> : null\n      }\n    </ProjectsWrapper>\n  )\n}\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  height: 'calc(100% - 90px)',\n  overflow: 'auto'\n}))\n\nconst ProjectsTitle = styled('h1')(({ theme }) => ({}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst BoxAction = styled(BoxButton)({\n  justifyContent: 'flex-start',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  minWidth: 80,\n  letterSpacing: 'unset',\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nexport default Projects\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  MouseEvent as MouseEventReact,\n  FC,\n  Fragment,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport {\n  DatatypesDatabase,\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n} from 'pages/Database'\nimport React from 'react'\n\ntype Object = {\n  [key: string]: Object | string\n}\n\nexport type Column = {\n  width?: number\n  title: string\n  dataIndex?: string\n  name?: string\n  child?: string\n  filter?: boolean\n  render?: (\n    item?: RecordDatabase | RecordList | ImagesDatabase,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined | string | number\n}\n\ntype TableComponentProps = {\n  addProject: boolean\n  data?: (RecordDatabase | RecordList)[]\n  className?: string\n  columns?: Column[]\n  orderBy?: 'ASC' | 'DESC' | ''\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: 'ASC' | 'DESC' | '') => void\n  rowClick?: (row: ImagesDatabase) => void\n  onClickEvent?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (row?: ImagesDatabase[]) => void\n  onBeginDrag?: () => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  defaultExpand?: boolean\n}\n\ntype RenderColumnProps = {\n  data: RecordDatabase | SessionsDatabase | ImagesDatabase | RecordList\n  columns: Column[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: string) => void\n  rowClick?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    row?: ImagesDatabase[],\n  ) => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  recordIndex: number\n  defaultExpand?: boolean\n  dataShow?: boolean\n  beginDrag?: boolean\n  draggableProps?: boolean\n  allowMutilKey?: boolean\n  drags: ImagesDatabase[]\n  onMouseDown: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => void\n}\n\nconst renderCol = (\n  col: Column,\n  item: ImagesDatabase | RecordDatabase | RecordList,\n  index: number,\n) => {\n  const key = col.name || col.dataIndex || ''\n  let value: ImagesDatabase | RecordDatabase | RecordList | string = item\n  if (key.includes('.')) {\n    const keys = key.split('.')\n    keys.forEach((k) => {\n      if (k === 'voxel_size' || k === 'size') {\n        value = JSON.stringify((value as unknown as Object)?.[k])\n      } else {\n        value = (value as unknown as Object)?.[k] as\n          | ImagesDatabase\n          | RecordDatabase\n          | RecordList\n          | string\n      }\n    })\n  } else value = (item as unknown as Object)[key] as string\n  if (col.render) return col.render(item, value, index)\n  return typeof value === 'object' || Array.isArray(value) ? null : value\n}\n\nconst RenderChild: FC<{\n  columns: Column[]\n  type: DatatypesDatabase\n  propsColumn: RenderColumnProps\n  data: SessionsDatabase\n  recordIndex: number\n  indexChild: number\n}> = ({ columns, type, propsColumn, data, indexChild, recordIndex }) => {\n  const [openChild, setOpenChild] = useState(true)\n  return (\n    <Fragment>\n      <Tr\n        style={{\n          transition: 'all 0.3s',\n          backgroundColor: 'rgb(238, 238, 238)',\n        }}\n      >\n        {columns.map((column) => {\n          const key = column.name || column.dataIndex || ''\n          return (\n            <Td\n              key={`col_${column.name || column.dataIndex}`}\n              onClick={() => key === 'datatype' && setOpenChild(!openChild)}\n            >\n              {key === 'datatype' ? (\n                <BoxCenter>\n                  {type.label}\n                  {type.images?.length ? (\n                    <ArrowDropDownIcon\n                      style={{\n                        transform: `rotate(${!openChild ? -180 : 0}deg)`,\n                      }}\n                    />\n                  ) : null}\n                </BoxCenter>\n              ) : (\n                ''\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n      {openChild &&\n        type.images.map((image, index) => (\n          <RenderColumn\n            {...propsColumn}\n            key={`child_row_image_${image.id}_${index}`}\n            data={\n              {\n                ...image,\n                session_index: data.session_index,\n                subject_index: data.subject_index,\n                session_id: data.id,\n                datatype_index: indexChild,\n                image_index: index,\n                datatype_label: type.label,\n                subject_id: data.parent_id,\n                record_index: recordIndex,\n              } as unknown as ImagesDatabase\n            }\n          />\n        ))}\n    </Fragment>\n  )\n}\n\nconst RenderColumn = (props: RenderColumnProps) => {\n  const { columns, data, recordIndex, rowClick, drags, onMouseDown } = props\n  const { draggable, onDrag } = props\n  const [openChildParent, setOpenChildPrent] = useState(true)\n  const [openSubjects, setOpenSubjects] = useState<string[]>(\n    (data as RecordDatabase)?.subjects?.map?.((e) => e.id) || [],\n  )\n\n  const isDrag = drags.find((drag) => {\n    return (\n      drag.id === data.id &&\n      drag.session_id === (data as ImagesDatabase).session_id &&\n      drag.datatype_index === (data as ImagesDatabase).datatype_index\n    )\n  })\n\n  const onDragEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    return onDrag?.(event, [image])\n  }\n\n  const onSetOpenSubject = (subId: string) => {\n    if (openSubjects.includes(subId)) {\n      setOpenSubjects(openSubjects.filter((o) => o !== subId))\n    } else setOpenSubjects([...openSubjects, subId])\n  }\n\n  if (\n    (data as RecordDatabase)?.subjects?.length ||\n    (data as SessionsDatabase).datatypes?.length\n  ) {\n    return (\n      <Fragment>\n        <Tr\n          style={{\n            transition: 'all 0.3s',\n            backgroundColor: 'rgb(238, 238, 238)',\n          }}\n        >\n          {columns.map((column) => {\n            const key = column.name || column.dataIndex || ''\n            return (\n              <Td\n                key={`col_${column.name || column.dataIndex}`}\n                onClick={() =>\n                  key === 'session' && setOpenChildPrent(!openChildParent)\n                }\n              >\n                {key === 'action' ? null : (\n                  <BoxCenter>\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    )}\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    ) &&\n                      key === 'session' && (\n                        <ArrowDropDownIcon\n                          style={{\n                            transform: `rotate(${\n                              !openChildParent ? -180 : 0\n                            }deg)`,\n                          }}\n                        />\n                      )}\n                  </BoxCenter>\n                )}\n              </Td>\n            )\n          })}\n        </Tr>\n        {openChildParent &&\n          (data as RecordDatabase).subjects?.map((sub, subject_index) => {\n            return (\n              <Fragment key={sub.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'subject' && onSetOpenSubject(sub.id)\n                        }\n                      >\n                        {key === 'subject' ? (\n                          <BoxCenter>\n                            {sub.label}\n                            {sub.sessions?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openSubjects.includes(sub.id) ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openSubjects.includes(sub.id) &&\n                  sub.sessions.map((session, session_index) => (\n                    <RenderColumn\n                      {...props}\n                      key={`session_${session.id}`}\n                      data={\n                        {\n                          ...session,\n                          session: session.label,\n                          session_index,\n                          subject_index,\n                        } as SessionsDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n        {openChildParent &&\n          (data as SessionsDatabase).datatypes?.map((type, ii) => {\n            return (\n              <RenderChild\n                key={`data_types_${type.id}`}\n                type={type}\n                data={data as SessionsDatabase}\n                propsColumn={props}\n                columns={columns}\n                indexChild={ii}\n                recordIndex={recordIndex}\n              />\n            )\n          })}\n      </Fragment>\n    )\n  }\n\n  return (\n    <Tr\n      onClick={(e) => rowClick?.(e, data as ImagesDatabase)}\n      draggable={draggable}\n      onDragStart={(e) => onDragEvent?.(e, data as ImagesDatabase)}\n      onMouseDown={(e) => onMouseDown(e, data as ImagesDatabase)}\n      style={{\n        transition: 'all 0.3s',\n        backgroundColor: isDrag ? 'rgba(25,118,210,0.15)' : '',\n      }}\n    >\n      {columns.map((column) => {\n        return (\n          <Td key={`col_${column.name || column.dataIndex}`}>\n            {renderCol(column, data as ImagesDatabase, recordIndex)}\n          </Td>\n        )\n      })}\n    </Tr>\n  )\n}\n\nconst DatabaseTableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    addProject,\n    className,\n    orderKey,\n    orderBy,\n    onSort,\n    draggable,\n    rowClick,\n    onDrag,\n    onDragEnd,\n    onBeginDrag: onBeginDragProps,\n    ...p\n  } = props\n  const { data = [], columns = [] } = props\n  const [drags, setDrags] = useState<ImagesDatabase[]>([])\n  const [mouseMoveRect, setMouseMoveRect] = useState({ pageX: 0, pageY: 0 })\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n\n  const ctrRef = useRef(false)\n  const refTable = useRef<HTMLDivElement | null>(null)\n  const refTdSelect = useRef<{\n    [key: string]: {\n      dom: HTMLTableRowElement\n      tds: { id: number | string; dom: HTMLTableCellElement; html: string }[]\n    }\n  }>({})\n  const mouseStart = useRef<{ pageX: number; pageY: number } | undefined>()\n  const [beginDrag, setBeginDrag] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydownEvent)\n    window.addEventListener('keyup', onKeyupEvent)\n    window.addEventListener('mouseup', onMouseUp)\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('click', onClick)\n    return () => {\n      window.removeEventListener('keydown', onKeyupEvent)\n      window.removeEventListener('keyup', onKeyupEvent)\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('click', onClick)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onKeydownEvent = (event: KeyboardEvent) => {\n    ctrRef.current = event.ctrlKey || event.metaKey\n  }\n\n  const onKeyupEvent = () => {\n    ctrRef.current = false\n  }\n\n  const onClick = (event: MouseEvent) => {\n    if (refTable.current?.contains?.(event.target as Element)) return\n    ctrRef.current = false\n    setDrags([])\n    onDragEnd?.()\n  }\n\n  const onSortHandle = (nameCol: string) => {\n    if (orderKey === nameCol) {\n      let order: 'ASC' | 'DESC' | '' = ''\n      if (orderBy === 'ASC') {\n        order = 'DESC'\n      } else if (!orderBy) {\n        order = 'ASC'\n      }\n      onSort?.(nameCol, order)\n    } else onSort?.(nameCol, 'ASC')\n  }\n\n  const onRowClickEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    const idDom = `${image.id}_${image.datatype_index}_${image.session_id}`\n    if (!ctrRef.current) {\n      if (!timeoutClick.current) {\n        timeoutClick.current = setTimeout(() => {\n          timeoutClick.current = undefined\n        }, 300)\n        if (draggable) {\n          setDrags([image])\n          const tds = event.currentTarget.getElementsByTagName('td')\n          refTdSelect.current[idDom] = {\n            dom: event.currentTarget as unknown as HTMLTableRowElement,\n            tds: [],\n          }\n          for (let i = 0; i < tds.length; i++) {\n            refTdSelect.current[idDom].tds.push({\n              id: tds[i].id,\n              dom: tds[i],\n              html: tds[i].innerHTML,\n            })\n          }\n        }\n        return\n      }\n      return rowClick?.(image)\n    }\n    if (!draggable) return\n    if (\n      drags.find(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      setDrags(\n        drags.filter(\n          (drag: ImagesDatabase) =>\n            drag.id === image.id &&\n            drag.datatype_index === image.datatype_index &&\n            drag.session_index === image.session_index,\n        ),\n      )\n      delete refTdSelect.current[idDom]\n    } else {\n      setDrags([...drags, image])\n      const tds = event.currentTarget.getElementsByTagName('td')\n      refTdSelect.current[idDom] = {\n        dom: event.currentTarget as unknown as HTMLTableRowElement,\n        tds: [],\n      }\n      for (let i = 0; i < tds.length; i++) {\n        refTdSelect.current[idDom].tds.push({\n          id: tds[i].id,\n          dom: tds[i],\n          html: tds[i].innerHTML,\n        })\n      }\n    }\n  }\n\n  const onMouseDown = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    if (\n      !drags.length ||\n      !draggable ||\n      !drags.some(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      return\n    }\n    mouseStart.current = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n    }\n    onBeginDragProps?.()\n    setMouseMoveRect({ pageX: 0, pageY: 0 })\n    onDrag?.(drags)\n  }\n\n  const onMouseUp = () => {\n    mouseStart.current = undefined\n    setBeginDrag(false)\n    setTimeout(() => {\n      onDrag?.(undefined)\n    }, 100)\n  }\n\n  const onMouseMove = (event: MouseEvent) => {\n    if (!mouseStart.current || !draggable || !mouseStart.current) return\n    setBeginDrag(true)\n    setMouseMoveRect({\n      pageX: event.pageX - mouseStart.current.pageX,\n      pageY: event.pageY - mouseStart.current.pageY,\n    })\n  }\n\n  const onBeginDrag = (\n    e: MouseEventReact<HTMLTableRowElement>,\n    image?: ImagesDatabase[],\n  ) => {\n    e.preventDefault()\n    onDrag?.(image)\n  }\n\n  return (\n    <>\n      <TableWrap ref={refTable} className={className} addProject={addProject}>\n        <DataTable\n          style={{\n            width: columns.reduce((a, b) => a + (Number(b.width) || 110), 0),\n          }}\n        >\n          <Thead>\n            <Tr>\n              {columns.map((col, iCol) => {\n                const nameCol = col.name || col.dataIndex || ''\n                return (\n                  <Th\n                    onClick={() => {\n                      if (col.filter) onSortHandle(nameCol)\n                    }}\n                    style={{\n                      maxWidth: col.width,\n                      minWidth: col.width,\n                      width: col.width,\n                      cursor: 'pointer',\n                    }}\n                    key={col.dataIndex || col.name || iCol}\n                  >\n                    {col.title}\n                    <ArrowDownwardIconOrder\n                      style={{\n                        transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                        opacity:\n                          orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                      }}\n                    />\n                  </Th>\n                )\n              })}\n            </Tr>\n          </Thead>\n          <TBody>\n            {data.map((item, index) => (\n              <RenderColumn\n                allowMutilKey={ctrRef.current}\n                recordIndex={index}\n                columns={columns}\n                {...p}\n                data={item}\n                rowClick={(e, image) => onRowClickEvent(e, image)}\n                onMouseDown={onMouseDown}\n                beginDrag={beginDrag}\n                draggable={false}\n                draggableProps={draggable}\n                key={`row_table_${item.id}_${index}`}\n                drags={drags}\n                onDrag={onBeginDrag}\n                onDragEnd={onDragEnd}\n              />\n            ))}\n          </TBody>\n        </DataTable>\n        {!data.length ? <NoData>No Data</NoData> : null}\n      </TableWrap>\n      {beginDrag &&\n        drags.map((el) => {\n          const rowId = `${el.id}_${el.datatype_index}_${el.session_id}`\n          const trNow = refTdSelect.current[rowId]\n          const { width, height, top, left } =\n            trNow.dom?.getBoundingClientRect()\n          const style = {\n            width,\n            height,\n            top: top + mouseMoveRect.pageY,\n            left: left + mouseMoveRect.pageX,\n          }\n          return (\n            <BoxDrag key={el.id} style={style}>\n              {trNow.tds.map((td, index) => {\n                const { width } = td.dom.getBoundingClientRect()\n                return (\n                  <Box\n                    key={`${rowId}_-${index}`}\n                    style={{ width, padding: 16 }}\n                    dangerouslySetInnerHTML={{ __html: td.html }}\n                  />\n                )\n              })}\n            </BoxDrag>\n          )\n        })}\n    </>\n  )\n}\n\nconst BoxDrag = styled(Box)({\n  position: 'absolute',\n  background: '#ffffff',\n  backgroundColor: 'rgba(25,118,210,0.15)',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst TableWrap = styled(Box, {\n  shouldForwardProp: (props) => props !== 'addProject',\n})<{ addProject: boolean }>(({ addProject }) => ({\n  overflowX: 'scroll',\n  height: `calc(100vh - ${addProject ? 365 : 200}px)`,\n}))\n\nconst DataTable = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  userSelect: 'none',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nconst BoxCenter = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport default React.memo(DatabaseTableComponent)\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  FC,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  TouchEvent,\n} from 'react'\n\ntype ChangeDragProps = {\n  title: string\n  value: number\n  onChange: (value: number) => void\n  className?: string\n  max?: number\n  min?: number\n  onChangeMin?: (v: number) => any\n  showInputMax?: boolean\n  showInputMin?: boolean\n}\n\nconst ChangeDrag: FC<ChangeDragProps> = (props) => {\n  const { title, value, onChange, className, max = 2, min = 0 } = props\n  const { onChangeMin, showInputMax } = props\n  const [width, setWidth] = useState(0)\n  const mouseDown = useRef(0)\n\n  const refDrag = useRef<any>()\n  const refDot = useRef<any>()\n\n  useEffect(() => {\n    getWidth()\n    //eslint-disable-next-line\n  }, [])\n\n  const getWidth = () => {\n    if (!refDrag.current) getWidth()\n    setWidth(refDrag.current.clientWidth - 24)\n  }\n\n  const onMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n    mouseDown.current = event.pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onTouchStart = useCallback((event: TouchEvent<HTMLDivElement>) => {\n    mouseDown.current = event.touches[0].pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onMouseMove = (event: MouseEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.pageX - mouseInit - 12\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(scale)\n  }\n\n  const onTouchMove = (event: TouchEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.touches[0].pageX - mouseInit\n    let scale = (mouseMove / width) * (max - min)\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onMouseLeave = useCallback(() => {\n    mouseDown.current = 0\n    refDrag.current.style.cursor = 'default'\n    refDot.current.style.cursor = ''\n  }, [])\n\n  return (\n    <ScaleWrapper\n      className={className}\n      ref={refDrag}\n      onMouseMove={onMouseMove}\n      onTouchMove={onTouchMove}\n      onMouseLeave={onMouseLeave}\n      onMouseUp={onMouseLeave}\n    >\n      <TitleScale>{title}</TitleScale>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Input\n          value={Number(value.toPrecision(2))}\n          onChange={(e) => onChangeMin?.(Number(e.target.value))}\n        />\n        {showInputMax ? (\n          <Input\n            style={{ textAlign: 'right' }}\n            value={Number(max.toPrecision(2))}\n            readOnly\n          />\n        ) : null}\n      </div>\n      <BoxWrapper>\n        <BoxLine style={{ width: ((value - min) * width) / (max - min) }} />\n        <Dot\n          ref={refDot}\n          onMouseDown={onMouseDown}\n          onTouchEnd={onMouseLeave}\n          onTouchStart={onTouchStart}\n          style={{ left: ((value - min) * width) / (max - min) }}\n        />\n      </BoxWrapper>\n    </ScaleWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 4,\n  background: 'rgba(60, 60, 67, 0.18)',\n  position: 'relative',\n  borderRadius: 2,\n  userSelect: 'none',\n}))\n\nconst Dot = styled(Box)(() => ({\n  position: 'absolute',\n  width: 24,\n  height: 24,\n  background: '#7a7a7a',\n  borderRadius: 100,\n  top: -11,\n  cursor: 'pointer',\n}))\n\nconst TitleScale = styled(Typography)(() => ({\n  fontSize: 14,\n  fontWeight: 700,\n}))\n\nconst BoxLine = styled(Box)(() => ({\n  position: 'absolute',\n  height: 4,\n  background: '#0A7AFF',\n  borderRadius: 2,\n}))\n\nconst ScaleWrapper = styled(Box)(({ theme }) => ({\n  paddingBottom: 20,\n  '@media (max-width: 809px)': {\n    paddingTop: theme.spacing(2),\n  },\n}))\n\nconst Input = styled('input')({\n  border: 'none',\n  outline: 'none',\n  width: 50,\n  marginBottom: 20,\n})\n\nexport default ChangeDrag\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from 'const/API'\n\nexport const getDataBaseTree = async () => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/search`)\n  return response.data\n}\n\nexport const getDataBaseList = async () => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/search/list`)\n  return response.data\n}\n\nexport const getRawdb = async (id: number) => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/${id}`)\n  return response.data\n}\n\nexport const editAttributes = async (id: number, data: string) => {\n  const response = await axios.put(`${DATABASE_URL_HOST}/rawdb/${id}`, data)\n  return response.data\n}\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogContentText,\n  IconButton,\n  Modal,\n  styled,\n  Typography,\n  DialogContent,\n  DialogActions,\n} from '@mui/material'\nimport { FC, useEffect, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ChangeDrag from './ChangeSize'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { ObjectType } from 'pages/Database'\nimport { editAttributes } from 'api/rawdb'\nimport Loading from '../common/Loading'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  url?: string\n  jsonData?: ObjectType\n  disabled?: { left: boolean; right: boolean }\n  id: number\n  editAttribute?: boolean\n}\n\ntype AlertDialogProps = {\n  open: boolean\n  handleClose: () => void\n  handleSaveAttributes: () => void\n}\n\nconst AlertDialog = ({\n  open,\n  handleClose,\n  handleSaveAttributes,\n}: AlertDialogProps) => {\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Do you want Save?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSaveAttributes} autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nconst ImageView: FC<ImageViewProps> = ({\n  editAttribute = true,\n  open,\n  onClose,\n  url,\n  onNext,\n  onPrevious,\n  jsonData,\n  disabled,\n  id,\n}) => {\n  const viewerRef = useRef<any>()\n  const [worldCoords, setWorldCoords] = useState({ x: 0, y: 0, z: 0 })\n  const [voxelCoords, setVoxelCoords] = useState({ i: 0, j: 0, k: 0 })\n  const [values, setValues] = useState(0)\n  const [opacity, setOpacity] = useState(0)\n  const [thresholds, setThresholds] = useState(0)\n  const [maxThres, setMaxThres] = useState(0)\n  const [contracts, setContracts] = useState(1)\n  const [brightness, setBrightness] = useState(0)\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const [openSave, setOpenSave] = useState(false)\n  const [textAttribute, setTextAttribute] = useState(\n    JSON.stringify(jsonData || ''),\n  )\n  const [errorAttribute, setErrorAttribute] = useState<string>('')\n  const [isLoading, setIsLoading] = useState(false)\n  const volumes = useRef<any>()\n  const refTextArea = useRef<HTMLTextAreaElement | null>(null)\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n    }\n    return () => {\n      viewerRef.current.clearVolumes?.()\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n  useEffect(() => {\n    setTextAttribute(JSON.stringify(jsonData || ''))\n    //eslint-disable-next-line\n  }, [jsonData])\n\n  const onChangeThreshold = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeContract = (num: number) => {\n    if (!volumes.current) return\n    setContracts(num)\n    volumes.current.display.setContrast(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeBrightness = (num: number) => {\n    if (!volumes.current) return\n    setBrightness(num)\n    volumes.current.display.setBrightness(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMinThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeJson = (event: any) => {\n    const { value } = event.target\n    try {\n      JSON.parse(value)\n      setErrorAttribute('')\n    } catch {\n      setErrorAttribute('format JSON invalid')\n    }\n    setTextAttribute(value)\n  }\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n          complete: function () {},\n        },\n      ],\n    })\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', function () {\n          setOpacity(1)\n          setIsLoadFile(false)\n        })\n        viewer.addEventListener('sliceupdate', function (event: any) {\n          // const panel = event.target\n          const { volume } = event\n          volumes.current = volume\n          setThresholds(volumes.current.intensity_min)\n          setMaxThres(volumes.current.intensity_max)\n          setValues(volume.getIntensityValue())\n          if (brainbrowser.utils.isFunction(volume.getWorldCoords)) {\n            setWorldCoords(volume.getWorldCoords())\n          }\n          if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n            setVoxelCoords(volume.getVoxelCoords())\n          }\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        setTimeout(() => {\n          viewer.setDefaultPanelSize(256, 256)\n          viewer.render()\n          viewer.clearVolumes()\n          viewer.loadVolumes({\n            volumes: [\n              {\n                type: 'nifti1',\n                nii_url: url,\n                template: {\n                  element_id: 'volume-ui-template',\n                  viewer_insert_className: 'volume-viewer-display',\n                },\n                overlay: {\n                  template: {\n                    element_id: 'overlay-ui-template',\n                    viewer_insert_className: 'overlay-viewer-display',\n                  },\n                },\n                complete: function () {},\n              },\n            ],\n          })\n        }, 500)\n      },\n    )\n  }\n\n  const handleClickOpenSave = () => {\n    if (errorAttribute) return\n    setOpenSave(true)\n  }\n\n  const handleCloseSave = () => {\n    setOpenSave(false)\n  }\n\n  const handleSaveAttributes = async () => {\n    setIsLoading(true)\n    try {\n      await editAttributes(id, textAttribute)\n    } finally {\n      handleCloseSave()\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div\n            style={{\n              display: !opacity ? 'none' : 'flex',\n              alignItems: 'stretch',\n            }}\n          >\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              {opacity ? (\n                <Box sx={{ background: '#ffffff' }}>\n                  <BoxContentData>\n                    <p style={{ margin: 0, paddingTop: 5 }}>[ID: {id}]</p>\n                    <p style={{ margin: 0, padding: '20px 0' }}>\n                      World Coordinates:\n                    </p>\n                    <span>X: {worldCoords.x.toPrecision(4)}</span>\n                    <span style={{ marginLeft: 20 }}>\n                      Y: {worldCoords.y.toPrecision(4)}\n                    </span>\n                    <span style={{ marginLeft: 20 }}>\n                      Z: {worldCoords.z.toPrecision(4)}\n                    </span>\n                    <p>Voxel Coordinates:</p>\n                    <span>I: {voxelCoords.i}</span>\n                    <span style={{ marginLeft: 20 }}>J: {voxelCoords.j}</span>\n                    <span style={{ marginLeft: 20 }}>K: {voxelCoords.k}</span>\n                    <p>Value: {values}</p>\n                    <ChangeDrag\n                      onChangeMin={onChangeMinThresh}\n                      max={maxThres}\n                      min={-maxThres}\n                      title={'Threshold'}\n                      value={thresholds}\n                      showInputMax\n                      showInputMin\n                      onChange={onChangeThreshold}\n                    />\n                    <ChangeDrag\n                      title={'Contrast (0.0 to 2.0)'}\n                      value={contracts}\n                      onChange={onChangeContract}\n                    />\n                    <ChangeDrag\n                      title={'Brightness (-1 to 1):'}\n                      value={brightness}\n                      min={-1}\n                      max={1}\n                      onChange={onChangeBrightness}\n                    />\n                  </BoxContentData>\n                  <WrapperButton sx={{ justifyContent: 'flex-end' }}>\n                    <ButtonCanCel onClick={onClose}>Close</ButtonCanCel>\n                  </WrapperButton>\n                </Box>\n              ) : null}\n            </div>\n            {editAttribute && (\n              <WrapperJson>\n                <WrapArea onClick={() => refTextArea.current?.focus?.()}>\n                  <TextArea\n                    ref={refTextArea}\n                    onChange={(event) => onChangeJson(event)}\n                    value={textAttribute}\n                    readOnly={\n                      window.location.pathname === '/projects/new-project'\n                    }\n                  />\n                  <Typography\n                    sx={{ color: 'red', paddingLeft: 1, fontSize: 12 }}\n                  >\n                    {errorAttribute}\n                  </Typography>\n                </WrapArea>\n                <WrapperButton>\n                  <ButtonOk onClick={handleClickOpenSave}>\n                    Save Attributes\n                  </ButtonOk>\n                </WrapperButton>\n              </WrapperJson>\n            )}\n            {!disabled?.right ? (\n              <ButtonNext onClick={onNext}>\n                <ArrowForwardIosIconWrapper />\n              </ButtonNext>\n            ) : null}\n            {!disabled?.left ? (\n              <ButtonPrevious onClick={onPrevious}>\n                <ArrowBackIosIconWrapper />\n              </ButtonPrevious>\n            ) : null}\n          </div>\n          {(!opacity || isLoadFile) && (\n            <BoxLoading>\n              <img\n                src=\"/lib/loading.gif\"\n                alt=\"icon loading\"\n                style={{ width: 80, height: 80 }}\n              />\n            </BoxLoading>\n          )}\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n        <AlertDialog\n          open={openSave}\n          handleClose={handleCloseSave}\n          handleSaveAttributes={handleSaveAttributes}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </Modal>\n  )\n}\n\nconst BoxLoading = styled(Box)({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'rgba(255,255,255, 0.1)',\n  zIndex: 88,\n})\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '10%',\n  right: '10%',\n  zIndex: 9999,\n  background: 'rgba(255,255,255,0.4)',\n})\n\nconst ButtonNext = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  right: '10%',\n  zIndex: 1,\n})\n\nconst ButtonPrevious = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  left: '10%',\n  zIndex: 1,\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst BoxContentData = styled(Box)({\n  margin: '-5px 0 0',\n  padding: '10px',\n  background: '#ffffff',\n})\n\nconst WrapperJson = styled(Box)({\n  minWidth: 300,\n  background: '#ffffff',\n})\n\nconst WrapArea = styled(Box)({\n  height: 'calc(100% - 120px)',\n  borderLeft: '1px solid',\n})\nconst TextArea = styled('textarea')({\n  width: '98%',\n  outline: 'none !important',\n  border: 'none',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nconst ArrowBackIosIconWrapper = styled(ArrowBackIosIcon)({\n  color: '#ffffff',\n  marginLeft: 10,\n})\n\nconst ArrowForwardIosIconWrapper = styled(ArrowForwardIosIcon)({\n  color: '#ffffff',\n})\n\nconst WrapperButton = styled(Box)({\n  display: 'flex',\n  gap: 15,\n  paddingBottom: 20,\n  justifyContent: 'center',\n  marginTop: 60,\n})\n\nconst ButtonOk = styled('button')({\n  padding: '10px 20px',\n  border: '2px solid #000',\n  cursor: 'pointer',\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.2)',\n  },\n})\n\nconst ButtonCanCel = styled('button')({\n  padding: 10,\n  border: '2px solid #000',\n  cursor: 'pointer',\n  background: '#000000c7',\n  color: 'white',\n  marginRight: 10,\n})\n\nexport default ImageView\n","import {\n  DatabaseData,\n  DatabaseListData,\n  DatatypesDatabase,\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n  SubjectDatabase,\n} from 'pages/Database'\nimport { getRawdb } from 'api/rawdb'\n\nexport type OrderKey =\n  | keyof (RecordDatabase | RecordList)\n  | 'subject'\n  | 'session'\n  | 'datatype'\n  | 'image_attributes.image_type'\n  | 'image_attributes.protocol'\n  | 'image_attributes.scale'\n  | 'image_attributes.voxel'\n\nexport const onRowClick = async (\n  datas: DatabaseData | DatabaseListData,\n  row: ImagesDatabase | RecordList,\n  type: 'tree' | 'list' = 'tree',\n) => {\n  const data = await getRawdb(row.id)\n  const view = {\n    open: true,\n    url: row.image_url,\n    id: row.id,\n    session_id: (row as ImagesDatabase).session_id,\n    parent_id: (row as ImagesDatabase).parent_id,\n    jsonData: data,\n    image: row,\n  }\n  const checkNext = onGet(datas, row, false, type)\n  const checkPre = onGet(datas, row, true, type)\n  return { view, checkNext, checkPre }\n}\n\nexport const onGet = (\n  datas: DatabaseData | DatabaseListData,\n  rowClick: ImagesDatabase | RecordList,\n  isSub?: boolean,\n  type: 'tree' | 'list' = 'tree',\n): ImagesDatabase | RecordList | undefined => {\n  if (type === 'tree') {\n    const row = rowClick as ImagesDatabase\n    const dataNow = datas.records[row.record_index || 0] as RecordDatabase\n    const subjectNow = dataNow?.subjects?.[row.subject_index || 0]\n    const sessionNow = subjectNow?.sessions[row.session_index || 0]\n    const datatypeNow = sessionNow?.datatypes[row.datatype_index || 0]\n    if (!isSub) {\n      const imageNext = datatypeNow?.images[(row.image_index || 0) + 1]\n      if (imageNext) {\n        return { ...row, ...imageNext, image_index: (row.image_index || 0) + 1 }\n      }\n      const datatypeNext = sessionNow?.datatypes[(row.datatype_index || 0) + 1]\n      if (datatypeNext) {\n        const images = datatypeNext?.images\n        if (images[0])\n          return {\n            ...row,\n            ...images[0],\n            datatype_index: (row.datatype_index || 0) + 1,\n            image_index: 0,\n          }\n      }\n    } else {\n      const imagePre = datatypeNow?.images[(row.image_index || 0) - 1]\n      if (imagePre) {\n        return { ...row, ...imagePre, image_index: (row.image_index || 0) - 1 }\n      }\n      const datatypeImagePre =\n        sessionNow?.datatypes?.[(row.datatype_index || 0) - 1]\n      if (datatypeImagePre) {\n        const images = datatypeImagePre?.images\n        if (images?.[images.length - 1]) {\n          return {\n            ...row,\n            ...images?.[images.length - 1],\n            datatype_index: (row.datatype_index || 0) - 1,\n            image_index: images.length - 1,\n          }\n        }\n      }\n    }\n  } else {\n    const row = rowClick as RecordList\n    const indexImageNow = datas.records.findIndex(\n      (record) => record.id === row.id,\n    )\n    return datas.records[indexImageNow + (isSub ? -2 : 2)] as RecordList\n  }\n  return undefined\n}\n\nconst sortWithLabName = (\n  datasTable: (RecordDatabase | RecordList)[],\n  orderKey: keyof (RecordDatabase | RecordList),\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return a[orderKey] > b[orderKey] ? -1 : 1\n      }\n      return a[orderKey] < b[orderKey] ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nconst sortSubjectTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort((dataA, dataB) => {\n    const subjectsA = dataA.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    const subjectsB = dataB.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    if (typeOrder === 'DESC') {\n      return subjectsA[0]?.label > subjectsB[0]?.label ? -1 : 1\n    }\n    return subjectsA[0]?.label < subjectsB[0]?.label ? -1 : 1\n  })\n  return newDatas.map((element) => ({\n    ...element,\n    subjects: element.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    }),\n  }))\n}\n\nconst sortSessionTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          const subSessB = subB.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions.sort((ssA, ssB) => {\n            if (typeOrder === 'DESC') {\n              return ssA.label > ssB.label ? -1 : 1\n            }\n            return ssA.label < ssB.label ? -1 : 1\n          }),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortDataTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              const dataTypeB = ssB.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.label > dataTypeB[0]?.label ? -1 : 1\n              }\n              return dataTypeA[0]?.label < dataTypeB[0]?.label ? -1 : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes.sort((typeA, typeB) => {\n                if (typeOrder === 'DESC') {\n                  return typeA.label > typeB.label ? -1 : 1\n                }\n                return typeA.label < typeB.label ? -1 : 1\n              }),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortAttributesTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n  key: string = 'type',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const typeA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.image_attributes[key]?.toString?.() >\n                        imageB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return imageA.image_attributes[key]?.toString?.() <\n                      imageB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.image_attributes[key]?.toString?.() >\n              dataB.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return dataA.image_attributes[key]?.toString?.() <\n            dataB.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n      const typeB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.image_attributes[key]?.toString?.() >\n                        imageB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return imageA.image_attributes[key]?.toString?.() <\n                      imageB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.image_attributes[key]?.toString?.() >\n              dataB.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return dataA.image_attributes[key]?.toString?.() <\n            dataB.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n\n      if (typeOrder === 'DESC') {\n        return typeA[0]?.image_attributes[key]?.toString?.() >\n          typeB[0]?.image_attributes[key]?.toString?.()\n          ? -1\n          : 1\n      }\n      return typeA[0]?.image_attributes[key]?.toString?.() <\n        typeB[0]?.image_attributes[key]?.toString?.()\n        ? -1\n        : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.image_attributes[key]?.toString?.() >\n              subSessB[0]?.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return subSessA[0]?.image_attributes[key]?.toString?.() <\n            subSessB[0]?.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n              const dataTypeB = ssB.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.image_attributes[key]?.toString?.() >\n                  dataTypeB[0]?.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataTypeA[0]?.image_attributes[key]?.toString?.() <\n                dataTypeB[0]?.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes\n                .sort((typeA, typeB) => {\n                  const imageA = typeA.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                  const imageB = typeB.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                  if (typeOrder === 'DESC') {\n                    return (imageA[0]?.image_attributes[key] as number[])?.[0] >\n                      (imageB[0]?.image_attributes[key] as number[])?.[0]\n                      ? -1\n                      : 1\n                  }\n                  return (imageA[0]?.image_attributes[key] as number[])?.[0] <\n                    (imageB[0]?.image_attributes[key] as number[])?.[0]\n                    ? -1\n                    : 1\n                })\n                .map((type) => ({\n                  ...type,\n                  images: type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return (sA.image_attributes[key] as number[])?.[0] >\n                        (sB.image_attributes[key] as number[])?.[0]\n                        ? -1\n                        : 1\n                    }\n                    return (sA.image_attributes[key] as number[])?.[0] <\n                      (sB.image_attributes[key] as number[])?.[0]\n                      ? -1\n                      : 1\n                  }),\n                })),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortWithKey = (\n  datasTable: RecordList[],\n  orderKey: keyof RecordList,\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  return datasTable.sort((dataA: RecordList, dataB: RecordList) => {\n    let valueA: RecordList | string = dataA\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueA !== 'string') {\n          valueA = valueA?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueA = valueA[orderKey] as string\n\n    let valueB: RecordList | string = dataB\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueB !== 'string') {\n          valueB = valueB?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueB = valueB[orderKey] as string\n    if (typeOrder === 'DESC') {\n      if(Array.isArray(valueA) && Array.isArray(valueB)) {\n        return valueA[0] > valueB[0] ? -1 : 1\n      }\n      return valueA > valueB ? -1 : 1\n    }\n    if(Array.isArray(valueA) && Array.isArray(valueB)) {\n      return valueA[0] < valueB[0] ? -1 : 1\n    }\n    return valueA < valueB ? -1 : 1\n  })\n}\n\nconst sortWithTime = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return new Date(a.recording_time) > new Date(b.recording_time) ? -1 : 1\n      }\n      return new Date(a.recording_time) < new Date(b.recording_time) ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nexport const onSort = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC' | '',\n  orderKey: OrderKey,\n  type: string = 'tree',\n): (RecordDatabase | RecordList)[] => {\n  if (!typeOrder) return datasTable\n  let newDatas = datasTable\n  if (type === 'tree') {\n    if (['lab_name', 'user_name'].includes(orderKey)) {\n      newDatas = sortWithLabName(\n        datasTable,\n        orderKey as 'lab_name' | 'user_name',\n        typeOrder,\n      )\n    } else if (orderKey === 'recording_time') {\n      newDatas = sortWithTime(datasTable, typeOrder)\n    } else if (orderKey === 'subject' && type === 'tree') {\n      newDatas = sortSubjectTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'session' && type === 'tree') {\n      newDatas = sortSessionTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'datatype' && type === 'tree') {\n      newDatas = sortDataTypeTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'image_attributes.image_type' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n      )\n    } else if (orderKey === 'image_attributes.protocol' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'protocol',\n      )\n    } else if (orderKey === 'image_attributes.voxel' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'voxel',\n      )\n    } else if (orderKey === 'image_attributes.scale' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'scale',\n      )\n    }\n  } else {\n    newDatas = sortWithKey(\n      datasTable as RecordList[],\n      orderKey as keyof RecordList,\n      typeOrder,\n    )\n  }\n  return newDatas\n}\n\nexport const onFilterValue = (\n  value: { [key: string]: string },\n  initDataTable: DatabaseData | DatabaseListData,\n  type: 'tree' | 'list',\n): (RecordDatabase | RecordList)[] => {\n  if (!Object.keys(value).some((key) => value[key])) {\n    return initDataTable.records\n  }\n  if (type === 'list') {\n    return (initDataTable.records as RecordList[]).filter((item) => {\n      return !Object.keys(value).some((key) => {\n        if (!value[key]) return false\n        if (key === 'protocol') {\n          return !item.image_attributes[key]\n            ?.toLowerCase()\n            .includes(value[key].toLowerCase?.())\n        }\n        return !(item[key as keyof RecordList] as string)?.includes(value[key].toLowerCase?.())\n      })\n    })\n  }\n  return (initDataTable.records as RecordDatabase[]).reduce(\n    (arrRecord: RecordDatabase[], record) => {\n      const subjects = record.subjects.reduce(\n        (arrSub: SubjectDatabase[], subject) => {\n          const sessions = subject.sessions.reduce(\n            (arrSess: SessionsDatabase[], session) => {\n              if (\n                session.label\n                  ?.toLowerCase()\n                  ?.includes((value.session_label || '')?.toLowerCase())\n              ) {\n                const datatypes = session.datatypes.reduce(\n                  (arrDt: DatatypesDatabase[], dt) => {\n                    if (\n                      dt.label\n                        ?.toLowerCase()\n                        ?.includes((value.datatypes_label || '')?.toLowerCase())\n                    ) {\n                      const images = dt.images.filter((image) => {\n                        const { image_type, protocol } = image.image_attributes\n                        return (\n                          (image_type as string)\n                            ?.toLowerCase()\n                            .includes((value.type || '').toLowerCase()) &&\n                          (protocol as string)\n                            ?.toLowerCase()\n                            .includes((value.protocol || '').toLowerCase())\n                        )\n                      })\n                      if (images.length) {\n                        arrDt.push({ ...dt, images })\n                      }\n                    }\n                    return arrDt\n                  },\n                  [],\n                )\n                if (datatypes.length) {\n                  arrSess.push({ ...session, datatypes })\n                }\n              }\n              return arrSess\n            },\n            [],\n          )\n          if (sessions.length) {\n            arrSub.push({ ...subject, sessions })\n          }\n          return arrSub\n        },\n        [],\n      )\n      if (subjects.length) {\n        arrRecord.push({ ...record, subjects })\n      }\n      return arrRecord\n    },\n    [],\n  )\n}\n","import { Box, Button, IconButton, styled, TextField } from '@mui/material'\nimport { ChangeEvent, useCallback, useEffect, useState } from 'react'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ImageView from 'components/ImageView'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport {\n  onFilterValue,\n  onGet,\n  onRowClick,\n  onSort,\n  OrderKey,\n} from 'utils/database'\nimport { User, useUser } from 'providers'\nimport { isReseacher } from 'utils/auth'\nimport { getDataBaseList, getDataBaseTree } from 'api/rawdb'\nimport { DATABASE_URL_HOST } from 'const/API'\nimport Loading from 'components/common/Loading'\nimport { useSearchParams } from 'react-router-dom'\n\ntype PopupSearchProps = {\n  onClose?: () => any\n  onFilter?: (values: { [key: string]: string }) => any\n  defaultValue?: { [key: string]: string }\n}\n\nexport const PopupSearch = ({\n  onClose,\n  defaultValue = {},\n  onFilter,\n}: PopupSearchProps) => {\n  const [values, setValues] = useState(defaultValue)\n\n  const handleFilter = () => {\n    onFilter?.(values)\n    onClose?.()\n  }\n\n  const onChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    setValues({ ...values, [event.target.name]: event.target.value })\n  }\n\n  return (\n    <Popup>\n      <PopupInner>\n        <HeaderTitle>\n          <span>Filter</span>\n          <ButtonControl onClick={onClose}>\n            <CloseIcon />\n          </ButtonControl>\n        </HeaderTitle>\n        <InputSearch\n          onChange={onChange}\n          name={'session_label'}\n          label=\"Session\"\n          variant=\"outlined\"\n          value={values.session_label}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'datatypes_label'}\n          label=\"Datatype\"\n          variant=\"outlined\"\n          value={values.datatypes_label}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'type'}\n          label=\"Type\"\n          variant=\"outlined\"\n          value={values.type}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'protocol'}\n          label=\"Protocol\"\n          variant=\"outlined\"\n          value={values.protocol}\n        />\n        <Button variant=\"contained\" onClick={handleFilter}>\n          Filter\n        </Button>\n      </PopupInner>\n    </Popup>\n  )\n}\n\nexport type ObjectType = {\n  [key: string]: ObjectType | string | number | number[]\n}\n\nexport type Image = {\n  id: number\n  parent_id: number\n  session_id: number\n  label: string\n  image: {\n    id: number\n    parent_id: number\n    image_url: string\n    image_attributes: ObjectType\n  }\n}\n\nexport type Viewer = {\n  open: boolean\n  url: string\n  jsonData?: ObjectType\n  id?: number | string\n  session_id?: number\n  parent_id?: string\n  image?: ImagesDatabase | RecordList\n}\n\nexport type ImagesDatabase = {\n  id: number\n  parent_id: string\n  image_url: string\n  datatype_label?: string\n  type?: string\n  image_attributes: ObjectType\n  session_id?: number\n  record_index?: number\n  subject_index?: number\n  session_index?: number\n  datatype_index?: number\n  image_index?: number\n}\n\nexport type DatatypesDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  images: ImagesDatabase[]\n}\n\nexport type SessionsDatabase = {\n  id: string\n  parent_id: string\n  session_index?: number\n  label: string\n  datatypes: DatatypesDatabase[]\n  subject_index?: number\n}\n\nexport type SubjectDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  sessions: SessionsDatabase[]\n  subject_index?: number\n}\n\nexport type RecordDatabase = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  created_time: string\n  updated_time: string\n  subjects: SubjectDatabase[]\n}\n\nexport type DatabaseData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordDatabase[]\n}\n\nexport type RecordList = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  subject_label: string\n  session_label: string\n  datatypes_label: string\n  image_id: number\n  image_url: string\n  image_attributes: {\n    size: number[]\n    type: string\n    protocol: string\n    voxel_size: number[]\n  }\n  created_time: string\n  updated_time: string\n}\n\nexport type DatabaseListData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordList[]\n}\n\nexport const defaultDatabase: DatabaseData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [],\n}\n\nexport const columns = (\n  rowClick: Function,\n  setOpenDelete: Function,\n  type: 'tree' | 'list' = 'tree',\n  user?: User,\n): Column[] => [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true, width: 110 },\n  {\n    title: 'Subject',\n    name: type === 'tree' ? 'subject' : 'subject_label',\n    filter: true,\n  },\n  {\n    title: 'Session',\n    name: type === 'tree' ? 'session' : 'session_label',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Datatype',\n    name: type === 'tree' ? 'datatype' : 'datatypes_label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Image ID',\n    name: 'id',\n    width: 100,\n    render: (record) => {\n      if (!(record as ImagesDatabase).image_attributes) return\n      return (\n        <div style={{ textAlign: 'center' }}>\n          {(record as ImagesDatabase).id}\n        </div>\n      )\n    },\n  },\n  {\n    title: 'Type',\n    name: 'image_attributes.image_type',\n    filter: true,\n    width: 70,\n  },\n  {\n    title: 'Protocol',\n    name: 'image_attributes.protocol',\n    filter: true,\n  },\n  {\n    title: 'Size',\n    name: 'image_attributes.scale',\n    filter: true,\n    render: (_, v) => JSON.stringify(v),\n  },\n  {\n    title: 'Voxel size',\n    name: 'image_attributes.voxel',\n    filter: true,\n    width: 130,\n    render: (_, v) => JSON.stringify(v),\n  },\n  {\n    title: '',\n    name: 'action',\n    render: (data) => {\n      if (isReseacher(user?.role)) return null\n      return (\n        <BoxButton>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              rowClick?.(data)\n            }}\n          >\n            <EditIcon fontSize=\"small\" color={'inherit'} />\n          </ButtonControl>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              setOpenDelete?.(true)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </ButtonControl>\n        </BoxButton>\n      )\n    },\n  },\n]\n\nconst Database = () => {\n  const [openPopup, setOpenPopup] = useState(false)\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '', id: '' })\n  const [databases, setDatabases] = useState<DatabaseData | DatabaseListData>()\n  const [openDelete, setOpenDelete] = useState(false)\n  const [{ orderBy, type, columnSort }, setOrderByAndTypeAndSort] = useState<{\n    orderBy: 'ASC' | 'DESC' | ''\n    type: 'tree' | 'list'\n    columnSort: string\n  }>({ orderBy: '', type: 'tree', columnSort: '' })\n\n  // const [columnSort, setColumnSort] = useState<string>('')\n  const [initDatabases, setInitDatabases] =\n    useState<DatabaseData>(defaultDatabase)\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [isLoading, setIsLoading] = useState(false)\n  const { user } = useUser()\n  const [searchParams, setParams] = useSearchParams()\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '', id: '' })\n  }\n\n  const fetchData = useCallback(async () => {\n    const defaultValue = {\n      session_label: searchParams.get('session_label') || '',\n      datatypes_label: searchParams.get('datatypes_label') || '',\n      type: searchParams.get('type') || '',\n      protocol: searchParams.get('protocol') || '',\n    }\n    setIsLoading(true)\n    let data\n    try {\n      let api = getDataBaseList;\n      if(type === 'tree') {\n        api = getDataBaseTree\n      }\n      data = await api()\n      const records = onFilterValue(defaultValue, data, type)\n      setDatabases({...data, records})\n      setInitDatabases(data)\n    } finally {\n      setIsLoading(false)\n    }\n    //eslint-disable-next-line\n  }, [type])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  const rowClick = async (row: ImagesDatabase | RecordList) => {\n    if (!databases) return\n    const { view, checkNext, checkPre } = await onRowClick(databases, row, type)\n    setViewer(view)\n    setDisabled({\n      left: type === 'list' || !checkPre,\n      right: type === 'list' || !checkNext,\n    })\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    if (!initDatabases) return\n    const filterValue = {\n      session_label: searchParams.get('session_label') || '',\n      datatypes_label: searchParams.get('datatypes_label') || '',\n      type: searchParams.get('type') || '',\n      protocol: searchParams.get('protocol') || '',\n    }\n    const records = onFilterValue(filterValue, initDatabases, type)\n    const data = onSort(\n        JSON.parse(JSON.stringify(records)),\n        orderByValue,\n        orderKey as OrderKey,\n        type,\n    )\n    setDatabases({ ...initDatabases, records: data as RecordDatabase[] })\n    setOrderByAndTypeAndSort((pre) => ({\n      ...pre,\n      orderBy: orderByValue,\n      columnSort: orderKey,\n    }))\n  }\n\n  const onNext = async () => {\n    if (!viewer.image) return\n    const imageNext = onGet(databases as any, viewer.image, false, type)\n    if (imageNext) await rowClick(imageNext)\n  }\n\n  const onPrevious = async () => {\n    if (!viewer.image || !databases) return\n    const imagePre = onGet(databases, viewer.image, true, type)\n    if (imagePre) await rowClick(imagePre)\n  }\n\n  const onFilter = (value: { [key: string]: string }) => {\n    if (!databases) return\n    if (!Object.keys(value).length) return\n    const records = onFilterValue(value, initDatabases, type)\n    const data = onSort(\n        JSON.parse(JSON.stringify(records)),\n        orderBy,\n        columnSort as OrderKey,\n        type,\n    )\n    setDatabases({...databases, records: data as RecordDatabase[]})\n    const newParams = Object.keys(value)\n      .map((key) => value[key] && `${key}=${value[key]}`)\n      .join('&')\n    setParams(newParams)\n  }\n\n  const setType = (type: 'tree' | 'list') => {\n    setOrderByAndTypeAndSort({ type, orderBy: '', columnSort: '' })\n  }\n\n  const handleClear = () => {\n    setParams('')\n    const data = onSort(\n        JSON.parse(JSON.stringify(initDatabases.records)),\n        orderBy,\n        columnSort as OrderKey,\n        type,\n    )\n    setDatabases({...initDatabases, records: data as RecordDatabase[]})\n  }\n\n  return (\n    <DatabaseWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Image\"\n        description={`Are you sure delete?\\n`}\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ProjectsTitle>\n        <span>Database</span>\n        <Box sx={{display: 'flex', gap: 5}}>\n          <Button variant=\"contained\" onClick={handleClear}>\n            Clear Filter\n          </Button>\n          <ButtonFilter\n            onClick={() => setOpenPopup(true)}\n            style={{ margin: '0 26px 0 0' }}\n          >\n            Filter\n          </ButtonFilter>\n       </Box>\n      </ProjectsTitle>\n      <BoxSelectTypeView>\n        <Box\n            onClick={() => {\n              if(type === 'tree') return\n              setType('tree')\n              setParams('')\n            }}\n          style={{\n            marginRight: 4,\n            fontWeight: type === 'tree' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'tree' ? '' : '#4687f4',\n          }}\n        >\n          Tree\n        </Box>\n        /\n        <Box\n          onClick={() => {\n            if(type === 'list') return\n            setType('list')\n            setParams('')\n    }}\n          style={{\n            marginLeft: 4,\n            fontWeight: type === 'list' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'list' ? '' : '#4687f4',\n          }}\n        >\n          List\n        </Box>\n      </BoxSelectTypeView>\n      {openPopup && (\n        <PopupSearch\n          onClose={() => setOpenPopup(false)}\n          defaultValue={{\n            session_label: searchParams.get('session_label') || '',\n            datatypes_label: searchParams.get('datatypes_label') || '',\n            type: searchParams.get('type') || '',\n            protocol: searchParams.get('protocol') || '',\n          }}\n          onFilter={onFilter}\n        />\n      )}\n      <DatabaseTableComponent\n        addProject={false}\n        defaultExpand\n        onSort={handleSort}\n        rowClick={rowClick}\n        orderKey={columnSort}\n        orderBy={orderBy}\n        data={databases && databases.records}\n        columns={columns(rowClick, setOpenDelete, type, user)}\n      />\n      {viewer.url && viewer.open && (\n        <ImageView\n          disabled={disabled}\n          url={`${DATABASE_URL_HOST}${viewer.url}`}\n          open={viewer.open}\n          jsonData={viewer.jsonData}\n          onClose={onCloseImageView}\n          onNext={onNext}\n          onPrevious={onPrevious}\n          id={Number(viewer.id)}\n        />\n      )}\n      {isLoading && <Loading />}\n    </DatabaseWrapper>\n  )\n}\n\nconst DatabaseWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst HeaderTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst Popup = styled(Box)(() => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n  zIndex: 9999,\n}))\n\nconst PopupInner = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2, 3),\n  backgroundColor: '#fff',\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n}))\n\nconst InputSearch = styled(TextField)(() => ({\n  minWidth: 250,\n}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ButtonControl = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0, 1),\n  width: 30,\n  height: 30,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst ProjectsTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst BoxSelectTypeView = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 16,\n})\n\nexport default Database\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { getMe, login } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { saveExToken, saveRefreshToken, saveToken } from 'utils/auth'\nimport Loading from '../../components/common/Loading'\n\nconst Login = () => {\n  const { setUser } = useUser()\n  const navigate = useNavigate()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n    try {\n      const { access_token, ex_token, refresh_token } = await login(values)\n      saveToken(access_token)\n      saveRefreshToken(refresh_token)\n      saveExToken(ex_token)\n      getUser()\n    } catch (e) {\n      setErrors({ email: 'Email or password is wrong', password: '' })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const getUser = async () => {\n    const data = await getMe()\n    setUser(data)\n    navigate('/')\n  }\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">\n              {errors.password}\n            </TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {isLoading && <Loading />}\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { createSlice } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Project } from './ProjectType'\nimport {getProjectList, getProjectId, deleteProject} from './ProjectAction'\n\nconst initialState: Project = {\n  projects: [],\n  loading: true,\n  currentProject: undefined,\n}\n\nexport const projectSlice = createSlice({\n  name: PROJECT_SLICE_NAME,\n  initialState,\n  reducers: {\n    resetCurrentProject: (state) => {\n      state.currentProject = undefined\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n        .addCase(getProjectList.fulfilled, (state, action) => {\n          state.projects = action.payload.projects\n          state.loading = false\n        })\n        .addCase(getProjectList.pending, (state) => {\n          if(!state.loading) state.loading = true\n        })\n        .addCase(getProjectId.fulfilled, (state, action) => {\n          state.currentProject = action.payload\n        })\n        .addCase(getProjectId.rejected, (state, action) => {\n          state.loading = false\n        })\n        .addCase(deleteProject.fulfilled, (state, action) => {\n          state.loading = false\n        })\n        .addCase(deleteProject.pending, (state) => {\n          if(!state.loading) state.loading = true\n        })\n  },\n})\n\nexport const { resetCurrentProject } = projectSlice.actions\nexport default projectSlice.reducer\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  styled,\n  Typography,\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport React, {\n  useState,\n  DragEvent,\n  Fragment,\n  useRef,\n  CSSProperties,\n  useEffect,\n  useMemo,\n} from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport {\n  DatabaseData,\n  defaultDatabase,\n  ImagesDatabase,\n  PopupSearch,\n  Viewer,\n} from '../Database'\nimport ImageView from 'components/ImageView'\nimport {\n  onFilterValue,\n  onGet,\n  onRowClick,\n  onSort,\n  OrderKey,\n} from 'utils/database'\nimport { ObjectType } from '../Database'\nimport { ChangeEvent } from 'react'\nimport { RecordDatabase } from '../Database'\nimport { useDispatch } from 'react-redux'\nimport { getDatasetList } from 'store/slice/Dataset/DatasetAction'\nimport { ProjectTypeValue } from 'store/slice/Project/ProjectType'\nimport {\n  createProject,\n  editProject,\n  getProjectId,\n} from 'store/slice/Project/ProjectAction'\nimport Loading from 'components/common/Loading'\nimport { getDataBaseTree } from 'api/rawdb'\nimport { DATABASE_URL_HOST } from 'const/API'\nimport { selectDataset } from 'store/slice/Dataset/DatasetSelector'\nimport { useSelector } from 'react-redux'\nimport { Dataset } from 'store/slice/Dataset/DatasetType'\nimport { selectCurrentProject } from 'store/slice/Project/ProjectSelector'\nimport { resetCurrentProject } from 'store/slice/Project/ProjectSlice'\nimport { reset } from 'store/slice/Dataset/DatasetSlice'\nimport { setLoadingExpriment } from 'store/slice/Experiments/ExperimentsSlice'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\nimport { RUN_BTN_OPTIONS } from 'store/slice/Pipeline/PipelineType'\n\nconst columns: Column[] = [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true, width: 100 },\n  { title: 'Date', name: 'recording_time', filter: true, width: 130 },\n  { title: 'Subject', name: 'subject', filter: true, width: 120 },\n  {\n    title: 'Session',\n    name: 'session',\n    child: 'label',\n    filter: true,\n    width: 190,\n  },\n  {\n    title: 'Datatype',\n    name: 'datatype',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Image ID',\n    name: 'id',\n    width: 100,\n    render: (record) => {\n      if (!(record as ImagesDatabase).image_attributes) return\n      return (\n        <div style={{ textAlign: 'center' }}>\n          {(record as ImagesDatabase).id}\n        </div>\n      )\n    },\n  },\n  {\n    title: 'Type',\n    name: 'image_attributes.image_type',\n    filter: true,\n    width: 70,\n  },\n  {\n    title: 'Protocol',\n    name: 'image_attributes.protocol',\n    filter: true,\n  },\n  {\n    title: 'Size',\n    name: 'image_attributes.scale',\n    filter: true,\n    render: (_, value) => JSON.stringify(value),\n  },\n  {\n    title: 'Voxel size',\n    name: 'image_attributes.voxel',\n    filter: true,\n    width: 110,\n    render: (_, value) => JSON.stringify(value),\n  },\n]\n\ntype ProjectAdd = {\n  project_name?: string\n  project_type?: string\n  image_count: number\n  image_url: string\n  protocol: string\n  id: string\n  image_id: number\n  jsonData: ObjectType\n}\n\ntype DataWithin = {\n  id: string\n  data: ProjectAdd[]\n  name: string\n}\n\ntype DataFactor = {\n  within: DataWithin[]\n} & DataWithin\n\nconst nameDefault = 'DEFAULT'\n\nconst defaultFactor = [\n  { name: nameDefault, within: [], id: getNanoId(), data: [] },\n]\n\nconst remapDatasetToDataFactor = ({\n  dataset,\n}: Dataset): { datasets: DataFactor[]; ids: number[] } => {\n  if (!dataset) return { ids: [], datasets: defaultFactor }\n  let ids: number[] = []\n  const datasets = dataset.map((sub) => ({\n    id: sub.id,\n    name: sub.folder_name || nameDefault,\n    within: (sub.sub_folders || []).map((sub_within) => ({\n      id: sub_within.id,\n      name: sub_within.folder_name,\n      data: (sub_within.images || []).map((image) => {\n        ids.push(image.id)\n        return {\n          project_name: image.attributes.datatype as string,\n          project_type: image.attributes.image_type as string,\n          id: String(image.id),\n          image_count: 1,\n          image_id: image.id,\n          protocol: image.attributes.protocol as string,\n          image_url: image.image_url,\n          jsonData: image.attributes,\n        }\n      }),\n    })),\n    data: (sub.images || []).map((image) => {\n      ids.push(image.id)\n      return {\n        project_name: image.attributes.datatype as string,\n        project_type: image.attributes.image_type as string,\n        id: String(image.id),\n        image_count: 1,\n        image_id: image.id,\n        protocol: image.attributes.protocol as string,\n        image_url: image.image_url,\n        jsonData: image.attributes,\n      }\n    }),\n  }))\n  return { ids, datasets }\n}\n\nconst ProjectFormComponent = () => {\n  const [searchParams, setParams] = useSearchParams()\n  const idEdit = searchParams.get('id')\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [loading, setLoading] = useState<boolean>(false)\n  const routeGoback = searchParams.get('back')\n  const nodeId = searchParams.get('nodeId')\n  const isPendingDrag = useRef(false)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const dataset = useSelector(selectDataset)\n  const currentProject = useSelector(selectCurrentProject)\n\n  const [databasese, setDatabases] = useState<DatabaseData>(defaultDatabase)\n  const [initDatabases, setInitDatabases] =\n    useState<DatabaseData>(defaultDatabase)\n  const [projectName, setProjectName] = useState(\n    currentProject?.project_name || 'Prj Name 1',\n  )\n  const [projectType, setProjectType] = useState<ProjectTypeValue>(\n    currentProject?.project_type || ProjectTypeValue.FACTOR,\n  )\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [openFilter, setOpenFilter] = useState(false)\n  const [rowDrag, setRowDrag] = useState<ImagesDatabase | ImagesDatabase[]>()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const { datasets, ids } = useMemo(() => remapDatasetToDataFactor(dataset), [])\n  const [dataFactors, setDataFactors] = useState<DataFactor[]>(datasets)\n  const [imageIDs, setImageIDs] = useState<number[]>(ids)\n\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n  const [isEditName, setIsEditName] = useState(false)\n\n  const errorProjectEmpty = useMemo(() => !projectName, [projectName])\n\n  useEffect(() => {\n    setLoading(true)\n    if (!idEdit) {\n      getDataTree().then(() => setLoading(false))\n      return\n    }\n    Promise.all([\n      dispatch(getDatasetList({ project_id: idEdit })),\n      dispatch(\n        getProjectId({\n          project_id: idEdit,\n          callback: () => setLoading(false),\n        }),\n      ),\n      getDataTree(),\n    ]).then(() => setLoading(false))\n    return () => {\n      dispatch(resetCurrentProject())\n      dispatch(reset())\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    const { datasets, ids } = remapDatasetToDataFactor(dataset)\n    setDataFactors(datasets)\n    setImageIDs(ids)\n  }, [dataset])\n\n  useEffect(() => {\n    if (currentProject?.project_name) {\n      setProjectName(currentProject?.project_name)\n    }\n  }, [currentProject?.project_name])\n\n  useEffect(() => {\n    if (currentProject?.project_type) {\n      setProjectType(currentProject.project_type as number)\n    }\n  }, [currentProject?.project_type])\n\n  const onFilter = (value: { [key: string]: string }) => {\n    if (!initDatabases) return\n    const records = onFilterValue(\n      value,\n      initDatabases,\n      'tree',\n    ) as RecordDatabase[]\n    const data = onSort(\n      JSON.parse(JSON.stringify(records)),\n      orderBy,\n      columnSort as OrderKey,\n      'tree',\n    ) as RecordDatabase[]\n    setDatabases({ ...initDatabases, records: data })\n    if (!Object.keys(value).length) return\n    const newParams = Object.keys(value)\n      .map((key) => value[key] && `${key}=${value[key]}`)\n      .join('&')\n    setParams(newParams)\n  }\n\n  const getDataTree = async () => {\n    const defaultValue = {\n      session_label: searchParams.get('session_label') || '',\n      datatypes_label: searchParams.get('datatypes_label') || '',\n      type: searchParams.get('type') || '',\n      protocol: searchParams.get('protocol') || '',\n    }\n    try {\n      const response = await getDataBaseTree()\n      const records = onFilterValue(defaultValue, response, 'tree')\n      setDatabases({ ...databasese, records: records as RecordDatabase[] })\n      setInitDatabases(response)\n    } catch {}\n  }\n\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n    setProjectName(e.target.value)\n  }\n\n  const handleChangeLevel = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const type = Number(event.target.value) as ProjectTypeValue\n    setProjectType(type)\n    let within: DataWithin[] = []\n    if (type === ProjectTypeValue.WITHIN_FACTOR) {\n      within = [{ name: nameDefault, id: getNanoId(), data: [] }]\n    }\n    setImageIDs([])\n    setDataFactors([{ name: nameDefault, within, id: getNanoId(), data: [] }])\n  }\n\n  const onAddBetween = () => {\n    setDataFactors((pre) => [\n      ...pre,\n      { name: nameDefault, within: [], id: getNanoId(), data: [] },\n    ])\n  }\n\n  const onAddWithin = (idFactor: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === idFactor) {\n          return {\n            ...p,\n            within: [\n              ...p.within,\n              { name: nameDefault, within: [], id: getNanoId(), data: [] },\n            ],\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteFactor = (row: DataFactor) => {\n    setImageIDs((pre) =>\n      pre.filter((id) => {\n        if (projectType === ProjectTypeValue.FACTOR) {\n          return !row.data.find((rowData) => rowData.image_id === id)\n        }\n        return !row.within.find((w) => w.data.find((d) => d.image_id === id))\n      }),\n    )\n    setDataFactors((pre) => pre.filter((e) => e.id !== row.id))\n  }\n\n  const onDeleteWithin = (factor: DataFactor, row: DataWithin) => {\n    setImageIDs((pre) =>\n      pre.filter((id) => !row.data.find((rowData) => rowData.image_id === id)),\n    )\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, within: p.within.filter((w) => w.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataWithin = (\n    factor: DataFactor,\n    within: DataWithin,\n    row: ProjectAdd,\n  ) => {\n    setImageIDs((pre) => pre.filter((id) => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, data: w.data.filter((d) => d.id !== row.id) }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataFactor = (factor: DataFactor, row: ProjectAdd) => {\n    setImageIDs((pre) => pre.filter((id) => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, data: p.data.filter((d) => d.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDragRow = (row: ImagesDatabase[] = []) => {\n    setRowDrag(row)\n  }\n\n  const onBeginDrag = () => {\n    isPendingDrag.current = true\n    const mouseup = () => {\n      isPendingDrag.current = false\n      window.removeEventListener('mouseup', mouseup)\n    }\n    window.addEventListener('mouseup', mouseup)\n  }\n\n  const onDragEnd = () => {\n    setRowDrag(undefined)\n  }\n\n  const onMouseOver = (factor: DataFactor, within?: DataWithin) => {\n    if (isPendingDrag.current) return\n    onDropData(factor, within)\n    setRowDrag(undefined)\n  }\n\n  const onDropData = (factor: DataFactor, within?: DataWithin) => {\n    if (!Array.isArray(rowDrag) && !rowDrag?.image_url) {\n      return\n    }\n    let newData: ProjectAdd[] = []\n    const checkExistIdImage =\n      imageIDs.length &&\n      imageIDs.some((id) => {\n        if (!Array.isArray(rowDrag)) return rowDrag.id === id\n        return rowDrag.some((row) => row.id === id)\n      })\n    if (checkExistIdImage) {\n      return alert('Duplicate images cannot be registered.')\n    }\n    const newIds = Array.isArray(rowDrag)\n      ? rowDrag.map((row) => row.id)\n      : [rowDrag.id]\n    setImageIDs([...imageIDs, ...newIds])\n    if (!Array.isArray(rowDrag)) {\n      newData = [\n        {\n          id: getNanoId(),\n          project_name: rowDrag.datatype_label,\n          image_count: 1,\n          image_id: rowDrag.id,\n          project_type: rowDrag.image_attributes.image_type as string,\n          protocol: rowDrag.image_attributes.protocol as string,\n          image_url: rowDrag?.image_url,\n          jsonData: rowDrag?.image_attributes,\n        },\n      ]\n    } else if (Array.isArray(rowDrag)) {\n      newData = rowDrag.map((row) => ({\n        id: getNanoId(),\n        project_name: row.datatype_label,\n        image_count: 1,\n        image_id: row.id,\n        project_type: row.image_attributes.image_type as string,\n        protocol: row.image_attributes.protocol as string,\n        image_url: row?.image_url,\n        jsonData: row?.image_attributes,\n      }))\n    }\n    if (projectType === ProjectTypeValue.FACTOR) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return { ...p, data: [...p.data, ...newData] }\n          }\n          return p\n        }),\n      )\n      return\n    }\n    if (within) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return {\n              ...p,\n              within: p.within.map((w) => {\n                if (w.id === within.id) {\n                  return { ...w, data: [...w.data, ...newData] }\n                }\n                return w\n              }),\n            }\n          }\n          return p\n        }),\n      )\n    }\n  }\n\n  const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onDragLeave = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onChangeNameFactor = (factor: DataFactor, value: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, name: value }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onChangeNameWithinFactor = (\n    factor: DataFactor,\n    within: DataWithin,\n    value: string,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, name: value }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const renderData = (\n    data: ProjectAdd[],\n    style?: CSSProperties,\n    onDelete?: (row: ProjectAdd) => void,\n  ) => {\n    return data.map((e, index) => (\n      <BoxItem\n        key={`${e.id}_${index}`}\n        style={style}\n        onClick={() => rowDataClick(e)}\n      >\n        <TypographyBoxItem style={{ minWidth: 40 }}>\n          {e.image_id}\n        </TypographyBoxItem>\n        <TypographyBoxItem>{e.project_name}</TypographyBoxItem>\n        <TypographyBoxItem style={{ minWidth: 80 }}>\n          {e.project_type}\n        </TypographyBoxItem>\n        <TypographyBoxItem>{e.protocol}</TypographyBoxItem>\n        <Box style={{ display: 'flex', justifyContent: 'flex-end', width: 64 }}>\n          <Button\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              onDelete?.(e)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </Button>\n        </Box>\n      </BoxItem>\n    ))\n  }\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const rowClick = async (row: ImagesDatabase) => {\n    const { view, checkNext, checkPre } = await onRowClick(databasese, row)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const rowDataClick = (row: ProjectAdd) => {\n    if (!row?.image_url || !timeoutClick.current) {\n      timeoutClick.current = setTimeout(() => {\n        timeoutClick.current = undefined\n      }, 300)\n      return\n    }\n    setViewer({\n      open: true,\n      url: row.image_url,\n      jsonData: row.jsonData,\n      id: row.image_id,\n    })\n    setDisabled({ left: true, right: true })\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    if (!initDatabases) return\n    const filterValue = {\n      session_label: searchParams.get('session_label') || '',\n      datatypes_label: searchParams.get('datatypes_label') || '',\n      type: searchParams.get('type') || '',\n      protocol: searchParams.get('protocol') || '',\n    }\n    const records = onFilterValue(filterValue, initDatabases, 'tree')\n    const data = onSort(\n      JSON.parse(JSON.stringify(records)),\n      orderByValue,\n      orderKey as OrderKey,\n    )\n    setDatabases({ ...initDatabases, records: data as RecordDatabase[] })\n    setColumnSort(orderKey)\n    setOrdeBy(orderByValue)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(databasese, viewer.image, false)\n    if (imageNext) rowClick(imageNext as ImagesDatabase)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(databasese, viewer.image, true)\n    if (imagePre) rowClick(imagePre as ImagesDatabase)\n  }\n\n  const onCancle = () => {\n    if (routeGoback) {\n      navigate(`${routeGoback}&id=${idEdit}`, { state: { cancel: true } })\n      dispatch(setLoadingExpriment({ loading: false }))\n    } else {\n      navigate('/projects')\n    }\n  }\n\n  const generateName = (name: string, index: number, subject: string) => {\n    if (name === nameDefault) {\n      return `${subject} factor name ${index}`\n    }\n    return name\n  }\n\n  const getBorderDrag = (): string => {\n    if (\n      (Array.isArray(rowDrag) && rowDrag.length) ||\n      (!Array.isArray(rowDrag) && !!rowDrag)\n    ) {\n      return '1px dashed red'\n    }\n    return ''\n  }\n\n  const onOk = async () => {\n    if (errorProjectEmpty) return\n    if (\n      dataFactors.some((factor) => {\n        return (\n          !factor.name ||\n          (factor.within.length && factor.within.some((within) => !within.name))\n        )\n      })\n    ) {\n      return\n    }\n    setLoading(true)\n    const project = {\n      project_name: projectName,\n      project_type: projectType,\n    }\n    const dataset = dataFactors.map((factor, index) => ({\n      folder_name: generateName(factor.name, index, 'Between'),\n      source_image_ids: factor.data.map((d) => d.image_id),\n      sub_folders: factor.within.map((within, iWithin) => ({\n        folder_name: generateName(within.name, iWithin, 'Within'),\n        source_image_ids: within.data.map((d) => d.image_id),\n      })),\n    }))\n    if (idEdit) {\n      dispatch(\n        editProject({\n          project,\n          project_id: idEdit,\n          dataset,\n          callback: async (isSuccess: boolean) => {\n            if (isSuccess) {\n              if (nodeId) {\n                await dispatch(setLoadingExpriment({ loading: true }))\n                if (routeGoback) {\n                  navigate(`${routeGoback}&id=${idEdit}`)\n                }\n              } else {\n                onCancle()\n              }\n            }\n            dispatch(\n              setRunBtnOption({\n                runBtnOption: RUN_BTN_OPTIONS.RUN_NEW,\n                runAlreadyDisabled: true,\n              }),\n            )\n            setLoading(false)\n          },\n        }),\n        )\n      } else {\n        dispatch(\n        createProject({\n          project,\n          dataset,\n          callback: (isSuccess: boolean) => {\n            if (isSuccess) {\n              return onCancle()\n            }\n            dispatch(\n              setRunBtnOption({\n                runBtnOption: RUN_BTN_OPTIONS.RUN_NEW,\n                runAlreadyDisabled: true,\n              }),\n            )\n            setLoading(false)\n          },\n        }),\n      )\n    }\n  }\n\n  const handleClear = () => {\n    setParams('')\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDatabases.records)),\n      orderBy,\n      columnSort as OrderKey,\n    )\n    setDatabases({ ...initDatabases, records: data as RecordDatabase[] })\n  }\n\n  return (\n    <ProjectsWrapper>\n      {openFilter && (\n        <PopupSearch\n          defaultValue={{\n            session_label: searchParams.get('session_label') || '',\n            datatypes_label: searchParams.get('datatypes_label') || '',\n            type: searchParams.get('type') || '',\n            protocol: searchParams.get('protocol') || '',\n          }}\n          onFilter={onFilter}\n          onClose={() => setOpenFilter(false)}\n        />\n      )}\n      {viewer.url && viewer.open && (\n        <ImageView\n          editAttribute={false}\n          disabled={disabled}\n          url={viewer.url && `${DATABASE_URL_HOST}${viewer.url}`}\n          open={viewer.open}\n          jsonData={viewer.jsonData}\n          onClose={onCloseImageView}\n          onNext={onNext}\n          onPrevious={onPrevious}\n          id={Number(viewer.id)}\n        />\n      )}\n      {isEditName ? (\n        <Fragment>\n          <InputName\n            autoFocus\n            onBlur={() => {\n              if (errorProjectEmpty) return\n              setIsEditName(false)\n            }}\n            value={projectName}\n            onChange={onChangeName}\n            style={{\n              borderColor: errorProjectEmpty ? 'red' : '#000',\n              borderStyle: 'solid',\n            }}\n          />\n          {errorProjectEmpty && (\n            <span style={{ fontSize: 12, color: 'red' }}>\n              Project name can't empty\n            </span>\n          )}\n        </Fragment>\n      ) : (\n        <TextName onClick={() => setIsEditName(true)}>{projectName}</TextName>\n      )}\n      <BoxOptions\n        aria-labelledby=\"demo-radio-buttons-group-label\"\n        value={projectType}\n        name=\"radio-buttons-group\"\n        onChange={handleChangeLevel}\n      >\n        <Box>\n          <Box>\n            <FormControlLabel\n              value={ProjectTypeValue.FACTOR}\n              control={<Radio />}\n              label=\"Between factor\"\n              disabled={!!idEdit}\n            />\n          </Box>\n          <FormControlLabel\n            value={ProjectTypeValue.WITHIN_FACTOR}\n            control={<Radio />}\n            label=\"Between factor-within factor\"\n            disabled={!!idEdit}\n          />\n        </Box>\n      </BoxOptions>\n      <DropAndDropBox>\n        <DragBox>\n          {dataFactors.map((factor, index) => {\n            return (\n              <Fragment key={factor.id}>\n                <BoxFactor>\n                  <div>\n                    <Input\n                      error={!factor.name}\n                      onChange={(e) =>\n                        onChangeNameFactor(factor, e.target.value)\n                      }\n                      style={{ width: 'calc(100% - 64px)' }}\n                      value={generateName(factor.name, index, 'Between')}\n                    />\n                    <Button onClick={() => onDeleteFactor(factor)}>\n                      <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                    </Button>\n                    {!factor.name && (\n                      <div style={{ fontSize: 12, color: 'red' }}>\n                        Factor name can't empty\n                      </div>\n                    )}\n                  </div>\n                  {projectType === ProjectTypeValue.WITHIN_FACTOR ? (\n                    factor.within.map((within, iWithin) => (\n                      <BoxFactor key={within.id} style={{ marginLeft: 24 }}>\n                        <div>\n                          <Input\n                            error={!within.name}\n                            onChange={(e) => {\n                              const { value } = e.target\n                              onChangeNameWithinFactor(factor, within, value)\n                            }}\n                            style={{ width: 'calc(100% - 64px)' }}\n                            value={generateName(within.name, iWithin, 'Within')}\n                          />\n                          <Button\n                            onClick={() => onDeleteWithin(factor, within)}\n                          >\n                            <DeleteIcon\n                              fontSize=\"small\"\n                              sx={{ color: 'red' }}\n                            />\n                          </Button>\n                          {!within.name && (\n                            <div style={{ fontSize: 12, color: 'red' }}>\n                              Within factor name can't empty\n                            </div>\n                          )}\n                        </div>\n                        {renderData(within.data, { marginLeft: 48 }, (row) => {\n                          onDeleteDataWithin(factor, within, row)\n                        })}\n                        <BoxDrag\n                          style={{ borderBottom: getBorderDrag() }}\n                          onDrop={() => onDropData(factor, within)}\n                          onMouseOver={() => onMouseOver(factor, within)}\n                          onDragOver={onDragOver}\n                          onDragLeave={onDragLeave}\n                        />\n                      </BoxFactor>\n                    ))\n                  ) : (\n                    <>\n                      {renderData(factor.data, { marginLeft: 24 }, (row) => {\n                        onDeleteDataFactor(factor, row)\n                      })}\n                      <BoxDrag\n                        style={{ borderBottom: getBorderDrag() }}\n                        onDrop={() => onDropData(factor)}\n                        onDragOver={onDragOver}\n                        onDragLeave={onDragLeave}\n                        onMouseOver={() => onMouseOver(factor)}\n                      />\n                    </>\n                  )}\n                </BoxFactor>\n                {projectType === ProjectTypeValue.WITHIN_FACTOR &&\n                dataFactors.length ? (\n                  <NewRowButton\n                    onClick={() => onAddWithin(factor.id)}\n                    style={{ marginLeft: 24 }}\n                  >\n                    + Add Within Factor\n                  </NewRowButton>\n                ) : null}\n              </Fragment>\n            )\n          })}\n          <NewRowButton onClick={onAddBetween}>\n            + Add Between Factor\n          </NewRowButton>\n        </DragBox>\n        <DropBox>\n          <BoxFilter>\n            <Box sx={{ display: 'flex', gap: 5 }}>\n              <Button variant=\"contained\" onClick={handleClear}>\n                Clear Filter\n              </Button>\n              <ButtonFilter\n                onClick={() => setOpenFilter(true)}\n                style={{ margin: '0 26px 0 0' }}\n              >\n                Filter\n              </ButtonFilter>\n            </Box>\n          </BoxFilter>\n          <DatabaseTableComponent\n            addProject={true}\n            onSort={handleSort}\n            orderKey={columnSort}\n            orderBy={orderBy}\n            rowClick={rowClick}\n            defaultExpand\n            onBeginDrag={onBeginDrag}\n            onDrag={onDragRow}\n            onDragEnd={onDragEnd}\n            draggable\n            data={databasese.records}\n            columns={columns}\n          />\n        </DropBox>\n      </DropAndDropBox>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <ButtonFilter\n          onClick={onOk}\n          sx={{ backgroundColor: 'limegreen !important' }}\n        >\n          {idEdit ? 'Ok' : 'Add'}\n        </ButtonFilter>\n        <ButtonFilter onClick={onCancle}>Cancel</ButtonFilter>\n      </Box>\n      {loading && <Loading />}\n    </ProjectsWrapper>\n  )\n}\n\nconst TextName = styled(Typography)(({ theme }) => ({\n  textOverflow: 'ellipsis',\n  width: 'calc(40% - 16px)',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  padding: theme.spacing(1),\n  borderWidth: 1,\n  fontSize: 16,\n}))\n\nconst BoxItem = styled(Box)({\n  display: 'flex',\n  height: 40,\n  alignItems: 'center',\n  borderBottom: '1px solid rgba(0,0,0,0.8)',\n  paddingLeft: 16,\n  marginBottom: 4,\n  justifyContent: 'space-between',\n})\n\nconst TypographyBoxItem = styled(Box)({\n  minWidth: 120,\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n})\n\nconst BoxDrag = styled(Box)({\n  paddingBottom: 24,\n  width: '100%',\n  borderWidth: 1,\n})\n\nconst BoxFactor = styled(Box)({})\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: `calc(100% - ${theme.spacing(2)})`,\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(3),\n  userSelect: 'none',\n}))\n\nconst BoxOptions = styled(RadioGroup)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(1, 2),\n  display: 'flex',\n  flexDirection: 'inherit',\n}))\n\nconst InputName = styled('input')(({ theme }) => ({\n  padding: theme.spacing(1),\n  outline: 'none',\n  borderColor: 'transparent',\n  fontSize: 18,\n  width: 'calc(40% - 16px)',\n  '&:focus': {\n    borderColor: '#000',\n  },\n  display: 'block',\n  borderWidth: 1,\n}))\n\nconst DropAndDropBox = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  gap: theme.spacing(2),\n  height: 'calc(100% - 177px)',\n  overflow: 'hidden',\n}))\n\nconst DragBox = styled(Box)(({ theme }) => ({\n  width: '40%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #000',\n  minHeight: 100,\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst DropBox = styled(Box)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #dedede',\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst NewRowButton = styled(Button)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  borderStyle: 'dashed',\n  borderWidth: 1,\n  margin: theme.spacing(1, 0),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 1),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  color: '#ffffff',\n  backgroundColor: '#283237 !important',\n}))\n\nconst BoxFilter = styled(Box)({\n  display: 'flex',\n  marginBottom: 10,\n  justifyContent: 'flex-end',\n})\n\nexport default ProjectFormComponent\n","import { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { resetPassword } from \"api/auth\";\nimport Loading from \"components/common/Loading\";\nimport { useNavigate } from \"react-router-dom\";\nimport { regexEmail } from \"../AccountManager\";\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await resetPassword(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Pls check your mail!`)\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'This field is validate'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>Back to SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Workflow from './components/Project'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport AccountManager from 'pages/AccountManager'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Projects from './pages/Projects'\nimport Database from './pages/Database'\nimport Login from 'pages/Login'\nimport ProjectFormComponent from \"./pages/Projects/Create\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<Dashboard />} />\n            <Route path=\"/projects/workflow\" element={<Workflow />} />\n            <Route path=\"/account-manager\" element={<AccountManager />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            <Route path=\"/database\" element={<Database />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            <Route path=\"/account-deleted\" element={<AccountDelete />} />\n            <Route path=\"/projects/new-project\" element={<ProjectFormComponent />} />\n          </Routes>\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n  projectReducer,\n  datasetReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n  project: projectReducer,\n  dataset: datasetReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}