{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/selectors/run/RunSelectors.ts","const/API.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/FlowChart/Snakemake.tsx","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/DataContext.tsx","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/CsvPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Visualize/VisualizeItemAddButton.tsx","components/utils/MouseDragUtil.ts","components/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Visualize/FilePathSelect.tsx","components/Visualize/VisualizeItem.tsx","components/Visualize/FlexItemList.tsx","components/Visualize/Editor/GradientColorPicker.tsx","components/Visualize/Editor/SaveFig.tsx","components/Visualize/Editor/ImageItemEditor.tsx","components/Visualize/Editor/CsvItemEditor.tsx","components/Visualize/Editor/HeatmapItemEditor.tsx","components/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Visualize/Editor/RoiItemEditor.tsx","components/Visualize/Editor/ScatterItemEditor.tsx","components/Visualize/Editor/BarItemEditor.tsx","components/Visualize/VisualizeItemEditor.tsx","components/Visualize/Visualize.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/Button/DownloadButton.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/Button/DeleteButton.tsx","components/Experiment/Button/ImportButton.tsx","components/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Experiment/Experiment.tsx","components/Project.tsx","store/slice/Pipeline/PipelineHook.ts","providers/index.ts","utils/auth/index.ts","components/Header.tsx","components/utils/axios.ts","api/auth/index.ts","components/Layout.tsx","pages/Dashboard/index.tsx","components/common/Input.tsx","components/ModalDeleteAccount/index.tsx","components/Table/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","components/InputPassword/index.tsx","components/ModalChangePassword/index.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","pages/Projects/index.tsx","components/DatabaseTable.tsx","components/ImageView/ChangeSize.tsx","components/ImageView/index.tsx","utils/database/index.ts","pages/Database/index.tsx","pages/Login/index.tsx","components/SignUp/index.tsx","pages/Signup/index.tsx","pages/Projects/Create.tsx","pages/ResetPassword/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","data","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNodeById","filter","find","id","selectNodeLabelById","label","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","outputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","isEdge","edge","BASE_URL","process","runApi","a","axios","post","response","runByUidApi","pendingNodeIdList","createAsyncThunk","thunkAPI","responseData","rejectWithValue","runByCurrentUid","currentUid","getState","pollRunResult","getExperimentsApi","get","deleteExperimentByUidApi","delete","deleteExperimentByListApi","uidList","importExperimentByUidApi","downloadExperimentNwbApi","responseType","downloadExperimentConfigApi","EXPERIMENTS_SLICE_NAME","getExperiments","_","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","initialState","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","extraReducers","builder","addCase","fulfilled","nodeResultDto","outputPath","message","convertToRunResult","rejected","meta","addMatcher","isAnyOf","pending","actions","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","position","newNode","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","style","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","config","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","max","random","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","Button","endIcon","NWBSettingContents","paramKeyList","className","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","errorMessage","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","navigate","useNavigate","float","textAlign","top","right","zIndex","textTransform","useHandleColor","key","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","FileSelect","multiSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","justifyContent","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","alpha","primary","light","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","dataType","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","items","itemId","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","startIndex","selectImageItemEndIndex","endIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","offset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","transpose","selectCsvItemSetHeader","setHeader","selectCsvItemSetIndex","setIndex","selectBarItemIndex","index","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","end_index","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","row","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","DisplayDataContext","createContext","NaN","HeatMapPlot","useContext","isPending","isInitialized","selectHeatMapDataError","isFulfilled","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","columns","selectHeatMapColumns","selectHeatMapIndex","colorscale","useMemo","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","timeDataMaxIndex","maxIdx","selectRoiItemIndex","colorscaleRoi","createColormap","colormap","nshades","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","ml","PlayBack","FormControlLabel","m","control","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","idx","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","text","textposition","textfont","family","marker","title","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","CsvPlot","CsvPlotImple","PresentationalCsvPlot","csvData","col","header","headerData","field","headerName","rows","row_id","rowObj","fromEntries","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","dividers","pt","px","OutputViewer","p","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","mx","my","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","setOpen","useStatus","AlgoName","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","Popover","anchorOrigin","vertical","horizontal","FormHelperText","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","newState","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","ReactFlowComponent","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","accept","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","preventDefault","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","drawerWidth","backgroundColor","borderRight","paddingTop","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","StyledButton","borderWidth","useMouseDragHandler","onMouseDown","dependencies","onMouseMove","onMouseUp","document","addEventListener","removeEventListener","once","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","maxWidth","onOpen","VisualizeItem","isSelected","movingSize","setMovingSize","onCommitSize","onMouseDownX","downEvent","movingX","screenX","movingWidth","moveEvent","newWidth","MIN_WIDTH","onMouseDownY","movingY","screenY","movingHeight","newHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","flexDirection","ItemHeader","cursor","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","isNaN","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","flexWrap","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","SaveFig","SelectedItemIdContext","ImageItemEditor","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newLeft","newRight","LegendSelect","handleChange","drawIndexMap","Checkbox","mt","unmountOnExit","RoiItemEditor","ScatterItemEditor","BarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","selectExperiment","selectExperimentName","selectExperimentFunction","functions","ExperimentStatusIcon","NWBDownloadButton","hasNWB","ExperimentUidContext","url","setFileUrl","URL","createObjectURL","Blob","click","revokeObjectURL","href","download","ConfigDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","timeout","gutterBottom","component","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","selectExperimentFunctionHasNWB","scope","DeleteButton","isRunning","ImportButton","unwrap","then","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListValues","experimentListKeys","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","recordsIsEmpty","page","setPage","storageKey","initialValue","parseFn","savedStr","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","valueNum","rowsPerPage","setRowsPerPage","emptyRows","flexGlow","TableContainer","HeadItem","sortHandler","property","allCheckIndeterminate","allChecked","onChangeAllCheck","experiment","checkboxVisible","sort","getComparator","slice","expData","RowItem","secondary","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","visibility","indeterminate","TableSortLabel","active","direction","timestamp","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","selectExperimentHasNWB","Fragment","tableCellClasses","root","borderBottomWidth","orderBy","descendingComparator","Experiment","StyledAppBar","drawer","TabPanel","other","hidden","a11yProps","Project","useSearchParams","searchParams","runPipeline","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","centered","textColor","UserContext","setUser","useUser","saveToken","access_token","getToken","BoxDropdown","listStyleType","backgroundClip","outline","Image","BoxWrapper","gap","BoxMenu","userSelect","BoxInfo","BoxMenuItem","transform","BoxMenuItemLogout","fontWeight","TitleLogo","HeaderWrapper","Header","user","refMenu","src","alt","tabIndex","blur","onBlur","display_name","email","removeItem","axiosLibrary","baseURL","interceptors","request","use","headers","Authorization","Promise","reject","login","getMe","listUser","query","createUser","editUser","userId","put","deleteUser","ignorePaths","MenuLeft","onResize","pathname","useLocation","isClose","MenuLeftWrapper","BoxBack","ButtonBack","BoxDivider","KeyboardBackspaceIcon","LinkWrapper","to","TypographyMenu","Link","textDecoration","LayoutWrapper","ContentBodyWrapper","paddingRight","ChildrenWrapper","KeyboardBackspace","shouldForwardProp","listStyle","minHeight","lineHeight","Layout","location","setWidth","checkkAuth","token","window","DashboardWrapper","DashboardContent","TitleMenu","Dashboard","Input","ContentDelete","ButtonConfirm","BoxConfirm","ModalDeleteAccount","onSubmit","titleSubmit","description","textDelete","setTextDelete","Modal","whiteSpace","placeholder","MyPaginate","ReactPaginate","boxSizing","borderCollapse","Thead","Tr","Th","borderTopLeftRadius","borderTopRightRadius","TBody","Td","NoData","ArrowDownwardIconOrder","ArrowDownwardIcon","TableComponent","paginate","orderKey","pageCount","page_size","renderCol","dataIndex","render","iCol","nameCol","align","disableInitialCallback","marginPagesDisplayed","pageRangeDisplayed","breakLabel","previousLabel","nextLabel","TextError","wordBreak","InputError","autoComplete","SelectModal","SelectError","options","ModalComponent","onSubmitEdit","setIsOpenModal","dataEdit","regex","regexPassword","setFormData","isDisabled","setIsDisabled","password","lab","confirmPassword","errors","setErrors","setValues","validateEmail","test","validatePassword","onChangeData","pre","onBlurData","validate","errorName","errorEmail","errorLab","errorRole","errorPassword","errorConfirmPassword","errorNotMatch","alert","ModalBox","TitleModal","BoxData","LabelModal","ButtonModal","AccountManagerWrapper","BoxButton","ButtonAdd","ALink","button","AccountManager","openDelete","setOpenDelete","isOpenModal","setType","setDataEdit","idDel","setIdDel","setData","per_page","next_page_token","setPaginate","getList","nextPageToken","total_page","handleCloseDelete","onForgotPassword","onOpenModal","InputPassword","BoxTitle","FormInline","Label","ModalChangePassword","onChangeValue","validateReEnter","new_password","reEnter","confirm_password","AccountWrapper","BoxFlex","Title","TitleData","ButtonSubmit","Account","isEditName","setIsEditName","openChangePw","setOpenChangePw","handleCloseChangePw","AccountDelete","ProjectsWrapper","ProjectsTitle","Projects","idDelete","setIdDelete","created_time","updated_time","image_count","project_type","onEdit","onWorkflow","console","log","onResults","addNewProject","k","RenderColumn","recordIndex","rowClick","drags","draggable","onDrag","openChild","setOpenChild","openChildParent","setOpenChildPrent","subjects","openSubjects","setOpenSubjects","isDrag","drag","session_id","datatype_index","onDragEvent","datatypes","onDragStart","column","BoxCenter","sub","subject_index","subId","o","sessions","session","session_index","ii","images","image_index","datatype_label","subject_id","parent_id","record_index","BoxDrag","TableWrap","overflowX","DataTable","DatabaseTableComponent","onSort","setDrags","pageX","pageY","mouseMoveRect","setMouseMoveRect","timeoutClick","ctrRef","refTable","refTdSelect","mouseStart","beginDrag","setBeginDrag","onKeydownEvent","onKeyupEvent","ctrlKey","metaKey","onRowClickEvent","idDom","tds","currentTarget","getElementsByTagName","dom","innerHTML","some","onBeginDrag","onSortHandle","allowMutilKey","draggableProps","el","rowId","trNow","getBoundingClientRect","scrollY","td","Dot","TitleScale","BoxLine","ScaleWrapper","ChangeDrag","onChangeMin","onChangeMax","showInputMax","mouseDown","refDrag","refDot","getWidth","clientWidth","onTouchStart","touches","mouseInit","scale","onTouchMove","onTouchEnd","BoxLoading","ButtonClose","ButtonNext","ButtonPrevious","ImageViewWrapper","BoxContentData","WrapperJson","TextArea","borderLeft","CloseIconWrapper","CloseIcon","ArrowBackIosIconWrapper","ArrowBackIosIcon","ArrowForwardIosIconWrapper","ArrowForwardIosIcon","ImageView","onNext","onPrevious","jsonData","viewerRef","worldCoords","setWorldCoords","j","voxelCoords","setVoxelCoords","setOpacity","thresholds","setThresholds","maxThres","setMaxThres","contracts","setContracts","brightness","setBrightness","isLoadFile","setIsLoadFile","volumes","loadFile","loadFileIndex","clearVolumes","loadVolumes","nii_url","template","element_id","viewer_insert_className","overlay","complete","brainbrowser","BrainBrowser","color_map_config","VolumeViewer","start","viewer","volume","intensity_min","intensity_max","getIntensityValue","utils","isFunction","getWorldCoords","getVoxelCoords","urlColor","cursor_color","loadDefaultColorMapFromURL","setDefaultPanelSize","toPrecision","num","redrawVolumes","showInputMin","setContrast","refreshPanels","onRowClick","datas","view","image_url","attributes","image_attributes","checkNext","onGet","checkPre","isSub","indexImageNow","records","record","dataNow","subjectNow","sessionNow","datatypeNow","imagePre","datatypeImagePre","imageNext","datatypeNext","sortWithLabName","datasTable","typeOrder","sortSubjectTree","dataA","dataB","subjectsA","subA","subB","subjectsB","sortSessionTree","sessionsA","sA","sB","flat","sessionsB","subSessA","subSessB","ssA","ssB","sortDataTypeTree","ses","ss","dataTypeA","dataTypeB","typeA","typeB","sortAttributesTypeTree","newDatas","s","imageA","imageB","sortWithKey","valueA","valueB","sortWithTime","Date","recording_time","PopupSearch","onFilter","Popup","PopupInner","HeaderTitle","ButtonControl","InputSearch","defaultDatabase","pagenation","limit","total_pages","lab_name","user_name","protocol","dataImages","subject_label","session_label","datatypes_id","datatypes_label","image_id","child","DatabaseWrapper","ButtonFilter","BoxSelectTypeView","Database","openPopup","setOpenPopup","setViewer","setDatasTable","initDataTable","setInitDataTable","setOrdeBy","columnSort","setColumnSort","setDisabled","DatabaseTable","defaultExpand","orderByValue","orderbyCheck","LoginWrapper","LoginContent","FormSignUp","LabelField","LableRequired","Description","LinkWrappper","ButtonLogin","bottom","Login","errorCheck","validateSubmit","getUser","Stack","SelectWrapper","SignUp","isLogin","errorReEnter","Signup","nameDefault","TextName","BoxItem","TypographyBoxItem","BoxFactor","BoxOptions","RadioGroup","InputName","DropAndDropBox","DragBox","DropBox","NewRowButton","borderStyle","BoxFilter","ProjectFormComponent","idEdit","routeGoback","projectName","setProjectName","projectLevel","setProjectLevel","openFilter","setOpenFilter","rowDrag","setRowDrag","within","dataFactors","setDataFactors","onMouseOver","factor","onDropData","newData","project_name","w","onDragLeave","renderData","onDelete","rowDataClick","Radio","onChangeNameFactor","indexWithin","onChangeNameWithinFactor","onDeleteWithin","onDeleteDataWithin","onDrop","onDeleteDataFactor","idFactor","regexEmail","Heading","ResetPassword","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","from","Set","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","function","unique_id","convertToExperimentStatus","success","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTree","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","StrictMode","ThemeProvider","getElementById"],"mappings":"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AQ,CACN,CACE7nD,GAAI,EACJioD,UAAW,EACXuI,UAAW,gBACXC,WAAY,CACVtiD,KAAM,OACNhR,KAAM,SACN03D,SAAU,eAKlB,CACE70D,GAAI,EACJioD,UAAW,EACX/nD,MAAO,OACP2nD,OAAQ,CACN,CACE7nD,GAAI,EACJioD,UAAW,EACXuI,UAAW,iBACXC,WAAY,CACVtiD,KAAM,OACNhR,KAAM,SACN03D,SAAU,mBAS1B,CACE70D,GAAI,EACJioD,UAAW,EACX/nD,MAAO,kBACPunD,SAAU,CACR,CACEznD,GAAI,EACJioD,UAAW,EACX/nD,MAAO,WACP+mD,UAAW,CACT,CACEjnD,GAAI,EACJioD,UAAW,EACX/nD,MAAO,OACP2nD,OAAQ,CACN,CACE7nD,GAAI,EACJioD,UAAW,EACXuI,UAAW,iBACXC,WAAY,CACVtiD,KAAM,OACNhR,KAAM,SACN03D,SAAU,eAKlB,CACE70D,GAAI,EACJioD,UAAW,EACX/nD,MAAO,OACP2nD,OAAQ,CACN,CACE7nD,GAAI,EACJioD,UAAW,EACXuI,UAAW,iBACXC,WAAY,CACVtiD,KAAM,OACNhR,KAAM,UACN03D,SAAU,eAGd,CACE70D,GAAI,EACJioD,UAAW,EACXuI,UAAW,iBACXC,WAAY,CACVtiD,KAAM,OACNhR,KAAM,SACN03D,SAAU,aAGd,CACE70D,GAAI,EACJioD,UAAW,EACXuI,UAAW,iBACXC,WAAY,CACVtiD,KAAM,OACNhR,KAAM,UACN03D,SAAU,sBAU5BzP,aAAc,2BACdC,aAAc,4BAEhB,CACErlD,GAAI,EACJ20D,SAAU,WACVC,UAAW,YACXb,eAAgB,aAChBtN,SAAU,CACR,CACEzmD,GAAI,EACJioD,UAAW,EACX/nD,MAAO,eACPunD,SAAU,IAEZ,CACEznD,GAAI,EACJioD,UAAW,EACX/nD,MAAO,eACPunD,SAAU,IAEZ,CACEznD,GAAI,EACJioD,UAAW,EACX/nD,MAAO,eACPunD,SAAU,KAGdrC,aAAc,2BACdC,aAAc,8BAKdyP,GAA+B,CACnCN,WAAY,CACV7hB,KAAM,EACN8hB,MAAO,EACPrkD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","file":"static/js/main.37f5d416.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `https://internal-aa-mri.waai.io`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(data: RunPostData): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { uid, pendingNodeIdList } = data\n  const response = await axios.post(`${BASE_URL}/run/result/${uid}`, {\n    pendingNodeIdList,\n  })\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  try {\n    const responseData = await runApi(runPostData)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (currentUid != null) {\n      try {\n        const responseData = await runByUidApi(currentUid, runPostData)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  try {\n    const responseData = await runResult({ uid, pendingNodeIdList })\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { RunPostData } from 'api/run/Run'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type ExperimentDTO = {\n  function: {\n    [uid: string]: {\n      name: string\n      success: string\n      unique_id: string\n      hasNWB: boolean\n    }\n  }\n  name: string\n  success: string\n  timestamp: string\n  unique_id: string\n  hasNWB: boolean\n}\n\nexport async function getExperimentsApi(): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\n\nexport const getExperiments = createAsyncThunk<ExperimentsDTO, undefined>(\n  `${EXPERIMENTS_SLICE_NAME}/getExperiments`,\n  async (_, thunkAPI) => {\n    try {\n      const response = await getExperimentsApi()\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      }),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n      }}\n    >\n      <Button onClick={() => navigate('/projects')}>\n        <ArrowBackIosIcon />\n        Projects\n      </Button>\n      <SnakemakeButton />\n      <NWBSettingButton />\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import React from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport {\n  FILE_TREE_TYPE,\n  // FILE_TREE_TYPE_SET\n} from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\n// import { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { useNavigate } from 'react-router-dom'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    // multiSelect = false,\n    filePath,\n    // onSelectFile,\n    // onUploadFile,\n    // fileTreeType,\n    selectButtonLabel,\n    // uploadButtonLabel,\n  }) => {\n    // const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //   event.preventDefault()\n    //   if (event.target.files != null && event.target.files[0] != null) {\n    //     const file = event.target.files[0]\n    //     const formData = new FormData()\n    //     formData.append('file', file)\n    //     const fileName = file.name\n    //     onUploadFile(formData, fileName)\n    //   }\n    // }\n    const navigate = useNavigate()\n    // const inputRef = React.useRef<HTMLInputElement>(null)\n    // const onClick = () => {\n    //   if (inputRef.current != null) {\n    //     inputRef.current.click()\n    //   }\n    // }\n    // const [open, setOpen] = React.useState(false)\n    // const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: 16,\n          }}\n        >\n          <ButtonGroup\n            size=\"small\"\n            style={{ marginRight: 4, width: '90%', margin: 'auto' }}\n          >\n            <Button\n              style={{ width: '100%' }}\n              variant=\"outlined\"\n              onClick={() =>\n                navigate('/projects/new-project?id=1&back=/projects/workflow')\n              }\n            >\n              {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n            </Button>\n            {/* <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'or Upload'}\n          </Button> */}\n          </ButtonGroup>\n        </div>\n        <div>\n          {/* <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          /> */}\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n        {/* <FileSelectDialog\n          multiSelect={multiSelect}\n          initialFilePath={filePath}\n          open={open}\n          onClickOk={(path) => {\n            onSelectFile(path)\n            setOpen(false)\n          }}\n          onClickCancel={() => {\n            setOpen(false)\n          }}\n          fileType={fileTreeType}\n        /> */}\n      </div>\n    )\n  },\n)\n\n// function getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n//   switch (fileType) {\n//     case FILE_TREE_TYPE_SET.IMAGE:\n//       return '.tif,.tiff'\n//     case FILE_TREE_TYPE_SET.CSV:\n//       return '.csv'\n//     case FILE_TREE_TYPE_SET.HDF5:\n//       return '.hdf5,.nwb'\n//     default:\n//       return undefined\n//   }\n// }\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        label=\"dur[msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  FormHelperText,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\nimport Popover from '@mui/material/Popover'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { AlgorithmOutputDialog } from './AlgorithmOutputDialog'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const [open, setOpen] = React.useState(false)\n    const onCloseOutputDialog = () => {\n      setOpen(false)\n    }\n    const onClickOutputButton = () => {\n      setOpen(true)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n          <AlgorithmOutputDialog\n            nodeId={nodeId}\n            open={open}\n            onClose={onCloseOutputDialog}\n          />\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <>\n        <IconButton\n          ref={anchorElRef}\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n          size=\"small\"\n          style={{ color: theme.palette.error.main, float: 'right' }}\n        >\n          <ErrorIcon />\n        </IconButton>\n        <Popover\n          open={open}\n          anchorEl={anchorElRef.current}\n          onClose={() => setOpen(false)}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <div style={{ margin: 8 }}>\n            <FormHelperText error={true}>{errorMsg}</FormHelperText>\n          </div>\n        </Popover>\n      </>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import React, { DragEvent, MouseEvent } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <ReactFlowProvider>\n          <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n            <ReactFlow\n              ref={drop}\n              elements={flowElements}\n              onElementsRemove={onElementsRemove}\n              onConnect={onConnect}\n              onLoad={onLoad}\n              onDragOver={onDragOver}\n              onNodeDragStop={onNodeDragStop}\n              nodeTypes={reactFlowNodeTypes}\n              edgeTypes={reactFlowEdgeTypes}\n              defaultPosition={[flowPosition.x, flowPosition.y]}\n              defaultZoom={flowPosition.zoom}\n              onMoveEnd={onMoveEnd}\n            >\n              <ToolBar {...props} />\n              <Controls />\n            </ReactFlow>\n          </div>\n        </ReactFlowProvider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { Box } from '@mui/material'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer>\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n  height: '100%',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n    paddingTop: theme.spacing(1.125),\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n  backgroundColor: '#283237 !important',\n  color: '#ffffff'\n})\n","import React from 'react'\n\nexport function useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n  ) => {\n    onSelect(nodeId, filePath, dataType)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { RootState } from 'store/store'\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { useMouseDragHandler } from 'components/utils/MouseDragUtil'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            height: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: dataType,\n              prevFilePath: selectedFilePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\n\nimport {\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setSaveFileName,\n  setSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\n\nexport const SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSaveFileName({ itemId, saveFileName: event.target.value }))\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { SaveFig } from './SaveFig'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (filePath !== null) {\n        dispatch(\n          getImageData({\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { SaveFig } from './SaveFig'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <SaveFig />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/common/Accordion'\n\nimport { SaveFig } from './SaveFig'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            label=\"left\"\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          <TextField\n            label=\"right\"\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const BarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { drawerWidth } from 'components/FlowChart/FlowChart'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\nimport { Box } from '@mui/material'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <StyledDrawer>\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </StyledDrawer>\n      <MainContents>\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')(({ theme }) => ({\n  height: '100%',\n  width: '100%',\n}))\n\nexport default Visualize\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n  nodeId?: string\n  hasNWB: boolean\n}>(({ name, nodeId, hasNWB }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentNwbApi(uid, nodeId)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick} color=\"primary\" disabled={!hasNWB}>\n        <GetAppIcon />\n      </IconButton>\n      <a href={url} download={`${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const ConfigDownloadButton = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`config.yaml`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionHasNWB,\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  const hasNWB = useSelector(selectExperimentFunctionHasNWB(uid, nodeId))\n\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} nodeId={nodeId} hasNWB={hasNWB} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineIsStartedSuccess,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const isRunning = useSelector((state: RootState) => {\n    const currentUid = selectPipelineLatestUid(state)\n    const isPending = selectPipelineIsStartedSuccess(state)\n    return uid === currentUid && isPending\n  })\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen} disabled={isRunning} color=\"error\">\n        <DeleteOutlineIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { importExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\n\nexport const ImportButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    dispatch(importExperimentByUid(uid))\n      .unwrap()\n      .then(() =>\n        enqueueSnackbar('Successfully imported.', { variant: 'success' }),\n      )\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Checkbox from '@mui/material/Checkbox'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n  selectExperimentHasNWB,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  ConfigDownloadButton,\n} from './Button/DownloadButton'\nimport { ImportButton } from './Button/ImportButton'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'studio_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListValues = Object.values(experimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n\n  const onChangeAllCheck = (checked: boolean) => {\n    if (checked) {\n      setCheckedList(experimentListValues.map((experiment) => experiment.uid))\n    } else {\n      setCheckedList([])\n    }\n  }\n\n  const recordsIsEmpty = experimentListKeys.length === 0\n\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  const [page, setPage] = React.useState(0)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const [rowsPerPage, setRowsPerPage] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const newValue = parseInt(event.target.value, 10)\n    setRowsPerPage(newValue)\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        {!recordsIsEmpty && (\n          <Typography sx={{ flexGrow: 1, m: 1 }}>\n            {checkedList.length} selected\n          </Typography>\n        )}\n        <Button\n          sx={{\n            margin: (theme) => theme.spacing(0, 1, 1, 0),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          color=\"error\"\n          endIcon={<DeleteIcon />}\n          onClick={onClickDelete}\n          disabled={checkedList.length === 0}\n        >\n          Delete\n        </Button>\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Paper\n        elevation={0}\n        variant=\"outlined\"\n        sx={{\n          flexGlow: 1,\n          height: '100%',\n        }}\n      >\n        <TableContainer component={Paper} elevation={0}>\n          <Table aria-label=\"collapsible table\">\n            <HeadItem\n              order={order}\n              sortHandler={sortHandler}\n              allCheckIndeterminate={\n                checkedList.length !== 0 &&\n                checkedList.length !== Object.keys(experimentList).length\n              }\n              allChecked={\n                checkedList.length === Object.keys(experimentList).length\n              }\n              onChangeAllCheck={onChangeAllCheck}\n              checkboxVisible={!recordsIsEmpty}\n            />\n            <TableBody>\n              {experimentListValues\n                .sort(getComparator(order, sortTarget))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((expData) => (\n                  <ExperimentUidContext.Provider\n                    value={expData.uid}\n                    key={expData.uid}\n                  >\n                    <RowItem\n                      onCheckBoxClick={onCheckBoxClick}\n                      checked={checkedList.includes(expData.uid)}\n                    />\n                  </ExperimentUidContext.Provider>\n                ))}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={10} />\n                </TableRow>\n              )}\n              {recordsIsEmpty && (\n                <TableRow>\n                  <TableCell colSpan={10}>\n                    <Typography\n                      sx={{\n                        color: (theme) => theme.palette.text.secondary,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '300px',\n                        textAlign: 'center',\n                      }}\n                      variant=\"h6\"\n                    >\n                      No Rows...\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={experimentListKeys.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n  allChecked: boolean\n  onChangeAllCheck: (checked: boolean) => void\n  allCheckIndeterminate: boolean\n  checkboxVisible: boolean\n}>(\n  ({\n    order,\n    sortHandler,\n    allChecked,\n    onChangeAllCheck,\n    allCheckIndeterminate,\n    checkboxVisible,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              sx={{ visibility: checkboxVisible ? 'visible' : 'hidden' }}\n              checked={allChecked}\n              indeterminate={allCheckIndeterminate}\n              onChange={(e) => onChangeAllCheck(e.target.checked)}\n            />\n          </TableCell>\n          <TableCell />\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('timestamp')}\n            >\n              Timestamp\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('uid')}\n            >\n              ID\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('name')}\n            >\n              Name\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>Success</TableCell>\n          <TableCell>Reproduce</TableCell>\n          <TableCell>SnakeFile</TableCell>\n          <TableCell>NWB</TableCell>\n          <TableCell>Delete</TableCell>\n        </TableRow>\n      </TableHead>\n    )\n  },\n)\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n  checked: boolean\n}>(({ onCheckBoxClick, checked }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const hasNWB = useSelector(selectExperimentHasNWB(uid))\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox onChange={() => onCheckBoxClick(uid)} checked={checked} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell>{name}</TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportButton />\n        </TableCell>\n        <TableCell>\n          <ConfigDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} hasNWB={hasNWB} />\n        </TableCell>\n        <TableCell>\n          <DeleteButton />\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex', height: 'calc(100% - 58px)' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100%',\n          padding: 16,\n        }}\n      >\n        <MuiToolbar />\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import React from 'react'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport Tooltip from '@mui/material/Tooltip'\nimport { styled } from '@mui/material/styles'\nimport GitHubIcon from '@mui/icons-material/GitHub'\nimport MenuBookIcon from '@mui/icons-material/MenuBook'\n\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport FlowChart from './FlowChart/FlowChart'\nimport Visualize from './Visualize/Visualize'\nimport Experiment from './Experiment/Experiment'\nimport { Box } from '@mui/material'\nimport { useSearchParams } from 'react-router-dom'\n// import studioLogo from './studio.png'\n\nconst Project: React.FC = () => {\n  const [searchParams] = useSearchParams()\n  const [value, setValue] = React.useState(Number(searchParams.get('tab') || 0))\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n\n  return (\n    <RootDiv>\n      <StyledAppBar color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          {/* <img src={studioLogo} alt=\"studio\" width={75} height={50} /> */}\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Visualize\" {...a11yProps(1)} />\n            <Tab label=\"Record\" {...a11yProps(2)} />\n          </Tabs>\n          <Tooltip title=\"GitHub repository\">\n            <IconButton\n              sx={{ mr: 1 }}\n              href=\"https://github.com/oist/studio\"\n              target=\"_blank\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Documentation\">\n            <IconButton\n              href=\"https://studio.readthedocs.io/en/latest/\"\n              target=\"_blank\"\n            >\n              <MenuBookIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\nconst StyledAppBar = styled(Box)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Project\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n      }\n      setPrevStatus(status)\n    }\n  }, [status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import { createContext, useContext } from 'react'\n\nexport type User = {\n  created_time: null | string\n  display_name: null | string\n  email: string\n  last_login_time: null | string\n  role: string\n  uid: string\n}\n\nexport const UserContext = createContext<{\n  user?: User\n  setUser: Function\n}>({ setUser: () => null })\n\nexport const useUser = () => useContext(UserContext)\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useRef, useState } from 'react'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { useUser } from 'providers'\nimport { removeToken } from 'utils/auth'\nimport { useNavigate } from 'react-router-dom'\n\nconst Header: FC = () => {\n  const [open, setOpen] = useState(false)\n  const navigate = useNavigate()\n  const { user } = useUser()\n\n  const refMenu = useRef<HTMLDivElement | null>(null)\n\n  const closeMenu = () => {\n    setTimeout(() => {\n      setOpen(false)\n    }, 100)\n  }\n\n  const onClick = () => {\n    if (open) {\n      return refMenu.current?.blur?.()\n    }\n    setOpen(true)\n  }\n\n  const onLogout = () => {\n    removeToken()\n    navigate('/login')\n  }\n\n  const onNavigateAccount = () => {\n    navigate('/account')\n  }\n\n  return (\n    <HeaderWrapper>\n      <BoxWrapper>\n        <Image src=\"/static/favicon.ico\" alt=\"logo\" />\n        <TitleLogo>Studio</TitleLogo>\n      </BoxWrapper>\n      <BoxMenu ref={refMenu} tabIndex={1} onClick={onClick} onBlur={closeMenu}>\n        <AccountCircleIcon />\n        {open && (\n          <BoxDropdown>\n            <BoxInfo>\n              <AccountCircleIcon />\n              <Box>\n                <Typography>{user?.display_name}</Typography>\n                <Typography>{user?.email}</Typography>\n              </Box>\n            </BoxInfo>\n            <BoxMenuItem onClick={onNavigateAccount}>\n              <PortraitIcon /> Account Profile\n            </BoxMenuItem>\n            <BoxMenuItemLogout onClick={onLogout}>\n              SIGN OUT\n            </BoxMenuItemLogout>\n          </BoxDropdown>\n        )}\n      </BoxMenu>\n    </HeaderWrapper>\n  )\n}\n\nconst BoxDropdown = styled(Box)({\n  position: 'absolute',\n  backgroundColor: '#ffffff',\n  padding: '8px 16px 0',\n  top: 30,\n  right: 0,\n  listStyleType: 'none',\n  backgroundClip: 'padding-box',\n  borderRadius: 3,\n  outline: 'none',\n  boxShadow:\n    '0 6px 16px 0 rgb(0 0 0 / 8%), 0 3px 6px -4px rgb(0 0 0 / 12%), 0 9px 28px 8px rgb(0 0 0 / 5%)',\n  cursor: 'default',\n  zIndex: 1,\n  minWidth: 250,\n})\n\nconst Image = styled('img')({\n  height: 46,\n})\n\nconst BoxWrapper = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 8,\n})\n\nconst BoxMenu = styled(BoxWrapper)({\n  cursor: 'pointer',\n  position: 'relative',\n  userSelect: 'none',\n})\n\nconst BoxInfo = styled(BoxWrapper)({\n  borderBottom: `1px solid #e7e7e7`,\n  padding: '8px 0',\n  cursor: 'default',\n})\n\nconst BoxMenuItem = styled(BoxWrapper)({\n  padding: '8px 0',\n  cursor: 'pointer',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.05) translateX(5px)',\n  },\n})\n\nconst BoxMenuItemLogout = styled(BoxMenuItem)({\n  color: '#1a73e8',\n  fontWeight: 600,\n  marginTop: 30,\n  justifyContent: 'flex-end',\n  '&:hover': {\n    transform: 'scale(1.02)',\n  },\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nconst HeaderWrapper = styled(Box)({\n  height: 48,\n  backgroundColor: '#E1DEDB',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  color: 'rgba(0, 0, 0, 0.87)',\n  boxShadow:\n    '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n  position: 'fixed',\n  width: 'calc(100% - 32px)',\n  padding: '0 16px',\n  zIndex: 9999,\n})\n\nexport default Header\n","import axiosLibrary from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { getToken } from 'utils/auth'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\n\nexport default axios","import axios from 'components/utils/axios'\n\nexport const login = async (data: { email: string; password: string }) => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const getMe = async () => {\n  const response = await axios.get('/auth/me')\n  return response.data\n}\n\nexport const listUser = async (query?: any) => {\n  const response = await axios.get('/admin/user', { params: query })\n  return response.data\n}\n\nexport const createUser = async (data: any) => {\n  const response = await axios.post(`/admin/user`, data)\n  return response.data\n}\n\nexport const editUser = async (userId: string | number, data: any) => {\n  const response = await axios.put(`/admin/user/${userId}`, data)\n  return response.data\n}\n\nexport const deleteUser = async (userId: string | number) => {\n  const response = await axios.delete(`/admin/user/${userId}`)\n  return response.data\n}\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useEffect, useState } from 'react'\nimport { drawerWidth } from './FlowChart/FlowChart'\nimport Header from './Header'\nimport { KeyboardBackspace } from '@mui/icons-material'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { UserContext, useUser } from 'providers'\nimport { getToken } from 'utils/auth'\nimport { getMe } from 'api/auth'\n\nconst ignorePaths = ['/login', '/account-delete', '/reset-password']\n\nconst Layout: FC = ({ children }) => {\n  const [user, setUser] = useState()\n  const location = useLocation()\n  const [width, setWidth] = useState(drawerWidth)\n  const navigate = useNavigate()\n\n  const onResize = () => {\n    setWidth(width === drawerWidth ? 54 : drawerWidth)\n  }\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname])\n\n  const checkkAuth = async () => {\n    if (user) return\n    const token = getToken()\n    try {\n      if (token) {\n        const data = await getMe()\n        setUser(data)\n        if (\n          ['/login', '/signup', '/reset-password'].includes(\n            window.location.pathname,\n          )\n        ) {\n          navigate('/')\n        }\n        return\n      }\n      if (\n        // !auth.currentUser &&\n        !['/login', '/signup', '/reset-password'].includes(\n          window.location.pathname,\n        )\n      ) {\n        navigate('/login')\n      }\n    } catch {\n      navigate('/login')\n    }\n  }\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <LayoutWrapper>\n        {ignorePaths.includes(location.pathname) ? null : <Header />}\n        <ContentBodyWrapper>\n          {ignorePaths.includes(location.pathname) ? null : (\n            <MenuLeft onResize={onResize} width={width} />\n          )}\n          <ChildrenWrapper\n            style={{\n              width: `calc(100% - ${\n                ignorePaths.includes(location.pathname) ? 0 : width + 10\n              }px)`,\n              height: '100%',\n              overflow: 'auto',\n            }}\n          >\n            {children}\n          </ChildrenWrapper>\n        </ContentBodyWrapper>\n      </LayoutWrapper>\n    </UserContext.Provider>\n  )\n}\n\nconst MenuLeft: FC<{ onResize: any; width: number }> = ({\n  onResize,\n  width,\n}) => {\n  const { user } = useUser()\n  const { pathname } = useLocation()\n  const isClose = width !== drawerWidth\n  return (\n    <MenuLeftWrapper style={{ width, minWidth: width }}>\n      <BoxBack>\n        <ButtonBack\n          onClick={onResize}\n          style={{ transform: `rotate(${width === drawerWidth ? 0 : 180}deg)` }}\n        >\n          <BoxDivider />\n          <KeyboardBackspaceIcon />\n        </ButtonBack>\n      </BoxBack>\n      <MenuList>\n        <LinkWrapper to=\"/\">\n          <MenuItem isClose={isClose} active={pathname === '/'}>\n            <HomeIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Dashboard\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/database\">\n          <MenuItem isClose={isClose} active={pathname === '/database'}>\n            <StorageIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Database\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/projects\">\n          <MenuItem isClose={isClose} active={pathname.includes('/projects')}>\n            <SourceIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Projects\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        {user?.role === 'ADMIN' ? (\n          <LinkWrapper to=\"/account-manager\">\n            <MenuItem\n              isClose={isClose}\n              active={pathname === '/account-manager'}\n            >\n              <GroupIcon />\n              <TypographyMenu\n                style={{ opacity: Number(width === drawerWidth) }}\n              >\n                Account Manager\n              </TypographyMenu>\n            </MenuItem>\n          </LinkWrapper>\n        ) : null}\n      </MenuList>\n    </MenuLeftWrapper>\n  )\n}\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: 48,\n  height: 'calc(100% - 48px)',\n  paddingRight: 10,\n  overflow: 'hidden',\n}))\n\nconst ChildrenWrapper = styled(Box)(() => ({\n  height: 'calc(100% - 10px)',\n  display: 'flex',\n  paddingTop: 10,\n  paddingLeft: 10,\n}))\n\nconst MenuLeftWrapper = styled(Box)({\n  height: '100%',\n  backgroundColor: '#283237',\n  overflow: 'auto',\n  transition: 'all 0.3s',\n})\n\nconst BoxBack = styled(Box)({\n  width: '100%',\n  height: 54,\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonBack = styled(Box)({\n  height: 54,\n  width: 54,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n})\n\nconst BoxDivider = styled(Box)({\n  height: 15,\n  width: 1,\n  backgroundColor: '#ffffff',\n  marginRight: -2,\n})\n\nconst KeyboardBackspaceIcon = styled(KeyboardBackspace)({\n  color: '#ffffff',\n  fontSize: 20,\n})\n\nconst MenuList = styled('ul')({\n  margin: 0,\n  padding: 0,\n})\n\nconst MenuItem = styled('li', {\n  shouldForwardProp: (props) => props !== 'isClose' && props !== 'active',\n})<{ isClose: boolean; active: boolean }>(({ isClose, active }) => ({\n  padding: '0 15px',\n  color: '#ffffff',\n  listStyle: 'none',\n  height: 38,\n  minHeight: 38,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  width: 'calc(100% - 30px)',\n  minWidth: 'max-content',\n  transition: 'all 0.3s',\n  cursor: 'pointer',\n  backgroundColor: active ? 'rgba(255,255,255,0.4) !important' : 'transparent',\n  '&:hover': {\n    transform: isClose\n      ? 'scale(1.05) translateX(2px)'\n      : 'scale(1.05) translateX(10px)',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n  },\n}))\n\nconst TypographyMenu = styled(Typography)({\n  lineHeight: '20px',\n  marginTop: 4,\n  fontWeight: 500,\n  transition: 'opacity 0.3s',\n})\n\nexport default Layout\n","import { Box, styled, Typography } from '@mui/material'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { Link } from 'react-router-dom'\nimport { useUser } from 'providers'\n\nconst Dashboard = () => {\n  const { user } = useUser()\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/database\">\n            <BoxMenu>\n              <Box>\n                <SourceIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/projects\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Projects</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/account\">\n            <BoxMenu>\n              <Box>\n                <AccountCircleIcon fontSize=\"large\" />\n                <TitleMenu>Account</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {user?.role === 'ADMIN' ? (\n            <LinkWrapper to=\"/account-manager\">\n              <BoxMenu>\n                <Box>\n                  <GroupIcon fontSize=\"large\" />\n                  <TitleMenu>Account Manager</TitleMenu>\n                </Box>\n              </BoxMenu>\n            </LinkWrapper>\n          ) : null}\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { styled } from '@mui/material'\n\nexport const Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description?: string\n}\nconst ModalDeleteAccount: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <Typography style={{ whiteSpace: 'pre-wrap' }}>\n          {description || 'Delete account will erase all of your data.'}This\n          operation cannot be undone. To continue, type \"\n          <span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n        </Typography>\n        <BoxConfirm>\n          <Input\n            placeholder=\"DELETE\"\n            value={textDelete}\n            onChange={(e) => setTextDelete(e.target.value)}\n          />\n          <ButtonConfirm onClick={onConfirm}>{titleSubmit}</ButtonConfirm>\n        </BoxConfirm>\n        <Button onClick={onClose}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default ModalDeleteAccount\n","import { Box, styled, Typography } from '@mui/material'\nimport { FC, useCallback } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\n\ntype Column = {\n  width?: number | string\n  title: string\n  dataIndex?: string\n  name?: string\n  align?: string\n  filter?: boolean\n  render?: (\n    item?: any,\n    value?: any,\n    index?: number,\n  ) => JSX.Element | null | undefined\n}\n\ntype TableComponentProps = {\n  data?: any[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  className?: string\n  columns?: Column[]\n  paginate?: {\n    page: number\n    total: number\n    page_size: number\n    breakLabel?: string\n    nextLabel?: string\n    previousLabel?: string\n    pageRangeDisplayed?: number\n    renderOnZeroPageCount?: string\n    onPageChange?: (selectedItem: { selected: number }) => any\n  }\n}\n\nconst TableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    data = [],\n    columns = [],\n    paginate,\n    className,\n    orderBy,\n    orderKey,\n  } = props\n  const pageCount = (paginate?.total || 0) / (paginate?.page_size || 1)\n\n  const renderCol = useCallback((col: Column, item: any, index: number) => {\n    const value = item[col.name || col.dataIndex || '']\n    if (col.render) return col.render(item, value, index)\n    return value || null\n  }, [])\n\n  return (\n    <Box className={className}>\n      <Table>\n        <Thead>\n          <Tr>\n            {columns.map((col, iCol) => {\n              const nameCol = col.name || col.dataIndex || ''\n              return (\n                <Th\n                  style={{ width: col.width, textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {col.title}\n                  <ArrowDownwardIconOrder\n                    style={{\n                      transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                      opacity:\n                        orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                  />\n                </Th>\n              )\n            })}\n          </Tr>\n        </Thead>\n        <TBody>\n          {data.map((item, index) => (\n            <Tr key={item.id || index}>\n              {columns.map((col, iCol) => (\n                <Td\n                  style={{ textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {renderCol(col, item, index)}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n        </TBody>\n      </Table>\n      {!data.length ? <NoData>No Data</NoData> : null}\n      {pageCount ? (\n        <MyPaginate\n          disableInitialCallback\n          marginPagesDisplayed={3}\n          pageRangeDisplayed={3}\n          breakLabel={'...'}\n          pageCount={pageCount}\n          previousLabel={<KeyboardArrowLeftIcon />}\n          nextLabel={<ChevronRightIcon />}\n          {...paginate}\n        />\n      ) : null}\n    </Box>\n  )\n}\n\nconst MyPaginate = styled(ReactPaginate)<any>`\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  list-style-type: none;\n  padding: 1rem 0;\n  li a {\n    padding: 0.6rem 1rem;\n    cursor: pointer;\n  }\n  li.previous,\n  li.next {\n    margin-top: -2px;\n  }\n  li.previous.disabled,\n  li.next.disabled {\n    opacity: 0.4;\n  }\n  li.previous a,\n  li.next a,\n  li.break a {\n    border-color: transparent;\n  }\n  li.active a {\n    background-color: #0366d6;\n    border-color: transparent;\n    color: white;\n    min-width: 32px;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n  li.selected {\n    color: #1677ff;\n    font-weight: 600;\n  }\n`\n\nconst Table = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  width: 118,\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nexport default TableComponent\n","import {InputProps, styled, Typography} from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n    errorMessage: string,\n    value?: string\n}\n\nconst InputError = ({ errorMessage, onChange, value, type, onBlur} :InputErrorProps) => {\n    return (\n        <>\n            <Input\n                autoComplete= \"Off\"\n                error={!!errorMessage}\n                onChange={onChange}\n                value={value}\n                type={type}\n                onBlur={onBlur}\n            />\n            <TextError>{errorMessage}</TextError>\n        </>\n    )\n}\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 15,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    minHeight: 18,\n    color: 'red',\n    lineHeight: '14px',\n    margin: \"-14px 0px 0px 305px\",\n    wordBreak: 'break-word',\n})\n\nexport default InputError;","import {MenuItem, Select, styled, Typography} from \"@mui/material\";\nimport React from \"react\";\n\nconst SelectError = ({value, onChange, onBlur, errorMessage, options }: any) => {\n    return (\n        <>\n            <SelectModal\n                value={value}\n                onChange = {onChange}\n                onBlur = {onBlur}\n                error={!!errorMessage}\n            >\n                {\n                    options.map((item: string) => {\n                        return (\n                            <MenuItem key={item} value={item}>{item}</MenuItem>\n                        )\n                    })\n                }\n            </SelectModal>\n            <TextError>{errorMessage}</TextError>\n        </>\n    )\n}\n\nconst SelectModal = styled(Select, {\n    shouldForwardProp : (props) => props !== 'error',\n})<{error: boolean}>(({theme,error })=>({\n    width : 272,\n    marginBottom : '15px',\n    border : '1px solid #d9d9d9',\n    borderColor: error ? 'red' : '#d9d9d9',\n    borderRadius : 4\n}))\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    minHeight: 18,\n    color: 'red',\n    lineHeight: '14px',\n    margin: \"-14px 0px 0px 305px\",\n    wordBreak: 'break-word',\n})\nexport default SelectError;","import { Box, Button, styled } from '@mui/material'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport TableComponent from 'components/Table'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InputError from '../../components/common/InputError'\nimport SelectError from '../../components/common/SelectError'\nimport { createUser, deleteUser, editUser, listUser } from 'api/auth'\nimport { useUser } from 'providers'\n\nconst ModalComponent = ({\n  onSubmitEdit,\n  setIsOpenModal,\n  type,\n  dataEdit,\n}: any) => {\n  const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/\n  const regexPassword = /^(?=.*\\d)(?=.*[@$!%*#?&])(?=.*[a-zA-Z]).{6,100}$/\n  const [formData, setFormData] = useState(type !== 'Add' ? dataEdit : {})\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n    role: '',\n    lab: '',\n    display_name: '',\n    confirmPassword: '',\n  })\n  const [values, setValues] = useState<{ [key: string]: string }>(\n    dataEdit || {\n      email: '',\n      password: '',\n      role: '',\n      lab: '',\n      display_name: '',\n      confirmPassword: '',\n    },\n  )\n  const validateEmail = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regex.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return ''\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    return ''\n  }\n\n  const onChangeData = useCallback(\n    (e: any, type: string) => {\n      setFormData({ ...formData, [type]: e.target.value })\n      const { value } = e.target\n      setValues((pre) => ({ ...pre, [type]: value }))\n    },\n    [formData],\n  )\n  const onBlurData = useCallback(\n    (e: any, type: string, validate?: Function) => {\n      const { value } = e.target\n      setValues((pre) => ({ ...pre, [type]: value }))\n      setErrors((pre) => ({\n        ...pre,\n        [type]:\n          value === ''\n            ? 'This field is required'\n            : validate?.(value),\n      }))\n    },\n    [],\n  )\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const errorName = values.display_name === '' || !formData.hasOwnProperty('display_name')\n        ? 'This field is required'\n        : ''\n    const errorEmail = validateEmail(values.email)\n    const errorLab = values.lab === '' || !formData.hasOwnProperty('lab')\n        ? 'This field is required'\n        : ''\n    const errorRole = values.role === '' || !formData.hasOwnProperty('role')\n        ? 'This field is required'\n        : ''\n    const errorPassword = values.password === '' ? 'This field is required' : validatePassword(values.password)\n    const errorConfirmPassword = !values.password && !values.confirmPassword && type === 'Add' ? 'This field is required' : validatePassword(values.confirmPassword)\n    const errorNotMatch =\n        formData.password === formData.confirmPassword ? ''\n            : 'password is not match'\n    if (errorEmail || errorPassword || errorConfirmPassword || errorNotMatch || errorName || errorRole || errorLab) {\n      setErrors({\n        email: errorEmail,\n        password: errorPassword,\n        confirmPassword:\n          errorConfirmPassword === '' ? errorNotMatch : errorConfirmPassword,\n        display_name: errorName,\n        lab: errorLab,\n        role: errorRole,\n      })\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit.uid, formData)\n      setIsDisabled(false)\n      if(type === 'Add') {\n        alert('Your account has been created successfully!')\n      }\n    }\n    catch {\n      setIsDisabled(false)\n      if(type === 'Add') {\n        alert('Your account creation failed!')\n      }\n    }\n    setIsOpenModal(false)\n  }\n  const onCancel = () => {\n    setIsOpenModal(false)\n  }\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{type} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Lab: </LabelModal>\n          <InputError\n            value={formData?.lab || ''}\n            onChange={(e: any) => onChangeData(e, 'lab')}\n            onBlur={(e: any) => onBlurData(e, 'lab')}\n            errorMessage={errors.lab}\n          />\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            value={formData?.display_name || ''}\n            onChange={(e: any) => onChangeData(e, 'display_name')}\n            onBlur={(e: any) => onBlurData(e, 'display_name')}\n            errorMessage={errors.display_name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role || ''}\n            options={['ADMIN', 'RESEARCHER', 'MANAGER']}\n            onChange={(e: any) => onChangeData(e, 'role')}\n            onBlur={(e: any) => onBlurData(e, 'role')}\n            errorMessage={errors.role}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            value={formData?.email || ''}\n            onChange={(e: any) => onChangeData(e, 'email')}\n            onBlur={(e: any) => onBlurData(e, 'email', validateEmail)}\n            errorMessage={errors.email}\n          />\n          {type === 'Add' ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                value={formData?.password || ''}\n                onChange={(e: any) => onChangeData(e, 'password')}\n                onBlur={(e: any) => onBlurData(e, 'password', validatePassword)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                value={formData?.confirmPassword || ''}\n                onChange={(e: any) => onChangeData(e, 'confirmPassword')}\n                onBlur={(e: any) =>\n                  onBlurData(e, 'confirmPassword', validatePassword)\n                }\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button disabled = {isDisabled} onClick={(e) => onSubmit(e)}>Ok</Button>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n        </ButtonModal>\n      </ModalBox>\n    </Modal>\n  )\n}\nconst AccountManager = () => {\n  const [openDelete, setOpenDelete] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [type, setType] = useState<string>('')\n  const [dataEdit, setDataEdit] = useState({})\n  const [idDel, setIdDel] = useState<string | undefined>()\n  const [data, setData] = useState<any[]>([])\n  const [paginate, setPaginate] = useState({\n    total: 0,\n    per_page: 10,\n    page: -1,\n    next_page_token: [],\n  })\n  const { user } = useUser()\n\n  useEffect(() => {\n    getList()\n    //eslint-disable-next-line\n  }, [])\n\n  const getList = async (page: number = 0) => {\n    const query: { [key: string]: string | number } = {\n      offset: paginate.per_page * page,\n    }\n    if (paginate.next_page_token[page - 1]) {\n      query.next_page_token = paginate.next_page_token[page - 1]\n    }\n    const data = await listUser(query)\n    const nextPageToken: string[] = paginate.next_page_token\n    if (page > paginate.page) {\n      nextPageToken.push(data.next_page_token)\n    }\n    setData(data.data)\n    setPaginate((pre) => ({\n      ...pre,\n      total: data.total_page * paginate.per_page,\n      next_page_token: nextPageToken as any,\n      page,\n    }))\n  }\n\n  const onOpenModal = (type: string) => {\n    setIsOpenModal(true)\n    setType(type)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = (id: string) => {\n    setIdDel(id)\n    setOpenDelete(true)\n  }\n\n  const onForgotPassword = (data: any) => {\n    //todo call api\n    setDataEdit(data)\n    setIsOpenModal(true)\n    setType('Edit')\n  }\n\n  const onDelete = () => {\n    if (idDel === undefined) return\n    deleteUser(idDel).then(() => {\n      handleCloseDelete()\n      setIdDel(undefined)\n      setOpenDelete(false)\n      getList()\n    })\n  }\n\n  const onSubmitEdit = async (\n    id: number | string,\n    data: { [key: string]: string },\n  ) => {\n    if (id !== undefined) {\n      await editUser(id, data)\n    } else {\n      await createUser(data)\n    }\n    await getList(id !== undefined ? paginate.page : 0)\n    return undefined\n  }\n\n  const columns = useMemo(\n    () => [\n      { title: 'Lab', name: 'lab' },\n      { title: 'Name', name: 'display_name' },\n      { title: 'Role', name: 'role' },\n      { title: 'Mail', name: 'email' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data: any) => {\n          if (data.uid === user?.uid) return null\n          return (\n            <>\n              <ALink\n                sx={{ color: 'red' }}\n                onClick={() => onForgotPassword(data)}\n              >\n                <EditIcon sx={{ color: 'black' }} />\n              </ALink>\n              <ALink\n                sx={{ ml: 1.25 }}\n                onClick={() => onConfirmDelete(data.uid)}\n              >\n                <DeleteIcon sx={{ color: 'red' }} />\n              </ALink>\n            </>\n          )\n        },\n      },\n    ],\n    [user?.uid],\n  )\n\n  if (user?.role !== 'ADMIN') {\n    return null\n  }\n\n  return (\n    <AccountManagerWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Account Manager</h1>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <BoxButton>\n        <ButtonAdd onClick={() => onOpenModal('Add')} variant=\"contained\">\n          Add\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{\n          total: paginate.total,\n          page: paginate.page,\n          page_size: paginate.per_page,\n          onPageChange: ({ selected }) => {\n            getList(selected)\n          },\n        }}\n        data={data}\n        columns={columns}\n      />\n      {isOpenModal ? (\n        <ModalComponent\n          data={data}\n          onSubmitEdit={onSubmitEdit}\n          type={type}\n          setIsOpenModal={setIsOpenModal}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst BoxButton = styled(Box)({\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  width: 100,\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  height: 550,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\nconst InputPassword: FC<any> = (props) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...props} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{props.error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport InputPassword from 'components/InputPassword'\nimport { ChangeEvent, FC, useState } from 'react'\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n}\n\nconst regexPassword = /^(?=.*\\d)(?=.*[@$!%*#?&])(?=.*[a-zA-Z]).{6,100}$/\n\nconst ModalChangePassword: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, password } = values\n    if (reEnter && reEnter !== password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e: any) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e: any) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e: any) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={onSubmit}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onClose}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ModalChangePassword\n","import { Box, Button, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport ModalChangePassword from 'components/ModalChangePassword'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { useUser } from 'providers'\nimport { useState } from 'react'\n\nconst Account = () => {\n  const { user } = useUser()\n  const [isEditName, setIsEditName] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [openChangePw, setOpenChangePw] = useState(false)\n\n  const onEditName = () => {\n    setIsEditName(false)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = () => {\n    setOpenDelete(true)\n  }\n\n  const onDelete = () => {\n    //todo call api\n    handleCloseDelete()\n  }\n\n  const handleCloseChangePw = () => {\n    setOpenChangePw(false)\n  }\n\n  const onConfirmChangePw = () => {\n    setOpenChangePw(true)\n  }\n\n  const onChangePw = () => {\n    //todo call api\n    handleCloseChangePw()\n  }\n\n  return (\n    <AccountWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ModalChangePassword\n        onSubmit={onChangePw}\n        open={openChangePw}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData sx={{ marginTop: isEditName ? -2 : 0 }}>Full name</TitleData>\n        <BoxData>\n          {isEditName ? (\n            <Input\n              autoFocus\n              defaultValue={user?.display_name || ''}\n              onBlur={onEditName}\n              placeholder=\"Full name\"\n            />\n          ) : (\n            <>\n              {user?.display_name || \"--\"}\n              <Button sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n                Edit\n              </Button>\n            </>\n          )}\n        </BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{user?.role}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10 }}>\n        <ButtonSubmit onClick={onConfirmChangePw}>Change Password</ButtonSubmit>\n        <ButtonSubmit onClick={onConfirmDelete}>Delete Account</ButtonSubmit>\n      </BoxFlex>\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n})\n\nconst ButtonSubmit = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import { Box, Button, styled } from '@mui/material'\nimport { useCallback, useMemo, useState } from 'react'\nimport TableComponent from '../../components/Table'\nimport { useNavigate } from 'react-router-dom'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\n\ntype DataProject = {\n  id: number | string\n  name: string\n  project_type: number\n  image_count: number\n  created_time: string\n  updated_time: string\n}\n\nconst Projects = () => {\n  const navigate = useNavigate()\n  const [idDelete, setIdDelete] = useState<string | undefined>()\n  const [data, setData] = useState<DataProject[]>([\n    {\n      id: '1',\n      name: 'prj name 1',\n      created_time: '2023-03-10 09:19:38',\n      updated_time: '2023-03-10 09:19:38',\n      image_count: 3,\n      project_type: 0,\n    },\n    {\n      id: '2',\n      name: 'prj name 2',\n      created_time: '2023-03-10 09:19:38',\n      updated_time: '2023-03-10 09:19:38',\n      image_count: 3,\n      project_type: 1,\n    },\n  ])\n\n  const onEdit = useCallback((id: any) => {\n    navigate(`/projects/new-project?id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onWorkflow = useCallback((id: any) => {\n    console.log('Workflow: ', id)\n    navigate('/projects/workflow')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onResults = useCallback((id: any) => {\n    console.log('Results: ', id)\n    navigate('/projects/workflow?tab=2')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addNewProject = useCallback(() => {\n    navigate('/projects/new-project')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onDelete = (id: string) => {\n    setIdDelete(id)\n  }\n\n  const onDeleteSubmit = () => {\n    const id = idDelete\n    setIdDelete(undefined)\n    setData(data.filter((e) => e.id !== id))\n  }\n\n  const handleCloseDelete = () => {\n    setIdDelete(undefined)\n  }\n\n  const columns = useMemo(\n    () => [\n      { title: 'Project Name', name: 'name' },\n      { title: 'Created', name: 'created_time' },\n      { title: 'Updated', name: 'updated_time' },\n      { title: 'Images', name: 'image_count', align: 'center' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data: any) => (\n          <BoxButton>\n            <ButtonAdd variant=\"contained\" onClick={() => onEdit(data.id)}>\n              Edit\n            </ButtonAdd>\n            <ButtonAdd variant=\"contained\" onClick={() => onWorkflow(data.id)}>\n              Workflow\n            </ButtonAdd>\n            <ButtonAdd variant=\"contained\" onClick={() => onResults(data.id)}>\n              Results\n            </ButtonAdd>\n            <ButtonAdd\n              variant=\"contained\"\n              onClick={() => onDelete(data.id)}\n              sx={{ backgroundColor: 'red !important' }}\n            >\n              Del\n            </ButtonAdd>\n          </BoxButton>\n        ),\n      },\n    ],\n    [onWorkflow, onResults, onEdit],\n  )\n  return (\n    <ProjectsWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Project\"\n        description=\"Delete My Project\"\n        onClose={handleCloseDelete}\n        open={!!idDelete}\n        onSubmit={onDeleteSubmit}\n      />\n      <ProjectsTitle>Projects</ProjectsTitle>\n      <BoxButton>\n        <ButtonAdd\n          variant=\"contained\"\n          onClick={addNewProject}\n          sx={{ marginBottom: 2 }}\n        >\n          Add Project\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{ total: 100, page: 1, page_size: 10 }}\n        data={data}\n        columns={columns}\n      />\n    </ProjectsWrapper>\n  )\n}\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst ProjectsTitle = styled('h1')(({ theme }) => ({}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nexport default Projects\n","import { Box, styled, Typography } from '@mui/material'\nimport { MouseEvent, FC, Fragment, useState, useRef, useEffect } from 'react'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport {\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n} from 'pages/Database'\n\ntype Column = {\n  width?: number\n  title: string\n  dataIndex?: string\n  name?: string\n  child?: string\n  filter?: boolean\n  render?: (\n    item?: any,\n    value?: any,\n    index?: number,\n  ) => JSX.Element | null | undefined | string | number\n}\n\ntype TableComponentProps = {\n  data?: (RecordDatabase | RecordList)[]\n  className?: string\n  columns?: Column[]\n  orderBy?: 'ASC' | 'DESC' | ''\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: 'ASC' | 'DESC') => any\n  rowClick?: (row: any) => any\n  onClickEvent?: (e: any, row: any) => any\n  draggable?: boolean\n  onDrag?: (row?: any) => any\n  onDragEnd?: (row?: any) => any\n  defaultExpand?: boolean\n}\n\ntype RenderColumnProps = {\n  data: RecordDatabase | SessionsDatabase | ImagesDatabase | RecordList\n  columns: Column[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: string) => any\n  rowClick?: (e: any, row: any) => any\n  draggable?: boolean\n  onDrag?: (event: any, row?: any) => any\n  onDragEnd?: (row?: any) => any\n  recordIndex: number\n  defaultExpand?: boolean\n  dataShow?: boolean\n  beginDrag?: boolean\n  draggableProps?: boolean\n  allowMutilKey?: boolean\n  drags: ImagesDatabase[]\n  onMouseDown: (event: MouseEvent<HTMLTableRowElement>, image: any) => any\n}\n\nconst renderCol = (col: Column, item: any, index: number) => {\n  const key = col.name || col.dataIndex || ''\n  let value = item\n  if (key.includes('.')) {\n    const keys = key.split('.')\n    keys.forEach((k) => {\n      value = value?.[k]\n    })\n  } else value = item[key]\n  if (col.render) return col.render(item, value, index)\n  return typeof value === 'object' || Array.isArray(value) ? null : value\n}\n\nconst RenderColumn = (props: RenderColumnProps): any => {\n  const { columns, data, recordIndex, rowClick, drags, onMouseDown } = props\n  const { draggable, onDrag, onDragEnd } = props\n  const [openChild, setOpenChild] = useState(true)\n  const [openChildParent, setOpenChildPrent] = useState(true)\n  const [openSubjects, setOpenSubjects] = useState<number[]>(\n    (data as RecordDatabase)?.subjects?.map?.((e) => e.id) || [],\n  )\n\n  const isDrag = drags.find((drag) => {\n    return (\n      drag.id === data.id &&\n      drag.session_id === (data as ImagesDatabase).session_id &&\n      drag.datatype_index === (data as ImagesDatabase).datatype_index\n    )\n  })\n\n  const onDragEvent = (event: any, image: any) => {\n    return onDrag?.(event, [image])\n  }\n\n  const onSetOpenSubject = (subId: number) => {\n    if (openSubjects.includes(subId)) {\n      setOpenSubjects(openSubjects.filter((o) => o !== subId))\n    } else setOpenSubjects([...openSubjects, subId])\n  }\n\n  if (\n    (data as RecordDatabase)?.subjects?.length ||\n    (data as SessionsDatabase).datatypes?.length\n  ) {\n    return (\n      <Fragment>\n        <Tr\n          onClick={(e) => rowClick?.(e, data)}\n          draggable={draggable}\n          onDragStart={(e) => onDragEvent?.(e, data)}\n          onDragEnd={onDragEnd}\n          style={{\n            transition: 'all 0.3s',\n            backgroundColor: 'rgb(238, 238, 238)',\n          }}\n        >\n          {columns.map((column) => {\n            const key = column.name || column.dataIndex || ''\n            return (\n              <Td\n                key={`col_${column.name || column.dataIndex}`}\n                onClick={() =>\n                  key === 'session' && setOpenChildPrent(!openChildParent)\n                }\n              >\n                {key === 'action' ? null : (\n                  <BoxCenter>\n                    {renderCol(column, data, recordIndex)}\n                    {renderCol(column, data, recordIndex) && key === 'session' && (\n                      <ArrowDropDownIcon\n                        style={{\n                          transform: `rotate(${\n                            !openChildParent ? -180 : 0\n                          }deg)`,\n                        }}\n                      />\n                    )}\n                  </BoxCenter>\n                )}\n              </Td>\n            )\n          })}\n        </Tr>\n        {openChildParent &&\n          (data as RecordDatabase).subjects?.map((sub, subject_index) => {\n            return (\n              <Fragment key={sub.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'subject' && onSetOpenSubject(sub.id)\n                        }\n                      >\n                        {key === 'subject' ? (\n                          <BoxCenter>\n                            {sub.label}\n                            {sub.sessions?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openSubjects.includes(sub.id) ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openSubjects.includes(sub.id) &&\n                  sub.sessions.map((session, session_index) => (\n                    <RenderColumn\n                      {...props}\n                      key={session.id}\n                      data={\n                        {\n                          ...session,\n                          session: session.label,\n                          session_index,\n                          subject_index,\n                        } as SessionsDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n        {openChildParent &&\n          (data as SessionsDatabase).datatypes?.map((type, ii) => {\n            return (\n              <Fragment key={type.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'datatype' && setOpenChild(!openChild)\n                        }\n                      >\n                        {key === 'datatype' ? (\n                          <BoxCenter>\n                            {type.label}\n                            {type.images?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openChild ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openChild &&\n                  type.images.map((image, index) => (\n                    <RenderColumn\n                      {...props}\n                      key={`row_image_${image.id}_${index}`}\n                      data={\n                        {\n                          ...image,\n                          session_index: (data as SessionsDatabase)\n                            .session_index,\n                          subject_index: (data as SessionsDatabase)\n                            .subject_index,\n                          session_id: data.id,\n                          datatype_index: ii,\n                          image_index: index,\n                          datatype_label: type.label,\n                          subject_id: (data as SessionsDatabase).parent_id,\n                          record_index: recordIndex,\n                        } as ImagesDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n      </Fragment>\n    )\n  }\n\n  return (\n    <Tr\n      onClick={(e) => rowClick?.(e, data)}\n      draggable={draggable}\n      onDragStart={(e) => onDragEvent?.(e, data)}\n      onMouseDown={(e) => onMouseDown(e, data)}\n      onDragEnd={onDragEnd}\n      style={{\n        transition: 'all 0.3s',\n        backgroundColor: isDrag ? 'rgba(25,118,210,0.15)' : '',\n      }}\n    >\n      {columns.map((column) => {\n        return (\n          <Td key={`col_${column.name || column.dataIndex}`}>\n            {renderCol(column, data, recordIndex)}\n          </Td>\n        )\n      })}\n    </Tr>\n  )\n}\n\nconst DatabaseTableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    className,\n    orderKey,\n    orderBy,\n    onSort,\n    draggable,\n    rowClick,\n    onDrag,\n    onDragEnd,\n    ...p\n  } = props\n  const { data = [], columns = [] } = props\n  const [drags, setDrags] = useState<ImagesDatabase[]>([])\n  const [mouseMoveRect, setMouseMoveRect] = useState({ pageX: 0, pageY: 0 })\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n\n  const ctrRef = useRef(false)\n  const refTable = useRef<HTMLDivElement | null>(null)\n  const refTdSelect = useRef<{\n    [key: string]: {\n      dom: HTMLTableRowElement\n      tds: { id: number | string; dom: HTMLTableCellElement; html: string }[]\n    }\n  }>({})\n  const mouseStart = useRef<{ pageX: number; pageY: number } | undefined>()\n  const [beginDrag, setBeginDrag] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydownEvent)\n    window.addEventListener('keyup', onKeyupEvent)\n    window.addEventListener('mouseup', onMouseUp)\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('click', onClick)\n    return () => {\n      window.removeEventListener('keydown', onKeyupEvent)\n      window.removeEventListener('keyup', onKeyupEvent)\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('click', onClick)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onKeydownEvent = (event: KeyboardEvent) => {\n    ctrRef.current = event.ctrlKey || event.metaKey\n  }\n\n  const onKeyupEvent = () => {\n    ctrRef.current = false\n  }\n\n  const onClick = (event: any) => {\n    if (refTable.current?.contains?.(event.target)) return\n    ctrRef.current = false\n    setDrags([])\n    onDragEnd?.()\n  }\n\n  const onSortHandle = (nameCol: string) => {\n    onSort?.(nameCol, orderBy === 'ASC' ? 'DESC' : 'ASC')\n  }\n\n  const onRowClickEvent = (\n    event: MouseEvent<HTMLTableColElement>,\n    image: any,\n  ) => {\n    const idDom = `${image.id}_${image.datatype_index}_${image.session_id}`\n    if (!ctrRef.current) {\n      if (!timeoutClick.current) {\n        timeoutClick.current = setTimeout(() => {\n          timeoutClick.current = undefined\n        }, 300)\n        if (draggable) {\n          setDrags([image])\n          const tds = event.currentTarget.getElementsByTagName('td')\n          refTdSelect.current[idDom] = {\n            dom: event.currentTarget as unknown as HTMLTableRowElement,\n            tds: [],\n          }\n          for (let i = 0; i < tds.length; i++) {\n            refTdSelect.current[idDom].tds.push({\n              id: tds[i].id,\n              dom: tds[i],\n              html: tds[i].innerHTML,\n            })\n          }\n        }\n        return\n      }\n      return rowClick?.(image)\n    }\n    if (!draggable) return\n    if (\n      drags.find(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      setDrags(\n        drags.filter(\n          (drag: any) =>\n            drag.id === image.id &&\n            drag.datatype_index === image.datatype_index &&\n            drag.session_index === image.session_index,\n        ),\n      )\n      delete refTdSelect.current[idDom]\n    } else {\n      setDrags([...drags, image])\n      const tds = event.currentTarget.getElementsByTagName('td')\n      refTdSelect.current[idDom] = {\n        dom: event.currentTarget as unknown as HTMLTableRowElement,\n        tds: [],\n      }\n      for (let i = 0; i < tds.length; i++) {\n        refTdSelect.current[idDom].tds.push({\n          id: tds[i].id,\n          dom: tds[i],\n          html: tds[i].innerHTML,\n        })\n      }\n    }\n  }\n\n  const onMouseDown = (event: MouseEvent<HTMLTableRowElement>, image: any) => {\n    if (\n      !drags.length ||\n      !draggable ||\n      !drags.some(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      return\n    }\n    mouseStart.current = { pageX: event.pageX, pageY: event.pageY }\n    onDrag?.(drags)\n  }\n\n  const onMouseUp = () => {\n    mouseStart.current = undefined\n    setBeginDrag(false)\n    setTimeout(() => {\n      onDrag?.(undefined)\n    }, 100)\n  }\n\n  const onMouseMove = (event: any) => {\n    if (!mouseStart.current || !draggable || !mouseStart.current) return\n    setBeginDrag(true)\n    setMouseMoveRect({\n      pageX: event.pageX - mouseStart.current.pageX,\n      pageY: event.pageY - mouseStart.current.pageY,\n    })\n  }\n\n  const onBeginDrag = (e: any, image: any) => {\n    e.preventDefault()\n    onDrag?.(image)\n  }\n\n  return (\n    <>\n      <TableWrap ref={refTable} className={className}>\n        <DataTable\n          style={{\n            width: columns.reduce((a, b) => a + (Number(b.width) || 110), 0),\n          }}\n        >\n          <Thead>\n            <Tr>\n              {columns.map((col, iCol) => {\n                const nameCol = col.name || col.dataIndex || ''\n                return (\n                  <Th\n                    onClick={() => onSortHandle(nameCol)}\n                    style={{\n                      maxWidth: col.width,\n                      width: col.width,\n                      cursor: 'pointer',\n                    }}\n                    key={col.dataIndex || col.name || iCol}\n                  >\n                    {col.title}\n                    <ArrowDownwardIconOrder\n                      style={{\n                        transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                        opacity:\n                          orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                      }}\n                    />\n                  </Th>\n                )\n              })}\n            </Tr>\n          </Thead>\n          <TBody>\n            {data.map((item, index) => (\n              <RenderColumn\n                allowMutilKey={ctrRef.current}\n                recordIndex={index}\n                columns={columns}\n                {...p}\n                data={item}\n                rowClick={(e, image) => onRowClickEvent(e, image)}\n                onMouseDown={onMouseDown}\n                beginDrag={beginDrag}\n                draggable={false}\n                draggableProps={draggable}\n                key={`row_table_${item.id}_${index}`}\n                drags={drags}\n                onDrag={onBeginDrag}\n                onDragEnd={onDragEnd}\n              />\n            ))}\n          </TBody>\n        </DataTable>\n        {!data.length ? <NoData>No Data</NoData> : null}\n      </TableWrap>\n      {beginDrag &&\n        drags.map((el) => {\n          const rowId = `${el.id}_${el.datatype_index}_${el.session_id}`\n          const trNow = refTdSelect.current[rowId]\n          const { width, height, top, left } =\n            trNow.dom?.getBoundingClientRect()\n          const style = {\n            width,\n            height,\n            top: top - window.scrollY + mouseMoveRect.pageY,\n            left: left + mouseMoveRect.pageX,\n          }\n          return (\n            <BoxDrag key={el.id} style={style}>\n              {trNow.tds.map((td, index) => {\n                const { width } = td.dom.getBoundingClientRect()\n                return (\n                  <Box\n                    key={`${rowId}_-${index}`}\n                    style={{ width, padding: 16 }}\n                  >\n                    {td.html}\n                  </Box>\n                )\n              })}\n            </BoxDrag>\n          )\n        })}\n    </>\n  )\n}\n\nconst BoxDrag = styled(Box)({\n  position: 'absolute',\n  background: '#ffffff',\n  backgroundColor: 'rgba(25,118,210,0.15)',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst TableWrap = styled(Box)({\n  overflowX: 'scroll',\n})\n\nconst DataTable = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  userSelect: 'none',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nconst BoxCenter = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport default DatabaseTableComponent\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  FC,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  TouchEvent,\n} from 'react'\n\ntype ChangeDragProps = {\n  title: string\n  value: number\n  onChange: (value: number) => void\n  className?: string\n  max?: number\n  min?: number\n  onChangeMin?: (v: number) => any\n  onChangeMax?: (v: number) => any\n  showInputMax?: boolean\n  showInputMin?: boolean\n}\n\nconst ChangeDrag: FC<ChangeDragProps> = (props) => {\n  const { title, value, onChange, className, max = 2, min = 0 } = props\n  const { onChangeMin, onChangeMax, showInputMax } = props\n  const [width, setWidth] = useState(0)\n  const mouseDown = useRef(0)\n\n  const refDrag = useRef<any>()\n  const refDot = useRef<any>()\n\n  useEffect(() => {\n    getWidth()\n    //eslint-disable-next-line\n  }, [])\n\n  const getWidth = () => {\n    if (!refDrag.current) getWidth()\n    setWidth(refDrag.current.clientWidth - 24)\n  }\n\n  const onMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n    mouseDown.current = event.pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onTouchStart = useCallback((event: TouchEvent<HTMLDivElement>) => {\n    mouseDown.current = event.touches[0].pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onMouseMove = (event: MouseEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.pageX - mouseInit - 12\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onTouchMove = (event: TouchEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.touches[0].pageX - mouseInit\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onMouseLeave = useCallback(() => {\n    mouseDown.current = 0\n    refDrag.current.style.cursor = 'default'\n    refDot.current.style.cursor = ''\n  }, [])\n\n  return (\n    <ScaleWrapper\n      className={className}\n      ref={refDrag}\n      onMouseMove={onMouseMove}\n      onTouchMove={onTouchMove}\n      onMouseLeave={onMouseLeave}\n      onMouseUp={onMouseLeave}\n    >\n      <TitleScale>{title}</TitleScale>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Input\n          value={value}\n          onChange={(e) => onChangeMin?.(Number(e.target.value))}\n        />\n        {showInputMax ? (\n          <Input\n            style={{ textAlign: 'right' }}\n            value={max}\n            onChange={(e) => onChangeMax?.(Number(e.target.value))}\n          />\n        ) : null}\n      </div>\n      <BoxWrapper>\n        <BoxLine style={{ width: ((value - min) * width) / (max - min) }} />\n        <Dot\n          ref={refDot}\n          onMouseDown={onMouseDown}\n          onTouchEnd={onMouseLeave}\n          onTouchStart={onTouchStart}\n          style={{ left: ((value - min) * width) / (max - min) }}\n        />\n      </BoxWrapper>\n    </ScaleWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 4,\n  background: 'rgba(60, 60, 67, 0.18)',\n  position: 'relative',\n  borderRadius: 2,\n  userSelect: 'none',\n}))\n\nconst Dot = styled(Box)(() => ({\n  position: 'absolute',\n  width: 24,\n  height: 24,\n  background: '#7a7a7a',\n  borderRadius: 100,\n  top: -11,\n  cursor: 'pointer',\n}))\n\nconst TitleScale = styled(Typography)(() => ({\n  fontSize: 14,\n  fontWeight: 700,\n}))\n\nconst BoxLine = styled(Box)(() => ({\n  position: 'absolute',\n  height: 4,\n  background: '#0A7AFF',\n  borderRadius: 2,\n}))\n\nconst ScaleWrapper = styled(Box)(({ theme }) => ({\n  paddingBottom: 20,\n  '@media (max-width: 809px)': {\n    paddingTop: theme.spacing(2),\n  },\n}))\n\nconst Input = styled('input')({\n  border: 'none',\n  outline: 'none',\n  width: 50,\n  marginBottom: 20,\n})\n\nexport default ChangeDrag\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { FC, useEffect, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ChangeDrag from './ChangeSize'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  url?: string\n  jsonData?: { [key: string]: any }\n  disabled?: { left: boolean; right: boolean }\n}\n\nconst ImageView: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  url,\n  onNext,\n  onPrevious,\n  jsonData,\n  disabled,\n}) => {\n  const viewerRef = useRef<any>()\n  const [worldCoords, setWorldCoords] = useState({ x: 0, y: 0, z: 0 })\n  const [voxelCoords, setVoxelCoords] = useState({ i: 0, j: 0, k: 0 })\n  const [values, setValues] = useState(0)\n  const [opacity, setOpacity] = useState(0)\n  const [thresholds, setThresholds] = useState(0)\n  const [maxThres, setMaxThres] = useState(0)\n  const [contracts, setContracts] = useState(1)\n  const [brightness, setBrightness] = useState(0)\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const volumes = useRef<any>()\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    setOpacity(0)\n    setContracts(1)\n    setBrightness(0)\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n\n  const onChangeThreshold = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeContract = (num: number) => {\n    if (!volumes.current) return\n    setContracts(num)\n    volumes.current.display.setContrast(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeBrightness = (num: number) => {\n    if (!volumes.current) return\n    setBrightness(num)\n    volumes.current.display.setBrightness(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMaxThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_max = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMinThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeJson = () => {}\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n          complete: function () {},\n        },\n      ],\n    })\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', function () {\n          setOpacity(1)\n          setIsLoadFile(false)\n        })\n        viewer.addEventListener('sliceupdate', function (event: any) {\n          // const panel = event.target\n          const { volume } = event\n          volumes.current = volume\n          setThresholds(volumes.current.intensity_min)\n          setMaxThres(volumes.current.intensity_max)\n          setValues(volume.getIntensityValue())\n          if (brainbrowser.utils.isFunction(volume.getWorldCoords)) {\n            setWorldCoords(volume.getWorldCoords())\n          }\n          if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n            setVoxelCoords(volume.getVoxelCoords())\n          }\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {},\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div\n            style={{\n              display: !opacity ? 'none' : 'flex',\n              alignItems: 'stretch',\n            }}\n          >\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              {opacity ? (\n                <BoxContentData>\n                  <p style={{ margin: 0, padding: '20px 0' }}>\n                    World Coordinates:\n                  </p>\n                  <span>X: {worldCoords.x.toPrecision(4)}</span>\n                  <span style={{ marginLeft: 20 }}>\n                    Y: {worldCoords.y.toPrecision(4)}\n                  </span>\n                  <span style={{ marginLeft: 20 }}>\n                    Z: {worldCoords.z.toPrecision(4)}\n                  </span>\n                  <p>Voxel Coordinates:</p>\n                  <span>I: {voxelCoords.i}</span>\n                  <span style={{ marginLeft: 20 }}>J: {voxelCoords.j}</span>\n                  <span style={{ marginLeft: 20 }}>K: {voxelCoords.k}</span>\n                  <p>Value: {values}</p>\n                  <ChangeDrag\n                    onChangeMax={onChangeMaxThresh}\n                    onChangeMin={onChangeMinThresh}\n                    max={maxThres}\n                    min={thresholds < 0 ? thresholds : 0}\n                    title={'Threshold'}\n                    value={thresholds}\n                    showInputMax\n                    showInputMin\n                    onChange={onChangeThreshold}\n                  />\n                  <ChangeDrag\n                    title={'Contrast (0.0 to 2.0)'}\n                    value={contracts}\n                    onChange={onChangeContract}\n                  />\n                  <ChangeDrag\n                    title={'Brightness (-1 to 1):'}\n                    value={brightness}\n                    min={-1}\n                    max={1}\n                    onChange={onChangeBrightness}\n                  />\n                </BoxContentData>\n              ) : null}\n            </div>\n            <WrapperJson>\n              <TextArea\n                onChange={onChangeJson}\n                value={JSON.stringify(jsonData || '')}\n              />\n            </WrapperJson>\n            {!disabled?.right ? (\n              <ButtonNext onClick={onNext}>\n                <ArrowForwardIosIconWrapper />\n              </ButtonNext>\n            ) : null}\n            {!disabled?.left ? (\n              <ButtonPrevious onClick={onPrevious}>\n                <ArrowBackIosIconWrapper />\n              </ButtonPrevious>\n            ) : null}\n          </div>\n          {(!opacity || isLoadFile) && (\n            <BoxLoading>\n              <img\n                src=\"/lib/loading.gif\"\n                alt=\"icon loading\"\n                style={{ width: 80, height: 80 }}\n              />\n            </BoxLoading>\n          )}\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst BoxLoading = styled(Box)({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'rgba(255,255,255, 0.1)',\n  zIndex: 88,\n})\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '10%',\n  right: '10%',\n  zIndex: 9999,\n})\n\nconst ButtonNext = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  right: '10%',\n  zIndex: 1,\n})\n\nconst ButtonPrevious = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  left: '10%',\n  zIndex: 1,\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst BoxContentData = styled(Box)({\n  margin: '-5px 0 0',\n  padding: '10px',\n  background: '#ffffff',\n})\n\nconst WrapperJson = styled(Box)({\n  minWidth: 300,\n  background: '#ffffff',\n})\n\nconst TextArea = styled('textarea')({\n  height: 'calc(100% - 7px)',\n  width: '100%',\n  outline: 'none !important',\n  border: 'none',\n  borderLeft: '1px solid',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nconst ArrowBackIosIconWrapper = styled(ArrowBackIosIcon)({\n  color: '#ffffff',\n  marginLeft: 10,\n})\n\nconst ArrowForwardIosIconWrapper = styled(ArrowForwardIosIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageView\n","import {\n  DatabaseData,\n  DatabaseListData,\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n} from 'pages/Database'\n\nexport const onRowClick = (\n  datas: DatabaseData | DatabaseListData,\n  row: ImagesDatabase | RecordList,\n  type: 'tree' | 'list' = 'tree',\n) => {\n  const view = {\n    open: true,\n    url: row.image_url,\n    id: row.id,\n    session_id: row.session_id,\n    parent_id: (row as ImagesDatabase).parent_id,\n    jsonData:\n      (row as ImagesDatabase).attributes ||\n      (row as RecordList).image_attributes,\n    image: row,\n  }\n  const checkNext = onGet(datas, row, false, type)\n  const checkPre = onGet(datas, row, true, type)\n  return { view, checkNext, checkPre }\n}\n\nexport const onGet = (\n  datas: DatabaseData | DatabaseListData,\n  rowClick: ImagesDatabase | RecordList,\n  isSub?: boolean,\n  type: 'tree' | 'list' = 'tree',\n): ImagesDatabase | RecordList | undefined => {\n  if (type === 'tree') {\n    const row = rowClick as ImagesDatabase\n    const dataNow = datas.records[row.record_index || 0] as RecordDatabase\n    const subjectNow = dataNow?.subjects?.[row.subject_index || 0]\n    const sessionNow = subjectNow?.sessions[row.session_index || 0]\n    const datatypeNow = sessionNow?.datatypes[row.datatype_index || 0]\n    if (!isSub) {\n      const imageNext = datatypeNow?.images[(row.image_index || 0) + 1]\n      if (imageNext) {\n        return { ...row, ...imageNext, image_index: (row.image_index || 0) + 1 }\n      }\n      const datatypeNext = sessionNow?.datatypes[(row.datatype_index || 0) + 1]\n      if (datatypeNext) {\n        const images = datatypeNext?.images\n        if (images[0])\n          return {\n            ...row,\n            ...images[0],\n            datatype_index: (row.datatype_index || 0) + 1,\n            image_index: 0,\n          }\n      }\n    } else {\n      const imagePre = datatypeNow?.images[(row.image_index || 0) - 1]\n      if (imagePre) {\n        return { ...row, ...imagePre, image_index: (row.image_index || 0) - 1 }\n      }\n      const datatypeImagePre =\n        sessionNow?.datatypes?.[(row.datatype_index || 0) - 1]\n      if (datatypeImagePre) {\n        const images = datatypeImagePre?.images\n        if (images?.[images.length - 1]) {\n          return {\n            ...row,\n            ...images?.[images.length - 1],\n            datatype_index: (row.datatype_index || 0) - 1,\n            image_index: images.length - 1,\n          }\n        }\n      }\n    }\n  } else {\n    const row = rowClick as RecordList\n    const indexImageNow = datas.records.findIndex(\n      (record) => record.id === row.id,\n    )\n    return datas.records[indexImageNow + (isSub ? -1 : 1)] as RecordList\n  }\n  return undefined\n}\n\nconst sortWithLabName = (\n  datasTable: (RecordDatabase | RecordList)[],\n  orderKey: string,\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort((a: any, b: any) => {\n    if (typeOrder === 'DESC') {\n      return a[orderKey] > b[orderKey] ? -1 : 1\n    }\n    return a[orderKey] < b[orderKey] ? -1 : 1\n  })\n  return newDatas\n}\n\nconst sortSubjectTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort((dataA, dataB) => {\n    const subjectsA = dataA.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    const subjectsB = dataB.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    if (typeOrder === 'DESC') {\n      return subjectsA[0]?.label > subjectsB[0]?.label ? -1 : 1\n    }\n    return subjectsA[0]?.label < subjectsB[0]?.label ? -1 : 1\n  })\n  return newDatas.map((element) => ({\n    ...element,\n    subjects: element.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    }),\n  }))\n}\n\nconst sortSessionTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          const subSessB = subB.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions.sort((ssA, ssB) => {\n            if (typeOrder === 'DESC') {\n              return ssA.label > ssB.label ? -1 : 1\n            }\n            return ssA.label < ssB.label ? -1 : 1\n          }),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortDataTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              const dataTypeB = ssB.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.label > dataTypeB[0]?.label ? -1 : 1\n              }\n              return dataTypeA[0]?.label < dataTypeB[0]?.label ? -1 : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes.sort((typeA, typeB) => {\n                if (typeOrder === 'DESC') {\n                  return typeA.label > typeB.label ? -1 : 1\n                }\n                return typeA.label < typeB.label ? -1 : 1\n              }),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortAttributesTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n  key: string = 'type',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const typeA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.attributes[key] > imageB.attributes[key]\n                        ? -1\n                        : 1\n                    }\n                    return imageA.attributes[key] < imageB.attributes[key]\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n          }\n          return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n        })\n      const typeB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.attributes[key] > imageB.attributes[key]\n                        ? -1\n                        : 1\n                    }\n                    return imageA.attributes[key] < imageB.attributes[key]\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n          }\n          return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n        })\n\n      if (typeOrder === 'DESC') {\n        return typeA[0]?.attributes[key] > typeB[0]?.attributes[key] ? -1 : 1\n      }\n      return typeA[0]?.attributes[key] < typeB[0]?.attributes[key] ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.attributes[key] > subSessB[0]?.attributes[key]\n              ? -1\n              : 1\n          }\n          return subSessA[0]?.attributes[key] < subSessB[0]?.attributes[key]\n            ? -1\n            : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n              const dataTypeB = ssB.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.attributes[key] >\n                  dataTypeB[0]?.attributes[key]\n                  ? -1\n                  : 1\n              }\n              return dataTypeA[0]?.attributes[key] <\n                dataTypeB[0]?.attributes[key]\n                ? -1\n                : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes\n                .sort((typeA, typeB) => {\n                  const imageA = typeA.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                  const imageB = typeB.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                  if (typeOrder === 'DESC') {\n                    return imageA[0]?.attributes[key] >\n                      imageB[0]?.attributes[key]\n                      ? -1\n                      : 1\n                  }\n                  return imageA[0]?.attributes[key] < imageB[0]?.attributes[key]\n                    ? -1\n                    : 1\n                })\n                .map((type) => ({\n                  ...type,\n                  images: type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  }),\n                })),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortWithKey = (\n  datasTable: RecordList[],\n  orderKey: string,\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  return datasTable.sort((dataA: any, dataB: any) => {\n    let valueA = dataA\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        valueA = valueA?.[k]\n      })\n    } else valueA = valueA[orderKey]\n\n    let valueB = dataB\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        valueB = valueB?.[k]\n      })\n    } else valueB = valueB[orderKey]\n    if (typeOrder === 'DESC') {\n      return valueA > valueB ? -1 : 1\n    }\n    return valueA < valueB ? -1 : 1\n  })\n}\n\nconst sortWithTime = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort((a: any, b: any) => {\n    if (typeOrder === 'DESC') {\n      return new Date(a.recording_time) > new Date(b.recording_time) ? -1 : 1\n    }\n    return new Date(a.recording_time) < new Date(b.recording_time) ? -1 : 1\n  })\n  return newDatas\n}\n\nexport const onSort = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC' | '',\n  orderKey: string,\n  type: string = 'tree',\n): (RecordDatabase | RecordList)[] => {\n  if (!typeOrder) return datasTable\n  let newDatas = datasTable\n  if (type === 'tree') {\n    if (['lab_name', 'user_name'].includes(orderKey)) {\n      newDatas = sortWithLabName(datasTable, orderKey, typeOrder)\n    } else if (orderKey === 'recording_time') {\n      newDatas = sortWithTime(datasTable, typeOrder)\n    } else if (orderKey === 'subject' && type === 'tree') {\n      newDatas = sortSubjectTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'session' && type === 'tree') {\n      newDatas = sortSessionTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'datatype' && type === 'tree') {\n      newDatas = sortDataTypeTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'attributes.type' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n      )\n    } else if (orderKey === 'attributes.protocol' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'protocol',\n      )\n    } else if (orderKey === 'attributes.size' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'size',\n      )\n    }\n  } else {\n    newDatas = sortWithKey(datasTable as RecordList[], orderKey, typeOrder)\n  }\n  return newDatas\n}\n","import { Box, Button, IconButton, styled, TextField } from '@mui/material'\nimport { ChangeEvent, useEffect, useState } from 'react'\nimport DatabaseTableComponent from 'components/DatabaseTable'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ImageView from 'components/ImageView'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { onGet, onRowClick, onSort } from 'utils/database'\nimport { User, useUser } from 'providers'\n\ntype PopupSearchProps = {\n  onClose?: () => any\n  onFilter?: (values: { [key: string]: string }) => any\n  defaultValue?: { [key: string]: string }\n}\n\nexport const PopupSearch = ({\n  onClose,\n  defaultValue = {},\n  onFilter,\n}: PopupSearchProps) => {\n  const [values, setValues] = useState(defaultValue)\n\n  const handleFilter = () => {\n    onFilter?.(values)\n    onClose?.()\n  }\n\n  const onChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    setValues({ ...values, [event.target.name]: event.target.value })\n  }\n\n  return (\n    <Popup>\n      <PopupInner>\n        <HeaderTitle>\n          <span>Filter</span>\n          <ButtonControl onClick={onClose}>\n            <CloseIcon />\n          </ButtonControl>\n        </HeaderTitle>\n        <InputSearch\n          onChange={onChange}\n          name={'session'}\n          label=\"Session\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'dataset'}\n          label=\"Dataset\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'type'}\n          label=\"Type\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'protocol'}\n          label=\"Protocol\"\n          variant=\"outlined\"\n        />\n        <Button variant=\"contained\" onClick={handleFilter}>\n          Filter\n        </Button>\n      </PopupInner>\n    </Popup>\n  )\n}\n\nexport type Image = {\n  id: number\n  parent_id: number\n  session_id: number\n  label: string\n  image: {\n    id: number\n    parent_id: number\n    image_url: string\n    attributes: { [key: string]: any }\n  }\n}\n\nexport type Viewer = {\n  open: boolean\n  url: string\n  jsonData?: { [key: string]: any }\n  id?: number\n  session_id?: number\n  parent_id?: number\n  image?: ImagesDatabase | RecordList\n}\n\nexport type ImagesDatabase = {\n  id: number\n  parent_id: number\n  image_url: string\n  datatype_label?: string\n  type?: string\n  attributes: { [key: string]: any }\n  session_id?: number\n  record_index?: number\n  subject_index?: number\n  session_index?: number\n  datatype_index?: number\n  image_index?: number\n}\n\nexport type DatatypesDatabase = {\n  id: number\n  parent_id: number\n  label: string\n  images: ImagesDatabase[]\n}\n\nexport type SessionsDatabase = {\n  id: number\n  parent_id: number\n  session_index?: number\n  label: string\n  datatypes: DatatypesDatabase[]\n  subject_index?: number\n}\n\nexport type SubjectDatabase = {\n  id: number\n  parent_id: number\n  label: string\n  sessions: SessionsDatabase[]\n  subject_index?: number\n}\n\nexport type RecordDatabase = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  created_time: string\n  updated_time: string\n  subjects: SubjectDatabase[]\n}\n\nexport type DatabaseData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordDatabase[]\n}\n\nexport type RecordList = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  subject_id: number\n  subject_label: string\n  session_id: number\n  session_label: string\n  datatypes_id: number\n  datatypes_label: string\n  image_id: number\n  image_url: string\n  image_attributes: {\n    size: string\n    type: string\n    protocol: string\n  }\n  created_time: string\n  updated_time: string\n}\n\nexport type DatabaseListData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordList[]\n}\n\nexport const defaultDatabase: DatabaseData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [\n    {\n      id: 0,\n      lab_name: 'string',\n      user_name: 'string',\n      recording_time: '2023-04-07',\n      subjects: [\n        {\n          id: 0,\n          parent_id: 0,\n          label: 'new subject',\n          sessions: [\n            {\n              id: 0,\n              parent_id: 0,\n              label: 'new session',\n              datatypes: [\n                {\n                  id: 0,\n                  parent_id: 0,\n                  label: 'anat',\n                  images: [\n                    {\n                      id: 0,\n                      parent_id: 0,\n                      image_url: '/lib/test.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                      },\n                    },\n                  ],\n                },\n                {\n                  id: 1,\n                  parent_id: 0,\n                  label: 'func',\n                  images: [\n                    {\n                      id: 1,\n                      parent_id: 0,\n                      image_url: '/lib/test0.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 1,\n          parent_id: 0,\n          label: 'project subject',\n          sessions: [\n            {\n              id: 1,\n              parent_id: 1,\n              label: 'zsession',\n              datatypes: [\n                {\n                  id: 2,\n                  parent_id: 1,\n                  label: 'anat',\n                  images: [\n                    {\n                      id: 2,\n                      parent_id: 2,\n                      image_url: '/lib/test1.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                      },\n                    },\n                  ],\n                },\n                {\n                  id: 3,\n                  parent_id: 1,\n                  label: 'zunc',\n                  images: [\n                    {\n                      id: 3,\n                      parent_id: 3,\n                      image_url: '/lib/test2.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'T2_RATE',\n                        protocol: 'X Protocol',\n                      },\n                    },\n                    {\n                      id: 4,\n                      parent_id: 3,\n                      image_url: '/lib/test3.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                      },\n                    },\n                    {\n                      id: 5,\n                      parent_id: 3,\n                      image_url: '/lib/test4.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'T3_RATE',\n                        protocol: 'Z Protocol',\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n      created_time: '2023-04-07T04:28:09.686Z',\n      updated_time: '2023-04-07T04:28:09.686Z',\n    },\n    {\n      id: 1,\n      lab_name: 'lab name',\n      user_name: 'user name',\n      recording_time: '2023-04-06',\n      subjects: [\n        {\n          id: 3,\n          parent_id: 1,\n          label: 'subject name',\n          sessions: [],\n        },\n        {\n          id: 4,\n          parent_id: 1,\n          label: 'zubject name',\n          sessions: [],\n        },\n        {\n          id: 5,\n          parent_id: 1,\n          label: 'lubject name',\n          sessions: [],\n        },\n      ],\n      created_time: '2023-04-07T04:28:09.686Z',\n      updated_time: '2023-04-07T04:28:09.686Z',\n    },\n  ],\n}\n\nconst dataImages: DatabaseListData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [\n    {\n      id: 0,\n      lab_name: 'lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 1,\n      lab_name: 'z lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test0.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 2,\n      lab_name: 'x lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test1.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 3,\n      lab_name: 'c lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test2.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 4,\n      lab_name: '4 lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test3.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'Z Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 5,\n      lab_name: 'string',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test4.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'X Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n  ],\n}\n\nexport const columns = (\n  rowClick: Function,\n  setOpenDelete: Function,\n  type: 'tree' | 'list' = 'tree',\n  user?: User,\n) => [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true },\n  {\n    title: 'Subject',\n    name: type === 'tree' ? 'subject' : 'subject_label',\n    filter: true,\n  },\n  {\n    title: 'Session',\n    name: type === 'tree' ? 'session' : 'session_label',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Dataset',\n    name: type === 'tree' ? 'datatype' : 'datatypes_label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Type',\n    name: type === 'tree' ? 'attributes.type' : 'image_attributes.type',\n    filter: true,\n  },\n  {\n    title: 'Protocol',\n    name: type === 'tree' ? 'attributes.protocol' : 'image_attributes.protocol',\n    filter: true,\n  },\n  {\n    title: 'Size',\n    name: type === 'tree' ? 'attributes.size' : 'image_attributes.size',\n    filter: true,\n  },\n  {\n    title: 'Voxel size',\n    name:\n      type === 'tree' ? 'attributes.voxel_size' : 'image_attributes.voxel_size',\n    filter: true,\n  },\n  {\n    title: '',\n    name: 'action',\n    render: (data: RecordDatabase) => {\n      if (user?.role !== 'ADMIN') return null\n      return (\n        <BoxButton>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              rowClick?.(data)\n            }}\n          >\n            <EditIcon fontSize=\"small\" color={'inherit'} />\n          </ButtonControl>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              setOpenDelete?.(true)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </ButtonControl>\n        </BoxButton>\n      )\n    },\n  },\n]\n\nconst Database = () => {\n  const [openPopup, setOpenPopup] = useState(false)\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [datasTable, setDatasTable] = useState<DatabaseData | DatabaseListData>(\n    defaultDatabase,\n  )\n  const [initDataTable, setInitDataTable] = useState<\n    DatabaseData | DatabaseListData\n  >(defaultDatabase)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [type, setType] = useState<'tree' | 'list'>('tree')\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const { user } = useUser()\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  useEffect(() => {\n    if (type === 'tree') {\n      setDatasTable(defaultDatabase)\n      setInitDataTable(defaultDatabase)\n    } else {\n      setDatasTable(dataImages)\n      setInitDataTable(dataImages)\n    }\n  }, [type])\n\n  const rowClick = (row: ImagesDatabase | RecordList) => {\n    const { view, checkNext, checkPre } = onRowClick(datasTable, row, type)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC') => {\n    let orderbyCheck: 'DESC' | 'ASC' | '' = orderByValue\n    if (orderBy === 'DESC' && orderByValue === 'ASC') {\n      orderbyCheck = ''\n    }\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDataTable.records)),\n      orderbyCheck,\n      orderKey,\n      type,\n    )\n    setDatasTable({ ...datasTable, records: data as any })\n    setColumnSort(orderKey)\n    setOrdeBy(orderbyCheck)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(datasTable as any, viewer.image, false, type)\n    if (imageNext) rowClick(imageNext)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(datasTable, viewer.image, true, type)\n    if (imagePre) rowClick(imagePre)\n  }\n\n  return (\n    <DatabaseWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Image\"\n        description={`Are you sure delete?\\n`}\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ProjectsTitle>\n        <span>Database</span>\n        <ButtonFilter\n          onClick={() => setOpenPopup(true)}\n          style={{ margin: '0 26px 0 0' }}\n        >\n          Filter\n        </ButtonFilter>\n      </ProjectsTitle>\n      <BoxSelectTypeView>\n        <Box\n          onClick={() => setType('tree')}\n          style={{\n            marginRight: 4,\n            fontWeight: type === 'tree' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'tree' ? '' : '#4687f4',\n          }}\n        >\n          Tree\n        </Box>\n        /\n        <Box\n          onClick={() => setType('list')}\n          style={{\n            marginLeft: 4,\n            fontWeight: type === 'list' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'list' ? '' : '#4687f4',\n          }}\n        >\n          List\n        </Box>\n      </BoxSelectTypeView>\n      {openPopup && <PopupSearch onClose={() => setOpenPopup(false)} />}\n      <DatabaseTableComponent\n        defaultExpand\n        onSort={handleSort}\n        rowClick={rowClick}\n        orderKey={columnSort}\n        orderBy={orderBy}\n        data={datasTable.records}\n        columns={columns(rowClick, setOpenDelete, type, user)}\n      />\n      <ImageView\n        disabled={disabled}\n        url={viewer.url}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n      />\n    </DatabaseWrapper>\n  )\n}\n\nconst DatabaseWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst HeaderTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst Popup = styled(Box)(() => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n  zIndex: 9999,\n}))\n\nconst PopupInner = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2, 3),\n  backgroundColor: '#fff',\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n}))\n\nconst InputSearch = styled(TextField)(() => ({\n  minWidth: 250,\n}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ButtonControl = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0, 1),\n  width: 30,\n  height: 30,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst ProjectsTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst BoxSelectTypeView = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 16,\n})\n\nexport default Database\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { getMe, login } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { saveToken } from 'utils/auth'\n\nconst Login = () => {\n  const { setUser } = useUser()\n  const navigate = useNavigate()\n\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errors.email || errors.password || errorCheck) return\n    try {\n      const { access_token } = await login(values)\n      saveToken(access_token)\n      getUser()\n    } catch (e) {\n      setErrors({ email: 'Email or password is wrong', password: '' })\n    }\n  }\n\n  const getUser = async () => {\n    const data = await getMe()\n    setUser(data)\n    navigate('/')\n  }\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title>Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError>{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError>{errors.password}</TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin type=\"submit\">SIGN IN</ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { ChangeEvent, FC, FormEvent, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Select from 'react-select'\n\ntype SignUpProps = {\n  isLogin?: boolean\n}\n\nconst options = [\n  { value: 'admin', label: 'Admin' },\n  { value: 'normal', label: 'Normal' },\n]\n\nconst SignUp: FC<SignUpProps> = ({ isLogin }) => {\n  const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/\n  const regexPassword = /^(?=.*\\d)(?=.*[@$!%*#?&])(?=.*[a-zA-Z]).{6,100}$/\n\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n    reEnter: '',\n    role: '',\n  })\n  const [values, setValues] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n    reEnter: '',\n    role: 'admin',\n  })\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorEmail = validateEmail(values.email)\n    const errorPassword = validatePassword(values.password)\n    const errorReEnter = validateReEnter(values.reEnter)\n    if (errorEmail || errorPassword || errorReEnter) {\n      setErrors({\n        email: errorEmail,\n        password: errorPassword,\n        reEnter: errorReEnter,\n      })\n      return\n    }\n    //todo call api.\n  }\n\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validateEmail = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regex.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, password } = values\n    if (reEnter && reEnter !== password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  return (\n    <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n      <Box sx={{ position: 'relative' }}>\n        <LabelField>\n          Email<LableRequired>*</LableRequired>\n        </LabelField>\n        <Input\n          autoComplete=\"off\"\n          error={!!errors.email}\n          name=\"email\"\n          onChange={(e) => onChangeValue(e, validateEmail)}\n          value={values.email}\n          placeholder=\"Enter your email\"\n        />\n        <TextError>{errors.email}</TextError>\n      </Box>\n      <Box sx={{ position: 'relative' }}>\n        <LabelField>\n          Password<LableRequired>*</LableRequired>\n        </LabelField>\n        <Input\n          autoComplete=\"off\"\n          error={!!errors.password}\n          onChange={(e) => onChangeValue(e, validatePassword)}\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          placeholder=\"Enter your password\"\n          onBlur={validateReEnterWhenInputPassword}\n        />\n        <TextError>{errors.password}</TextError>\n      </Box>\n      <Box sx={{ position: 'relative' }}>\n        <LabelField>\n          Re-enter password<LableRequired>*</LableRequired>\n        </LabelField>\n        <Input\n          error={!!errors.reEnter}\n          onChange={(e) => onChangeValue(e, validateReEnter)}\n          name=\"reEnter\"\n          type=\"password\"\n          value={values.reEnter}\n          placeholder=\"Re-enter password\"\n        />\n        <TextError>{errors.reEnter}</TextError>\n      </Box>\n      <Box sx={{ position: 'relative' }}>\n        <LabelField>\n          Role<LableRequired>*</LableRequired>\n        </LabelField>\n        <SelectWrapper defaultValue={values.role} options={options} />\n        <TextError sx={{ marginTop: -2.6 }}>{errors.role}</TextError>\n      </Box>\n      <Stack\n        flexDirection=\"row\"\n        gap={2}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        mt={2}\n      >\n        <Description sx={{ mt: 0 }}>\n          {isLogin ? <LinkWrappper to=\"/login\">Login</LinkWrappper> : null}\n        </Description>\n        <ButtonLogin type=\"submit\">Sign up</ButtonLogin>\n      </Stack>\n    </FormSignUp>\n  )\n}\n\nconst FormSignUp = styled('form')({\n  maxWidth: 273,\n})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 18,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 10,\n  color: '#1677ff',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nconst SelectWrapper = styled(Select)({\n  width: '100%',\n  marginBottom: 24,\n  '.MuiInput-root:after': {\n    border: 'none',\n  },\n})\n\nexport default SignUp\n","import { Box, styled, Typography } from '@mui/material'\nimport SignUp from 'components/SignUp'\n\nconst Signup = () => {\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title>Create new your account</Title>\n        <SignUp isLogin />\n      </LoginContent>\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '0 0 1px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nexport default Signup\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  styled,\n  Typography,\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport DatabaseTableComponent from 'components/DatabaseTable'\nimport React, { useState, DragEvent, Fragment, useRef } from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport {\n  DatabaseData,\n  defaultDatabase,\n  ImagesDatabase,\n  PopupSearch,\n  Viewer,\n} from '../Database'\nimport ImageView from 'components/ImageView'\nimport { onGet, onRowClick, onSort } from 'utils/database'\n\nconst columns = [\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true, width: 100 },\n  { title: 'Subject', name: 'subject', filter: true },\n  {\n    title: 'Session',\n    name: 'session',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Dataset',\n    name: 'datatype',\n    filter: true,\n    width: 100,\n  },\n  { title: 'Size', name: 'attributes.size', filter: true },\n  { title: 'Voxel size', name: 'attributes.voxel_size', filter: true },\n]\n\ntype ProjectAdd = {\n  project_name: string\n  project_type: number\n  image_count: number\n  protocol: string\n  id: string\n}\n\ntype DataWithin = {\n  id: string\n  data: ProjectAdd[]\n  name: string\n}\n\ntype DataFactor = {\n  within: DataWithin[]\n} & DataWithin\n\nconst nameDefault = 'DEFAULT'\n\nconst ProjectFormComponent = () => {\n  const [searchParams] = useSearchParams()\n\n  const idEdit = searchParams.get('id')\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [datasTable, setDatasTable] = useState<DatabaseData>(defaultDatabase)\n\n  const routeGoback = searchParams.get('back')\n\n  const [initDataTable /*setInitDataTable */] =\n    useState<DatabaseData>(defaultDatabase)\n  const [projectName, setProjectName] = useState('Prj Name 1')\n  const [projectLevel, setProjectLevel] = useState<'factor' | 'within-factor'>(\n    'factor',\n  )\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [openFilter, setOpenFilter] = useState(false)\n  const [rowDrag, setRowDrag] = useState<ImagesDatabase | ImagesDatabase[]>()\n  const [dataFactors, setDataFactors] = useState<DataFactor[]>([\n    { name: nameDefault, within: [], id: getNanoId(), data: [] },\n  ])\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n\n  const onChangeName = (e: any) => {\n    setProjectName(e.target.value)\n  }\n\n  const handleChangeLevel = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const type = event.target.value as 'within-factor' | 'factor'\n    setProjectLevel(type)\n    let within: DataWithin[] = []\n    if (type === 'within-factor') {\n      within = [{ name: nameDefault, id: getNanoId(), data: [] }]\n    }\n    setDataFactors([{ name: nameDefault, within, id: getNanoId(), data: [] }])\n  }\n\n  const onAddBetween = () => {\n    setDataFactors((pre) => [\n      ...pre,\n      { name: nameDefault, within: [], id: getNanoId(), data: [] },\n    ])\n  }\n\n  const onAddWithin = (idFactor: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === idFactor) {\n          return {\n            ...p,\n            within: [\n              ...p.within,\n              { name: nameDefault, within: [], id: getNanoId(), data: [] },\n            ],\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteFactor = (row: DataFactor) => {\n    setDataFactors((pre) => pre.filter((e) => e.id !== row.id))\n  }\n\n  const onDeleteWithin = (factor: DataFactor, row: DataWithin) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, within: p.within.filter((w) => w.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataWithin = (\n    factor: DataFactor,\n    within: DataWithin,\n    row: ProjectAdd,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, data: w.data.filter((d) => d.id !== row.id) }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataFactor = (factor: DataFactor, row: ProjectAdd) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, data: p.data.filter((d) => d.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDragRow = (row: any) => {\n    setRowDrag(row)\n  }\n\n  const onDragEnd = (row: any) => {\n    setRowDrag(undefined)\n  }\n\n  const onMouseOver = (factor: DataFactor, within?: DataWithin) => {\n    onDropData(factor, within)\n    setRowDrag(undefined)\n  }\n\n  const onDropData = (factor: DataFactor, within?: DataWithin) => {\n    if (!Array.isArray(rowDrag) && !rowDrag?.image_url) {\n      return\n    }\n    let newData: any[] = []\n    if (!Array.isArray(rowDrag)) {\n      newData = [\n        {\n          id: getNanoId(),\n          project_name: rowDrag.datatype_label,\n          image_count: 1,\n          project_type: rowDrag.attributes.type,\n          protocol: rowDrag.attributes.protocol,\n          image_url: rowDrag?.image_url,\n          jsonData: rowDrag?.attributes,\n        },\n      ]\n    } else if (Array.isArray(rowDrag)) {\n      newData = rowDrag.map((row) => ({\n        id: getNanoId(),\n        project_name: row.datatype_label,\n        image_count: 1,\n        project_type: row.attributes.type,\n        protocol: row.attributes.protocol,\n        image_url: row?.image_url,\n        jsonData: row?.attributes,\n      }))\n    }\n    if (projectLevel !== 'within-factor') {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return { ...p, data: [...p.data, ...newData] }\n          }\n          return p\n        }),\n      )\n      return\n    }\n    if (within) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return {\n              ...p,\n              within: p.within.map((w) => {\n                if (w.id === within.id) {\n                  return { ...w, data: [...w.data, ...newData] }\n                }\n                return w\n              }),\n            }\n          }\n          return p\n        }),\n      )\n    }\n  }\n\n  const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onDragLeave = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onChangeNameFactor = (factor: DataFactor, value: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, name: value }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onChangeNameWithinFactor = (\n    factor: DataFactor,\n    within: DataWithin,\n    value: string,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, name: value }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const renderData = (\n    data: ProjectAdd[],\n    style: any,\n    onDelete?: (row: ProjectAdd) => any,\n  ) => {\n    return data.map((e, index) => (\n      <BoxItem\n        key={`${e.id}_${index}`}\n        style={style}\n        onClick={() => rowDataClick(e)}\n      >\n        <TypographyBoxItem>{e.project_name}</TypographyBoxItem>\n        <TypographyBoxItem>{e.project_type}</TypographyBoxItem>\n        <TypographyBoxItem>{e.protocol}</TypographyBoxItem>\n        <Box\n          style={{ display: 'flex', justifyContent: 'flex-end', width: '100%' }}\n        >\n          <Button\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              onDelete?.(e)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </Button>\n        </Box>\n      </BoxItem>\n    ))\n  }\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const rowClick = (row: ImagesDatabase) => {\n    const { view, checkNext, checkPre } = onRowClick(datasTable, row)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const rowDataClick = (row: any) => {\n    if (!row?.image_url || !timeoutClick.current) {\n      timeoutClick.current = setTimeout(() => {\n        timeoutClick.current = undefined\n      }, 300)\n      return\n    }\n    setViewer({\n      open: true,\n      url: row.image_url,\n      jsonData: row.jsonData,\n    })\n    setDisabled({ left: true, right: true })\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC') => {\n    let orderbyCheck: 'DESC' | 'ASC' | '' = orderByValue\n    if (orderBy === 'DESC' && orderByValue === 'ASC') {\n      orderbyCheck = ''\n    }\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDataTable.records)),\n      orderbyCheck,\n      orderKey,\n    )\n    setDatasTable({ ...datasTable, records: data as any })\n    setColumnSort(orderKey)\n    setOrdeBy(orderbyCheck)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(datasTable as any, viewer.image, false)\n    if (imageNext) rowClick(imageNext as ImagesDatabase)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(datasTable, viewer.image, true)\n    if (imagePre) rowClick(imagePre as ImagesDatabase)\n  }\n\n  return (\n    <ProjectsWrapper>\n      {openFilter && <PopupSearch onClose={() => setOpenFilter(false)} />}\n      <ImageView\n        disabled={disabled}\n        url={viewer.url}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n      />\n      {isEditName ? (\n        <InputName\n          autoFocus\n          onBlur={() => setIsEditName(false)}\n          value={projectName}\n          onChange={onChangeName}\n        />\n      ) : (\n        <TextName onClick={() => setIsEditName(true)}>{projectName}</TextName>\n      )}\n      <BoxOptions\n        aria-labelledby=\"demo-radio-buttons-group-label\"\n        value={projectLevel}\n        name=\"radio-buttons-group\"\n        onChange={handleChangeLevel}\n      >\n        <Box>\n          <Box>\n            <FormControlLabel\n              value=\"factor\"\n              control={<Radio />}\n              label=\"Between factor\"\n            />\n          </Box>\n          <FormControlLabel\n            value=\"within-factor\"\n            control={<Radio />}\n            label=\"Between factor-within factor\"\n          />\n        </Box>\n      </BoxOptions>\n      <DropAndDropBox>\n        <DragBox>\n          {dataFactors.map((factor, index) => {\n            return (\n              <Fragment key={factor.id}>\n                <BoxFactor>\n                  <Input\n                    onChange={(e) => onChangeNameFactor(factor, e.target.value)}\n                    style={{ width: 'calc(100% - 64px)' }}\n                    value={\n                      factor.name === nameDefault\n                        ? `Between factor name ${index}`\n                        : factor.name\n                    }\n                  />\n                  <Button onClick={() => onDeleteFactor(factor)}>\n                    <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                  </Button>\n                  {projectLevel === 'within-factor' ? (\n                    factor.within.map((within, indexWithin) => (\n                      <BoxFactor key={within.id} style={{ marginLeft: 24 }}>\n                        <Input\n                          onChange={(e) =>\n                            onChangeNameWithinFactor(\n                              factor,\n                              within,\n                              e.target.value,\n                            )\n                          }\n                          style={{ width: 'calc(100% - 64px)' }}\n                          value={\n                            within.name === nameDefault\n                              ? `Within factor name ${indexWithin}`\n                              : within.name\n                          }\n                        />\n                        <Button onClick={() => onDeleteWithin(factor, within)}>\n                          <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                        </Button>\n                        {renderData(within.data, { marginLeft: 48 }, (row) => {\n                          onDeleteDataWithin(factor, within, row)\n                        })}\n                        <BoxDrag\n                          style={{\n                            borderBottom: rowDrag ? '1px dashed red' : '',\n                          }}\n                          onDrop={() => onDropData(factor, within)}\n                          onMouseOver={() => onMouseOver(factor, within)}\n                          onDragOver={onDragOver}\n                          onDragLeave={onDragLeave}\n                        />\n                      </BoxFactor>\n                    ))\n                  ) : (\n                    <>\n                      {renderData(factor.data, { marginLeft: 24 }, (row) => {\n                        onDeleteDataFactor(factor, row)\n                      })}\n                      <BoxDrag\n                        style={{\n                          borderBottom: rowDrag ? '1px dashed red' : '',\n                        }}\n                        onDrop={() => onDropData(factor)}\n                        onDragOver={onDragOver}\n                        onDragLeave={onDragLeave}\n                        onMouseOver={() => onMouseOver(factor)}\n                      />\n                    </>\n                  )}\n                </BoxFactor>\n                {projectLevel === 'within-factor' && dataFactors.length ? (\n                  <NewRowButton\n                    onClick={() => onAddWithin(factor.id)}\n                    style={{ marginLeft: 24 }}\n                  >\n                    + Add Within Factor\n                  </NewRowButton>\n                ) : null}\n              </Fragment>\n            )\n          })}\n          <NewRowButton onClick={onAddBetween}>\n            + Add Between Factor\n          </NewRowButton>\n        </DragBox>\n        <DropBox>\n          <BoxFilter>\n            <ButtonFilter\n              onClick={() => setOpenFilter(true)}\n              style={{ margin: '0 26px 0 0' }}\n            >\n              Filter\n            </ButtonFilter>\n          </BoxFilter>\n          <DatabaseTableComponent\n            onSort={handleSort}\n            orderKey={columnSort}\n            orderBy={orderBy}\n            rowClick={rowClick}\n            defaultExpand\n            onDrag={onDragRow}\n            onDragEnd={onDragEnd}\n            draggable\n            data={datasTable.records}\n            columns={columns}\n          />\n        </DropBox>\n      </DropAndDropBox>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <ButtonFilter onClick={() => navigate('/projects')}>\n          {idEdit ? 'Ok' : 'Add'}\n        </ButtonFilter>\n        <ButtonFilter\n          onClick={() => navigate(!routeGoback ? '/projects' : routeGoback)}\n        >\n          Cancel\n        </ButtonFilter>\n      </Box>\n    </ProjectsWrapper>\n  )\n}\n\nconst TextName = styled(Typography)(({ theme }) => ({\n  textOverflow: 'ellipsis',\n  width: 'calc(40% - 16px)',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  padding: theme.spacing(1),\n  borderWidth: 1,\n  fontSize: 16,\n}))\n\nconst BoxItem = styled(Box)({\n  display: 'flex',\n  height: 40,\n  alignItems: 'center',\n  borderBottom: '1px solid rgba(0,0,0,0.8)',\n  paddingLeft: 16,\n  marginBottom: 4,\n})\n\nconst TypographyBoxItem = styled(Box)({\n  minWidth: 120,\n})\n\nconst BoxDrag = styled(Box)({\n  paddingBottom: 24,\n  width: '100%',\n  borderWidth: 1,\n})\n\nconst BoxFactor = styled(Box)({})\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n  height: 'calc(100% - 32px)',\n  marginBottom: theme.spacing(3),\n}))\n\nconst BoxOptions = styled(RadioGroup)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(1, 2),\n  display: 'flex',\n  flexDirection: 'inherit',\n}))\n\nconst InputName = styled('input')(({ theme }) => ({\n  padding: theme.spacing(1),\n  outline: 'none',\n  borderColor: 'transparent',\n  fontSize: 18,\n  width: 'calc(40% - 16px)',\n  '&:focus': {\n    borderColor: '#000',\n  },\n  display: 'block',\n  borderWidth: 1,\n}))\n\nconst DropAndDropBox = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  gap: theme.spacing(2),\n}))\n\nconst DragBox = styled(Box)(({ theme }) => ({\n  width: '40%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #000',\n  minHeight: 100,\n}))\n\nconst DropBox = styled(Box)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #dedede',\n}))\n\nconst NewRowButton = styled(Button)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  borderStyle: 'dashed',\n  borderWidth: 1,\n  margin: theme.spacing(1, 0),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 1),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  color: '#ffffff',\n  backgroundColor: '#283237 !important',\n}))\n\nconst BoxFilter = styled(Box)({\n  display: 'flex',\n  marginBottom: 10,\n  justifyContent: 'flex-end',\n})\n\nexport default ProjectFormComponent\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { ChangeEvent, FormEvent, useState } from 'react'\n\nconst regexEmail = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/\nconst ResetPassword = () => {\n\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n    }\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        if (!values.email) {\n            errors.email = 'This field is required'\n        }\n        if(!regexEmail.test(values.email)) errors.email = 'This field is validate'\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"flex-end\"\n                    >\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Project from './components/Project'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport AccountManager from 'pages/AccountManager'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Projects from './pages/Projects'\nimport Database from './pages/Database'\nimport Login from 'pages/Login'\nimport Signup from 'pages/Signup'\nimport ProjectFormComponent from \"./pages/Projects/Create\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<Dashboard />} />\n            <Route path=\"/projects/workflow\" element={<Project />} />\n            <Route path=\"/account-manager\" element={<AccountManager />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            <Route path=\"/database\" element={<Database />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            <Route path=\"/signup\" element={<Signup />} />\n            <Route path=\"/account-deleted\" element={<AccountDelete />} />\n            <Route path=\"/projects/new-project\" element={<ProjectFormComponent />} />\n          </Routes>\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.timestamp,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n} from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}