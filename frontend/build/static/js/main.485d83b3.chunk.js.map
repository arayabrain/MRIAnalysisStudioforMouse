{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/selectors/run/RunSelectors.ts","const/API.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/FlowChart/Snakemake.tsx","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/DialogContext.tsx","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","store/slice/DisplayData/DisplayDataSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","components/Visualize/DataContext.tsx","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","components/Visualize/Plot/CsvPlot.tsx","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/ImageAlignment/index.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/CollapsibleTable.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Experiment/Experiment.tsx","components/VisualizeNew/index.tsx","components/Project.tsx","store/slice/Pipeline/PipelineHook.ts","providers/index.ts","utils/auth/index.ts","components/Header.tsx","components/utils/axios.ts","api/auth/index.ts","components/Layout.tsx","pages/Dashboard/index.tsx","components/common/Input.tsx","components/common/Loading.tsx","components/ModalDeleteAccount/index.tsx","components/Table/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","components/InputPassword/index.tsx","components/ModalChangePassword/index.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","pages/Projects/index.tsx","components/DatabaseTable.tsx","components/ImageView/ChangeSize.tsx","components/ImageView/index.tsx","utils/database/index.ts","pages/Database/index.tsx","pages/Login/index.tsx","pages/Projects/Create.tsx","pages/ResetPassword/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","data","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNodeById","filter","find","id","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","label","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","outputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","isEdge","edge","HOST","process","PORT","BASE_URL","runApi","a","axios","post","response","runByUidApi","pendingNodeIdList","createAsyncThunk","thunkAPI","responseData","rejectWithValue","runByCurrentUid","currentUid","getState","pollRunResult","getExperimentsApi","get","deleteExperimentByUidApi","delete","deleteExperimentByListApi","uidList","importExperimentByUidApi","EXPERIMENTS_SLICE_NAME","getExperiments","_","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","initialState","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","extraReducers","builder","addCase","fulfilled","nodeResultDto","outputPath","message","convertToRunResult","rejected","meta","addMatcher","isAnyOf","pending","actions","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","position","newNode","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","style","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","config","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","editFlowElementParamsAlignmentById","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","max","random","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","Button","endIcon","NWBSettingContents","paramKeyList","className","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","errorMessage","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","navigate","useNavigate","float","textAlign","top","right","zIndex","textTransform","useHandleColor","key","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","createContext","onOpen","onOpenDialogFile","onMessageError","onOpenImageAlignment","FileSelect","multiSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","useSearchParams","searchParams","useContext","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","alpha","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","title","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","setHeader","setIndex","transpose","newState","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","DisplayDataContext","dataType","itemId","NaN","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectVisualizeItems","visualaizeItem","items","selectVisualizeItemById","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectRoiItemFilePath","roiItem","selectImageItemStartIndex","selectImageItemEndIndex","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","selectTimeSeriesItemFilePath","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","CsvPlot","isInitialized","isPending","isFulfilled","CsvPlotImple","selectCsvItemTranspose","selectCsvItemSetHeader","selectCsvItemSetIndex","PresentationalCsvPlot","csvData","useMemo","col","row","header","headerData","field","headerName","idx","rows","row_id","rowObj","fromEntries","columns","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","setOpen","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","p","m","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","setImageItemClikedDataId","clickedDataId","drawOrderList","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","isWorkflowDialog","imageItemInitialValue","showticklabels","showline","zsmooth","showgrid","showscale","colors","rgb","offset","activeIndex","roiAlpha","duration","timeSeriesItemInitialValue","span","zeroline","xrange","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","selectedItemId","layout","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","selectHeatMapItemShowScale","colorscale","selectHeatMapItemColors","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","selectImageItemShowticklabels","selectImageItemShowLine","selectImageItemZsmooth","selectImageItemShowGrid","selectImageItemShowScale","selectImageItemColors","selectImageItemAlpha","timeDataMaxIndex","maxIdx","selectRoiItemIndex","selectImageItemRoiAlpha","colorscaleRoi","createColormap","colormap","nshades","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","ml","PlayBack","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","text","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","selectTimeSeriesItemOffset","selectTimeSeriesItemSpan","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","selectTimeSeriesItemXrange","selectTimeSeriesItemDrawOrderList","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","selectVisualizeDataFilePath","selectVisualizeDataNodeId","selectVisualizeDataType","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allChecked","allNotChecked","indeterminate","TreeItemLabel","checkboxProps","Checkbox","disableRipple","ButtonClose","ButtonPre","backgroundColor","cursor","ButtonNext","InputImage","ImageViewWrapper","justifyContent","ContentSet","Flex","Text","ButtonSet","BoxSet","SwitchImage","flexDirection","SwitchContent","ButtonOk","ButtonCanCel","CloseIconWrapper","CloseIcon","ImageAlignment","urls","viewerRef","url","setUrl","isLoadFile","setIsLoadFile","loadedSuccess","setLoadedSuccess","volumes","stateParams","setStateParams","stateParamsEdit","setStateParamsEdit","loadFile","loadFileIndex","setInitBrainbrowser","loadInitUrl","setResize","x_resize","y_resize","z_resize","setVoxelCoords","y_pos","z_pos","x_pos","setRadian","y_rotate","x_rotate","z_rotate","redrawVolumes","paramsStore","onChangeValue","onBlurRadian","valueRadian","isNaN","PI","clearVolumes","loadVolumes","nii_url","template","element_id","viewer_insert_className","overlay","complete","brainbrowser","window","BrainBrowser","color_map_config","VolumeViewer","start","viewer","addEventListener","volume","paramsNode","xspace","radian","yspace","zspace","utils","isFunction","getVoxelCoords","voxel","k","j","urlColor","cursor_color","loadDefaultColorMapFromURL","setDefaultPanelSize","render","Modal","minHeight","onBlur","gap","readOnly","initDialogFile","ReactFlowComponent","openPopupAlignment","setOpenPopupAlignment","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","accept","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","flag","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","preventDefault","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","Popover","anchorOrigin","vertical","horizontal","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","borderRight","paddingTop","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","ExperimentStatusIcon","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","timeout","unmountOnExit","Table","Head","Body","unique_id","TableHead","TableBody","TableRowOfFunction","success","outputs","popup","setPopup","component","scope","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","ExperimentUidContext","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListKeys","checkedList","setCheckedList","recordsIsEmpty","createAt","page","setPage","storageKey","initialValue","parseFn","savedStr","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","valueNum","rowsPerPage","setRowsPerPage","emptyRows","flexGlow","records","TableContainer","RowItem","secondary","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","Fragment","tableCellClasses","root","borderBottomWidth","Experiment","WrapperInput","Wrapper","VisualizeInput","Title","fontWeight","CutCoords","VisualizeInputWrapper","ButtonWrapper","VisualizeButton","ImageWrapper","Image","objectFit","VisualizeNew","Container","src","alt","StyledAppBar","drawer","TabPanel","other","hidden","a11yProps","Project","setParams","runPipeline","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","set","centered","textColor","href","UserContext","setUser","useUser","saveToken","access_token","getToken","isAdmin","isReseacher","optionsRole","code","BoxDropdown","listStyleType","backgroundClip","outline","BoxWrapper","BoxMenu","userSelect","BoxInfo","BoxMenuItem","transform","BoxMenuItemLogout","TitleLogo","HeaderWrapper","Header","user","refMenu","blur","display_name","email","removeItem","axiosLibrary","baseURL","interceptors","request","use","headers","Authorization","Promise","reject","login","getMe","listUser","query","createUser","editUser","userId","put","deleteUser","resetPassword","drawerWidth","ignorePaths","MenuLeft","onResize","pathname","useLocation","isClose","MenuLeftWrapper","BoxBack","ButtonBack","BoxDivider","KeyboardBackspaceIcon","LinkWrapper","to","active","TypographyMenu","Link","textDecoration","LayoutWrapper","ContentBodyWrapper","paddingRight","ChildrenWrapper","KeyboardBackspace","shouldForwardProp","listStyle","lineHeight","Layout","location","setWidth","checkkAuth","token","DashboardWrapper","DashboardContent","flexWrap","TitleMenu","Dashboard","Input","LoaderWrapper","bottom","rotate","keyframes","prixClipFix","Loader","animation","content","boxSizing","inset","Loading","ContentDelete","ButtonConfirm","BoxConfirm","ModalDeleteAccount","onSubmit","titleSubmit","description","textDelete","setTextDelete","whiteSpace","placeholder","MyPaginate","ReactPaginate","borderCollapse","Thead","Tr","Th","borderTopLeftRadius","borderTopRightRadius","TBody","Td","maxWidth","wordBreak","NoData","ArrowDownwardIconOrder","ArrowDownwardIcon","TableComponent","paginate","orderBy","orderKey","pageCount","page_size","renderCol","dataIndex","iCol","nameCol","align","disableInitialCallback","marginPagesDisplayed","pageRangeDisplayed","breakLabel","previousLabel","nextLabel","TextError","InputError","autoComplete","SelectModal","SelectError","options","initState","password","lab","confirmPassword","ModalComponent","onSubmitEdit","setIsOpenModal","dataEdit","regex","regexPassword","setFormData","isDisabled","setIsDisabled","errors","setErrors","validateEmail","validateField","test","validatePassword","isConfirm","errorLength","validateLength","datas","validateForm","errorName","errorEmail","errorLab","errorRole","onChangeData","newDatas","errorConfirm","toLowerCase","newErrors","some","alert","ModalBox","TitleModal","BoxData","LabelModal","ButtonModal","AccountManagerWrapper","BoxButton","ButtonAdd","ALink","button","AccountManager","openDelete","setOpenDelete","isOpenModal","setDataEdit","idDel","setIdDel","setData","setIsLoading","per_page","next_page_token","setPaginate","getList","nextPageToken","newData","pre","total_page","handleCloseDelete","onDelete","onForgotPassword","InputPassword","setType","BoxTitle","FormInline","Label","ModalChangePassword","setValues","validate","validateReEnter","new_password","reEnter","confirm_password","AccountWrapper","BoxFlex","TitleData","ButtonSubmit","Account","isEditName","setIsEditName","openChangePw","setOpenChangePw","handleCloseChangePw","mt","AccountDelete","ProjectsWrapper","ProjectsTitle","letterSpacing","Projects","idDelete","setIdDelete","created_time","updated_time","image_count","project_type","onEdit","onWorkflow","console","log","onResults","addNewProject","RenderColumn","recordIndex","rowClick","drags","onMouseDown","draggable","onDrag","openChild","setOpenChild","openChildParent","setOpenChildPrent","subjects","openSubjects","setOpenSubjects","isDrag","drag","session_id","datatype_index","onDragEvent","datatypes","column","BoxCenter","sub","subject_index","subId","o","sessions","session","session_index","ii","images","image_index","datatype_label","subject_id","parent_id","record_index","onDragStart","BoxDrag","TableWrap","overflowX","DataTable","DatabaseTableComponent","onSort","onBeginDragProps","onBeginDrag","setDrags","pageX","pageY","mouseMoveRect","setMouseMoveRect","timeoutClick","ctrRef","refTable","refTdSelect","mouseStart","beginDrag","setBeginDrag","onKeydownEvent","onKeyupEvent","onMouseUp","onMouseMove","removeEventListener","ctrlKey","metaKey","onRowClickEvent","idDom","tds","currentTarget","getElementsByTagName","dom","innerHTML","order","onSortHandle","allowMutilKey","draggableProps","el","rowId","trNow","getBoundingClientRect","td","Dot","TitleScale","BoxLine","ScaleWrapper","ChangeDrag","onChangeMin","showInputMax","mouseDown","refDrag","refDot","getWidth","clientWidth","onTouchStart","touches","mouseInit","scale","onTouchMove","toPrecision","onTouchEnd","BoxLoading","ButtonPrevious","BoxContentData","WrapperJson","TextArea","borderLeft","ArrowBackIosIconWrapper","ArrowBackIosIcon","ArrowForwardIosIconWrapper","ArrowForwardIosIcon","ImageView","onNext","onPrevious","jsonData","worldCoords","setWorldCoords","voxelCoords","setOpacity","thresholds","setThresholds","maxThres","setMaxThres","contracts","setContracts","brightness","setBrightness","intensity_min","intensity_max","getIntensityValue","getWorldCoords","num","showInputMin","setContrast","refreshPanels","onRowClick","view","image_url","attributes","image_attributes","checkNext","onGet","checkPre","isSub","indexImageNow","record","dataNow","subjectNow","sessionNow","datatypeNow","imagePre","datatypeImagePre","imageNext","datatypeNext","sortWithLabName","datasTable","typeOrder","sort","sortSubjectTree","dataA","dataB","subjectsA","subA","subB","subjectsB","sortSessionTree","sessionsA","sA","sB","flat","sessionsB","subSessA","subSessB","ssA","ssB","sortDataTypeTree","ses","ss","dataTypeA","dataTypeB","typeA","typeB","sortAttributesTypeTree","s","imageA","imageB","sortWithKey","valueA","valueB","sortWithTime","Date","recording_time","PopupSearch","onFilter","Popup","PopupInner","HeaderTitle","ButtonControl","InputSearch","defaultDatabase","pagenation","limit","total_pages","lab_name","user_name","protocol","voxel_size","dataImages","subject_label","session_label","datatypes_label","image_id","child","DatabaseWrapper","ButtonFilter","BoxSelectTypeView","Database","openPopup","setOpenPopup","setViewer","setDatasTable","initDataTable","setInitDataTable","setOrdeBy","columnSort","setColumnSort","setDisabled","DatabaseTable","defaultExpand","orderByValue","LoginWrapper","LoginContent","FormSignUp","LabelField","LableRequired","Description","LinkWrappper","ButtonLogin","Login","validateSubmit","getUser","Stack","nameDefault","TextName","borderWidth","BoxItem","TypographyBoxItem","BoxFactor","BoxOptions","RadioGroup","InputName","DropAndDropBox","DragBox","DropBox","NewRowButton","borderStyle","BoxFilter","ProjectFormComponent","idEdit","imageIDs","setImageIDs","routeGoback","isPendingDrag","projectName","setProjectName","projectLevel","setProjectLevel","openFilter","setOpenFilter","rowDrag","setRowDrag","within","dataFactors","setDataFactors","onMouseOver","factor","onDropData","newIds","project_name","w","onDragLeave","renderData","rowDataClick","Radio","onChangeNameFactor","rowData","indexWithin","onChangeNameWithinFactor","onDeleteWithin","onDeleteDataWithin","onDrop","onDeleteDataFactor","idFactor","mouseup","regexEmail","Heading","ButtonSignIn","ResetPassword","onReset","errorCheck","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","deleteData","prevDataType","prevFilePath","roi1Ddata","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","functions","function","convertToExperimentStatus","hasNWB","timestamp","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.485d83b3.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = (AlgorithmNodeData | InputNodeData) & {params?: Params}\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport type Params = {\n  x_pos: number\n  y_pos: number\n  z_pos: number\n  x_rotate: number\n  y_rotate: number\n  z_rotate: number\n  x_resize: number\n  y_resize: number\n  z_resize: number\n}\n\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(data: RunPostData): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { uid, pendingNodeIdList } = data\n  const response = await axios.post(`${BASE_URL}/run/result/${uid}`, {\n    pendingNodeIdList,\n  })\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  try {\n    const responseData = await runApi(runPostData)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (currentUid != null) {\n      try {\n        const responseData = await runByUidApi(currentUid, runPostData)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  try {\n    const responseData = await runResult({ uid, pendingNodeIdList })\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { RunPostData } from 'api/run/Run'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type ExperimentDTO = {\n  function: {\n    [uid: string]: {\n      name: string\n      success: string\n      unique_id: string\n      hasNWB: boolean\n    }\n  }\n  name: string\n  success: string\n  timestamp: string\n  unique_id: string\n  hasNWB: boolean\n}\n\nexport async function getExperimentsApi(): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\n\nexport const getExperiments = createAsyncThunk<ExperimentsDTO, undefined>(\n  `${EXPERIMENTS_SLICE_NAME}/getExperiments`,\n  async (_, thunkAPI) => {\n    try {\n      const response = await getExperimentsApi()\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 130,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n  Params,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initParams = {\n  x_pos: 0,\n  y_pos: 0,\n  z_pos: 0,\n  x_rotate: 0,\n  y_rotate: 0,\n  z_rotate: 0,\n  x_resize: 0,\n  y_resize: 0,\n  z_resize: 0,\n}\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n    editFlowElementParamsAlignmentById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        params: Params\n      }>,\n    ) => {\n      let { nodeId, params } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        if (!targetItem.data) {\n          return\n        }\n        targetItem.data.params = params\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      }),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n  editFlowElementParamsAlignmentById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n      }}\n    >\n      <Button onClick={() => navigate('/projects')}>\n        <ArrowBackIosIcon />\n        Projects\n      </Button>\n      <SnakemakeButton />\n      <NWBSettingButton />\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n  onOpenImageAlignment: (v: boolean, params?: { [key: string]: string | undefined }) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n  onOpenImageAlignment: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { DialogContext } from '../DialogContext'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        nodeId={nodeId}\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n  nodeId?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({ filePath, nodeId }) => {\n    const navigate = useNavigate()\n    const [searchParams] = useSearchParams()\n    const { onOpenImageAlignment } = useContext(DialogContext)\n    const id = searchParams.get('id')\n    const getNameSelectec = () => {\n      if (Array.isArray(filePath)) {\n        return `${filePath.length} images selected.`\n      }\n      return `${filePath ? 1 : 0} images selected.`\n    }\n\n    return (\n      <div style={{ padding: 16 }}>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: 'auto' }}>\n          <Button\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n            onClick={() =>\n              navigate(\n                `/projects/new-project?id=${id}&back=/projects/workflow?tab=0&id=${id}`,\n              )\n            }\n          >\n            EDIT IMAGESET\n          </Button>\n        </ButtonGroup>\n        <div style={{ marginTop: 8 }}>\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {getNameSelectec()}\n          </Typography>\n        </div>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: '8px 0' }}>\n          <Button\n            onClick={() => onOpenImageAlignment(true, { nodeId })}\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n          >\n            ALIGNMENT\n          </Button>\n        </ButtonGroup>\n      </div>\n    )\n  },\n)\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        label=\"dur[msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { ChangeEvent, FC, useEffect, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { Object } from 'pages/Database'\nimport { selectNodeById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { editFlowElementParamsAlignmentById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { Params } from 'store/slice/FlowElement/FlowElementType'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  urls: string[]\n  jsonData?: Object\n  disabled?: { left: boolean; right: boolean }\n  params?: { [key: string]: string | undefined }\n}\n\nconst ImageAlignment: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  urls,\n  params = {},\n}) => {\n  const viewerRef = useRef<any>()\n  const [url, setUrl] = useState(urls[0])\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const [loadedSuccess, setLoadedSuccess] = useState(false)\n  const volumes = useRef<any>()\n  const dispatch = useDispatch()\n\n  const flowElement = useSelector(selectNodeById(params?.nodeId as string))\n\n  const [stateParams, setStateParams] = useState<Params | undefined>(\n    flowElement?.data?.params,\n  )\n  const [stateParamsEdit, setStateParamsEdit] = useState<Params | undefined>(\n    flowElement?.data?.params,\n  )\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n\n  useEffect(() => {\n    if (loadedSuccess) {\n      setInitBrainbrowser()\n    }\n    //eslint-disable-next-line\n  }, [loadedSuccess, url])\n\n  const onOk = () => {\n    if (params?.nodeId && stateParams) {\n      dispatch(\n        editFlowElementParamsAlignmentById({\n          nodeId: params.nodeId,\n          params: stateParams,\n        }),\n      )\n    }\n    onClose?.()\n  }\n\n  const onPreImage = () => {\n    const index = urls.findIndex((item) => item === url)\n    if (index === 0) return\n    setUrl(urls[index - 1])\n  }\n\n  const onNextImage = () => {\n    const index = urls.findIndex((item) => item === url)\n    if (index === urls.length - 1) return\n    setUrl(urls[index + 1])\n  }\n\n  const loadInitUrl = () => {\n    if (stateParams) {\n      volumes.current.setResize({\n        x: Number(stateParams.x_resize),\n        y: Number(stateParams.y_resize),\n        z: Number(stateParams.z_resize),\n      })\n      volumes.current.setVoxelCoords(\n        Number(stateParams.y_pos),\n        Number(stateParams.z_pos),\n        Number(stateParams.x_pos),\n      )\n      volumes.current.setRadian(\n        Number(stateParams.y_rotate),\n        Number(stateParams.x_rotate),\n        Number(stateParams.z_rotate),\n      )\n    }\n    viewerRef.current.redrawVolumes()\n  }\n\n  const setInitBrainbrowser = () => {\n    const paramsStore = flowElement?.data?.params\n    if (paramsStore) {\n      volumes.current.setResize({\n        x: Number(paramsStore.x_resize),\n        y: Number(paramsStore.y_resize),\n        z: Number(paramsStore.z_resize),\n      })\n      volumes.current.setVoxelCoords(\n        Number(paramsStore.y_pos),\n        Number(paramsStore.z_pos),\n        Number(paramsStore.x_pos),\n      )\n      volumes.current.setRadian(\n        Number(paramsStore.y_rotate),\n        Number(paramsStore.x_rotate),\n        Number(paramsStore.z_rotate),\n      )\n    }\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onSetOrigin = () => {\n    if (stateParamsEdit) {\n      volumes.current.setResize({\n        x: Number(stateParamsEdit.x_resize),\n        y: Number(stateParamsEdit.y_resize),\n        z: Number(stateParamsEdit.z_resize),\n      })\n      volumes.current.setVoxelCoords(\n        Number(stateParamsEdit.y_pos),\n        Number(stateParamsEdit.z_pos),\n        Number(stateParamsEdit.x_pos),\n      )\n      volumes.current.setRadian(\n        Number(stateParamsEdit.y_rotate),\n        Number(stateParamsEdit.x_rotate),\n        Number(stateParamsEdit.z_rotate),\n      )\n    }\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    if (params?.nodeId && stateParamsEdit) {\n      setStateParamsEdit({ ...stateParamsEdit, [name]: value })\n    }\n  }\n\n  const onBlurRadian = (e: any) => {\n    const { name, value } = e.target\n    let valueRadian = Number(value)\n    if (isNaN(valueRadian)) {\n      valueRadian = 0\n    } else if (valueRadian < 0) {\n      valueRadian = 0\n    } else if (valueRadian > 2 * Math.PI) {\n      valueRadian = 0\n    }\n    if (params?.nodeId && stateParams) {\n      setStateParams({ ...stateParams, [name]: value })\n    }\n  }\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    setLoadedSuccess(false)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n        },\n      ],\n      complete: loadInitUrl,\n    })\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    setLoadedSuccess(false)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', function (event: any) {\n          if (!stateParamsEdit) {\n            const { volume } = event\n            const paramsNode: Params = {\n              x_pos: 0,\n              y_pos: 0,\n              z_pos: 0,\n              x_rotate: volume.header.xspace.radian,\n              y_rotate: volume.header.yspace.radian,\n              z_rotate: volume.header.zspace.radian,\n              x_resize: volume.header.xspace.step,\n              y_resize: volume.header.yspace.step,\n              z_resize: volume.header.zspace.step,\n            }\n            volumes.current = volume\n            if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n              const voxel = volume.getVoxelCoords()\n              paramsNode.x_pos = voxel.k\n              paramsNode.y_pos = voxel.i\n              paramsNode.z_pos = voxel.j\n            }\n            setStateParamsEdit(paramsNode)\n          }\n          setIsLoadFile(false)\n          setLoadedSuccess(true)\n        })\n        viewer.addEventListener('sliceupdate', function (event: any) {\n          const { volume } = event\n          const paramsNode: Params = {\n            x_pos: 0,\n            y_pos: 0,\n            z_pos: 0,\n            x_rotate: volume.header.xspace.radian,\n            y_rotate: volume.header.yspace.radian,\n            z_rotate: volume.header.zspace.radian,\n            x_resize: volume.header.xspace.step,\n            y_resize: volume.header.yspace.step,\n            z_resize: volume.header.zspace.step,\n          }\n          volumes.current = volume\n          if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n            const voxel = volume.getVoxelCoords()\n            paramsNode.x_pos = voxel.k\n            paramsNode.y_pos = voxel.i\n            paramsNode.z_pos = voxel.j\n          }\n          setStateParams(paramsNode)\n          setStateParamsEdit(paramsNode)\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {},\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div style={{ alignItems: 'stretch' }}>\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              <Flex>\n                <BoxSet>\n                  <ContentSet>\n                    <Flex>\n                      <Text>right {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"x_pos\"\n                        value={stateParamsEdit?.x_pos || 0}\n                        onChange={onChangeValue}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>forward {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"y_pos\"\n                        value={stateParamsEdit?.y_pos || 0}\n                        onChange={onChangeValue}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>up {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"z_pos\"\n                        value={stateParamsEdit?.z_pos || 0}\n                        onChange={onChangeValue}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>roll {'{rad}'}</Text>\n                      <input\n                        name=\"x_rotate\"\n                        value={stateParamsEdit?.x_rotate || 0}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>pitch {'{rad}'}</Text>\n                      <input\n                        name=\"y_rotate\"\n                        value={stateParamsEdit?.y_rotate || 0}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>yaw {'{rad}'}</Text>\n                      <input\n                        name=\"z_rotate\"\n                        value={stateParamsEdit?.z_rotate || 0}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{x}'}</Text>\n                      <input\n                        name=\"x_resize\"\n                        value={stateParamsEdit?.x_resize || 0}\n                        onChange={onChangeValue}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{y}'}</Text>\n                      <input\n                        value={stateParamsEdit?.y_resize || 0}\n                        name=\"y_resize\"\n                        onChange={onChangeValue}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{z}'}</Text>\n                      <input\n                        value={stateParamsEdit?.z_resize || 0}\n                        name=\"z_resize\"\n                        onChange={onChangeValue}\n                      />\n                    </Flex>\n                    <ButtonSet onClick={onSetOrigin}>Set Origin</ButtonSet>\n                  </ContentSet>\n                </BoxSet>\n                <Flex\n                  sx={{\n                    flexDirection: 'column',\n                    position: 'relative',\n                    gap: 15,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <SwitchImage>\n                    <span>Select Image</span>\n                    <SwitchContent>\n                      <ButtonPre onClick={onPreImage}>{'<'}</ButtonPre>\n                      <InputImage value={url} readOnly />\n                      <ButtonNext onClick={onNextImage}>{'>'}</ButtonNext>\n                    </SwitchContent>\n                    <span>{`(${\n                      urls.findIndex((item: string) => item === url) + 1\n                    }/${urls.length})`}</span>\n                  </SwitchImage>\n                  <Flex sx={{ gap: 5 }}>\n                    <ButtonCanCel onClick={onClose}>CANCEL</ButtonCanCel>\n                    <ButtonOk onClick={onOk}>OK</ButtonOk>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </div>\n          </div>\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  right: '10%',\n  top: '10%',\n  zIndex: 9999,\n  background: 'rgba(0, 0, 0, 0.6)',\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.8)',\n  },\n})\n\nconst ButtonPre = styled('button')({\n  width: 50,\n  height: 50,\n  position: 'unset',\n  zIndex: 1,\n  borderRadius: '50%',\n  backgroundColor: 'unset',\n  border: 'none',\n  cursor: 'pointer',\n  fontSize: 20,\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.1)',\n  },\n})\n\nconst ButtonNext = styled(ButtonPre)({\n  right: '10%',\n})\n\nconst InputImage = styled('input')({\n  height: 'fit-content',\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: '#fff',\n})\n\nconst ContentSet = styled(Box)({\n  padding: 20,\n})\n\nconst Flex = styled(Box)({\n  display: 'flex',\n})\n\nconst Text = styled('span')({\n  display: 'block',\n  minWidth: 150,\n})\n\nconst ButtonSet = styled('button')({\n  marginTop: 20,\n  cursor: 'pointer',\n})\n\nconst BoxSet = styled(Box)({\n  border: '2px solid #000',\n  width: 'fit-content',\n  margin: '30px 50px',\n})\n\nconst SwitchImage = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n})\n\nconst SwitchContent = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst ButtonOk = styled('button')({\n  padding: '10px 20px',\n  background: '#000000c7',\n  border: '2px solid #000',\n  color: '#fff',\n  cursor: 'pointer',\n})\n\nconst ButtonCanCel = styled('button')({\n  padding: 10,\n  border: '2px solid #000',\n  cursor: 'pointer',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageAlignment\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\nimport ImageAlignment from '../ImageAlignment'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n    const [openPopupAlignment, setOpenPopupAlignment] = useState<{\n      open: boolean\n      params?: { [key: string]: string | undefined }\n    }>({\n      open: false,\n      params: {},\n    })\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n            onOpenImageAlignment: (flag, params) => {\n              setOpenPopupAlignment({ open: flag, params })\n            },\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                elements={flowElements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                onLoad={onLoad}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition.x, flowPosition.y]}\n                defaultZoom={flowPosition.zoom}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          <ImageAlignment\n            open={openPopupAlignment.open}\n            onClose={() => setOpenPopupAlignment({ open: false })}\n            urls={['/lib/test.nii', '/lib/test0.nii']}\n            params={openPopupAlignment.params}\n          />\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { Box } from '@mui/material'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer>\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n  height: '100%',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n    paddingTop: theme.spacing(1.125),\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, {useState} from 'react'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nimport {MouseType} from './ExperimentTable'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport {Button} from \"@mui/material\";\nimport ImageAlignment from \"../ImageAlignment\";\n\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n  data?: MouseType[]\n}>(({ open , data}) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Table size=\"small\" aria-label=\"purchases\">\n            <Head />\n            {data && data.map((item) => {\n              return (\n                <Body key={item?.unique_id} data={item}/>\n              )\n            })}\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>Output</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo<{\n    data: MouseType\n}>(({data}) => {\n  return (\n    <TableBody>\n      <TableRowOfFunction data={data} />\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = ({ data } : {data: MouseType}) => {\n    const {name, success, outputs, unique_id} = data\n    const [popup, setPopup] = useState(false)\n  return (\n    <>\n        <TableRow >\n            <TableCell component=\"th\" scope=\"row\">\n                {name}\n            </TableCell>\n            <TableCell>{unique_id}</TableCell>\n            <TableCell>\n                <ExperimentStatusIcon status={success} />\n            </TableCell>\n            <TableCell>\n                <Button onClick={() => setPopup(true)}>\n                    <OpenInNewIcon />\n                </Button>\n            </TableCell>\n        </TableRow>\n        <ImageAlignment\n            open={popup}\n            urls={outputs}\n            onClose={() => setPopup(false)}\n        />\n    </>\n  )\n}\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableRow from '@mui/material/TableRow'\nimport TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { EXPERIMENTS_STATUS} from 'store/slice/Experiments/ExperimentsType'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport {useNavigate} from \"react-router-dom\";\n\nexport type MouseType = {\n    unique_id: string\n    name: string\n    success: EXPERIMENTS_STATUS\n    outputs: string[]\n}\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\ntype Data = {\n    pagenation: object\n    records: {\n        id: number\n        name: string\n        data?: MouseType[]\n    }[]\n    nodeDict: object\n    edgeDict: object\n    createAt: string\n}\n\nconst data: Data = {\n  \"pagenation\": {\n    \"page\": 0,\n    \"limit\": 0,\n    \"total\": 0,\n    \"total_pages\": 0\n  },\n  \"records\": [{\n      \"id\": 0,\n      \"name\": \"MOUSE\",\n      \"data\": [{\n          \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n          \"name\": \"caiman_cnmf\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"caiman_mc_2rg3nrb410\",\n          \"name\": \"caiman_mc\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"input_0\",\n          \"name\": \"mouse2p_2_donotouse.tiff\",\n          \"success\": \"success\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]}\n        ]\n      },\n      {\n          \"id\": 1,\n          \"name\": \"MOUSE1\",\n          \"data\": [{\n              \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n              \"name\": \"caiman_cnmf\",\n              \"success\": \"error\",\n              \"outputs\": [\n                  \"/lib/test.nii\",\n                  \"/lib/test0.nii\",\n                  \"/lib/test1.nii\"\n              ]},\n              {\n                  \"unique_id\": \"caiman_mc_2rg3nrb410\",\n                  \"name\": \"caiman_mc\",\n                  \"success\": \"error\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]},\n              {\n                  \"unique_id\": \"input_0\",\n                  \"name\": \"mouse2p_2_donotouse.tiff\",\n                  \"success\": \"success\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]}\n          ]\n      },\n      {\n          \"id\": 2,\n          \"name\": \"MOUSE3\"\n      }\n  ],\n      \"nodeDict\": {},\n      \"edgeDict\": {},\n      \"createAt\": \"2023/04/07 04:28\"\n}\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'studio_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n  const recordsIsEmpty = experimentListKeys.length === 0\n  const createAt = data.createAt.split(' ')\n\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  const onClickBack = () => {\n    navigate('/projects')\n  }\n\n  const [page, setPage] = React.useState(0)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const [rowsPerPage, setRowsPerPage] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const newValue = parseInt(event.target.value, 10)\n    setRowsPerPage(newValue)\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Button onClick={onClickBack}\n        sx={{width: 'fit-content', textTransform: 'unset', fontSize: 20}}\n      >\n        <KeyboardBackspaceIcon /> Projects\n      </Button>\n      <Box sx={{display: 'flex', gap : 2, alignItems: 'center'}}>\n        <Typography>Status : </Typography>\n        <Box>\n          <ExperimentStatusIcon status={'success'}/>\n        </Box>\n        <Box>\n          <Typography>Timestamp: {createAt[0]}</Typography>\n          <Typography>{createAt[1]}</Typography>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        <Button\n          sx={{\n            margin: (theme) => theme.spacing(0, 1, 1, 0),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          color=\"error\"\n          endIcon={<DeleteIcon />}\n          onClick={onClickDelete}\n          disabled={checkedList.length === 0}\n        >\n          Delete\n        </Button>\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n         <Paper\n           elevation={0}\n           variant=\"outlined\"\n           sx={{\n               flexGlow: 1,\n               height: '100%',\n           }}\n         >\n           {\n             data.records.map((item) => {\n               const { name, id } = item\n                return (\n                <TableContainer key={id} component={Paper} elevation={0}>\n                  <Table aria-label=\"collapsible table\">\n                    <TableBody>\n                      <ExperimentUidContext.Provider\n                        value={String(id)}\n                        key={id}\n                      >\n                        <RowItem\n                          data={item.data}\n                          name={name}\n                        />\n                      </ExperimentUidContext.Provider>\n                       {emptyRows > 0 && (\n                         <TableRow\n                           style={{\n                             height: 53 * emptyRows,\n                           }}\n                          >\n                            <TableCell colSpan={10} />\n                          </TableRow>\n                      )}\n                      {recordsIsEmpty && (\n                          <TableRow>\n                            <TableCell colSpan={10}>\n                              <Typography\n                                  sx={{\n                                    color: (theme) => theme.palette.text.secondary,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    height: '300px',\n                                    textAlign: 'center',\n                                  }}\n                                  variant=\"h6\"\n                              >\n                                No Rows...\n                              </Typography>\n                            </TableCell>\n                          </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                )\n             })\n           }\n           <TablePagination\n               rowsPerPageOptions={[5, 10, 25]}\n               component=\"div\"\n               count={experimentListKeys.length}\n               rowsPerPage={rowsPerPage}\n               page={page}\n               onPageChange={handleChangePage}\n               onRowsPerPageChange={handleChangeRowsPerPage}\n           />\n         </Paper>\n    </Box>\n  )\n})\n\nconst RowItem = React.memo<{\n  name: string\n  data?: MouseType[]\n}>(({ name, data }) => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <React.Fragment>\n      <TableRow\n        onClick={() => data && setOpen((prevOpen) => !prevOpen)}\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell\n          sx={{padding: '20px',\n               display: 'flex',\n               alignItems: 'center'\n          }}\n        >\n          {name} {data && (!open ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />)}\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable data={data} open={open} />\n    </React.Fragment>\n  )\n})\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex', height: 'calc(100% - 58px)' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100%',\n          padding: 16,\n        }}\n      >\n        <MuiToolbar />\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import {styled, Box, Typography, Container} from \"@mui/material\";\n\nconst WrapperInput = ({text} : {text: string}) => {\n    return (\n        <Wrapper>\n            <Typography sx={{minWidth: 100}}>{text}</Typography>\n            <VisualizeInput sx={{width: 250}}/>\n        </Wrapper>\n    )\n}\n\nconst VisualizeNew = () => {\n  return (\n      <Container>\n          <Title>\n              STAT IMAGES\n          </Title>\n          <VisualizeInputWrapper>\n            <Box>\n                <WrapperInput text={'threshold'}/>\n            </Box>\n            <CutCoords>\n                <Typography>cut_coords</Typography>\n                <Box>\n                    <WrapperInput text={'coronal'}/>\n                    <WrapperInput text={'sagittal'}/>\n                    <WrapperInput text={'horizontal'}/>\n                </Box>\n            </CutCoords>\n          </VisualizeInputWrapper>\n          <ButtonWrapper>\n              <VisualizeButton>GENERATE</VisualizeButton>\n              <VisualizeButton>DOWNLOAD</VisualizeButton>\n          </ButtonWrapper>\n          <ImageWrapper>\n              <Image src={'/Images/image-visualize.png'} alt={''} />\n          </ImageWrapper>\n      </Container>\n  )\n}\n\nconst Wrapper = styled(Box)({\n    display: 'flex'\n})\n\nconst Title = styled(Typography)({\n    fontSize: 25,\n    fontWeight: 700,\n    margin: '50px 0',\n})\n\nconst CutCoords = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeInputWrapper = styled(Box)({\n    display: 'flex',\n    justifyContent: 'space-between'\n})\n\nconst ButtonWrapper = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeButton = styled('button')({\n    border: '1px solid #006fff',\n    color: '#006fff',\n    padding: 10,\n    '&:hover': {\n        cursor: 'pointer',\n        background: '#d1d7e0'\n    }\n})\n\nconst VisualizeInput = styled('input')({\n    height: 'fit-content'\n})\n\nconst ImageWrapper = styled(Box)({\n    width: '80%',\n    margin: 'auto'\n})\n\nconst Image = styled('img')({\n    width: '100%',\n    objectFit: 'contain'\n})\n\nexport default VisualizeNew","import React from 'react'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport Tooltip from '@mui/material/Tooltip'\nimport { styled } from '@mui/material/styles'\nimport GitHubIcon from '@mui/icons-material/GitHub'\nimport MenuBookIcon from '@mui/icons-material/MenuBook'\n\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport FlowChart from './FlowChart/FlowChart'\nimport Experiment from './Experiment/Experiment'\nimport { Box } from '@mui/material'\nimport { useSearchParams } from 'react-router-dom'\nimport VisualizeNew from \"./VisualizeNew\";\n\nconst Project: React.FC = () => {\n  const [searchParams, setParams] = useSearchParams()\n  const [value, setValue] = React.useState(Number(searchParams.get('tab') || 0))\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    searchParams.set('tab', String(newValue))\n    setParams(searchParams)\n    setValue(newValue)\n  }\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n  return (\n    <RootDiv>\n      <StyledAppBar color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          {/* <img src={studioLogo} alt=\"studio\" width={75} height={50} /> */}\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Results\" {...a11yProps(1)} />\n            <Tab label=\"Visualize\" {...a11yProps(2)} />\n          </Tabs>\n          <Tooltip title=\"GitHub repository\">\n            <IconButton\n              sx={{ mr: 1 }}\n              href=\"https://github.com/oist/studio\"\n              target=\"_blank\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Documentation\">\n            <IconButton\n              href=\"https://studio.readthedocs.io/en/latest/\"\n              target=\"_blank\"\n            >\n              <MenuBookIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <VisualizeNew />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\nconst StyledAppBar = styled(Box)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Project\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n      }\n      setPrevStatus(status)\n    }\n  }, [status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import { createContext, useContext } from 'react'\n\nexport type User = {\n  created_time: null | string\n  display_name: null | string\n  email: string\n  last_login_time: null | string\n  role: string\n  uid: string\n}\n\nexport const UserContext = createContext<{ user?: User; setUser: Function }>({\n  setUser: () => null,\n})\n\nexport const useUser = () => useContext(UserContext)\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\n\nexport const isAdmin = (role?: number | string) => {\n  return role === 1\n}\n\nexport const isReseacher = (role?: string | number) => {\n  return role === 20\n}\n\nexport const optionsRole = [\n  {\n    code: 1,\n    name: \"Admin\"\n  },\n  {\n    code: 10,\n    name: \"Data Manager\"\n  },\n  {\n    code: 20,\n    name: \"User\"\n  }\n]\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useRef, useState } from 'react'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { useUser } from 'providers'\nimport { removeToken } from 'utils/auth'\nimport { useNavigate } from 'react-router-dom'\n\nconst Header: FC = () => {\n  const [open, setOpen] = useState(false)\n  const navigate = useNavigate()\n  const { user } = useUser()\n\n  const refMenu = useRef<HTMLDivElement | null>(null)\n\n  const closeMenu = () => {\n    setTimeout(() => {\n      setOpen(false)\n    }, 100)\n  }\n\n  const onClick = () => {\n    if (open) {\n      return refMenu.current?.blur?.()\n    }\n    setOpen(true)\n  }\n\n  const onLogout = () => {\n    removeToken()\n    navigate('/login')\n  }\n\n  const onNavigateAccount = () => {\n    navigate('/account')\n  }\n\n  return (\n    <HeaderWrapper>\n      <BoxWrapper>\n        <Image src=\"/static/favicon.ico\" alt=\"logo\" />\n        <TitleLogo>Studio</TitleLogo>\n      </BoxWrapper>\n      <BoxMenu ref={refMenu} tabIndex={1} onClick={onClick} onBlur={closeMenu}>\n        <AccountCircleIcon />\n        {open && (\n          <BoxDropdown>\n            <BoxInfo>\n              <AccountCircleIcon />\n              <Box>\n                <Typography>{user?.display_name}</Typography>\n                <Typography>{user?.email}</Typography>\n              </Box>\n            </BoxInfo>\n            <BoxMenuItem onClick={onNavigateAccount}>\n              <PortraitIcon /> Account Profile\n            </BoxMenuItem>\n            <BoxMenuItemLogout onClick={onLogout}>\n              SIGN OUT\n            </BoxMenuItemLogout>\n          </BoxDropdown>\n        )}\n      </BoxMenu>\n    </HeaderWrapper>\n  )\n}\n\nconst BoxDropdown = styled(Box)({\n  position: 'absolute',\n  backgroundColor: '#ffffff',\n  padding: '8px 16px 0',\n  top: 30,\n  right: 0,\n  listStyleType: 'none',\n  backgroundClip: 'padding-box',\n  borderRadius: 3,\n  outline: 'none',\n  boxShadow:\n    '0 6px 16px 0 rgb(0 0 0 / 8%), 0 3px 6px -4px rgb(0 0 0 / 12%), 0 9px 28px 8px rgb(0 0 0 / 5%)',\n  cursor: 'default',\n  zIndex: 1,\n  minWidth: 250,\n})\n\nconst Image = styled('img')({\n  height: 46,\n})\n\nconst BoxWrapper = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 8,\n})\n\nconst BoxMenu = styled(BoxWrapper)({\n  cursor: 'pointer',\n  position: 'relative',\n  userSelect: 'none',\n})\n\nconst BoxInfo = styled(BoxWrapper)({\n  borderBottom: `1px solid #e7e7e7`,\n  padding: '8px 0',\n  cursor: 'default',\n})\n\nconst BoxMenuItem = styled(BoxWrapper)({\n  padding: '8px 0',\n  cursor: 'pointer',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.05) translateX(5px)',\n  },\n})\n\nconst BoxMenuItemLogout = styled(BoxMenuItem)({\n  color: '#1a73e8',\n  fontWeight: 600,\n  marginTop: 30,\n  justifyContent: 'flex-end',\n  '&:hover': {\n    transform: 'scale(1.02)',\n  },\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nconst HeaderWrapper = styled(Box)({\n  height: 48,\n  backgroundColor: '#E1DEDB',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  color: 'rgba(0, 0, 0, 0.87)',\n  boxShadow:\n    '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n  position: 'fixed',\n  width: 'calc(100% - 32px)',\n  padding: '0 16px',\n  zIndex: 9999,\n})\n\nexport default Header\n","import axiosLibrary from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { getToken } from 'utils/auth'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\n\nexport default axios","import axios from 'components/utils/axios'\n\nexport const login = async (data: { email: string; password: string }) => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const getMe = async () => {\n  const response = await axios.get('/auth/me')\n  return response.data\n}\n\nexport const listUser = async (query?: object) => {\n  const response = await axios.get('/admin/user', { params: query })\n  return response.data\n}\n\nexport const createUser = async (data: object) => {\n  const response = await axios.post(`/admin/user`, data)\n  return response.data\n}\n\nexport const editUser = async (userId: string | number, data: object) => {\n  const response = await axios.put(`/admin/user/${userId}`, data)\n  return response.data\n}\n\nexport const deleteUser = async (userId: string | number) => {\n  const response = await axios.delete(`/admin/user/${userId}`)\n  return response.data\n}\n\nexport const resetPassword = async (email: string) => {\n  const response = await axios.post(`/admin/user/send_reset_password?email=${email}`, email)\n  return response.data\n}\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useEffect, useState } from 'react'\nimport Header from './Header'\nimport { KeyboardBackspace } from '@mui/icons-material'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { UserContext, useUser } from 'providers'\nimport { getToken, isAdmin } from 'utils/auth'\nimport { getMe } from 'api/auth'\n\nexport const drawerWidth = 240\n\nconst ignorePaths = ['/login', '/account-delete', '/reset-password']\n\nconst Layout: FC = ({ children }) => {\n  const [user, setUser] = useState()\n  const location = useLocation()\n  const [width, setWidth] = useState(drawerWidth)\n  const navigate = useNavigate()\n  const onResize = () => {\n    setWidth(width === drawerWidth ? 54 : drawerWidth)\n  }\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname])\n\n  const checkkAuth = async () => {\n    if (user) return\n    const token = getToken()\n    try {\n      if (token) {\n        const data = await getMe()\n        setUser(data)\n        if (['/login', '/reset-password'].includes(window.location.pathname)) {\n          navigate('/')\n        }\n        return\n      }\n      if (\n        // !auth.currentUser &&\n        !['/login', '/reset-password'].includes(window.location.pathname)\n      ) {\n        navigate('/login')\n      }\n    } catch {\n      navigate('/login')\n    }\n  }\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <LayoutWrapper>\n        {ignorePaths.includes(location.pathname) ? null : <Header />}\n        <ContentBodyWrapper>\n          {ignorePaths.includes(location.pathname) ? null : (\n            <MenuLeft onResize={onResize} width={width} />\n          )}\n          <ChildrenWrapper\n            style={{\n              width: `calc(100% - ${\n                ignorePaths.includes(location.pathname) ? 0 : width + 10\n              }px)`,\n              height: '100%',\n              overflow: 'auto',\n            }}\n          >\n            {children}\n          </ChildrenWrapper>\n        </ContentBodyWrapper>\n      </LayoutWrapper>\n    </UserContext.Provider>\n  )\n}\n\nconst MenuLeft: FC<{ onResize: () => void; width: number }> = ({\n  onResize,\n  width,\n}) => {\n  const { user } = useUser()\n  const { pathname } = useLocation()\n  const isClose = width !== drawerWidth\n  return (\n    <MenuLeftWrapper style={{ width, minWidth: width }}>\n      <BoxBack>\n        <ButtonBack\n          onClick={onResize}\n          style={{ transform: `rotate(${width === drawerWidth ? 0 : 180}deg)` }}\n        >\n          <BoxDivider />\n          <KeyboardBackspaceIcon />\n        </ButtonBack>\n      </BoxBack>\n      <MenuList>\n        <LinkWrapper to=\"/\">\n          <MenuItem isClose={isClose} active={pathname === '/'}>\n            <HomeIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Dashboard\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/database\">\n          <MenuItem isClose={isClose} active={pathname === '/database'}>\n            <StorageIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Database\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/projects\">\n          <MenuItem isClose={isClose} active={pathname.includes('/projects')}>\n            <SourceIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Projects\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        {isAdmin(user?.role) ? (\n          <LinkWrapper to=\"/account-manager\">\n            <MenuItem\n              isClose={isClose}\n              active={pathname === '/account-manager'}\n            >\n              <GroupIcon />\n              <TypographyMenu\n                style={{ opacity: Number(width === drawerWidth) }}\n              >\n                Account Manager\n              </TypographyMenu>\n            </MenuItem>\n          </LinkWrapper>\n        ) : null}\n      </MenuList>\n    </MenuLeftWrapper>\n  )\n}\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: 48,\n  height: 'calc(100% - 48px)',\n  paddingRight: 10,\n  overflow: 'hidden',\n}))\n\nconst ChildrenWrapper = styled(Box)(() => ({\n  height: 'calc(100% - 10px)',\n  display: 'flex',\n  paddingTop: 10,\n  paddingLeft: 10,\n}))\n\nconst MenuLeftWrapper = styled(Box)({\n  height: '100%',\n  backgroundColor: '#283237',\n  overflow: 'auto',\n  transition: 'all 0.3s',\n})\n\nconst BoxBack = styled(Box)({\n  width: '100%',\n  height: 54,\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonBack = styled(Box)({\n  height: 54,\n  width: 54,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n})\n\nconst BoxDivider = styled(Box)({\n  height: 15,\n  width: 1,\n  backgroundColor: '#ffffff',\n  marginRight: -2,\n})\n\nconst KeyboardBackspaceIcon = styled(KeyboardBackspace)({\n  color: '#ffffff',\n  fontSize: 20,\n})\n\nconst MenuList = styled('ul')({\n  margin: 0,\n  padding: 0,\n})\n\nconst MenuItem = styled('li', {\n  shouldForwardProp: (props) => props !== 'isClose' && props !== 'active',\n})<{ isClose: boolean; active: boolean }>(({ isClose, active }) => ({\n  padding: '0 15px',\n  color: '#ffffff',\n  listStyle: 'none',\n  height: 38,\n  minHeight: 38,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  width: 'calc(100% - 30px)',\n  minWidth: 'max-content',\n  transition: 'all 0.3s',\n  cursor: 'pointer',\n  backgroundColor: active ? 'rgba(255,255,255,0.4) !important' : 'transparent',\n  '&:hover': {\n    transform: isClose\n      ? 'scale(1.05) translateX(2px)'\n      : 'scale(1.05) translateX(10px)',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n  },\n}))\n\nconst TypographyMenu = styled(Typography)({\n  lineHeight: '20px',\n  marginTop: 4,\n  fontWeight: 500,\n  transition: 'opacity 0.3s',\n})\n\nexport default Layout\n","import { Box, styled, Typography } from '@mui/material'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Link } from 'react-router-dom'\nimport { useUser } from 'providers'\nimport { isAdmin } from 'utils/auth'\n\nconst Dashboard = () => {\n  const { user } = useUser()\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/database\">\n            <BoxMenu>\n              <Box>\n                <SourceIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/projects\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Projects</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/account\">\n            <BoxMenu>\n              <Box>\n                <AccountCircleIcon fontSize=\"large\" />\n                <TitleMenu>Account</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {isAdmin(user?.role) ? (\n            <LinkWrapper to=\"/account-manager\">\n              <BoxMenu>\n                <Box>\n                  <GroupIcon fontSize=\"large\" />\n                  <TitleMenu>Account Manager</TitleMenu>\n                </Box>\n              </BoxMenu>\n            </LinkWrapper>\n          ) : null}\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { styled } from '@mui/material'\n\nexport const Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n","import {Box, keyframes, styled} from \"@mui/material\";\n\nconst Loading = () => {\n    return (\n        <LoaderWrapper>\n            <Loader />\n        </LoaderWrapper>\n    )\n}\n\nconst LoaderWrapper = styled(Box)(({theme}) => ({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    position: 'fixed',\n    backgroundColor: 'rgba(255,255,255,0.6)',\n    zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme })=> ({\n    display: 'block',\n    width: 48,\n    height: 48,\n    borderRadius: '50%',\n    position: 'relative',\n    zIndex: 100,\n    top: 'calc(50% - 24px)',\n    left: 'calc(50% - 24px)',\n    animation: `${rotate} 1s linear infinite`,\n    '&:before': {\n        content: \"''\",\n        boxSizing: 'border-box',\n        position: 'absolute',\n        inset: 0,\n        borderRadius: '50%',\n        border: '3px solid rgba(0,0,0,0.8)',\n        animation: `${prixClipFix} 2s linear infinite`\n    }\n}))\n\nexport default Loading\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\nimport Loading from \"../common/Loading\";\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description?: string\n  isLoading?: boolean\n}\nconst ModalDeleteAccount: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description || 'Delete account will erase all of your data.'}This\n            operation cannot be undone. To continue, type \"\n            <span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <ButtonConfirm onClick={onConfirm}>{titleSubmit}</ButtonConfirm>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default ModalDeleteAccount\n","import { Box, styled, Typography } from '@mui/material'\nimport { FC, useCallback } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport { DataProject } from 'pages/Projects'\n\nexport type Column = {\n  width?: number | string\n  title: string\n  dataIndex?: string\n  name?: string\n  align?: string\n  filter?: boolean\n  render?: (\n    item: DataProject,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined\n}\n\ntype TableComponentProps = {\n  data?: DataProject[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  className?: string\n  columns?: Column[]\n  paginate?: {\n    page: number\n    total: number\n    page_size: number\n    breakLabel?: string\n    nextLabel?: string\n    previousLabel?: string\n    pageRangeDisplayed?: number\n    renderOnZeroPageCount?: string\n    onPageChange?: (selectedItem: { selected: number }) => any\n  }\n}\n\nconst TableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    data = [],\n    columns = [],\n    paginate,\n    className,\n    orderBy,\n    orderKey,\n  } = props\n  const pageCount = (paginate?.total || 0) / (paginate?.page_size || 1)\n\n  const renderCol = useCallback(\n    (col: Column, item: DataProject, index: number) => {\n      const value = item[(col.name || col.dataIndex || '') as keyof DataProject]\n      if (col.render) return col.render(item, value, index)\n      return value || null\n    },\n    [],\n  )\n\n  return (\n    <Box className={className}>\n      <Table>\n        <Thead>\n          <Tr>\n            {columns.map((col, iCol) => {\n              const nameCol = col.name || col.dataIndex || ''\n              return (\n                <Th\n                  style={{ width: col.width, textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {col.title}\n                  <ArrowDownwardIconOrder\n                    style={{\n                      transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                      opacity:\n                        orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                  />\n                </Th>\n              )\n            })}\n          </Tr>\n        </Thead>\n        <TBody>\n          {data.map((item, index) => (\n            <Tr key={item.id || index}>\n              {columns.map((col, iCol) => (\n                <Td\n                  style={{ textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {renderCol(col, item, index)}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n        </TBody>\n      </Table>\n      {!data.length ? <NoData>No Data</NoData> : null}\n      {pageCount ? (\n        <MyPaginate\n          disableInitialCallback\n          marginPagesDisplayed={3}\n          pageRangeDisplayed={3}\n          breakLabel={'...'}\n          pageCount={pageCount}\n          previousLabel={<KeyboardArrowLeftIcon />}\n          nextLabel={<ChevronRightIcon />}\n          {...paginate}\n        />\n      ) : null}\n    </Box>\n  )\n}\n\nconst MyPaginate = styled(ReactPaginate)<any>`\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  list-style-type: none;\n  padding: 1rem 0;\n  li a {\n    padding: 0.6rem 1rem;\n    cursor: pointer;\n  }\n  li.previous,\n  li.next {\n    margin-top: -2px;\n  }\n  li.previous.disabled,\n  li.next.disabled {\n    opacity: 0.4;\n  }\n  li.previous a,\n  li.next a,\n  li.break a {\n    border-color: transparent;\n  }\n  li.active a {\n    background-color: #0366d6;\n    border-color: transparent;\n    color: white;\n    min-width: 32px;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n  li.selected {\n    color: #1677ff;\n    font-weight: 600;\n  }\n`\n\nconst Table = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  maxWidth: 155,\n  wordBreak: 'break-word'\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nexport default TableComponent\n","import { InputProps, styled, Typography } from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n  errorMessage: string\n  value?: string\n}\n\nconst InputError = ({\n  errorMessage,\n  onChange,\n  value,\n  type,\n  onBlur,\n  name,\n}: InputErrorProps) => {\n  return (\n    <>\n      <Input\n        autoComplete=\"Off\"\n        error={!!errorMessage}\n        onChange={onChange}\n        value={value}\n        type={type}\n        name={name}\n        onBlur={onBlur}\n      />\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\n\nexport default InputError\n","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  name?: string\n  options: {\n    code: number\n    name: string\n  }[]\n}\n\nconst SelectError: FC<SelectErrorProps> = ({\n  value,\n  onChange,\n  onBlur,\n  errorMessage,\n  options,\n  name,\n}) => {\n  return (\n    <>\n      <SelectModal\n        name={name}\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: { code: number, name: string }, index) => {\n          return (\n            <MenuItem key={item.code} value={item.code}>\n              {item.name}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import { Box, Button, SelectChangeEvent, styled } from '@mui/material'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport TableComponent, { Column } from 'components/Table'\nimport {\n  ChangeEvent,\n  FC,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InputError from '../../components/common/InputError'\nimport SelectError from '../../components/common/SelectError'\nimport { createUser, deleteUser, editUser, listUser } from 'api/auth'\nimport { useUser } from 'providers'\nimport { DataProject } from 'pages/Projects'\nimport { isAdmin, optionsRole } from 'utils/auth'\nimport Loading from '../../components/common/Loading'\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setIsOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role: '',\n  lab: '',\n  display_name: '',\n  confirmPassword: '',\n}\n\nconst ModalComponent: FC<ModalComponentProps> = ({\n  onSubmitEdit,\n  setIsOpenModal,\n  dataEdit,\n}) => {\n  const regex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  const regexPassword = /^(?=.*\\d)(?=.*[@$!%*#?&])(?=.*[a-zA-Z]).{6,255}$/\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n    dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255, value)\n    if (error) return error\n    if (!regex.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (\n    value: string,\n    isConfirm: boolean = false,\n    values?: { [key: string]: string },\n  ): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255, value)\n    if (errorLength) {\n      return errorLength\n    }\n    let datas = values || formData\n    if (!regexPassword.test(value) && value) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if (isConfirm && datas.password !== value && value) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number, value?: string) => {\n    if (!value) return 'This field is required'\n    return validateLength(name, length, value)\n  }\n\n  const validateLength = (name: string, length: number, value?: string) => {\n    if (value && value.length > length)\n      return `The text may not be longer than ${length} characters`\n    if (formData[name]?.length && value && value.length > length) {\n      return `The text may not be longer than ${length} characters`\n    }\n    return ''\n  }\n\n  const validateForm = (): { [key: string]: string } => {\n    const errorName = validateField('display_name', 100, formData.display_name)\n    const errorEmail = validateEmail(formData.email)\n    const errorLab = validateField('lab', 100, formData.lab)\n    const errorRole = validateField('role', 50, formData.role)\n    const errorPassword = validatePassword(formData.password)\n    const errorConfirmPassword = validatePassword(\n      formData.confirmPassword,\n      true,\n    )\n    return {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      display_name: errorName,\n      lab: errorLab,\n      role: errorRole,\n    }\n  }\n\n  const onChangeData = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | SelectChangeEvent,\n    length: number,\n  ) => {\n    const { value, name } = e.target\n    const newDatas = { ...formData, [name]: value }\n    setFormData(newDatas)\n    let error: string =\n      name === 'email'\n        ? validateEmail(value)\n        : validateField(name, length, value)\n    let errorConfirm = errors.confirmPassword\n    if (name.toLowerCase().includes('password')) {\n      error = validatePassword(value, name === 'confirmPassword', newDatas)\n      if (name !== 'confirmPassword' && formData.confirmPassword) {\n        errorConfirm = validatePassword(\n          newDatas.confirmPassword,\n          true,\n          newDatas,\n        )\n      }\n    }\n    setErrors({ ...errors, confirmPassword: errorConfirm, [name]: error })\n  }\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const newErrors = validateForm()\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.uid, formData)\n      setTimeout(() => {\n        if (!dataEdit?.uid) {\n          alert('Your account has been created successfully!')\n        } else {\n          alert('Your account has been successfully updated!')\n        }\n      }, 1)\n      setIsOpenModal(false)\n    } catch {\n      if (!dataEdit?.uid) {\n        setTimeout(() => {\n          alert('This email already exists!')\n        }, 300)\n      }\n    } finally {\n      setIsDisabled(false)\n    }\n  }\n  const onCancel = () => {\n    setIsOpenModal(false)\n  }\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.uid ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Lab: </LabelModal>\n          <InputError\n            name=\"lab\"\n            value={formData?.lab || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.lab}\n          />\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            name=\"display_name\"\n            value={formData?.display_name || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.display_name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role || ''}\n            options={optionsRole}\n            name=\"role\"\n            onChange={(e) => onChangeData(e, 50)}\n            onBlur={(e) => onChangeData(e, 50)}\n            errorMessage={errors.role}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            name=\"email\"\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 255)}\n            onBlur={(e) => onChangeData(e, 255)}\n            errorMessage={errors.email}\n          />\n          {!dataEdit?.uid ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                name=\"password\"\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                name=\"confirmPassword\"\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n        </ButtonModal>\n      </ModalBox>\n      {isDisabled ? <Loading /> : null}\n    </Modal>\n  )\n}\nconst AccountManager = () => {\n  const [openDelete, setOpenDelete] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [dataEdit, setDataEdit] = useState({})\n  const [idDel, setIdDel] = useState<string | undefined>()\n  const [data, setData] = useState<any[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [paginate, setPaginate] = useState({\n    total: 0,\n    per_page: 10,\n    page: -1,\n    next_page_token: [],\n  })\n  const { user } = useUser()\n\n  useEffect(() => {\n    getList()\n    //eslint-disable-next-line\n  }, [])\n\n  const getList = async (page: number = 0) => {\n    const query: { [key: string]: string | number } = {\n      offset: paginate.per_page * page,\n    }\n    if (paginate.next_page_token[page - 1]) {\n      query.next_page_token = paginate.next_page_token[page - 1]\n    }\n    const data = await listUser(query)\n    const nextPageToken: string[] = paginate.next_page_token\n    if (page > paginate.page) {\n      nextPageToken.push(data.next_page_token)\n    }\n    const newData = data.data.map((item: any) => {\n      if (item.role === 1) return { ...item, role: 'Admin' }\n      if (item.role === 10) return { ...item, role: 'Data Manager' }\n      return { ...item, role: 'User' }\n    })\n    setData(newData)\n    setPaginate((pre) => ({\n      ...pre,\n      total: data.total_page * paginate.per_page,\n      next_page_token: nextPageToken as any,\n      page,\n    }))\n  }\n\n  const onOpenModal = () => {\n    setIsOpenModal(true)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = (id?: string | number) => {\n    setIdDel(String(id))\n    setOpenDelete(true)\n  }\n\n  const onForgotPassword = (data: DataProject) => {\n    let newData\n    if (data.role === 'Admin') newData = { ...data, role: 1 }\n    else if (data.role === 'Data Manager') newData = { ...data, role: 10 }\n    else newData = { ...data, role: 20 }\n    //todo call api\n    setDataEdit(newData)\n    setIsOpenModal(true)\n  }\n\n  const onDelete = async () => {\n    if (idDel === undefined) return\n    setIsLoading(true)\n    try {\n      await deleteUser(idDel)\n      setIsLoading(false)\n      setTimeout(() => {\n        alert('Your account has been successfully deleted!')\n      }, 100)\n      handleCloseDelete()\n      setIdDel(undefined)\n      setOpenDelete(false)\n      getList()\n    } catch {\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    if (id !== undefined) {\n      await editUser(id, data)\n      setIsOpenModal(false)\n    } else {\n      await createUser(data)\n    }\n    await getList(id !== undefined ? paginate.page : 0)\n    return undefined\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'UID', name: 'uid' },\n      { title: 'Lab', name: 'lab' },\n      { title: 'Name', name: 'display_name' },\n      { title: 'Role', name: 'role' },\n      { title: 'Mail', name: 'email' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data) => {\n          if (data?.uid === user?.uid) return null\n          return (\n            <>\n              <ALink\n                sx={{ color: 'red' }}\n                onClick={() => onForgotPassword(data)}\n              >\n                <EditIcon sx={{ color: 'black' }} />\n              </ALink>\n              <ALink\n                sx={{ ml: 1.25 }}\n                onClick={() => onConfirmDelete(data?.uid)}\n              >\n                <DeleteIcon sx={{ color: 'red' }} />\n              </ALink>\n            </>\n          )\n        },\n      },\n    ],\n    [user?.uid],\n  )\n\n  if (!isAdmin(user?.role)) {\n    return null\n  }\n\n  return (\n    <AccountManagerWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Account Manager</h1>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        isLoading={isLoading}\n        onSubmit={onDelete}\n      />\n      <BoxButton>\n        <ButtonAdd onClick={() => onOpenModal()} variant=\"contained\">\n          Add\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{\n          total: paginate.total,\n          page: paginate.page,\n          page_size: paginate.per_page,\n          onPageChange: ({ selected }) => {\n            getList(selected)\n          },\n        }}\n        data={data}\n        columns={columns}\n      />\n      {isOpenModal ? (\n        <ModalComponent\n          onSubmitEdit={onSubmitEdit}\n          setIsOpenModal={(flag) => {\n            setIsOpenModal(flag)\n            if (!flag) {\n              setDataEdit({})\n            }\n          }}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst BoxButton = styled(Box)({\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  width: 100,\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  height: 550,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport InputPassword from 'components/InputPassword'\nimport { ChangeEvent, FC, useState } from 'react'\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n}\n\nconst regexPassword = /^(?=.*\\d)(?=.*[@$!%*#?&])(?=.*[a-zA-Z]).{6,100}$/\n\nconst ModalChangePassword: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, password } = values\n    if (reEnter && reEnter !== password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={onSubmit}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onClose}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ModalChangePassword\n","import { Box, Button, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport ModalChangePassword from 'components/ModalChangePassword'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { useUser } from 'providers'\nimport { useState } from 'react'\n\nconst Account = () => {\n  const { user } = useUser()\n  const [isEditName, setIsEditName] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [openChangePw, setOpenChangePw] = useState(false)\n\n  const onEditName = () => {\n    setIsEditName(false)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = () => {\n    setOpenDelete(true)\n  }\n\n  const onDelete = () => {\n    //todo call api\n    handleCloseDelete()\n  }\n\n  const handleCloseChangePw = () => {\n    setOpenChangePw(false)\n  }\n\n  const onConfirmChangePw = () => {\n    setOpenChangePw(true)\n  }\n\n  const onChangePw = () => {\n    //todo call api\n    handleCloseChangePw()\n  }\n\n  return (\n    <AccountWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ModalChangePassword\n        onSubmit={onChangePw}\n        open={openChangePw}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData sx={{ marginTop: isEditName ? -2 : 0 }}>Full name</TitleData>\n        <BoxData>\n          {isEditName ? (\n            <Input\n              autoFocus\n              defaultValue={user?.display_name || ''}\n              onBlur={onEditName}\n              placeholder=\"Full name\"\n            />\n          ) : (\n            <>\n              {user?.display_name || \"--\"}\n              <Button sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n                Edit\n              </Button>\n            </>\n          )}\n        </BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{user?.role}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10 }}>\n        <ButtonSubmit onClick={onConfirmChangePw}>Change Password</ButtonSubmit>\n        <ButtonSubmit onClick={onConfirmDelete}>Delete Account</ButtonSubmit>\n      </BoxFlex>\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n})\n\nconst ButtonSubmit = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import { Box, Button, styled } from '@mui/material'\nimport { useCallback, useMemo, useState } from 'react'\nimport TableComponent, { Column } from '../../components/Table'\nimport { useNavigate } from 'react-router-dom'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\n\nexport type DataProject = {\n  id: number | string\n  uid?: number | string\n  name: string\n  project_type: number\n  image_count: number\n  created_time: string\n  updated_time: string\n  role?: string | number\n}\n\nconst Projects = () => {\n  const navigate = useNavigate()\n  const [idDelete, setIdDelete] = useState<number | string | undefined>()\n  const [data, setData] = useState<DataProject[]>([\n    {\n      id: '1',\n      name: 'prj name 1',\n      created_time: '2023-03-10 09:19',\n      updated_time: '2023-03-10 09:19',\n      image_count: 3,\n      project_type: 0,\n    },\n    {\n      id: '2',\n      name: 'prj name 2',\n      created_time: '2023-03-10 09:19',\n      updated_time: '2023-03-10 09:19',\n      image_count: 3,\n      project_type: 1,\n    },\n  ])\n\n  const onEdit = useCallback((id: number | string) => {\n    navigate(`/projects/new-project?id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onWorkflow = useCallback((id: number | string) => {\n    console.log('Workflow: ', id)\n    navigate(`/projects/workflow?tab=0&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onResults = useCallback((id: number | string) => {\n    console.log('Results: ', id)\n    navigate(`/projects/workflow?tab=1&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addNewProject = useCallback(() => {\n    navigate('/projects/new-project')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onDelete = (id: number | string) => {\n    setIdDelete(id)\n  }\n\n  const onDeleteSubmit = () => {\n    const id = idDelete\n    setIdDelete(undefined)\n    setData(data.filter((e) => e.id !== id))\n  }\n\n  const handleCloseDelete = () => {\n    setIdDelete(undefined)\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'Project Name', name: 'name' },\n      { title: 'Created', name: 'created_time' },\n      { title: 'Updated', name: 'updated_time' },\n      { title: 'Images', name: 'image_count', align: 'center' },\n      {\n        title: '',\n        name: 'action',\n        width: 400,\n        render: (data) => {\n          return (\n            <BoxButton>\n              <ButtonAdd variant=\"contained\" onClick={() => onEdit(data.id)}>\n                Edit\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onWorkflow(data.id)}\n              >\n                Workflow\n              </ButtonAdd>\n              <ButtonAdd variant=\"contained\" onClick={() => onResults(data.id)}>\n                Results\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onDelete(data.id)}\n                sx={{ backgroundColor: 'red !important' }}\n              >\n                Del\n              </ButtonAdd>\n            </BoxButton>\n          )\n        },\n      },\n    ],\n    [onWorkflow, onResults, onEdit],\n  )\n  return (\n    <ProjectsWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Project\"\n        description=\"Delete My Project\"\n        onClose={handleCloseDelete}\n        open={!!idDelete}\n        onSubmit={onDeleteSubmit}\n      />\n      <ProjectsTitle>Projects</ProjectsTitle>\n      <BoxButton>\n        <ButtonAdd\n          variant=\"contained\"\n          onClick={addNewProject}\n          sx={{ marginBottom: 2 }}\n        >\n          Add Project\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{ total: 100, page: 1, page_size: 10 }}\n        data={data}\n        columns={columns}\n      />\n    </ProjectsWrapper>\n  )\n}\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst ProjectsTitle = styled('h1')(({ theme }) => ({}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  minWidth: 80,\n  letterSpacing: 'unset',\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nexport default Projects\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  MouseEvent as MouseEventReact,\n  FC,\n  Fragment,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport {\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n} from 'pages/Database'\n\ntype Object = {\n  [key: string]: Object | string\n}\n\nexport type Column = {\n  width?: number\n  title: string\n  dataIndex?: string\n  name?: string\n  child?: string\n  filter?: boolean\n  render?: (\n    item?: RecordDatabase | RecordList | ImagesDatabase,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined | string | number\n}\n\ntype TableComponentProps = {\n  data?: (RecordDatabase | RecordList)[]\n  className?: string\n  columns?: Column[]\n  orderBy?: 'ASC' | 'DESC' | ''\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: 'ASC' | 'DESC' | '') => void\n  rowClick?: (row: ImagesDatabase) => void\n  onClickEvent?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (row?: ImagesDatabase[]) => void\n  onBeginDrag?: () => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  defaultExpand?: boolean\n}\n\ntype RenderColumnProps = {\n  data: RecordDatabase | SessionsDatabase | ImagesDatabase | RecordList\n  columns: Column[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: string) => void\n  rowClick?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    row?: ImagesDatabase[],\n  ) => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  recordIndex: number\n  defaultExpand?: boolean\n  dataShow?: boolean\n  beginDrag?: boolean\n  draggableProps?: boolean\n  allowMutilKey?: boolean\n  drags: ImagesDatabase[]\n  onMouseDown: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => void\n}\n\nconst renderCol = (\n  col: Column,\n  item: ImagesDatabase | RecordDatabase | RecordList,\n  index: number,\n) => {\n  const key = col.name || col.dataIndex || ''\n  let value: ImagesDatabase | RecordDatabase | RecordList | string = item\n  if (key.includes('.')) {\n    const keys = key.split('.')\n    keys.forEach((k) => {\n      if (k === 'voxel_size' || k === 'size') {\n        value = JSON.stringify((value as unknown as Object)?.[k])\n      } else {\n        value = (value as unknown as Object)?.[k] as\n          | ImagesDatabase\n          | RecordDatabase\n          | RecordList\n          | string\n      }\n    })\n  } else value = (item as unknown as Object)[key] as string\n  if (col.render) return col.render(item, value, index)\n  return typeof value === 'object' || Array.isArray(value) ? null : value\n}\n\nconst RenderColumn = (props: RenderColumnProps) => {\n  const { columns, data, recordIndex, rowClick, drags, onMouseDown } = props\n  const { draggable, onDrag } = props\n  const [openChild, setOpenChild] = useState(true)\n  const [openChildParent, setOpenChildPrent] = useState(true)\n  const [openSubjects, setOpenSubjects] = useState<string[]>(\n    (data as RecordDatabase)?.subjects?.map?.((e) => e.id) || [],\n  )\n\n  const isDrag = drags.find((drag) => {\n    return (\n      drag.id === data.id &&\n      drag.session_id === (data as ImagesDatabase).session_id &&\n      drag.datatype_index === (data as ImagesDatabase).datatype_index\n    )\n  })\n\n  const onDragEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    return onDrag?.(event, [image])\n  }\n\n  const onSetOpenSubject = (subId: string) => {\n    if (openSubjects.includes(subId)) {\n      setOpenSubjects(openSubjects.filter((o) => o !== subId))\n    } else setOpenSubjects([...openSubjects, subId])\n  }\n\n  if (\n    (data as RecordDatabase)?.subjects?.length ||\n    (data as SessionsDatabase).datatypes?.length\n  ) {\n    return (\n      <Fragment>\n        <Tr\n          style={{\n            transition: 'all 0.3s',\n            backgroundColor: 'rgb(238, 238, 238)',\n          }}\n        >\n          {columns.map((column) => {\n            const key = column.name || column.dataIndex || ''\n            return (\n              <Td\n                key={`col_${column.name || column.dataIndex}`}\n                onClick={() =>\n                  key === 'session' && setOpenChildPrent(!openChildParent)\n                }\n              >\n                {key === 'action' ? null : (\n                  <BoxCenter>\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    )}\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    ) &&\n                      key === 'session' && (\n                        <ArrowDropDownIcon\n                          style={{\n                            transform: `rotate(${\n                              !openChildParent ? -180 : 0\n                            }deg)`,\n                          }}\n                        />\n                      )}\n                  </BoxCenter>\n                )}\n              </Td>\n            )\n          })}\n        </Tr>\n        {openChildParent &&\n          (data as RecordDatabase).subjects?.map((sub, subject_index) => {\n            return (\n              <Fragment key={sub.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'subject' && onSetOpenSubject(sub.id)\n                        }\n                      >\n                        {key === 'subject' ? (\n                          <BoxCenter>\n                            {sub.label}\n                            {sub.sessions?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openSubjects.includes(sub.id) ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openSubjects.includes(sub.id) &&\n                  sub.sessions.map((session, session_index) => (\n                    <RenderColumn\n                      {...props}\n                      key={session.id}\n                      data={\n                        {\n                          ...session,\n                          session: session.label,\n                          session_index,\n                          subject_index,\n                        } as SessionsDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n        {openChildParent &&\n          (data as SessionsDatabase).datatypes?.map((type, ii) => {\n            return (\n              <Fragment key={type.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'datatype' && setOpenChild(!openChild)\n                        }\n                      >\n                        {key === 'datatype' ? (\n                          <BoxCenter>\n                            {type.label}\n                            {type.images?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openChild ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openChild &&\n                  type.images.map((image, index) => (\n                    <RenderColumn\n                      {...props}\n                      key={`row_image_${image.id}_${index}`}\n                      data={\n                        {\n                          ...image,\n                          session_index: (data as SessionsDatabase)\n                            .session_index,\n                          subject_index: (data as SessionsDatabase)\n                            .subject_index,\n                          session_id: data.id,\n                          datatype_index: ii,\n                          image_index: index,\n                          datatype_label: type.label,\n                          subject_id: (data as SessionsDatabase).parent_id,\n                          record_index: recordIndex,\n                        } as ImagesDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n      </Fragment>\n    )\n  }\n\n  return (\n    <Tr\n      onClick={(e) => rowClick?.(e, data as ImagesDatabase)}\n      draggable={draggable}\n      onDragStart={(e) => onDragEvent?.(e, data as ImagesDatabase)}\n      onMouseDown={(e) => onMouseDown(e, data as ImagesDatabase)}\n      style={{\n        transition: 'all 0.3s',\n        backgroundColor: isDrag ? 'rgba(25,118,210,0.15)' : '',\n      }}\n    >\n      {columns.map((column) => {\n        return (\n          <Td key={`col_${column.name || column.dataIndex}`}>\n            {renderCol(column, data as ImagesDatabase, recordIndex)}\n          </Td>\n        )\n      })}\n    </Tr>\n  )\n}\n\nconst DatabaseTableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    className,\n    orderKey,\n    orderBy,\n    onSort,\n    draggable,\n    rowClick,\n    onDrag,\n    onDragEnd,\n    onBeginDrag: onBeginDragProps,\n    ...p\n  } = props\n  const { data = [], columns = [] } = props\n  const [drags, setDrags] = useState<ImagesDatabase[]>([])\n  const [mouseMoveRect, setMouseMoveRect] = useState({ pageX: 0, pageY: 0 })\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n\n  const ctrRef = useRef(false)\n  const refTable = useRef<HTMLDivElement | null>(null)\n  const refTdSelect = useRef<{\n    [key: string]: {\n      dom: HTMLTableRowElement\n      tds: { id: number | string; dom: HTMLTableCellElement; html: string }[]\n    }\n  }>({})\n  const mouseStart = useRef<{ pageX: number; pageY: number } | undefined>()\n  const [beginDrag, setBeginDrag] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydownEvent)\n    window.addEventListener('keyup', onKeyupEvent)\n    window.addEventListener('mouseup', onMouseUp)\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('click', onClick)\n    return () => {\n      window.removeEventListener('keydown', onKeyupEvent)\n      window.removeEventListener('keyup', onKeyupEvent)\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('click', onClick)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onKeydownEvent = (event: KeyboardEvent) => {\n    ctrRef.current = event.ctrlKey || event.metaKey\n  }\n\n  const onKeyupEvent = () => {\n    ctrRef.current = false\n  }\n\n  const onClick = (event: MouseEvent) => {\n    if (refTable.current?.contains?.(event.target as Element)) return\n    ctrRef.current = false\n    setDrags([])\n    onDragEnd?.()\n  }\n\n  const onSortHandle = (nameCol: string) => {\n    if (orderKey === nameCol) {\n      let order: 'ASC' | 'DESC' | '' = ''\n      if (orderBy === 'ASC') {\n        order = 'DESC'\n      } else if (!orderBy) {\n        order = 'ASC'\n      }\n      onSort?.(nameCol, order)\n    } else onSort?.(nameCol, 'ASC')\n  }\n\n  const onRowClickEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    const idDom = `${image.id}_${image.datatype_index}_${image.session_id}`\n    if (!ctrRef.current) {\n      if (!timeoutClick.current) {\n        timeoutClick.current = setTimeout(() => {\n          timeoutClick.current = undefined\n        }, 300)\n        if (draggable) {\n          setDrags([image])\n          const tds = event.currentTarget.getElementsByTagName('td')\n          refTdSelect.current[idDom] = {\n            dom: event.currentTarget as unknown as HTMLTableRowElement,\n            tds: [],\n          }\n          for (let i = 0; i < tds.length; i++) {\n            refTdSelect.current[idDom].tds.push({\n              id: tds[i].id,\n              dom: tds[i],\n              html: tds[i].innerHTML,\n            })\n          }\n        }\n        return\n      }\n      return rowClick?.(image)\n    }\n    if (!draggable) return\n    if (\n      drags.find(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      setDrags(\n        drags.filter(\n          (drag: ImagesDatabase) =>\n            drag.id === image.id &&\n            drag.datatype_index === image.datatype_index &&\n            drag.session_index === image.session_index,\n        ),\n      )\n      delete refTdSelect.current[idDom]\n    } else {\n      setDrags([...drags, image])\n      const tds = event.currentTarget.getElementsByTagName('td')\n      refTdSelect.current[idDom] = {\n        dom: event.currentTarget as unknown as HTMLTableRowElement,\n        tds: [],\n      }\n      for (let i = 0; i < tds.length; i++) {\n        refTdSelect.current[idDom].tds.push({\n          id: tds[i].id,\n          dom: tds[i],\n          html: tds[i].innerHTML,\n        })\n      }\n    }\n  }\n\n  const onMouseDown = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    if (\n      !drags.length ||\n      !draggable ||\n      !drags.some(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      return\n    }\n    mouseStart.current = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n    }\n    onBeginDragProps?.()\n    setMouseMoveRect({ pageX: 0, pageY: 0 })\n    onDrag?.(drags)\n  }\n\n  const onMouseUp = () => {\n    mouseStart.current = undefined\n    setBeginDrag(false)\n    setTimeout(() => {\n      onDrag?.(undefined)\n    }, 100)\n  }\n\n  const onMouseMove = (event: MouseEvent) => {\n    if (!mouseStart.current || !draggable || !mouseStart.current) return\n    setBeginDrag(true)\n    setMouseMoveRect({\n      pageX: event.pageX - mouseStart.current.pageX,\n      pageY: event.pageY - mouseStart.current.pageY,\n    })\n  }\n\n  const onBeginDrag = (\n    e: MouseEventReact<HTMLTableRowElement>,\n    image?: ImagesDatabase[],\n  ) => {\n    e.preventDefault()\n    onDrag?.(image)\n  }\n\n  return (\n    <>\n      <TableWrap ref={refTable} className={className}>\n        <DataTable\n          style={{\n            width: columns.reduce((a, b) => a + (Number(b.width) || 110), 0),\n          }}\n        >\n          <Thead>\n            <Tr>\n              {columns.map((col, iCol) => {\n                const nameCol = col.name || col.dataIndex || ''\n                return (\n                  <Th\n                    onClick={() => onSortHandle(nameCol)}\n                    style={{\n                      maxWidth: col.width,\n                      width: col.width,\n                      cursor: 'pointer',\n                    }}\n                    key={col.dataIndex || col.name || iCol}\n                  >\n                    {col.title}\n                    <ArrowDownwardIconOrder\n                      style={{\n                        transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                        opacity:\n                          orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                      }}\n                    />\n                  </Th>\n                )\n              })}\n            </Tr>\n          </Thead>\n          <TBody>\n            {data.map((item, index) => (\n              <RenderColumn\n                allowMutilKey={ctrRef.current}\n                recordIndex={index}\n                columns={columns}\n                {...p}\n                data={item}\n                rowClick={(e, image) => onRowClickEvent(e, image)}\n                onMouseDown={onMouseDown}\n                beginDrag={beginDrag}\n                draggable={false}\n                draggableProps={draggable}\n                key={`row_table_${item.id}_${index}`}\n                drags={drags}\n                onDrag={onBeginDrag}\n                onDragEnd={onDragEnd}\n              />\n            ))}\n          </TBody>\n        </DataTable>\n        {!data.length ? <NoData>No Data</NoData> : null}\n      </TableWrap>\n      {beginDrag &&\n        drags.map((el) => {\n          const rowId = `${el.id}_${el.datatype_index}_${el.session_id}`\n          const trNow = refTdSelect.current[rowId]\n          const { width, height, top, left } =\n            trNow.dom?.getBoundingClientRect()\n          const style = {\n            width,\n            height,\n            top: top + mouseMoveRect.pageY,\n            left: left + mouseMoveRect.pageX,\n          }\n          return (\n            <BoxDrag key={el.id} style={style}>\n              {trNow.tds.map((td, index) => {\n                const { width } = td.dom.getBoundingClientRect()\n                return (\n                  <Box\n                    key={`${rowId}_-${index}`}\n                    style={{ width, padding: 16 }}\n                  >\n                    {td.html}\n                  </Box>\n                )\n              })}\n            </BoxDrag>\n          )\n        })}\n    </>\n  )\n}\n\nconst BoxDrag = styled(Box)({\n  position: 'absolute',\n  background: '#ffffff',\n  backgroundColor: 'rgba(25,118,210,0.15)',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst TableWrap = styled(Box)({\n  overflowX: 'scroll',\n})\n\nconst DataTable = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  userSelect: 'none',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nconst BoxCenter = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport default DatabaseTableComponent\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  FC,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  TouchEvent,\n} from 'react'\n\ntype ChangeDragProps = {\n  title: string\n  value: number\n  onChange: (value: number) => void\n  className?: string\n  max?: number\n  min?: number\n  onChangeMin?: (v: number) => any\n  showInputMax?: boolean\n  showInputMin?: boolean\n}\n\nconst ChangeDrag: FC<ChangeDragProps> = (props) => {\n  const { title, value, onChange, className, max = 2, min = 0 } = props\n  const { onChangeMin, showInputMax } = props\n  const [width, setWidth] = useState(0)\n  const mouseDown = useRef(0)\n\n  const refDrag = useRef<any>()\n  const refDot = useRef<any>()\n\n  useEffect(() => {\n    getWidth()\n    //eslint-disable-next-line\n  }, [])\n\n  const getWidth = () => {\n    if (!refDrag.current) getWidth()\n    setWidth(refDrag.current.clientWidth - 24)\n  }\n\n  const onMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n    mouseDown.current = event.pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onTouchStart = useCallback((event: TouchEvent<HTMLDivElement>) => {\n    mouseDown.current = event.touches[0].pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onMouseMove = (event: MouseEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.pageX - mouseInit - 12\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(scale)\n  }\n\n  const onTouchMove = (event: TouchEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.touches[0].pageX - mouseInit\n    let scale = (mouseMove / width) * (max - min)\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onMouseLeave = useCallback(() => {\n    mouseDown.current = 0\n    refDrag.current.style.cursor = 'default'\n    refDot.current.style.cursor = ''\n  }, [])\n\n  return (\n    <ScaleWrapper\n      className={className}\n      ref={refDrag}\n      onMouseMove={onMouseMove}\n      onTouchMove={onTouchMove}\n      onMouseLeave={onMouseLeave}\n      onMouseUp={onMouseLeave}\n    >\n      <TitleScale>{title}</TitleScale>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Input\n          value={Number(value.toPrecision(2))}\n          onChange={(e) => onChangeMin?.(Number(e.target.value))}\n        />\n        {showInputMax ? (\n          <Input\n            style={{ textAlign: 'right' }}\n            value={Number(max.toPrecision(2))}\n            readOnly\n          />\n        ) : null}\n      </div>\n      <BoxWrapper>\n        <BoxLine style={{ width: ((value - min) * width) / (max - min) }} />\n        <Dot\n          ref={refDot}\n          onMouseDown={onMouseDown}\n          onTouchEnd={onMouseLeave}\n          onTouchStart={onTouchStart}\n          style={{ left: ((value - min) * width) / (max - min) }}\n        />\n      </BoxWrapper>\n    </ScaleWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 4,\n  background: 'rgba(60, 60, 67, 0.18)',\n  position: 'relative',\n  borderRadius: 2,\n  userSelect: 'none',\n}))\n\nconst Dot = styled(Box)(() => ({\n  position: 'absolute',\n  width: 24,\n  height: 24,\n  background: '#7a7a7a',\n  borderRadius: 100,\n  top: -11,\n  cursor: 'pointer',\n}))\n\nconst TitleScale = styled(Typography)(() => ({\n  fontSize: 14,\n  fontWeight: 700,\n}))\n\nconst BoxLine = styled(Box)(() => ({\n  position: 'absolute',\n  height: 4,\n  background: '#0A7AFF',\n  borderRadius: 2,\n}))\n\nconst ScaleWrapper = styled(Box)(({ theme }) => ({\n  paddingBottom: 20,\n  '@media (max-width: 809px)': {\n    paddingTop: theme.spacing(2),\n  },\n}))\n\nconst Input = styled('input')({\n  border: 'none',\n  outline: 'none',\n  width: 50,\n  marginBottom: 20,\n})\n\nexport default ChangeDrag\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { FC, useEffect, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ChangeDrag from './ChangeSize'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { Object } from 'pages/Database'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  url?: string\n  jsonData?: Object\n  disabled?: { left: boolean; right: boolean }\n}\n\nconst ImageView: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  url,\n  onNext,\n  onPrevious,\n  jsonData,\n  disabled,\n}) => {\n  const viewerRef = useRef<any>()\n  const [worldCoords, setWorldCoords] = useState({ x: 0, y: 0, z: 0 })\n  const [voxelCoords, setVoxelCoords] = useState({ i: 0, j: 0, k: 0 })\n  const [values, setValues] = useState(0)\n  const [opacity, setOpacity] = useState(0)\n  const [thresholds, setThresholds] = useState(0)\n  const [maxThres, setMaxThres] = useState(0)\n  const [contracts, setContracts] = useState(1)\n  const [brightness, setBrightness] = useState(0)\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const volumes = useRef<any>()\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    setOpacity(0)\n    setContracts(1)\n    setBrightness(0)\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n\n  const onChangeThreshold = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeContract = (num: number) => {\n    if (!volumes.current) return\n    setContracts(num)\n    volumes.current.display.setContrast(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeBrightness = (num: number) => {\n    if (!volumes.current) return\n    setBrightness(num)\n    volumes.current.display.setBrightness(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMinThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeJson = () => {}\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n          complete: function () {},\n        },\n      ],\n    })\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', function () {\n          setOpacity(1)\n          setIsLoadFile(false)\n        })\n        viewer.addEventListener('sliceupdate', function (event: any) {\n          // const panel = event.target\n          const { volume } = event\n          volumes.current = volume\n          setThresholds(volumes.current.intensity_min)\n          setMaxThres(volumes.current.intensity_max)\n          setValues(volume.getIntensityValue())\n          if (brainbrowser.utils.isFunction(volume.getWorldCoords)) {\n            setWorldCoords(volume.getWorldCoords())\n          }\n          if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n            setVoxelCoords(volume.getVoxelCoords())\n          }\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {},\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div\n            style={{\n              display: !opacity ? 'none' : 'flex',\n              alignItems: 'stretch',\n            }}\n          >\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              {opacity ? (\n                <BoxContentData>\n                  <p style={{ margin: 0, padding: '20px 0' }}>\n                    World Coordinates:\n                  </p>\n                  <span>X: {worldCoords.x.toPrecision(4)}</span>\n                  <span style={{ marginLeft: 20 }}>\n                    Y: {worldCoords.y.toPrecision(4)}\n                  </span>\n                  <span style={{ marginLeft: 20 }}>\n                    Z: {worldCoords.z.toPrecision(4)}\n                  </span>\n                  <p>Voxel Coordinates:</p>\n                  <span>I: {voxelCoords.i}</span>\n                  <span style={{ marginLeft: 20 }}>J: {voxelCoords.j}</span>\n                  <span style={{ marginLeft: 20 }}>K: {voxelCoords.k}</span>\n                  <p>Value: {values}</p>\n                  <ChangeDrag\n                    onChangeMin={onChangeMinThresh}\n                    max={maxThres}\n                    min={-maxThres}\n                    title={'Threshold'}\n                    value={thresholds}\n                    showInputMax\n                    showInputMin\n                    onChange={onChangeThreshold}\n                  />\n                  <ChangeDrag\n                    title={'Contrast (0.0 to 2.0)'}\n                    value={contracts}\n                    onChange={onChangeContract}\n                  />\n                  <ChangeDrag\n                    title={'Brightness (-1 to 1):'}\n                    value={brightness}\n                    min={-1}\n                    max={1}\n                    onChange={onChangeBrightness}\n                  />\n                </BoxContentData>\n              ) : null}\n            </div>\n            <WrapperJson>\n              <TextArea\n                onChange={onChangeJson}\n                value={JSON.stringify(jsonData || '')}\n              />\n            </WrapperJson>\n            {!disabled?.right ? (\n              <ButtonNext onClick={onNext}>\n                <ArrowForwardIosIconWrapper />\n              </ButtonNext>\n            ) : null}\n            {!disabled?.left ? (\n              <ButtonPrevious onClick={onPrevious}>\n                <ArrowBackIosIconWrapper />\n              </ButtonPrevious>\n            ) : null}\n          </div>\n          {(!opacity || isLoadFile) && (\n            <BoxLoading>\n              <img\n                src=\"/lib/loading.gif\"\n                alt=\"icon loading\"\n                style={{ width: 80, height: 80 }}\n              />\n            </BoxLoading>\n          )}\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst BoxLoading = styled(Box)({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'rgba(255,255,255, 0.1)',\n  zIndex: 88,\n})\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '10%',\n  right: '10%',\n  zIndex: 9999,\n  background: 'rgba(255,255,255,0.4)',\n})\n\nconst ButtonNext = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  right: '10%',\n  zIndex: 1,\n})\n\nconst ButtonPrevious = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  left: '10%',\n  zIndex: 1,\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst BoxContentData = styled(Box)({\n  margin: '-5px 0 0',\n  padding: '10px',\n  background: '#ffffff',\n})\n\nconst WrapperJson = styled(Box)({\n  minWidth: 300,\n  background: '#ffffff',\n})\n\nconst TextArea = styled('textarea')({\n  height: 'calc(100% - 7px)',\n  width: '100%',\n  outline: 'none !important',\n  border: 'none',\n  borderLeft: '1px solid',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nconst ArrowBackIosIconWrapper = styled(ArrowBackIosIcon)({\n  color: '#ffffff',\n  marginLeft: 10,\n})\n\nconst ArrowForwardIosIconWrapper = styled(ArrowForwardIosIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageView\n","import {\n  DatabaseData,\n  DatabaseListData,\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n} from 'pages/Database'\n\nexport type OrderKey =\n  | keyof (RecordDatabase | RecordList)\n  | 'subject'\n  | 'session'\n  | 'datatype'\n  | 'attributes.type'\n  | 'attributes.protocol'\n  | 'attributes.size'\n\nexport const onRowClick = (\n  datas: DatabaseData | DatabaseListData,\n  row: ImagesDatabase | RecordList,\n  type: 'tree' | 'list' = 'tree',\n) => {\n  const view = {\n    open: true,\n    url: row.image_url,\n    id: row.id,\n    session_id: (row as ImagesDatabase).session_id,\n    parent_id: (row as ImagesDatabase).parent_id,\n    jsonData:\n      (row as ImagesDatabase).attributes ||\n      (row as RecordList).image_attributes,\n    image: row,\n  }\n  const checkNext = onGet(datas, row, false, type)\n  const checkPre = onGet(datas, row, true, type)\n  return { view, checkNext, checkPre }\n}\n\nexport const onGet = (\n  datas: DatabaseData | DatabaseListData,\n  rowClick: ImagesDatabase | RecordList,\n  isSub?: boolean,\n  type: 'tree' | 'list' = 'tree',\n): ImagesDatabase | RecordList | undefined => {\n  if (type === 'tree') {\n    const row = rowClick as ImagesDatabase\n    const dataNow = datas.records[row.record_index || 0] as RecordDatabase\n    const subjectNow = dataNow?.subjects?.[row.subject_index || 0]\n    const sessionNow = subjectNow?.sessions[row.session_index || 0]\n    const datatypeNow = sessionNow?.datatypes[row.datatype_index || 0]\n    if (!isSub) {\n      const imageNext = datatypeNow?.images[(row.image_index || 0) + 1]\n      if (imageNext) {\n        return { ...row, ...imageNext, image_index: (row.image_index || 0) + 1 }\n      }\n      const datatypeNext = sessionNow?.datatypes[(row.datatype_index || 0) + 1]\n      if (datatypeNext) {\n        const images = datatypeNext?.images\n        if (images[0])\n          return {\n            ...row,\n            ...images[0],\n            datatype_index: (row.datatype_index || 0) + 1,\n            image_index: 0,\n          }\n      }\n    } else {\n      const imagePre = datatypeNow?.images[(row.image_index || 0) - 1]\n      if (imagePre) {\n        return { ...row, ...imagePre, image_index: (row.image_index || 0) - 1 }\n      }\n      const datatypeImagePre =\n        sessionNow?.datatypes?.[(row.datatype_index || 0) - 1]\n      if (datatypeImagePre) {\n        const images = datatypeImagePre?.images\n        if (images?.[images.length - 1]) {\n          return {\n            ...row,\n            ...images?.[images.length - 1],\n            datatype_index: (row.datatype_index || 0) - 1,\n            image_index: images.length - 1,\n          }\n        }\n      }\n    }\n  } else {\n    const row = rowClick as RecordList\n    const indexImageNow = datas.records.findIndex(\n      (record) => record.id === row.id,\n    )\n    return datas.records[indexImageNow + (isSub ? -1 : 1)] as RecordList\n  }\n  return undefined\n}\n\nconst sortWithLabName = (\n  datasTable: (RecordDatabase | RecordList)[],\n  orderKey: keyof (RecordDatabase | RecordList),\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return a[orderKey] > b[orderKey] ? -1 : 1\n      }\n      return a[orderKey] < b[orderKey] ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nconst sortSubjectTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort((dataA, dataB) => {\n    const subjectsA = dataA.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    const subjectsB = dataB.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    if (typeOrder === 'DESC') {\n      return subjectsA[0]?.label > subjectsB[0]?.label ? -1 : 1\n    }\n    return subjectsA[0]?.label < subjectsB[0]?.label ? -1 : 1\n  })\n  return newDatas.map((element) => ({\n    ...element,\n    subjects: element.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    }),\n  }))\n}\n\nconst sortSessionTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          const subSessB = subB.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions.sort((ssA, ssB) => {\n            if (typeOrder === 'DESC') {\n              return ssA.label > ssB.label ? -1 : 1\n            }\n            return ssA.label < ssB.label ? -1 : 1\n          }),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortDataTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              const dataTypeB = ssB.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.label > dataTypeB[0]?.label ? -1 : 1\n              }\n              return dataTypeA[0]?.label < dataTypeB[0]?.label ? -1 : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes.sort((typeA, typeB) => {\n                if (typeOrder === 'DESC') {\n                  return typeA.label > typeB.label ? -1 : 1\n                }\n                return typeA.label < typeB.label ? -1 : 1\n              }),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortAttributesTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n  key: string = 'type',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const typeA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.attributes[key] > imageB.attributes[key]\n                        ? -1\n                        : 1\n                    }\n                    return imageA.attributes[key] < imageB.attributes[key]\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n          }\n          return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n        })\n      const typeB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.attributes[key] > imageB.attributes[key]\n                        ? -1\n                        : 1\n                    }\n                    return imageA.attributes[key] < imageB.attributes[key]\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n          }\n          return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n        })\n\n      if (typeOrder === 'DESC') {\n        return typeA[0]?.attributes[key] > typeB[0]?.attributes[key] ? -1 : 1\n      }\n      return typeA[0]?.attributes[key] < typeB[0]?.attributes[key] ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.attributes[key] > subSessB[0]?.attributes[key]\n              ? -1\n              : 1\n          }\n          return subSessA[0]?.attributes[key] < subSessB[0]?.attributes[key]\n            ? -1\n            : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n              const dataTypeB = ssB.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.attributes[key] >\n                  dataTypeB[0]?.attributes[key]\n                  ? -1\n                  : 1\n              }\n              return dataTypeA[0]?.attributes[key] <\n                dataTypeB[0]?.attributes[key]\n                ? -1\n                : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes\n                .sort((typeA, typeB) => {\n                  const imageA = typeA.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                  const imageB = typeB.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                  if (typeOrder === 'DESC') {\n                    return imageA[0]?.attributes[key] >\n                      imageB[0]?.attributes[key]\n                      ? -1\n                      : 1\n                  }\n                  return imageA[0]?.attributes[key] < imageB[0]?.attributes[key]\n                    ? -1\n                    : 1\n                })\n                .map((type) => ({\n                  ...type,\n                  images: type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  }),\n                })),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortWithKey = (\n  datasTable: RecordList[],\n  orderKey: keyof RecordList,\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  return datasTable.sort((dataA: RecordList, dataB: RecordList) => {\n    let valueA: RecordList | string = dataA\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueA !== 'string') {\n          valueA = valueA?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueA = valueA[orderKey] as string\n\n    let valueB: RecordList | string = dataB\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueB !== 'string') {\n          valueB = valueB?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueB = valueB[orderKey] as string\n    if (typeOrder === 'DESC') {\n      return valueA > valueB ? -1 : 1\n    }\n    return valueA < valueB ? -1 : 1\n  })\n}\n\nconst sortWithTime = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return new Date(a.recording_time) > new Date(b.recording_time) ? -1 : 1\n      }\n      return new Date(a.recording_time) < new Date(b.recording_time) ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nexport const onSort = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC' | '',\n  orderKey: OrderKey,\n  type: string = 'tree',\n): (RecordDatabase | RecordList)[] => {\n  if (!typeOrder) return datasTable\n  let newDatas = datasTable\n  if (type === 'tree') {\n    if (['lab_name', 'user_name'].includes(orderKey)) {\n      newDatas = sortWithLabName(\n        datasTable,\n        orderKey as 'lab_name' | 'user_name',\n        typeOrder,\n      )\n    } else if (orderKey === 'recording_time') {\n      newDatas = sortWithTime(datasTable, typeOrder)\n    } else if (orderKey === 'subject' && type === 'tree') {\n      newDatas = sortSubjectTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'session' && type === 'tree') {\n      newDatas = sortSessionTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'datatype' && type === 'tree') {\n      newDatas = sortDataTypeTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'attributes.type' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n      )\n    } else if (orderKey === 'attributes.protocol' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'protocol',\n      )\n    } else if (orderKey === 'attributes.size' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'size',\n      )\n    }\n  } else {\n    newDatas = sortWithKey(\n      datasTable as RecordList[],\n      orderKey as keyof RecordList,\n      typeOrder,\n    )\n  }\n  return newDatas\n}\n","import { Box, Button, IconButton, styled, TextField } from '@mui/material'\nimport { ChangeEvent, useEffect, useState } from 'react'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ImageView from 'components/ImageView'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { onGet, onRowClick, onSort, OrderKey } from 'utils/database'\nimport { User, useUser } from 'providers'\nimport { isAdmin, isReseacher } from 'utils/auth'\n\ntype PopupSearchProps = {\n  onClose?: () => any\n  onFilter?: (values: { [key: string]: string }) => any\n  defaultValue?: { [key: string]: string }\n}\n\nexport const PopupSearch = ({\n  onClose,\n  defaultValue = {},\n  onFilter,\n}: PopupSearchProps) => {\n  const [values, setValues] = useState(defaultValue)\n\n  const handleFilter = () => {\n    onFilter?.(values)\n    onClose?.()\n  }\n\n  const onChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    setValues({ ...values, [event.target.name]: event.target.value })\n  }\n\n  return (\n    <Popup>\n      <PopupInner>\n        <HeaderTitle>\n          <span>Filter</span>\n          <ButtonControl onClick={onClose}>\n            <CloseIcon />\n          </ButtonControl>\n        </HeaderTitle>\n        <InputSearch\n          onChange={onChange}\n          name={'session'}\n          label=\"Session\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'dataset'}\n          label=\"Dataset\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'type'}\n          label=\"Type\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'protocol'}\n          label=\"Protocol\"\n          variant=\"outlined\"\n        />\n        <Button variant=\"contained\" onClick={handleFilter}>\n          Filter\n        </Button>\n      </PopupInner>\n    </Popup>\n  )\n}\n\nexport type Object = {\n  [key: string]: Object | string | number | number[]\n}\n\nexport type Image = {\n  id: number\n  parent_id: number\n  session_id: number\n  label: string\n  image: {\n    id: number\n    parent_id: number\n    image_url: string\n    attributes: Object\n  }\n}\n\nexport type Viewer = {\n  open: boolean\n  url: string\n  jsonData?: Object\n  id?: number | string\n  session_id?: number\n  parent_id?: string\n  image?: ImagesDatabase | RecordList\n}\n\nexport type ImagesDatabase = {\n  id: number\n  parent_id: string\n  image_url: string\n  datatype_label?: string\n  type?: string\n  attributes: Object\n  session_id?: number\n  record_index?: number\n  subject_index?: number\n  session_index?: number\n  datatype_index?: number\n  image_index?: number\n}\n\nexport type DatatypesDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  images: ImagesDatabase[]\n}\n\nexport type SessionsDatabase = {\n  id: string\n  parent_id: string\n  session_index?: number\n  label: string\n  datatypes: DatatypesDatabase[]\n  subject_index?: number\n}\n\nexport type SubjectDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  sessions: SessionsDatabase[]\n  subject_index?: number\n}\n\nexport type RecordDatabase = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  created_time: string\n  updated_time: string\n  subjects: SubjectDatabase[]\n}\n\nexport type DatabaseData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordDatabase[]\n}\n\nexport type RecordList = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  subject_label: string\n  session_label: string\n  datatypes_label: string\n  image_id: number\n  image_url: string\n  image_attributes: {\n    size: number[]\n    type: string\n    protocol: string\n    voxel_size: number[]\n  }\n  created_time: string\n  updated_time: string\n}\n\nexport type DatabaseListData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordList[]\n}\n\nexport const defaultDatabase: DatabaseData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [\n    {\n      id: 0,\n      lab_name: 'string',\n      user_name: 'string',\n      recording_time: '2023-04-07',\n      subjects: [\n        {\n          id: \"0\",\n          parent_id: \"0\",\n          label: 'new subject',\n          sessions: [\n            {\n              id: \"0\",\n              parent_id: \"0\",\n              label: 'new session',\n              datatypes: [\n                {\n                  id: \"0\",\n                  parent_id: \"0\",\n                  label: 'anat',\n                  images: [\n                    {\n                      id: 0,\n                      parent_id: \"0\",\n                      image_url: '/lib/test.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                        voxel_size: [100, 100, 100]\n                      },\n                    },\n                  ],\n                },\n                {\n                  id: \"1\",\n                  parent_id: \"0\",\n                  label: 'func',\n                  images: [\n                    {\n                      id: 1,\n                      parent_id: \"0\",\n                      image_url: '/lib/test0.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                        voxel_size: [100, 100, 100]\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: \"1\",\n          parent_id: \"0\",\n          label: 'project subject',\n          sessions: [\n            {\n              id: \"1\",\n              parent_id: \"1\",\n              label: 'zsession',\n              datatypes: [\n                {\n                  id: \"2\",\n                  parent_id: \"1\",\n                  label: 'anat',\n                  images: [\n                    {\n                      id: 2,\n                      parent_id: \"2\",\n                      image_url: '/lib/test1.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                        voxel_size: [100, 100, 100]\n                      },\n                    },\n                  ],\n                },\n                {\n                  id: \"3\",\n                  parent_id: \"1\",\n                  label: 'zunc',\n                  images: [\n                    {\n                      id: 3,\n                      parent_id: \"3\",\n                      image_url: '/lib/test2.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'T2_RATE',\n                        protocol: 'X Protocol',\n                        voxel_size: [100, 100, 100]\n                      },\n                    },\n                    {\n                      id: 4,\n                      parent_id: \"3\",\n                      image_url: '/lib/test3.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                        voxel_size: [100, 100, 100]\n                      },\n                    },\n                    {\n                      id: 5,\n                      parent_id: \"3\",\n                      image_url: '/lib/test4.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'T3_RATE',\n                        protocol: 'Z Protocol',\n                        voxel_size: [100, 100, 100]\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n      created_time: '2023-04-07T04:28:09.686Z',\n      updated_time: '2023-04-07T04:28:09.686Z',\n    },\n    {\n      id: 1,\n      lab_name: 'lab name',\n      user_name: 'user name',\n      recording_time: '2023-04-06',\n      subjects: [\n        {\n          id: \"3\",\n          parent_id: \"1\",\n          label: 'subject name',\n          sessions: [],\n        },\n        {\n          id: \"4\",\n          parent_id: \"1\",\n          label: 'zubject name',\n          sessions: [],\n        },\n        {\n          id: \"5\",\n          parent_id: \"1\",\n          label: 'lubject name',\n          sessions: [],\n        },\n      ],\n      created_time: '2023-04-07T04:28:09.686Z',\n      updated_time: '2023-04-07T04:28:09.686Z',\n    },\n  ],\n}\n\nconst dataImages: DatabaseListData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [\n    {\n      id: 0,\n      lab_name: 'lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test.nii',\n      image_attributes: {\n        size: [15.3, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n        voxel_size: [100,100,100]\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 1,\n      lab_name: 'z lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test0.nii',\n      image_attributes: {\n        size: [15.0, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n        voxel_size: [100,100,100]\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 2,\n      lab_name: 'x lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test1.nii',\n      image_attributes: {\n        size: [15.0, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n        voxel_size: [100,100,100]\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 3,\n      lab_name: 'c lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test2.nii',\n      image_attributes: {\n        size: [15.0, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n        voxel_size: [100,100,100]\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 4,\n      lab_name: '4 lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test3.nii',\n      image_attributes: {\n        size: [15.0, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'Z Protocol',\n        voxel_size: [100,100,100]\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 5,\n      lab_name: 'string',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test4.nii',\n      image_attributes: {\n        size: [15.0, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'X Protocol',\n        voxel_size: [100,100,100]\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n  ],\n}\n\nexport const columns = (\n  rowClick: Function,\n  setOpenDelete: Function,\n  type: 'tree' | 'list' = 'tree',\n  user?: User,\n): Column[] => [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true },\n  {\n    title: 'Subject',\n    name: type === 'tree' ? 'subject' : 'subject_label',\n    filter: true,\n  },\n  {\n    title: 'Session',\n    name: type === 'tree' ? 'session' : 'session_label',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Datatype',\n    name: type === 'tree' ? 'datatype' : 'datatypes_label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Type',\n    name: type === 'tree' ? 'attributes.type' : 'image_attributes.type',\n    filter: true,\n  },\n  {\n    title: 'Protocol',\n    name: type === 'tree' ? 'attributes.protocol' : 'image_attributes.protocol',\n    filter: true,\n  },\n  {\n    title: 'Size',\n    name: type === 'tree' ? 'attributes.size' : 'image_attributes.size',\n    filter: true,\n  },\n  {\n    title: 'Voxel size',\n    name:\n      type === 'tree' ? 'attributes.voxel_size' : 'image_attributes.voxel_size',\n    filter: true,\n  },\n  {\n    title: '',\n    name: 'action',\n    render: (data) => {\n      if (!isAdmin(user?.role) && !isReseacher(user?.role)) return null\n      return (\n        <BoxButton>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              rowClick?.(data)\n            }}\n          >\n            <EditIcon fontSize=\"small\" color={'inherit'} />\n          </ButtonControl>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              setOpenDelete?.(true)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </ButtonControl>\n        </BoxButton>\n      )\n    },\n  },\n]\n\nconst Database = () => {\n  const [openPopup, setOpenPopup] = useState(false)\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [datasTable, setDatasTable] = useState<DatabaseData | DatabaseListData>(\n    defaultDatabase,\n  )\n  const [initDataTable, setInitDataTable] = useState<\n    DatabaseData | DatabaseListData\n  >(defaultDatabase)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [type, setType] = useState<'tree' | 'list'>('tree')\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const { user } = useUser()\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  useEffect(() => {\n    if (type === 'tree') {\n      setDatasTable(defaultDatabase)\n      setInitDataTable(defaultDatabase)\n    } else {\n      setDatasTable(dataImages)\n      setInitDataTable(dataImages)\n    }\n  }, [type])\n\n  const rowClick = (row: ImagesDatabase | RecordList) => {\n    const { view, checkNext, checkPre } = onRowClick(datasTable, row, type)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDataTable.records)),\n      orderByValue,\n      orderKey as OrderKey,\n      type,\n    )\n    setDatasTable({ ...datasTable, records: data as any })\n    setColumnSort(orderKey)\n    setOrdeBy(orderByValue)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(datasTable as any, viewer.image, false, type)\n    if (imageNext) rowClick(imageNext)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(datasTable, viewer.image, true, type)\n    if (imagePre) rowClick(imagePre)\n  }\n\n  return (\n    <DatabaseWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Image\"\n        description={`Are you sure delete?\\n`}\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ProjectsTitle>\n        <span>Database</span>\n        <ButtonFilter\n          onClick={() => setOpenPopup(true)}\n          style={{ margin: '0 26px 0 0' }}\n        >\n          Filter\n        </ButtonFilter>\n      </ProjectsTitle>\n      <BoxSelectTypeView>\n        <Box\n          onClick={() => setType('tree')}\n          style={{\n            marginRight: 4,\n            fontWeight: type === 'tree' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'tree' ? '' : '#4687f4',\n          }}\n        >\n          Tree\n        </Box>\n        /\n        <Box\n          onClick={() => setType('list')}\n          style={{\n            marginLeft: 4,\n            fontWeight: type === 'list' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'list' ? '' : '#4687f4',\n          }}\n        >\n          List\n        </Box>\n      </BoxSelectTypeView>\n      {openPopup && <PopupSearch onClose={() => setOpenPopup(false)} />}\n      <DatabaseTableComponent\n        defaultExpand\n        onSort={handleSort}\n        rowClick={rowClick}\n        orderKey={columnSort}\n        orderBy={orderBy}\n        data={datasTable.records}\n        columns={columns(rowClick, setOpenDelete, type, user)}\n      />\n      <ImageView\n        disabled={disabled}\n        url={viewer.url}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n      />\n    </DatabaseWrapper>\n  )\n}\n\nconst DatabaseWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst HeaderTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst Popup = styled(Box)(() => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n  zIndex: 9999,\n}))\n\nconst PopupInner = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2, 3),\n  backgroundColor: '#fff',\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n}))\n\nconst InputSearch = styled(TextField)(() => ({\n  minWidth: 250,\n}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ButtonControl = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0, 1),\n  width: 30,\n  height: 30,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst ProjectsTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst BoxSelectTypeView = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 16,\n})\n\nexport default Database\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { getMe, login } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { saveToken } from 'utils/auth'\nimport Loading from \"../../components/common/Loading\";\n\nconst Login = () => {\n  const { setUser } = useUser()\n  const navigate = useNavigate()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n    try {\n      const { access_token } = await login(values)\n      saveToken(access_token)\n      getUser()\n    } catch (e) {\n      setErrors({ email: 'Email or password is wrong', password: '' })\n    }\n    finally {\n      setIsLoading(false)\n    }\n  }\n\n  const getUser = async () => {\n    const data = await getMe()\n    setUser(data)\n    navigate('/')\n  }\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">{errors.password}</TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {\n        isLoading && <Loading />\n      }\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  styled,\n  Typography,\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport DatabaseTableComponent from 'components/DatabaseTable'\nimport React, {\n  useState,\n  DragEvent,\n  Fragment,\n  useRef,\n  CSSProperties,\n} from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport {\n  DatabaseData,\n  defaultDatabase,\n  ImagesDatabase,\n  PopupSearch,\n  Viewer,\n} from '../Database'\nimport ImageView from 'components/ImageView'\nimport { onGet, onRowClick, onSort, OrderKey } from 'utils/database'\nimport { Object } from '../Database'\nimport { ChangeEvent } from 'react'\nimport { RecordDatabase } from '../Database'\n\nconst columns = [\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true, width: 100 },\n  { title: 'Subject', name: 'subject', filter: true },\n  {\n    title: 'Session',\n    name: 'session',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Datatype',\n    name: 'datatype',\n    filter: true,\n    width: 100,\n  },\n  { title: 'Size', name: 'attributes.size', filter: true },\n  { title: 'Voxel size', name: 'attributes.voxel_size', filter: true },\n]\n\ntype ProjectAdd = {\n  project_name?: string\n  project_type?: string\n  image_count: number\n  image_url: string\n  protocol: string\n  id: string\n  image_id: number\n  jsonData: Object\n}\n\ntype DataWithin = {\n  id: string\n  data: ProjectAdd[]\n  name: string\n}\n\ntype DataFactor = {\n  within: DataWithin[]\n} & DataWithin\n\nconst nameDefault = 'DEFAULT'\n\nconst ProjectFormComponent = () => {\n  const [searchParams] = useSearchParams()\n\n  const idEdit = searchParams.get('id')\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [datasTable, setDatasTable] = useState<DatabaseData>(defaultDatabase)\n  const [imageIDs, setImageIDs] = useState<number[]>([])\n  const routeGoback = searchParams.get('back')\n  const isPendingDrag = useRef(false)\n\n  const [initDataTable /*setInitDataTable */] =\n    useState<DatabaseData>(defaultDatabase)\n  const [projectName, setProjectName] = useState('Prj Name 1')\n  const [projectLevel, setProjectLevel] = useState<'factor' | 'within-factor'>(\n    'factor',\n  )\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [openFilter, setOpenFilter] = useState(false)\n  const [rowDrag, setRowDrag] = useState<ImagesDatabase | ImagesDatabase[]>()\n  const [dataFactors, setDataFactors] = useState<DataFactor[]>([\n    { name: nameDefault, within: [], id: getNanoId(), data: [] },\n  ])\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n    setProjectName(e.target.value)\n  }\n\n  const handleChangeLevel = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const type = event.target.value as 'within-factor' | 'factor'\n    setProjectLevel(type)\n    let within: DataWithin[] = []\n    if (type === 'within-factor') {\n      within = [{ name: nameDefault, id: getNanoId(), data: [] }]\n    }\n    setImageIDs([])\n    setDataFactors([{ name: nameDefault, within, id: getNanoId(), data: [] }])\n  }\n\n  const onAddBetween = () => {\n    setDataFactors((pre) => [\n      ...pre,\n      { name: nameDefault, within: [], id: getNanoId(), data: [] },\n    ])\n  }\n\n  const onAddWithin = (idFactor: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === idFactor) {\n          return {\n            ...p,\n            within: [\n              ...p.within,\n              { name: nameDefault, within: [], id: getNanoId(), data: [] },\n            ],\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteFactor = (row: DataFactor) => {\n    setImageIDs(pre => pre.filter(id => !row.data.find(rowData => rowData.image_id === id)))\n    setDataFactors((pre) => pre.filter((e) => e.id !== row.id))\n  }\n\n  const onDeleteWithin = (factor: DataFactor, row: DataWithin) => {\n    setImageIDs(pre => pre.filter(id => !row.data.find(rowData => rowData.image_id === id)))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, within: p.within.filter((w) => w.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataWithin = (\n    factor: DataFactor,\n    within: DataWithin,\n    row: ProjectAdd,\n  ) => {\n    console.log('row', row)\n    setImageIDs(pre => pre.filter(id => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, data: w.data.filter((d) => d.id !== row.id) }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataFactor = (factor: DataFactor, row: ProjectAdd) => {\n    setImageIDs(pre => pre.filter(id => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, data: p.data.filter((d) => d.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDragRow = (row: ImagesDatabase[] = []) => {\n    setRowDrag(row)\n  }\n\n  const onBeginDrag = () => {\n    isPendingDrag.current = true\n    const mouseup = () => {\n      isPendingDrag.current = false\n      window.removeEventListener('mouseup', mouseup)\n    }\n    window.addEventListener('mouseup', mouseup)\n  }\n\n  const onDragEnd = () => {\n    setRowDrag(undefined)\n  }\n\n  const onMouseOver = (factor: DataFactor, within?: DataWithin) => {\n    if (isPendingDrag.current) return\n    onDropData(factor, within)\n    setRowDrag(undefined)\n  }\n\n  const onDropData = (factor: DataFactor, within?: DataWithin) => {\n    if (!Array.isArray(rowDrag) && !rowDrag?.image_url) {\n      return\n    }\n    let newData: ProjectAdd[] = []\n    const checkExistIdImage =\n      imageIDs.length &&\n      imageIDs.some((id) => {\n        if (!Array.isArray(rowDrag)) return rowDrag.id === id\n        return rowDrag.some((row) => row.id === id)\n      })\n    if (checkExistIdImage) {\n      return alert('Image existed')\n    }\n    const newIds = Array.isArray(rowDrag)\n      ? rowDrag.map((row) => row.id)\n      : [rowDrag.id]\n    setImageIDs([...imageIDs, ...newIds])\n    if (!Array.isArray(rowDrag)) {\n      newData = [\n        {\n          id: getNanoId(),\n          project_name: rowDrag.datatype_label,\n          image_count: 1,\n          image_id: rowDrag.id,\n          project_type: rowDrag.attributes.type as string,\n          protocol: rowDrag.attributes.protocol as string,\n          image_url: rowDrag?.image_url,\n          jsonData: rowDrag?.attributes,\n        },\n      ]\n    } else if (Array.isArray(rowDrag)) {\n      newData = rowDrag.map((row) => ({\n        id: getNanoId(),\n        project_name: row.datatype_label,\n        image_count: 1,\n        image_id: row.id,\n        project_type: row.attributes.type as string,\n        protocol: row.attributes.protocol as string,\n        image_url: row?.image_url,\n        jsonData: row?.attributes,\n      }))\n    }\n    if (projectLevel !== 'within-factor') {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return { ...p, data: [...p.data, ...newData] }\n          }\n          return p\n        }),\n      )\n      return\n    }\n    if (within) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return {\n              ...p,\n              within: p.within.map((w) => {\n                if (w.id === within.id) {\n                  return { ...w, data: [...w.data, ...newData] }\n                }\n                return w\n              }),\n            }\n          }\n          return p\n        }),\n      )\n    }\n  }\n\n  const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onDragLeave = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onChangeNameFactor = (factor: DataFactor, value: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, name: value }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onChangeNameWithinFactor = (\n    factor: DataFactor,\n    within: DataWithin,\n    value: string,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, name: value }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const renderData = (\n    data: ProjectAdd[],\n    style?: CSSProperties,\n    onDelete?: (row: ProjectAdd) => void,\n  ) => {\n    return data.map((e, index) => (\n      <BoxItem\n        key={`${e.id}_${index}`}\n        style={style}\n        onClick={() => rowDataClick(e)}\n      >\n        <TypographyBoxItem>{e.project_name}</TypographyBoxItem>\n        <TypographyBoxItem>{e.project_type}</TypographyBoxItem>\n        <TypographyBoxItem>{e.protocol}</TypographyBoxItem>\n        <Box\n          style={{ display: 'flex', justifyContent: 'flex-end', width: '100%' }}\n        >\n          <Button\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              onDelete?.(e)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </Button>\n        </Box>\n      </BoxItem>\n    ))\n  }\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const rowClick = (row: ImagesDatabase) => {\n    const { view, checkNext, checkPre } = onRowClick(datasTable, row)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const rowDataClick = (row: ProjectAdd) => {\n    if (!row?.image_url || !timeoutClick.current) {\n      timeoutClick.current = setTimeout(() => {\n        timeoutClick.current = undefined\n      }, 300)\n      return\n    }\n    setViewer({\n      open: true,\n      url: row.image_url,\n      jsonData: row.jsonData,\n    })\n    setDisabled({ left: true, right: true })\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDataTable.records)),\n      orderByValue,\n      orderKey as OrderKey,\n    )\n    setDatasTable({ ...datasTable, records: data as RecordDatabase[] })\n    setColumnSort(orderKey)\n    setOrdeBy(orderByValue)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(datasTable, viewer.image, false)\n    if (imageNext) rowClick(imageNext as ImagesDatabase)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(datasTable, viewer.image, true)\n    if (imagePre) rowClick(imagePre as ImagesDatabase)\n  }\n\n  return (\n    <ProjectsWrapper>\n      {openFilter && <PopupSearch onClose={() => setOpenFilter(false)} />}\n      <ImageView\n        disabled={disabled}\n        url={viewer.url}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n      />\n      {isEditName ? (\n        <InputName\n          autoFocus\n          onBlur={() => setIsEditName(false)}\n          value={projectName}\n          onChange={onChangeName}\n        />\n      ) : (\n        <TextName onClick={() => setIsEditName(true)}>{projectName}</TextName>\n      )}\n      <BoxOptions\n        aria-labelledby=\"demo-radio-buttons-group-label\"\n        value={projectLevel}\n        name=\"radio-buttons-group\"\n        onChange={handleChangeLevel}\n      >\n        <Box>\n          <Box>\n            <FormControlLabel\n              value=\"factor\"\n              control={<Radio />}\n              label=\"Between factor\"\n            />\n          </Box>\n          <FormControlLabel\n            value=\"within-factor\"\n            control={<Radio />}\n            label=\"Between factor-within factor\"\n          />\n        </Box>\n      </BoxOptions>\n      <DropAndDropBox>\n        <DragBox>\n          {dataFactors.map((factor, index) => {\n            return (\n              <Fragment key={factor.id}>\n                <BoxFactor>\n                  <Input\n                    onChange={(e) => onChangeNameFactor(factor, e.target.value)}\n                    style={{ width: 'calc(100% - 64px)' }}\n                    value={\n                      factor.name === nameDefault\n                        ? `Between factor name ${index}`\n                        : factor.name\n                    }\n                  />\n                  <Button onClick={() => onDeleteFactor(factor)}>\n                    <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                  </Button>\n                  {projectLevel === 'within-factor' ? (\n                    factor.within.map((within, indexWithin) => (\n                      <BoxFactor key={within.id} style={{ marginLeft: 24 }}>\n                        <Input\n                          onChange={(e) =>\n                            onChangeNameWithinFactor(\n                              factor,\n                              within,\n                              e.target.value,\n                            )\n                          }\n                          style={{ width: 'calc(100% - 64px)' }}\n                          value={\n                            within.name === nameDefault\n                              ? `Within factor name ${indexWithin}`\n                              : within.name\n                          }\n                        />\n                        <Button onClick={() => onDeleteWithin(factor, within)}>\n                          <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                        </Button>\n                        {renderData(within.data, { marginLeft: 48 }, (row) => {\n                          onDeleteDataWithin(factor, within, row)\n                        })}\n                        <BoxDrag\n                          style={{\n                            borderBottom: rowDrag ? '1px dashed red' : '',\n                          }}\n                          onDrop={() => onDropData(factor, within)}\n                          onMouseOver={() => onMouseOver(factor, within)}\n                          onDragOver={onDragOver}\n                          onDragLeave={onDragLeave}\n                        />\n                      </BoxFactor>\n                    ))\n                  ) : (\n                    <>\n                      {renderData(factor.data, { marginLeft: 24 }, (row) => {\n                        onDeleteDataFactor(factor, row)\n                      })}\n                      <BoxDrag\n                        style={{\n                          borderBottom: rowDrag ? '1px dashed red' : '',\n                        }}\n                        onDrop={() => onDropData(factor)}\n                        onDragOver={onDragOver}\n                        onDragLeave={onDragLeave}\n                        onMouseOver={() => onMouseOver(factor)}\n                      />\n                    </>\n                  )}\n                </BoxFactor>\n                {projectLevel === 'within-factor' && dataFactors.length ? (\n                  <NewRowButton\n                    onClick={() => onAddWithin(factor.id)}\n                    style={{ marginLeft: 24 }}\n                  >\n                    + Add Within Factor\n                  </NewRowButton>\n                ) : null}\n              </Fragment>\n            )\n          })}\n          <NewRowButton onClick={onAddBetween}>\n            + Add Between Factor\n          </NewRowButton>\n        </DragBox>\n        <DropBox>\n          <BoxFilter>\n            <ButtonFilter\n              onClick={() => setOpenFilter(true)}\n              style={{ margin: '0 26px 0 0' }}\n            >\n              Filter\n            </ButtonFilter>\n          </BoxFilter>\n          <DatabaseTableComponent\n            onSort={handleSort}\n            orderKey={columnSort}\n            orderBy={orderBy}\n            rowClick={rowClick}\n            defaultExpand\n            onBeginDrag={onBeginDrag}\n            onDrag={onDragRow}\n            onDragEnd={onDragEnd}\n            draggable\n            data={datasTable.records}\n            columns={columns}\n          />\n        </DropBox>\n      </DropAndDropBox>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <ButtonFilter\n          onClick={() =>\n            navigate(!routeGoback ? '/projects' : `${routeGoback}&id=${idEdit}`)\n          }\n        >\n          {idEdit ? 'Ok' : 'Add'}\n        </ButtonFilter>\n        <ButtonFilter\n          onClick={() =>\n            navigate(!routeGoback ? '/projects' : `${routeGoback}&id=${idEdit}`)\n          }\n        >\n          Cancel\n        </ButtonFilter>\n      </Box>\n    </ProjectsWrapper>\n  )\n}\n\nconst TextName = styled(Typography)(({ theme }) => ({\n  textOverflow: 'ellipsis',\n  width: 'calc(40% - 16px)',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  padding: theme.spacing(1),\n  borderWidth: 1,\n  fontSize: 16,\n}))\n\nconst BoxItem = styled(Box)({\n  display: 'flex',\n  height: 40,\n  alignItems: 'center',\n  borderBottom: '1px solid rgba(0,0,0,0.8)',\n  paddingLeft: 16,\n  marginBottom: 4,\n})\n\nconst TypographyBoxItem = styled(Box)({\n  minWidth: 120,\n})\n\nconst BoxDrag = styled(Box)({\n  paddingBottom: 24,\n  width: '100%',\n  borderWidth: 1,\n})\n\nconst BoxFactor = styled(Box)({})\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(3),\n}))\n\nconst BoxOptions = styled(RadioGroup)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(1, 2),\n  display: 'flex',\n  flexDirection: 'inherit',\n}))\n\nconst InputName = styled('input')(({ theme }) => ({\n  padding: theme.spacing(1),\n  outline: 'none',\n  borderColor: 'transparent',\n  fontSize: 18,\n  width: 'calc(40% - 16px)',\n  '&:focus': {\n    borderColor: '#000',\n  },\n  display: 'block',\n  borderWidth: 1,\n}))\n\nconst DropAndDropBox = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  gap: theme.spacing(2),\n  height: 'calc(100% - 177px)',\n  overflow: 'hidden',\n}))\n\nconst DragBox = styled(Box)(({ theme }) => ({\n  width: '40%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #000',\n  minHeight: 100,\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst DropBox = styled(Box)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #dedede',\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst NewRowButton = styled(Button)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  borderStyle: 'dashed',\n  borderWidth: 1,\n  margin: theme.spacing(1, 0),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 1),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  color: '#ffffff',\n  backgroundColor: '#283237 !important',\n}))\n\nconst BoxFilter = styled(Box)({\n  display: 'flex',\n  marginBottom: 10,\n  justifyContent: 'flex-end',\n})\n\nexport default ProjectFormComponent\n","import { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport {resetPassword} from \"../../api/auth\";\nimport Loading from \"../../components/common/Loading\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await resetPassword(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Pls check your mail!`)\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'This field is validate'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Project from './components/Project'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport AccountManager from 'pages/AccountManager'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Projects from './pages/Projects'\nimport Database from './pages/Database'\nimport Login from 'pages/Login'\nimport ProjectFormComponent from \"./pages/Projects/Create\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<Dashboard />} />\n            <Route path=\"/projects/workflow\" element={<Project />} />\n            <Route path=\"/account-manager\" element={<AccountManager />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            <Route path=\"/database\" element={<Database />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            <Route path=\"/account-deleted\" element={<AccountDelete />} />\n            <Route path=\"/projects/new-project\" element={<ProjectFormComponent />} />\n          </Routes>\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.timestamp,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n} from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}