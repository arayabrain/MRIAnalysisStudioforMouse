{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/selectors/run/RunSelectors.ts","const/API.ts","api/run/Run.ts","store/slice/Dataset/DatasetSelector.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Project/ProjectSelector.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/Dataset/DatasetType.ts","utils/auth/index.ts","api/auth/index.ts","utils/axios.ts","api/dataset/index.ts","store/slice/Dataset/DatasetAction.ts","store/slice/Dataset/DatasetSlice.ts","api/run/RunUtils.ts","const/flowchart.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","store/slice/InputNode/InputNodeActions.ts","store/slice/FlowElement/FlowElementSlice.ts","store/slice/InputNode/InputNodeSlice.ts","store/slice/Experiments/ExperimentsSlice.ts","store/slice/Pipeline/PipelineHook.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","utils/nanoid/NanoIdUtils.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/Snakemake.tsx","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/DialogContext.tsx","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/DisplayData/DisplayDataSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","components/Visualize/DataContext.tsx","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","components/Visualize/Plot/CsvPlot.tsx","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/ImageAlignment/index.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/common/Loading.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","components/FlowChart/NWB.tsx","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Experiment/Experiment.tsx","components/VisualizeNew/index.tsx","components/Project.tsx","store/slice/Project/ProjectType.ts","providers/index.ts","components/Header.tsx","components/Layout.tsx","pages/Dashboard/index.tsx","components/common/Input.tsx","components/ModalDeleteAccount/index.tsx","components/Table/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","components/InputPassword/index.tsx","components/ModalChangePassword/index.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","api/project/index.ts","store/slice/Project/ProjectAction.ts","pages/Projects/index.tsx","components/DatabaseTable.tsx","components/ImageView/ChangeSize.tsx","api/rawdb/index.tsx","components/ImageView/index.tsx","utils/database/index.ts","pages/Database/index.tsx","pages/Login/index.tsx","store/slice/Project/ProjectSlice.ts","pages/Projects/Create.tsx","pages/ResetPassword/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","data","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","filter","id","label","convertToRunResult","nodeResultDto","outputPath","outputPaths","message","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectInputNodeParam","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","inputNodePosyData","isEdge","edge","HOST","process","PORT","BASE_URL","DATABASE_URL_HOST","runApi","projectId","a","axios","post","response","runByUidApi","pendingNodeIdList","selectDataset","dataset","selectCurrentProjectId","project_id","getUrlFromSubfolder","subfolders","urls","sub","sub_folders","images","urlsImage","image","url","image_url","selectListImageUrl","createAsyncThunk","thunkAPI","getState","responseData","rejectWithValue","runByCurrentUid","currentUid","pollRunResult","getExperimentsApi","get","deleteExperimentByUidApi","delete","deleteExperimentByListApi","uidList","importExperimentByUidApi","fetchExperimentApi","EXPERIMENTS_SLICE_NAME","project","currentProject","selectProjectList","projects","selectCurrentProject","getExperiments","_","fetchExperiment","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","convertToExperimentType","functions","function","unique_id","convertToExperimentStatus","success","hasNWB","timestamp","started_at","convertFunctionsToRunResultDTO","key","initialState","allowRun","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","setAllowRun","extraReducers","builder","addCase","fulfilled","rejected","meta","_state","_action","addMatcher","isAnyOf","pending","actions","PROJECT_SLICE_NAME","saveToken","access_token","localStorage","setItem","getToken","getItem","saveRefreshToken","refresh_token","removeToken","removeItem","isAdmin","role","isReseacher","optionsRole","code","login","refreshToken","getMe","listUser","query","createUser","editUser","userId","put","deleteUser","deleteAccountProfile","editNameProfile","editPassProfile","saveParams","loadParams","resetPassword","email","axiosLibrary","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","ExToken","error","Promise","reject","res","getDatasetListApi","createDatasetApi","getDatasetList","records","last_updated_time","createDataset","callback","undefined","datasetSlice","reset","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","ImageFileNode","CsvFileNode","HDF5FileNode","FluoFileNode","AlgorithmNode","BehaviorFileNode","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","fileName","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","createAction","uploadFile","requestId","getUploadConfig","percent","total","dispatch","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","getAlgoParamsApi","algoName","addAlgorithmNode","addInputNode","setInputNodeFilePath","initialFlowPosition","x","y","zoom","initialElementCoord","style","position","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","find","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","max","random","initParams","alignments","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeParamAlignment","setInputNodeHDF5Path","setSelectedFilePath","typeFileNode","setHeader","setIndex","transpose","newState","experimentsSlice","loading","setLoadingExpriment","experimentList","convertToExperimentListType","v","dayjs","extend","utc","timezone","isAlgoChild","algoNode","getAlgoChild","algoList","convertToAlgoListType","prototype","hasOwnProperty","call","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","nanoid","customAlphabet","getNanoId","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","newNode","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","twoDimarrayEqualityFn","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","SnakemakeButton","Button","endIcon","SnakemakeContents","paramKeyList","className","Component","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","errorMessage","prevOpen","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","navigate","useNavigate","float","textAlign","top","right","zIndex","textTransform","useHandleColor","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","createContext","onOpen","onOpenDialogFile","onMessageError","onOpenImageAlignment","FileSelect","multiSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","useSearchParams","searchParams","useContext","selectInput","valueAlignments","newParams","align","image_id","x_pos","x_resize","x_rotate","y_pos","y_resize","y_rotate","z_pos","z_resize","z_rotate","JSON","stringify","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","alpha","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","title","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","DisplayDataContext","dataType","itemId","NaN","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectVisualizeItems","visualaizeItem","items","selectVisualizeItemById","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectRoiItemFilePath","roiItem","selectImageItemStartIndex","selectImageItemEndIndex","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","selectTimeSeriesItemFilePath","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","CsvPlot","isInitialized","isPending","isFulfilled","CsvPlotImple","selectCsvItemTranspose","selectCsvItemSetHeader","selectCsvItemSetIndex","PresentationalCsvPlot","csvData","useMemo","col","row","header","headerData","field","headerName","idx","rows","row_id","rowObj","fromEntries","columns","CsvFileNodeImple","ParamSettingDialog","setOpen","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","p","m","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","shape","nbytes","FluoFileNodeImple","fluoColor","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","setImageItemClikedDataId","clickedDataId","drawOrderList","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","isWorkflowDialog","imageItemInitialValue","showticklabels","showline","zsmooth","showgrid","showscale","colors","rgb","offset","activeIndex","roiAlpha","duration","timeSeriesItemInitialValue","span","zeroline","xrange","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","selectedItemId","layout","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","selectHeatMapItemShowScale","colorscale","selectHeatMapItemColors","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","selectImageItemShowticklabels","selectImageItemShowLine","selectImageItemZsmooth","selectImageItemShowGrid","selectImageItemShowScale","selectImageItemColors","selectImageItemAlpha","timeDataMaxIndex","maxIdx","selectRoiItemIndex","selectImageItemRoiAlpha","colorscaleRoi","createColormap","colormap","nshades","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","ml","PlayBack","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","text","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","selectTimeSeriesItemOffset","selectTimeSeriesItemSpan","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","selectTimeSeriesItemXrange","selectTimeSeriesItemDrawOrderList","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","selectVisualizeDataFilePath","selectVisualizeDataNodeId","selectVisualizeDataType","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allChecked","allNotChecked","indeterminate","TreeItemLabel","checkboxProps","Checkbox","disableRipple","ButtonClose","ButtonPre","backgroundColor","cursor","ButtonNext","InputImage","ImageViewWrapper","justifyContent","ContentSet","Flex","Text","ButtonSet","BoxSet","SwitchImage","flexDirection","SwitchContent","ButtonOk","ButtonCanCel","CloseIconWrapper","CloseIcon","ImageAlignment","readOnly","viewerRef","setUrl","isLoadFile","setIsLoadFile","loadedSuccess","setLoadedSuccess","volumes","urlRef","stateParams","setStateParams","paramAligment","loadFile","clearVolumes","loadFileIndex","paramInit","setValueToBraibrowser","valueParams","setResize","setRadian","setVoxelCoords","redrawVolumes","onChangeValue","onBlurRadian","valueRadian","isNaN","PI","loadVolumes","nii_url","template","element_id","viewer_insert_className","overlay","complete","volumeLoaded","isLoaded","brainbrowser","window","BrainBrowser","volume","paramsNode","xspace","radian","yspace","zspace","utils","isFunction","getVoxelCoords","voxel","k","j","pre","gerenateValueNumber","color_map_config","VolumeViewer","start","viewer","addEventListener","urlColor","cursor_color","loadDefaultColorMapFromURL","setDefaultPanelSize","render","Modal","minHeight","onBlur","gap","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","selectLoadingExperiment","LoaderWrapper","bottom","rotate","keyframes","prixClipFix","Loader","animation","content","boxSizing","inset","Loading","initDialogFile","ReactFlowComponent","loadingExpriment","openPopupAlignment","setOpenPopupAlignment","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","accept","drop","monitorOffset","getClientOffset","offsetLeft","offsetTop","flag","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","preventDefault","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","Popover","anchorOrigin","vertical","horizontal","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","getNWBParamsApi","getNWBParams","nwbSlice","NWBSettingContents","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","borderRight","paddingTop","transitions","easing","sharp","leavingScreen","easeOut","enteringScreen","ExperimentStatusIcon","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","unmountOnExit","Table","Head","Body","TableHead","TableBody","TableRowOfFunction","popup","setPopup","component","scope","ExperimentUidContext","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListKeys","recordsIsEmpty","startTime","finishTime","page","storageKey","initialValue","parseFn","savedStr","parse","setValue","useLocalStorage","valueNum","rowsPerPage","emptyRows","flexGlow","TableContainer","RowItem","secondary","Fragment","tableCellClasses","root","borderBottomWidth","Experiment","regexThreshold","regexCutCoords","AlertDialog","onSaveParams","DialogContentText","WrapperInput","VisualizeInput","SpanError","Title","fontWeight","CutCoords","VisualizeInputWrapper","ParamsButton","ButtonWrapper","VisualizeButton","ImageWrapper","Image","objectFit","VisualizeNew","setIsLoading","cut_coords","coronal","sagittal","threshold","dataParams","setDataParams","errors","setErrors","onLoadParams","newCutCoords","toNumberArr","validateParams","newArr","checkArr","some","onChangeParams","test","checkChar","Container","src","alt","StyledAppBar","drawer","TabPanel","other","hidden","a11yProps","Project","ProjectTypeValue","setParams","runPipeline","appDispatch","isCanceled","location","useLocation","isEdited","removeStateIsEdit","unwrap","then","finished_at","diffMinus","diff","catch","removeEventListener","pathname","intervalId","prevStatus","setPrevStatus","useRunPipeline","set","centered","textColor","UserContext","setUser","useUser","BoxDropdown","listStyleType","backgroundClip","outline","BoxWrapper","BoxMenu","userSelect","BoxInfo","BoxMenuItem","transform","BoxMenuItemLogout","TitleLogo","HeaderWrapper","Header","user","refMenu","blur","display_name","drawerWidth","ignorePaths","MenuLeft","onResize","isClose","MenuLeftWrapper","BoxBack","ButtonBack","BoxDivider","KeyboardBackspaceIcon","LinkWrapper","to","active","TypographyMenu","Link","textDecoration","LayoutWrapper","ContentBodyWrapper","paddingRight","ChildrenWrapper","KeyboardBackspace","shouldForwardProp","listStyle","lineHeight","Layout","setWidth","checkkAuth","token","isPageLogin","DashboardWrapper","DashboardContent","flexWrap","TitleMenu","Dashboard","Input","ContentDelete","ButtonConfirm","BoxConfirm","ModalDeleteAccount","onSubmit","titleSubmit","description","textDelete","setTextDelete","whiteSpace","placeholder","MyPaginate","ReactPaginate","borderCollapse","Thead","Tr","Th","borderTopLeftRadius","borderTopRightRadius","TBody","Td","maxWidth","wordBreak","NoData","ArrowDownwardIconOrder","ArrowDownwardIcon","TableComponent","paginate","orderBy","orderKey","pageCount","page_size","renderCol","dataIndex","iCol","nameCol","disableInitialCallback","marginPagesDisplayed","pageRangeDisplayed","breakLabel","previousLabel","nextLabel","TextError","InputError","autoComplete","SelectModal","SelectError","options","initState","password","lab","confirmPassword","regexPassword","regexEmail","regexIgnoreS","ModalComponent","onSubmitEdit","setIsOpenModal","dataEdit","setFormData","isDisabled","setIsDisabled","validateEmail","validateField","validatePassword","isConfirm","errorLength","validateLength","datas","validateForm","errorName","errorEmail","errorLab","errorRole","onChangeData","newDatas","errorConfirm","toLowerCase","newErrors","alert","ModalBox","TitleModal","BoxData","LabelModal","ButtonModal","AccountManagerWrapper","BoxButton","ButtonAdd","ALink","button","AccountManager","openDelete","setOpenDelete","isOpenModal","setDataEdit","idDel","setIdDel","setData","per_page","next_page_token","setPaginate","getList","nextPageToken","newData","total_page","handleCloseDelete","onDelete","onForgotPassword","onPageChange","InputPassword","setType","BoxTitle","FormInline","Label","ModalChangePassword","setValues","validate","confirm_password","validateReEnter","new_password","onChangePass","onCloseModal","reEnter","AccountWrapper","BoxFlex","TitleData","ButtonSubmit","Account","isEditName","setIsEditName","openChangePw","setOpenChangePw","onEditName","handleCloseChangePw","onChangePw","oldPass","newPass","old_password","mt","AccountDelete","getProjectListApi","getProjectApi","createProjectApi","updateProjectApi","deleteProjectApi","getProjectList","getProjectId","createProject","editProject","deleteProject","ProjectsWrapper","ProjectsTitle","BoxAction","letterSpacing","Projects","idDelete","setIdDelete","onEdit","onWorkflow","onResults","addNewProject","RenderColumn","recordIndex","rowClick","drags","onMouseDown","draggable","onDrag","openChild","setOpenChild","openChildParent","setOpenChildPrent","subjects","openSubjects","setOpenSubjects","isDrag","drag","session_id","datatype_index","onDragEvent","datatypes","column","BoxCenter","subject_index","subId","o","sessions","session","session_index","ii","image_index","datatype_label","subject_id","parent_id","record_index","onDragStart","DatabaseTableComponent","addProject","onSort","onBeginDragProps","onBeginDrag","setDrags","pageX","pageY","mouseMoveRect","setMouseMoveRect","timeoutClick","ctrRef","refTable","refTdSelect","mouseStart","beginDrag","setBeginDrag","onKeydownEvent","onKeyupEvent","onMouseUp","onMouseMove","ctrlKey","metaKey","onRowClickEvent","idDom","tds","currentTarget","getElementsByTagName","dom","innerHTML","TableWrap","DataTable","order","onSortHandle","allowMutilKey","draggableProps","el","rowId","trNow","getBoundingClientRect","BoxDrag","td","overflowX","Dot","TitleScale","BoxLine","ScaleWrapper","ChangeDrag","onChangeMin","showInputMax","mouseDown","refDrag","refDot","getWidth","clientWidth","onTouchStart","touches","mouseInit","scale","onTouchMove","toPrecision","onTouchEnd","getDataBaseTree","getDataBaseList","getRawdb","editAttributes","handleSaveAttributes","BoxLoading","ButtonPrevious","BoxContentData","WrapperJson","WrapArea","borderLeft","TextArea","ArrowBackIosIconWrapper","ArrowBackIosIcon","ArrowForwardIosIconWrapper","ArrowForwardIosIcon","WrapperButton","ImageView","editAttribute","onNext","onPrevious","jsonData","worldCoords","setWorldCoords","voxelCoords","setOpacity","thresholds","setThresholds","maxThres","setMaxThres","contracts","setContracts","brightness","setBrightness","openSave","setOpenSave","textAttribute","setTextAttribute","errorAttribute","setErrorAttribute","refTextArea","intensity_min","intensity_max","getIntensityValue","getWorldCoords","handleCloseSave","num","showInputMin","setContrast","refreshPanels","focus","onChangeJson","onRowClick","view","checkNext","onGet","checkPre","isSub","indexImageNow","record","dataNow","subjectNow","sessionNow","datatypeNow","imagePre","datatypeImagePre","imageNext","datatypeNext","sortWithLabName","datasTable","typeOrder","sort","sortSubjectTree","dataA","dataB","subjectsA","subA","subB","subjectsB","sortSessionTree","sessionsA","sA","sB","flat","sessionsB","subSessA","subSessB","ssA","ssB","sortDataTypeTree","ses","ss","dataTypeA","dataTypeB","typeA","typeB","sortAttributesTypeTree","s","imageA","imageB","image_attributes","sortWithKey","valueA","valueB","sortWithTime","Date","recording_time","onFilterValue","setDatabases","initDataTable","pagenation","limit","total_pages","arrRecord","arrSub","subject","arrSess","session_label","arrDt","dt","datatypes_label","image_type","protocol","PopupSearch","onFilter","Popup","PopupInner","HeaderTitle","ButtonControl","InputSearch","defaultDatabase","child","DatabaseWrapper","ButtonFilter","BoxSelectTypeView","Database","openPopup","setOpenPopup","setViewer","databases","columnSort","setOrderByAndTypeAndSort","setInitDataTable","setDisabled","fetchData","DatabaseTable","defaultExpand","orderByValue","LoginWrapper","LoginContent","FormSignUp","LabelField","LableRequired","Description","LinkWrappper","ButtonLogin","Login","validateSubmit","ex_token","getUser","Stack","projectSlice","resetCurrentProject","nameDefault","defaultFactor","within","remapDatasetToDataFactor","ids","datasets","folder_name","sub_within","project_name","attributes","datatype","project_type","image_count","TextName","borderWidth","BoxItem","TypographyBoxItem","BoxFactor","BoxOptions","RadioGroup","InputName","DropAndDropBox","DragBox","DropBox","NewRowButton","borderStyle","BoxFilter","ProjectFormComponent","idEdit","setOrdeBy","setColumnSort","setLoading","routeGoback","isPendingDrag","databasese","initDatabase","setInitDatabase","projectName","setProjectName","FACTOR","projectType","setProjectType","openFilter","setOpenFilter","rowDrag","setRowDrag","dataFactors","setDataFactors","imageIDs","setImageIDs","getDataTree","onMouseOver","factor","onDropData","newIds","w","onDragLeave","renderData","rowDataClick","onCancle","edited","generateName","getBorderDrag","onOk","source_image_ids","iWithin","isSuccess","all","WITHIN_FACTOR","Radio","onChangeNameFactor","rowData","onChangeNameWithinFactor","onDeleteWithin","onDeleteDataWithin","onDrop","onDeleteDataFactor","idFactor","mouseup","Heading","ButtonSignIn","ResetPassword","onReset","errorCheck","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","deleteData","prevDataType","prevFilePath","roi1Ddata","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","projectReducer","datasetReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.194c576e.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { SubFolder } from '../Dataset/DatasetType'\nimport { ExperimentDTO } from 'api/experiments/Experiments'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n  allowRun: boolean\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n\nexport type DataPipeLine = {\n  dataset?: SubFolder[]\n  experiment: ExperimentDTO | undefined\n  isUpdateDataset: boolean\n}\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else if (nodeResultDto.status === 'running') {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: nodeResultDto.name,\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectAllowRunButton = (state: RootState) => {\n  return state.pipeline.allowRun\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type Params = {\n  image_id: number | string\n  x_pos: number\n  y_pos: number\n  z_pos: number\n  x_rotate: number\n  y_rotate: number\n  z_rotate: number\n  x_resize: number\n  y_resize: number\n  z_resize: number\n}\n\nexport type AlignmentData = {\n  alignments: {\n    path: string\n    type: string\n    value: Params[]\n  }\n}\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode\n  extends InputNodeBaseType<'image', AlignmentData> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\nconst HOST_DATABASE = process.env.REACT_APP_SERVER_DATABASE_HOST\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\nexport const DATABASE_URL_HOST = `${HOST_DATABASE}`\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(\n  projectId: string,\n  data: RunPostData,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${projectId}`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  projectId: string,\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${projectId}/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  projectId: string\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { projectId, uid, pendingNodeIdList } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/result/${projectId}/${uid}`,\n    {\n      pendingNodeIdList,\n    },\n  )\n  return response.data\n}\n","import { RootState } from 'store/store'\nimport { SubFolder } from './DatasetType'\n\nexport const selectDataset = (state: RootState) => state.dataset\n\nexport const selectCurrentProjectId = (state: RootState) =>\n  state.dataset.project_id\n\nexport const getUrlFromSubfolder = (\n  subfolders: SubFolder[] = [],\n  urls: { id: string | number; url: string }[],\n) => {\n  subfolders.forEach((sub) => {\n    if (sub.sub_folders) {\n      getUrlFromSubfolder(sub.sub_folders, urls)\n    } else if (sub.images?.length) {\n      const urlsImage = sub.images.map((image) => ({\n        url: image.image_url,\n        id: image.id,\n      }))\n      urls.push(...urlsImage)\n    }\n  })\n  return urls\n}\n\nexport const selectListImageUrl = (\n  state: RootState,\n): { id: string | number; url: string }[] => {\n  if (!state.dataset.dataset) return []\n  let urls: { id: string | number; url: string }[] = []\n  urls = getUrlFromSubfolder(state.dataset.dataset, urls)\n  return urls\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\nimport { selectCurrentProjectId } from '../Dataset/DatasetSelector'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  if (projectId) {\n    try {\n      const responseData = await runApi(projectId, runPostData)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('projectId does not exist.')\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const projectId = selectCurrentProjectId(thunkAPI.getState())\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (projectId && currentUid != null) {\n      try {\n        const responseData = await runByUidApi(\n          projectId,\n          currentUid,\n          runPostData,\n        )\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('projectId or currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  if (projectId) {\n    try {\n      const responseData = await runResult({\n        projectId,\n        uid,\n        pendingNodeIdList,\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('projectId does not exist.')\n  }\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { EdgeDict, NodeDict, OutputPathsDTO, RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type FunctionsDTO = {\n  [nodeId: string]: {\n    name: string\n    success: string\n    unique_id: string\n    hasNWB: boolean\n    message?: string\n    started_at?: string\n    finished_at?: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type ExperimentDTO = {\n  function: FunctionsDTO\n  name: string\n  success?: EXPERIMENTS_STATUS\n  started_at: string\n  finished_at?: string\n  project_id: string\n  unique_id: string\n  hasNWB: boolean\n  edgeDict: EdgeDict\n  nodeDict: NodeDict\n}\n\nexport async function getExperimentsApi(\n  projectId: string,\n): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/${projectId}`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function fetchExperimentApi(\n  projectId: string,\n): Promise<ExperimentDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/fetch/${projectId}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments = (\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n) & { loading: boolean }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  status?: EXPERIMENTS_STATUS\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { RootState } from 'store/store'\n\nexport const selectProject = (state: RootState) => state.project\nexport const selectCurrentProjectId = (state: RootState) =>\n  state.project.currentProject?.id\n  \nexport const selectProjectList = (state: RootState) => state.project.projects\n\nexport const selectCurrentProject = (state: RootState) => state.project.currentProject\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n  ExperimentDTO,\n  fetchExperimentApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\nimport { selectCurrentProjectId } from '../Project/ProjectSelector'\nimport { ThunkApiConfig } from 'store/store'\n\nexport const getExperiments = createAsyncThunk<\n  ExperimentsDTO,\n  undefined,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/getExperiments`, async (_, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  if (projectId) {\n    try {\n      const response = await getExperimentsApi(projectId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('project id does not exist.')\n  }\n})\n\nexport const fetchExperiment = createAsyncThunk<ExperimentDTO, string>(\n  `${EXPERIMENTS_SLICE_NAME}/fetchExperiment`,\n  async (projectId, thunkAPI) => {\n    try {\n      const response = await fetchExperimentApi(projectId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import type {\n  ExperimentDTO,\n  ExperimentsDTO,\n  FunctionsDTO,\n} from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\nimport { RunResultDTO } from 'api/run/Run'\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.started_at,\n    status: dto.success,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nexport function convertFunctionsToRunResultDTO(\n  dto: FunctionsDTO,\n): RunResultDTO {\n  const result: RunResultDTO = {}\n  Object.entries(dto).forEach(([key, value]) => {\n    result[key] = {\n      status: value.success,\n      message: value.message ?? '',\n      name: value.name,\n      outputPaths: value.outputPaths,\n    }\n  })\n  return result\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\nimport { convertFunctionsToRunResultDTO } from '../Experiments/ExperimentsUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n  allowRun: true,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n    setAllowRun: (\n      state,\n      action: PayloadAction<{\n        allowRun: boolean\n      }>,\n    ) => {\n      state.allowRun = action.payload.allowRun\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        if (action.meta.arg === 'default') {\n          state.runBtn = RUN_BTN_OPTIONS.RUN_NEW\n        } else {\n          state.currentPipeline = {\n            uid: action.meta.arg,\n          }\n          state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        }\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.payload.unique_id,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          uid: action.payload.unique_id,\n          status: RUN_STATUS.START_SUCCESS,\n          runResult: {\n            ...convertToRunResult(\n              convertFunctionsToRunResultDTO(action.payload.function),\n            ),\n          },\n          runPostData: {\n            name: action.payload.name,\n            nodeDict: action.payload.nodeDict,\n            edgeDict: action.payload.edgeDict,\n            snakemakeParam: {},\n            nwbParam: {},\n            forceRunList: [],\n          },\n        }\n\n        const runResultPendingList = Object.values(state.run.runResult).filter(\n          isNodeResultPending,\n        )\n        if (runResultPendingList.length === 0) {\n          state.run.status = RUN_STATUS.FINISHED\n        }\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n          state.allowRun = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption, setAllowRun } =\n  pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { ObjectType } from 'pages/Database'\n\nexport const PROJECT_SLICE_NAME = 'project'\n\nexport type DatasetPostType = {\n  folder_name: string\n  sub_folders: { folder_name: string; source_image_ids: number[] }[]\n  source_image_ids: number[]\n}\n\nexport type DatasetType = {\n  folder_name: string\n  sub_folders: { folder_name: string; images: number[] }[]\n  images: number[]\n}\n\nexport type SubFolder = {\n  folder_name: string\n  id: string\n  images?: {\n    attributes: ObjectType\n    id: number\n    image_url: string\n    parent_id: string\n  }[]\n  parent_id: string\n  sub_folders?: SubFolder[]\n}\n\nexport type Dataset = {\n  dataset?: SubFolder[]\n  project_id: string | null\n  last_updated_time: string | null\n}\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\nexport const saveRefreshToken = (refresh_token: string) => {\n  localStorage.setItem('refresh_token', refresh_token)\n}\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refresh_token')\n}\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\nexport const saveExToken = (ExToken: string) => {\n  localStorage.setItem('ExToken', ExToken)\n}\nexport const getExToken = () => {\n  return localStorage.getItem('ExToken')\n}\nexport const removeExToken = () => {\n  return localStorage.removeItem('ExToken')\n}\n\nexport const isAdmin = (role?: number | string) => {\n  return role === 1\n}\n\nexport const isReseacher = (role?: string | number) => {\n  return role === 20\n}\n\nexport const optionsRole = [\n  {\n    code: 1,\n    name: 'Admin',\n  },\n  {\n    code: 10,\n    name: 'Data Manager',\n  },\n  {\n    code: 20,\n    name: 'User',\n  },\n]\n","import { getRefreshToken } from 'utils/auth'\nimport axios from 'utils/axios'\n\nexport const login = async (data: { email: string; password: string }) => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const refreshToken = async () => {\n  const response = await axios.post('/auth/refresh', {\n    refresh_token: getRefreshToken(),\n  })\n  return response.data\n}\n\nexport const getMe = async () => {\n  const response = await axios.get('/auth/me')\n  return response.data\n}\n\nexport const listUser = async (query?: object) => {\n  const response = await axios.get('/admin/user', { params: query })\n  return response.data\n}\n\nexport const createUser = async (data: object) => {\n  const response = await axios.post(`/admin/user`, data)\n  return response.data\n}\n\nexport const editUser = async (userId: string | number, data: object) => {\n  const response = await axios.put(`/admin/user/${userId}`, data)\n  return response.data\n}\n\nexport const deleteUser = async (userId: string | number) => {\n  const response = await axios.delete(`/admin/user/${userId}`)\n  return response.data\n}\n\nexport const deleteAccountProfile = async () => {\n  const response = await axios.delete(`/auth/me`)\n  return response.data\n}\n\nexport const editNameProfile = async (data: object) => {\n  const response = await axios.put(`/auth/me`, data)\n  return response.data\n}\n\nexport const editPassProfile = async (data: object) => {\n  const response = await axios.put(`/auth/change-password`, data)\n  return response.data\n}\n\nexport const saveParams = async (data: object) => {\n  const response = await axios.post(`/image_stat/param`, data)\n  return response.data\n}\n\nexport const loadParams = async () => {\n  const response = await axios.get(`/image_stat/param`)\n  return response.data\n}\n\nexport const resetPassword = async (email: string) => {\n  const response = await axios.post(\n    `/admin/user/send_reset_password?email=${email}`,\n    email,\n  )\n  return response.data\n}\n","import { refreshToken } from 'api/auth'\nimport axiosLibrary from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { getExToken, getToken, saveToken } from 'utils/auth'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    config.headers.ExToken = getExToken()\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\naxios.interceptors.response.use(\n  async (res) => res,\n  async (error) => {\n    if (error?.response?.status === 401) {\n      const { access_token } = await refreshToken()\n      saveToken(access_token)\n      error.config.headers.Authorization = `Bearer ${access_token}`\n      return axiosLibrary(error.config)\n    }\n    return Promise.reject(error)\n  },\n)\n\nexport default axios\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from '../../const/API'\nimport { DatasetPostType } from 'store/slice/Dataset/DatasetType'\n\nexport const getDatasetListApi = async (project_id: string) => {\n  const response = await axios.get(\n    `${DATABASE_URL_HOST}/workdb/dataset/${project_id}/search`,\n  )\n  return response.data\n}\n\nexport const createDatasetApi = async (\n  data: DatasetPostType[],\n  project_id: number,\n) => {\n  const response = await axios.post(\n    `${DATABASE_URL_HOST}/workdb/dataset/${project_id}`,\n    data,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  PROJECT_SLICE_NAME,\n  Dataset,\n  DatasetPostType,\n  SubFolder,\n} from './DatasetType'\nimport { createDatasetApi, getDatasetListApi } from 'api/dataset'\n\nexport const getDatasetList = createAsyncThunk<Dataset, { project_id: string }>(\n  `${PROJECT_SLICE_NAME}/getDatasets`,\n  async (param, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getDatasetListApi(param.project_id)\n      return {\n        dataset: response?.records as SubFolder[],\n        project_id: param.project_id,\n        last_updated_time: response?.last_updated_time,\n      }\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const createDataset = createAsyncThunk<\n  Dataset,\n  {\n    dataset: DatasetPostType[]\n    project_id: number\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/createDataset`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await createDatasetApi(param.dataset, param.project_id)\n    param.callback?.(true)\n    return response\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n","import { createSlice } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Dataset } from './DatasetType'\nimport { getDatasetList } from './DatasetAction'\n\nconst initialState: Dataset = {\n  dataset: undefined,\n  project_id: null,\n  last_updated_time: null,\n}\n\nexport const datasetSlice = createSlice({\n  name: PROJECT_SLICE_NAME,\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.project_id = null\n      state.dataset = undefined\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getDatasetList.fulfilled, (state, action) => {\n      state.dataset = action.payload.dataset\n      state.project_id = action.payload.project_id\n    })\n  },\n})\n\nexport const { reset } = datasetSlice.actions\nexport default datasetSlice.reducer\n","import type { FlowElement, Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node as FlowElement<NodeData>)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node as FlowElement<NodeData>)\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 130,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n  // editFlowElementParamsAlignmentById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport {\n  INITIAL_IMAGE_ELEMENT_ID,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n  Params,\n  ImageInputNode,\n  AlignmentData,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\nimport { getUrlFromSubfolder } from '../Dataset/DatasetSelector'\nimport { NodeDict } from 'api/run/Run'\nimport { SubFolder } from '../Dataset/DatasetType'\n\nconst initParams: AlignmentData = {\n  alignments: {\n    path: 'alignments',\n    type: 'child',\n    value: [],\n  },\n}\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: initParams,\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeParamAlignment(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: Params[]\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId] as ImageInputNode\n      if (!inputNode.param?.alignments) return\n      inputNode.param.alignments.value = param\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n    setSelectedFilePath(\n      state,\n      action: PayloadAction<{\n        dataset: SubFolder[] | undefined\n        nodeDict?: NodeDict\n      }>,\n    ) {\n      const { dataset, nodeDict } = action.payload\n      let urls: { id: string | number; url: string }[] = []\n      dataset && getUrlFromSubfolder(dataset, urls)\n      if (nodeDict) {\n        const typeFileNode = Object.keys(REACT_FLOW_NODE_TYPE_KEY)\n        Object.keys(nodeDict).forEach((key) => {\n          if (typeFileNode.includes(nodeDict[key].type as string)) {\n            const targetNode = state[key]\n            if (!targetNode) return\n            targetNode.selectedFilePath = urls.map(({ url }) => url)\n            if (isHDF5InputNode(targetNode)) {\n              targetNode.hdf5Path = undefined\n            }\n          }\n        })\n      } else {\n        const targetNode = state[INITIAL_IMAGE_ELEMENT_ID]\n        targetNode.selectedFilePath = urls.map(({ url }) => url)\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: initParams,\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: initParams,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            const { data } = node\n            const param = (data?.param || initParams) as AlignmentData\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param,\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const {\n  setCsvInputNodeParam,\n  setInputNodeHDF5Path,\n  setInputNodeParamAlignment,\n  setSelectedFilePath,\n} = inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import { PayloadAction, createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n  fetchExperiment,\n} from './ExperimentsActions'\nimport {\n  convertToExperimentListType,\n  convertToExperimentType,\n} from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n  loading: true,\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {\n    setLoadingExpriment: (\n      state,\n      action: PayloadAction<{\n        loading: boolean\n      }>,\n    ) => {\n      state.loading = action.payload.loading\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n          loading: true,\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n          loading: false,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n          loading: false,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          state.experimentList[action.payload.unique_id] =\n            convertToExperimentType(action.payload)\n        }\n        state.loading = false\n      })\n      .addCase(fetchExperiment.rejected, (state, action) => {\n        state.loading = false\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n          loading: false,\n        }\n      })\n  },\n})\nexport const { setLoadingExpriment } = experimentsSlice.actions\n\nexport default experimentsSlice.reducer\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useSearchParams, useLocation, useNavigate } from 'react-router-dom'\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline, setAllowRun } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\nimport {\n  fetchExperiment,\n  getExperiments,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { reset } from '../Dataset/DatasetSlice'\nimport { getDatasetList } from '../Dataset/DatasetAction'\nimport { AppDispatch } from 'store/store'\nimport { setSelectedFilePath } from '../InputNode/InputNodeSlice'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone' // dependent on utc plugin\nimport { setLoadingExpriment } from '../Experiments/ExperimentsSlice'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const appDispatch: AppDispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const [searchParams] = useSearchParams()\n  const projectId = searchParams.get('id')\n  const navigate = useNavigate()\n\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const location = useLocation()\n  const [isEdited] = useState<{ edited: boolean }>(\n    location.state as { edited: boolean },\n  )\n  React.useEffect(() => {\n    window.addEventListener('beforeunload', removeStateIsEdit)\n    if (!projectId) {\n      navigate('/projects')\n    } else {\n      appDispatch(getDatasetList({ project_id: projectId }))\n        .unwrap()\n        .then(({ dataset, last_updated_time }) => {\n          if (!isEdited) {\n            appDispatch(fetchExperiment(projectId))\n              .unwrap()\n              .then(({ nodeDict, finished_at }) => {\n                const diffMinus = dayjs(\n                  dayjs(last_updated_time).format('YYYY-MM-DD HH:mm'),\n                ).diff(\n                  dayjs(dayjs(finished_at).format('YYYY-MM-DD HH:mm')),\n                  'm',\n                )\n                dispatch(setAllowRun({ allowRun: diffMinus > 0 }))\n                dispatch(setSelectedFilePath({ dataset, nodeDict }))\n              })\n              .catch((_) => {\n                appDispatch(importExperimentByUid('default')).then((_) => {\n                  dispatch(setSelectedFilePath({ dataset }))\n                  dispatch(setAllowRun({ allowRun: true }))\n                })\n              })\n          }\n        })\n    }\n\n    return () => {\n      dispatch(reset())\n      dispatch(setLoadingExpriment({ loading: true }))\n      window.removeEventListener('beforeunload', removeStateIsEdit)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const removeStateIsEdit = () => {\n    navigate(location.pathname, { replace: true })\n  }\n\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n\n  const status = useSelector(selectPipelineStatus)\n\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.START_SUCCESS) {\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n        dispatch(getExperiments())\n      }\n      setPrevStatus(status)\n    }\n  }, [dispatch, status, prevStatus, enqueueSnackbar])\n\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n      .addCase(fetchExperiment.fulfilled, (_state, _action) => initialState)\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n// import { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n      }}\n    >\n      <Button onClick={() => navigate('/projects')}>\n        <ArrowBackIosIcon />\n        Projects\n      </Button>\n      <SnakemakeButton />\n      {/*<NWBSettingButton />*/}\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n  images: { id: string | number; url: string }[]\n  onOpenImageAlignment: (\n    v: boolean,\n    params?: { nodeId: string; alignments: Params[] },\n  ) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n  onOpenImageAlignment: () => null,\n  images: [],\n})\n","import React, { useContext, useEffect } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport {\n  AlignmentData,\n  FILE_TYPE,\n  Params,\n} from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { DialogContext } from '../DialogContext'\nimport { useSelector } from 'react-redux'\nimport {\n  selectInputNodeById,\n  selectInputNodeParam,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeParamAlignment } from 'store/slice/InputNode/InputNodeSlice'\nimport { useDispatch } from 'react-redux'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        nodeId={nodeId}\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n  nodeId?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({ filePath, nodeId }) => {\n    const navigate = useNavigate()\n    const [searchParams] = useSearchParams()\n    const { onOpenImageAlignment, images } = useContext(DialogContext)\n    const selectInput = useSelector(selectInputNodeById(nodeId || ''))\n    const dispatch = useDispatch()\n\n    const inputNode = useSelector(\n      selectInputNodeParam(nodeId || ''),\n    ) as AlignmentData\n\n    const id = searchParams.get('id')\n\n    useEffect(() => {\n      if (!nodeId) return\n      const valueAlignments = (selectInput.param as AlignmentData)?.alignments\n        ?.value\n      let newParams: Params[] = []\n      if (Array.isArray(filePath)) {\n        newParams = filePath.map((path: string) => {\n          const image = images.find((image) => image.url === path)\n          const param = valueAlignments?.find(\n            (align) => align.image_id === image?.id,\n          )\n          if (param) return param\n          return {\n            image_id: image?.id || path,\n            x_pos: 0,\n            x_resize: 1,\n            x_rotate: 0,\n            y_pos: 0,\n            y_resize: 1,\n            y_rotate: 0,\n            z_pos: 0,\n            z_resize: 1,\n            z_rotate: 0,\n          }\n        })\n      }\n      dispatch(\n        setInputNodeParamAlignment({\n          nodeId,\n          param: newParams,\n        }),\n      )\n      //eslint-disable-next-line\n    }, [filePath, nodeId, JSON.stringify(images)])\n\n    const getNameSelectec = () => {\n      if (Array.isArray(filePath)) {\n        return `${filePath.length} images selected.`\n      }\n      return `${filePath ? 1 : 0} images selected.`\n    }\n\n    return (\n      <div style={{ padding: 16 }}>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: 'auto' }}>\n          <Button\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n            onClick={() =>\n              navigate(\n                `/projects/new-project?id=${id}&nodeId=${nodeId}&back=/projects/workflow?tab=0&id=${id}`,\n              )\n            }\n          >\n            EDIT IMAGESET\n          </Button>\n        </ButtonGroup>\n        <div style={{ marginTop: 8 }}>\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {getNameSelectec()}\n          </Typography>\n        </div>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: '8px 0' }}>\n          <Button\n            disabled={!filePath || !filePath.length}\n            onClick={() => {\n              if (!nodeId) return\n              onOpenImageAlignment(true, {\n                nodeId,\n                alignments: inputNode?.alignments?.value || [],\n              })\n            }}\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n          >\n            ALIGNMENT\n          </Button>\n        </ButtonGroup>\n      </div>\n    )\n  },\n)\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        label=\"dur[msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { ChangeEvent, FC, useEffect, useMemo, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { ObjectType } from 'pages/Database'\nimport { useDispatch } from 'react-redux'\nimport { setInputNodeParamAlignment } from 'store/slice/InputNode/InputNodeSlice'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\nimport { DATABASE_URL_HOST } from 'const/API'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  urls: { id: string | number; url: string }[]\n  jsonData?: ObjectType\n  disabled?: { left: boolean; right: boolean }\n  params?: { nodeId: string; alignments: Params[] }\n  readOnly?: boolean\n}\n\nconst ImageAlignment: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  urls,\n  params = { nodeId: '', alignments: [] },\n  readOnly = false,\n}) => {\n  const viewerRef = useRef<any>()\n  const [image, setUrl] = useState(urls[0])\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const [loadedSuccess, setLoadedSuccess] = useState(false)\n  const volumes = useRef<any>()\n  const dispatch = useDispatch()\n\n  const urlRef = useRef(image)\n\n  const [stateParams, setStateParams] = useState<Params[]>(params.alignments)\n\n  const paramAligment = useMemo(() => {\n    return stateParams.find((param) => param.image_id === image.id)\n  }, [image.id, stateParams])\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 200)\n    }\n    return () => {\n      viewerRef.current.clearVolumes?.()\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    urlRef.current = image\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [image])\n\n  useEffect(() => {\n    if (loadedSuccess) {\n      const paramInit = params.alignments?.find(\n        (param) => param.image_id === image.id,\n      )\n      setValueToBraibrowser(paramInit)\n    }\n    //eslint-disable-next-line\n  }, [loadedSuccess, image.id])\n\n  const onOk = () => {\n    if (params?.nodeId && stateParams) {\n      dispatch(\n        setInputNodeParamAlignment({\n          nodeId: params.nodeId,\n          param: stateParams,\n        }),\n      )\n    }\n    onClose?.()\n  }\n\n  const onPreImage = () => {\n    const index = urls.findIndex((item) => item.id === image.id)\n    if (index === 0) return\n    setUrl(urls[index - 1])\n  }\n\n  const onNextImage = () => {\n    const index = urls.findIndex((item) => item.id === image.id)\n    if (index === urls.length - 1) return\n    setUrl(urls[index + 1])\n  }\n\n  const setValueToBraibrowser = (valueParams?: Params) => {\n    if (valueParams) {\n      volumes.current.setResize({\n        x: Number(valueParams.x_resize),\n        y: Number(valueParams.y_resize),\n        z: Number(valueParams.z_resize),\n      })\n      volumes.current.setRadian(\n        Number(valueParams.y_rotate),\n        Number(valueParams.x_rotate),\n        Number(valueParams.z_rotate),\n      )\n      volumes.current.setVoxelCoords(\n        Number(valueParams.y_pos),\n        Number(valueParams.z_pos),\n        Number(valueParams.x_pos),\n      )\n      viewerRef.current.redrawVolumes()\n    }\n  }\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === image.id ? { ...align, [name]: value } : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const onBlurRadian = (e: any) => {\n    const { name, value } = e.target\n    let valueRadian = Number(value)\n    if (isNaN(valueRadian)) {\n      valueRadian = 0\n    } else if (valueRadian < 0) {\n      valueRadian = 0\n    } else if (valueRadian > 2 * Math.PI) {\n      valueRadian = 0\n    }\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === image.id ? { ...align, [name]: valueRadian } : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const loadFileIndex = () => {\n    if (!image?.url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    setLoadedSuccess(false)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: `${DATABASE_URL_HOST}${image.url}`,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n        },\n      ],\n      complete: () => setValueToBraibrowser(paramAligment),\n    })\n  }\n\n  const volumeLoaded = (event: any, isLoaded?: boolean) => {\n    const brainbrowser = (window as any).BrainBrowser\n    const { volume } = event\n    volumes.current = volume\n    const paramsNode: Params = {\n      image_id: urlRef.current.id,\n      x_pos: 0,\n      y_pos: 0,\n      z_pos: 0,\n      x_rotate: volume.header.xspace.radian,\n      y_rotate: volume.header.yspace.radian,\n      z_rotate: volume.header.zspace.radian,\n      x_resize: volume.header.xspace.step,\n      y_resize: volume.header.yspace.step,\n      z_resize: volume.header.zspace.step,\n    }\n    if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n      const voxel = volume.getVoxelCoords()\n      paramsNode.x_pos = voxel.k\n      paramsNode.y_pos = voxel.i\n      paramsNode.z_pos = voxel.j\n    }\n    const newParams = (pre: Params[]) => {\n      if (pre.find((align) => align.image_id === urlRef.current.id)) {\n        return pre.map((align) => {\n          if (align.image_id === urlRef.current.id) return paramsNode\n          return align\n        })\n      }\n      return [...pre, paramsNode]\n    }\n    setStateParams(newParams)\n    setIsLoadFile(false)\n    setLoadedSuccess(true)\n  }\n\n  const gerenateValueNumber = (value?: number) => {\n    if (typeof value === 'undefined') return ''\n    return value\n  }\n\n  const loadFile = () => {\n    if (!image.url || isLoadFile) return\n    setIsLoadFile(true)\n    setLoadedSuccess(false)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', (e: any) =>\n          volumeLoaded(e, true),\n        )\n        viewer.addEventListener('sliceupdate', volumeLoaded)\n        viewer.addEventListener('error', () => {\n          setIsLoadFile(false)\n          setTimeout(loadFile, 200)\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: `${DATABASE_URL_HOST}${image.url}`,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {\n                setIsLoadFile(false)\n              },\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div style={{ alignItems: 'stretch' }}>\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              <Flex>\n                <BoxSet>\n                  <ContentSet>\n                    <Flex>\n                      <Text>right {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"x_pos\"\n                        value={gerenateValueNumber(paramAligment?.x_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>forward {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"y_pos\"\n                        value={gerenateValueNumber(paramAligment?.y_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>up {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"z_pos\"\n                        value={gerenateValueNumber(paramAligment?.z_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>roll {'{rad}'}</Text>\n                      <input\n                        name=\"x_rotate\"\n                        value={gerenateValueNumber(paramAligment?.x_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>pitch {'{rad}'}</Text>\n                      <input\n                        name=\"y_rotate\"\n                        value={gerenateValueNumber(paramAligment?.y_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>yaw {'{rad}'}</Text>\n                      <input\n                        name=\"z_rotate\"\n                        value={gerenateValueNumber(paramAligment?.z_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{x}'}</Text>\n                      <input\n                        name=\"x_resize\"\n                        value={gerenateValueNumber(paramAligment?.x_resize)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{y}'}</Text>\n                      <input\n                        value={gerenateValueNumber(paramAligment?.y_resize)}\n                        name=\"y_resize\"\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{z}'}</Text>\n                      <input\n                        value={gerenateValueNumber(paramAligment?.z_resize)}\n                        name=\"z_resize\"\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <ButtonSet\n                      onClick={() => setValueToBraibrowser(paramAligment)}\n                    >\n                      Set Origin\n                    </ButtonSet>\n                  </ContentSet>\n                </BoxSet>\n                <Flex\n                  sx={{\n                    flexDirection: 'column',\n                    position: 'relative',\n                    gap: 15,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <SwitchImage>\n                    <span>Select Image</span>\n                    <SwitchContent>\n                      <ButtonPre onClick={onPreImage}>{'<'}</ButtonPre>\n                      <InputImage value={image.url} readOnly />\n                      <ButtonNext onClick={onNextImage}>{'>'}</ButtonNext>\n                    </SwitchContent>\n                    <span>{`(${\n                      urls.findIndex((item) => item.id === image.id) + 1\n                    }/${urls.length})`}</span>\n                  </SwitchImage>\n                  <Flex sx={{ gap: 5 }}>\n                    <ButtonCanCel onClick={onClose}>CANCEL</ButtonCanCel>\n                    <ButtonOk onClick={onOk}>OK</ButtonOk>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </div>\n          </div>\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  right: '10%',\n  top: '10%',\n  zIndex: 9999,\n  background: 'rgba(0, 0, 0, 0.6)',\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.8)',\n  },\n})\n\nconst ButtonPre = styled('button')({\n  width: 50,\n  height: 50,\n  position: 'unset',\n  zIndex: 1,\n  borderRadius: '50%',\n  backgroundColor: 'unset',\n  border: 'none',\n  cursor: 'pointer',\n  fontSize: 20,\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.1)',\n  },\n})\n\nconst ButtonNext = styled(ButtonPre)({\n  right: '10%',\n})\n\nconst InputImage = styled('input')({\n  height: 'fit-content',\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: '#fff',\n})\n\nconst ContentSet = styled(Box)({\n  padding: 20,\n})\n\nconst Flex = styled(Box)({\n  display: 'flex',\n})\n\nconst Text = styled('span')({\n  display: 'block',\n  minWidth: 150,\n})\n\nconst ButtonSet = styled('button')({\n  marginTop: 20,\n  cursor: 'pointer',\n})\n\nconst BoxSet = styled(Box)({\n  border: '2px solid #000',\n  width: 'fit-content',\n  margin: '30px 50px',\n})\n\nconst SwitchImage = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n})\n\nconst SwitchContent = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst ButtonOk = styled('button')({\n  padding: '10px 20px',\n  background: '#000000c7',\n  border: '2px solid #000',\n  color: '#fff',\n  cursor: 'pointer',\n})\n\nconst ButtonCanCel = styled('button')({\n  padding: 10,\n  border: '2px solid #000',\n  cursor: 'pointer',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageAlignment\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectLoadingExperiment = (state: RootState) =>\n  state.experiments.loading\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const experiment = selectExperimentList(state)[uid]\n    if (experiment.status) {\n      return experiment.status\n    } else {\n      const functions = selectExperimentList(state)[uid].functions\n      const statusList = Object.values(functions).map((f) => f.status)\n      if (statusList.findIndex((status) => status === 'error') >= 0) {\n        return 'error'\n      } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n        return 'running'\n      } else {\n        return 'success'\n      }\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import {Box, keyframes, styled} from \"@mui/material\";\n\nconst Loading = () => {\n    return (\n        <LoaderWrapper>\n            <Loader />\n        </LoaderWrapper>\n    )\n}\n\nconst LoaderWrapper = styled(Box)(({theme}) => ({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    position: 'fixed',\n    backgroundColor: 'rgba(255,255,255,0.6)',\n    zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme })=> ({\n    display: 'block',\n    width: 48,\n    height: 48,\n    borderRadius: '50%',\n    position: 'relative',\n    zIndex: 100,\n    top: 'calc(50% - 24px)',\n    left: 'calc(50% - 24px)',\n    animation: `${rotate} 1s linear infinite`,\n    '&:before': {\n        content: \"''\",\n        boxSizing: 'border-box',\n        position: 'absolute',\n        inset: 0,\n        borderRadius: '50%',\n        border: '3px solid rgba(0,0,0,0.8)',\n        animation: `${prixClipFix} 2s linear infinite`\n    }\n}))\n\nexport default Loading\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\nimport ImageAlignment from '../ImageAlignment'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\nimport { selectListImageUrl } from 'store/slice/Dataset/DatasetSelector'\nimport { selectLoadingExperiment } from 'store/slice/Experiments/ExperimentsSelectors'\nimport Loading from 'components/common/Loading'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n    const urls = useSelector(selectListImageUrl)\n\n    const loadingExpriment = useSelector(selectLoadingExperiment)\n\n    const [openPopupAlignment, setOpenPopupAlignment] = useState<{\n      open: boolean\n      params?: { nodeId: string; alignments: Params[] }\n    }>({\n      open: false,\n      params: { nodeId: '', alignments: [] },\n    })\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            images: urls,\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n            onOpenImageAlignment: (flag, params) => {\n              setOpenPopupAlignment({ open: flag, params })\n            },\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                elements={flowElements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                onLoad={onLoad}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition.x, flowPosition.y]}\n                defaultZoom={flowPosition.zoom}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          {openPopupAlignment.open && (\n            <ImageAlignment\n              open={openPopupAlignment.open}\n              onClose={() => setOpenPopupAlignment({ open: false })}\n              urls={urls}\n              params={openPopupAlignment.params}\n            />\n          )}\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({ anchorElRef: { current: null }, message: '' })\n              }\n              anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n              transformOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n          {loadingExpriment && <Loading />}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { Box } from '@mui/material'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer>\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n  height: '100%',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n    paddingTop: theme.spacing(1.125),\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, {useState} from 'react'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nimport {MouseType} from './ExperimentTable'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport {Button} from \"@mui/material\";\nimport ImageAlignment from \"../ImageAlignment\";\n\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n  data?: MouseType[]\n}>(({ open , data}) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Table size=\"small\" aria-label=\"purchases\">\n            <Head />\n            {data && data.map((item) => {\n              return (\n                <Body key={item?.unique_id} data={item}/>\n              )\n            })}\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>Output</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo<{\n    data: MouseType\n}>(({data}) => {\n  return (\n    <TableBody>\n      <TableRowOfFunction data={data} />\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = ({ data } : {data: MouseType}) => {\n    const {name, success, unique_id} = data\n    const [popup, setPopup] = useState(false)\n  return (\n    <>\n        <TableRow >\n            <TableCell component=\"th\" scope=\"row\">\n                {name}\n            </TableCell>\n            <TableCell>{unique_id}</TableCell>\n            <TableCell>\n                <ExperimentStatusIcon status={success} />\n            </TableCell>\n            <TableCell>\n                <Button disabled={success === 'success'? false : true} onClick={() => setPopup(true)}>\n                    <OpenInNewIcon />\n                </Button>\n            </TableCell>\n        </TableRow>\n        <ImageAlignment\n            open={popup}\n            urls={[]}\n            onClose={() => setPopup(false)}\n            readOnly={true}\n        />\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableRow from '@mui/material/TableRow'\n// import TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\n// import ReplayIcon from '@mui/icons-material/Replay'\n// import DeleteIcon from '@mui/icons-material/Delete'\n// import Dialog from '@mui/material/Dialog'\n// import DialogActions from '@mui/material/DialogActions'\n// import DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  // deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { EXPERIMENTS_STATUS} from 'store/slice/Experiments/ExperimentsType'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport {useNavigate} from \"react-router-dom\";\n\nexport type MouseType = {\n    unique_id: string\n    name: string\n    success: EXPERIMENTS_STATUS\n    outputs: string[]\n}\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\ntype Data = {\n    pagenation: object\n    records: {\n        id: number\n        name: string\n        data?: MouseType[]\n    }[]\n    nodeDict: object\n    edgeDict: object\n    startTime: string\n    finishTime: string\n}\n\nconst data: Data = {\n  \"pagenation\": {\n    \"page\": 0,\n    \"limit\": 0,\n    \"total\": 0,\n    \"total_pages\": 0\n  },\n  \"records\": [{\n      \"id\": 0,\n      \"name\": \"MOUSE1\",\n      \"data\": [{\n          \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n          \"name\": \"caiman_cnmf\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"caiman_mc_2rg3nrb410\",\n          \"name\": \"caiman_mc\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"input_0\",\n          \"name\": \"mouse2p_2_donotouse.tiff\",\n          \"success\": \"success\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]}\n        ]\n      },\n      {\n          \"id\": 1,\n          \"name\": \"MOUSE2\",\n          \"data\": [{\n              \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n              \"name\": \"caiman_cnmf\",\n              \"success\": \"error\",\n              \"outputs\": [\n                  \"/lib/test.nii\",\n                  \"/lib/test0.nii\",\n                  \"/lib/test1.nii\"\n              ]},\n              {\n                  \"unique_id\": \"caiman_mc_2rg3nrb410\",\n                  \"name\": \"caiman_mc\",\n                  \"success\": \"error\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]},\n              {\n                  \"unique_id\": \"input_0\",\n                  \"name\": \"mouse2p_2_donotouse.tiff\",\n                  \"success\": \"success\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]}\n          ]\n      },\n      {\n          \"id\": 2,\n          \"name\": \"MOUSE3\"\n      }\n  ],\n      \"nodeDict\": {},\n      \"edgeDict\": {},\n      \"startTime\":\"2023/05/16 04:28\",\n      \"finishTime\":\"2023/05/16 04:28\"\n}\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'studio_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  // const dispatch = useDispatch()\n  const navigate = useNavigate()\n  // const onClickReload = () => {\n  //   dispatch(getExperiments())\n  // }\n  // const [checkedList, setCheckedList] = useState<string[]>([])\n  // const [open, setOpen] = React.useState(false)\n  const recordsIsEmpty = experimentListKeys.length === 0\n  const startTime = data.startTime.split(' ')\n  const finishTime = data.finishTime.split(' ')\n\n  // const onClickDelete = () => {\n  //   setOpen(true)\n  // }\n  // const onClickCancel = () => {\n  //   setOpen(false)\n  // }\n  // const onClickOk = () => {\n  //   dispatch(deleteExperimentByList(checkedList))\n  //   setCheckedList([])\n  //   setOpen(false)\n  // }\n\n  const onClickBack = () => {\n    navigate('/projects')\n  }\n\n  const [page,\n    // setPage\n  ] = useState(0)\n\n  // const handleChangePage = (event: unknown, newPage: number) => {\n  //   setPage(newPage)\n  // }\n\n  const [rowsPerPage,\n    // setRowsPerPage\n  ] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  // const handleChangeRowsPerPage = (\n  //   event: React.ChangeEvent<HTMLInputElement>,\n  // ) => {\n  //   const newValue = parseInt(event.target.value, 10)\n  //   setRowsPerPage(newValue)\n  //   setPage(0)\n  // }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 5 }}>\n      <Button onClick={onClickBack}\n        sx={{width: 'fit-content', textTransform: 'unset', fontSize: 20}}\n      >\n        <KeyboardBackspaceIcon /> Projects\n      </Button>\n          <Box sx={{\n            display: 'flex',\n            gap : 4,\n            width: '90%',\n            margin: 'auto',\n            alignItems: 'flex-start'\n          }}>\n              <Typography>\n                  Status:\n              </Typography>\n              <Box>\n                  <ExperimentStatusIcon status={'success'}/>\n              </Box>\n              <Box>\n                  <Typography>Start time: {startTime[0]} {startTime[1]}</Typography>\n                  <Typography>Finish time: {finishTime[0]} {finishTime[1]}</Typography>\n              </Box>\n          </Box>\n          {/*<Box*/}\n          {/*    sx={{*/}\n          {/*        display: 'flex',*/}\n          {/*        justifyContent: 'flex-end',*/}\n          {/*        alignItems: 'center',*/}\n          {/*    }}*/}\n          {/*>*/}\n              {/*<Button*/}\n              {/*  sx={{*/}\n              {/*    margin: (theme) => theme.spacing(0, 1, 1, 0),*/}\n              {/*  }}*/}\n              {/*  variant=\"outlined\"*/}\n              {/*  endIcon={<ReplayIcon />}*/}\n              {/*  onClick={onClickReload}*/}\n              {/*>*/}\n              {/*  Reload*/}\n              {/*</Button>*/}\n              {/*<Button*/}\n              {/*  sx={{*/}\n              {/*    marginBottom: (theme) => theme.spacing(1),*/}\n              {/*  }}*/}\n              {/*  variant=\"outlined\"*/}\n              {/*  color=\"error\"*/}\n              {/*  endIcon={<DeleteIcon />}*/}\n              {/*  onClick={onClickDelete}*/}\n              {/*  disabled={checkedList.length === 0}*/}\n              {/*>*/}\n              {/*  Delete*/}\n              {/*</Button>*/}\n          {/*</Box>*/}\n          {/*<Dialog open={open}>*/}\n          {/*    <DialogTitle>Are you sure you want to delete?</DialogTitle>*/}\n          {/*    <DialogActions>*/}\n          {/*        <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">*/}\n          {/*            Cancel*/}\n          {/*        </Button>*/}\n          {/*        <Button onClick={onClickOk} variant=\"outlined\" autoFocus>*/}\n          {/*            OK*/}\n          {/*        </Button>*/}\n          {/*    </DialogActions>*/}\n          {/*</Dialog>*/}\n          <Paper\n              elevation={0}\n              variant=\"outlined\"\n              sx={{\n                  flexGlow: 1,\n                  height: '100%',\n                  width: '90%',\n                  margin: 'auto'\n              }}\n          >\n              {\n                  data.records.map((item) => {\n                      const { name, id } = item\n                      return (\n                          <TableContainer key={id} component={Paper} elevation={0}>\n                              <Table aria-label=\"collapsible table\">\n                                  <TableBody>\n                                      <ExperimentUidContext.Provider\n                                          value={String(id)}\n                                          key={id}\n                                      >\n                                          <RowItem\n                                              data={item.data}\n                                              name={name}\n                                          />\n                                      </ExperimentUidContext.Provider>\n                                      {emptyRows > 0 && (\n                                          <TableRow\n                                              style={{\n                                                  height: 53 * emptyRows,\n                                              }}\n                                          >\n                                              <TableCell colSpan={10} />\n                                          </TableRow>\n                                      )}\n                                      {recordsIsEmpty && (\n                                          <TableRow>\n                                              <TableCell colSpan={10}>\n                                                  <Typography\n                                                      sx={{\n                                                          color: (theme) => theme.palette.text.secondary,\n                                                          display: 'flex',\n                                                          alignItems: 'center',\n                                                          justifyContent: 'center',\n                                                          height: '300px',\n                                                          textAlign: 'center',\n                                                      }}\n                                                      variant=\"h6\"\n                                                  >\n                                                      No Rows...\n                                                  </Typography>\n                                              </TableCell>\n                                          </TableRow>\n                                      )}\n                                  </TableBody>\n                              </Table>\n                          </TableContainer>\n                      )\n                  })\n              }\n              {/*<TablePagination*/}\n              {/*    rowsPerPageOptions={[5, 10, 25]}*/}\n              {/*    component=\"div\"*/}\n              {/*    count={experimentListKeys.length}*/}\n              {/*    rowsPerPage={rowsPerPage}*/}\n              {/*    page={page}*/}\n              {/*    onPageChange={handleChangePage}*/}\n              {/*    onRowsPerPageChange={handleChangeRowsPerPage}*/}\n              {/*/>*/}\n          </Paper>\n    </Box>\n  )\n})\n\nconst RowItem = React.memo<{\n  name: string\n  data?: MouseType[]\n}>(({ name, data }) => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <React.Fragment>\n      <TableRow\n        onClick={() => data && setOpen((prevOpen) => !prevOpen)}\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell\n          sx={{padding: '20px',\n               display: 'flex',\n               alignItems: 'center'\n          }}\n        >\n          {name} {data && (!open ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />)}\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable data={data} open={open} />\n    </React.Fragment>\n  )\n})\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex', height: 'calc(100% - 58px)' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100%',\n          padding: 16,\n        }}\n      >\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import {\n  styled,\n  Box,\n  Typography,\n  Container,\n  Button,\n  DialogContent,\n  Dialog,\n  DialogActions,\n  DialogContentText\n} from \"@mui/material\";\nimport { useCallback, useState } from \"react\";\nimport { loadParams, saveParams } from \"api/auth\";\nimport Loading from \"../common/Loading\";\n\ntype InputType = {\n  text: string\n  value?: string\n  onChange: (e: any) => void\n  error: string\n}\n\ntype ParamsType = {\n  cut_coords: any\n  threshold: string\n}\n\ntype AlertDialogProps = {\n  open: boolean\n  handleClose: () => void\n  onSaveParams: () => void\n}\n\nconst regexThreshold = /[^0-9,.-]/\nconst regexCutCoords = /[^0-9,-]/\n\nconst  AlertDialog = ({open, handleClose, onSaveParams}: AlertDialogProps) => {\n  return (\n      <div>\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogContent>\n            <DialogContentText>\n              Save parameters OK?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={onSaveParams} autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  );\n}\n\nconst WrapperInput = ({text, value, onChange, error} : InputType) => {\n    return (\n        <Box sx={{display: 'flex'}}>\n              <Typography sx={{minWidth: 100}}>{text}</Typography>\n              <Box sx={{display: 'flex', flexDirection: 'column'}}>\n                <VisualizeInput\n                    name={text}\n                    sx={{width: 250}}\n                    value={value}\n                    onChange={(event: any) => onChange(event)}\n                    onBlur={(event: any) => onChange(event)}\n                />\n                <SpanError>{error}</SpanError>\n              </Box>\n        </Box>\n    )\n}\n\nconst VisualizeNew = () => {\n  const [open, setOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false)\n  const [dataParams, setDataParams] = useState<ParamsType>({\n    cut_coords: {\n      coronal: '',\n      sagittal: '',\n      horizontal: '',\n    },\n    threshold: ''\n  })\n  const [errors, setErrors] = useState<ParamsType>({\n    cut_coords: {\n      coronal: '',\n      sagittal: '',\n      horizontal: '',\n    },\n    threshold: ''\n  })\n\n  const onLoadParams = async () => {\n    setIsLoading(true)\n    try {\n      const res = await loadParams()\n      const { coronal, sagittal, horizontal} = res.cut_coords\n      const newCutCoords = {\n        coronal: coronal.join(','),\n        sagittal: sagittal.join(','),\n        horizontal: horizontal.join(',')\n      }\n      setDataParams({cut_coords: newCutCoords, threshold: res.threshold.join(',')})\n    }\n    finally {\n      setIsLoading(false)\n      setErrors({\n        cut_coords: {\n          coronal: '',\n          sagittal: '',\n          horizontal: '',\n        },\n        threshold: ''\n      }\n      )}\n  }\n\n  const toNumberArr = useCallback((value: string) => {\n    return value.split(',').map((item: string) => Number(item))\n  },[])\n\n  const onSaveParams = async () => {\n    const { coronal, sagittal, horizontal} = dataParams.cut_coords\n    const newParams = {\n      threshold: toNumberArr(dataParams.threshold),\n      cut_coords: {\n        coronal: toNumberArr(coronal),\n        sagittal: toNumberArr(sagittal),\n        horizontal: toNumberArr(horizontal)\n      }\n    }\n    setIsLoading(true)\n    try {\n      await saveParams(newParams)\n    }\n    finally {\n      setIsLoading(false)\n      setOpen(false)\n    }\n  }\n\n  const validateParams = (value: string, name: string) => {\n    if (!value) return 'This field is required'\n    const newArr = value.split(',')\n    const checkArr = newArr.some((item: string) => !Number(item) && item !== '0')\n    if (name === 'threshold') {\n      if (checkArr || newArr.length !== 2) {\n        return 'wrong format [float, float]'\n      }\n      return ''\n    }\n    if(checkArr || newArr.length !== 5) {\n      return 'wrong format [int, int, int, int, int]'\n    }\n    return ''\n  }\n\n  const onChangeParams = (event: any) => {\n    let { value, name } = event.target\n    if(name === 'threshold') setErrors({...errors, threshold: validateParams(value, name)})\n    if(name !== 'threshold') setErrors({...errors, cut_coords: {...errors.cut_coords, [name]: validateParams(value, name)}})\n    if((name === 'threshold' && regexThreshold.test(value)) || (name !== 'threshold' && regexCutCoords.test(value))) {\n      const checkChar = (checkChar: any, value: string) => {\n        const arrValue = value.split('')\n        const index = arrValue.findIndex((item: string) => {\n          if(name === 'threshold') {\n            return regexThreshold.test(item)\n          }\n          return regexCutCoords.test(item)\n        })\n        if(index !== -1) {\n          value = value.replace(value[index], '')\n          return checkChar(checkChar, value)\n        }\n        return value\n      }\n      value = checkChar(checkChar, value)\n    }\n    if(name === 'threshold') {\n       setDataParams({...dataParams, threshold: value})\n      return\n    }\n    const newCutCoords = {...dataParams.cut_coords, [name]: value}\n    setDataParams({...dataParams, cut_coords: newCutCoords})\n  }\n  \n  const handleClickOpen = () => {\n    const { coronal, sagittal, horizontal} = dataParams.cut_coords\n    const { cut_coords } = errors\n    setErrors({\n      cut_coords: {\n        coronal: validateParams(coronal, 'coronal'),\n        sagittal: validateParams(sagittal, 'sagittal'),\n        horizontal: validateParams(horizontal, 'horizontal'),\n      },\n      threshold: validateParams(dataParams.threshold, 'threshold')\n    })\n    if( !coronal || ! sagittal || !horizontal || !dataParams.threshold ) return\n    if(Object.keys(cut_coords).some(item => !!cut_coords[item]) || errors.threshold) return\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n      <Container>\n          <AlertDialog\n            open={open}\n            handleClose={handleClose}\n            onSaveParams={onSaveParams}\n          />\n          <Title>STAT IMAGES</Title>\n          <VisualizeInputWrapper>\n            <Box>\n                <WrapperInput\n                    text={'threshold'}\n                    value={dataParams?.threshold || ''}\n                    onChange={onChangeParams}\n                    error={errors.threshold}\n                />\n            </Box>\n            <CutCoords>\n                <Typography>cut_coords</Typography>\n                <Box>\n                    <WrapperInput\n                        text={'coronal'}\n                        value={dataParams?.cut_coords.coronal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.coronal}\n                    />\n                    <WrapperInput\n                        text={'sagittal'}\n                        value={dataParams?.cut_coords.sagittal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.sagittal}\n                    />\n                    <WrapperInput\n                        text={'horizontal'}\n                        value={dataParams?.cut_coords.horizontal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.horizontal}\n                    />\n                </Box>\n            </CutCoords>\n            <Box sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 2\n            }}>\n              <ParamsButton onClick={handleClickOpen}>Save Params</ParamsButton>\n              <ParamsButton onClick={onLoadParams}>Load Params</ParamsButton>\n            </Box>\n          </VisualizeInputWrapper>\n          <ButtonWrapper>\n              <VisualizeButton>GENERATE</VisualizeButton>\n              <VisualizeButton>DOWNLOAD</VisualizeButton>\n          </ButtonWrapper>\n          <ImageWrapper>\n              <Image src={'/Images/image-visualize.png'} alt={''} />\n          </ImageWrapper>\n        {\n          isLoading &&\n          <Loading />\n        }\n      </Container>\n  )\n}\n\nconst Title = styled(Typography)({\n    fontSize: 25,\n    fontWeight: 700,\n    margin: '50px 0',\n})\n\nconst CutCoords = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeInputWrapper = styled(Box)({\n    display: 'flex',\n    justifyContent: 'space-between'\n})\n\nconst ParamsButton = styled('button')({\n  height: 'fit-content',\n  padding: 5,\n  '&:hover': {\n    cursor: 'pointer',\n    background: '#d1d7e0',\n  }\n})\n\nconst ButtonWrapper = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeButton = styled('button')({\n    border: '1px solid #006fff',\n    color: '#006fff',\n    padding: 10,\n    '&:hover': {\n        cursor: 'pointer',\n        background: '#d1d7e0'\n    }\n})\n\nconst VisualizeInput = styled('input')({\n    height: 'fit-content',\n})\n\nconst SpanError = styled('span')({\n  color: 'red'\n})\n\nconst ImageWrapper = styled(Box)({\n    width: '80%',\n    margin: 'auto'\n})\n\nconst Image = styled('img')({\n    width: '100%',\n    objectFit: 'contain',\n})\n\nexport default VisualizeNew\n","import React from 'react'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Toolbar from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport FlowChart from './FlowChart/FlowChart'\nimport Experiment from './Experiment/Experiment'\nimport { Box } from '@mui/material'\nimport { useSearchParams } from 'react-router-dom'\nimport VisualizeNew from \"./VisualizeNew\";\n\nconst Project: React.FC = () => {\n  const [searchParams, setParams] = useSearchParams()\n  const [value, setValue] = React.useState(Number(searchParams.get('tab') || 0))\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    searchParams.set('tab', String(newValue))\n    setParams(searchParams)\n    setValue(newValue)\n  }\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n  return (\n    <RootDiv>\n      <StyledAppBar color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Result\" {...a11yProps(1)} />\n            <Tab label=\"Visualize\" {...a11yProps(2)} />\n          </Tabs>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <VisualizeNew />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\nconst StyledAppBar = styled(Box)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Project\n","export const PROJECT_SLICE_NAME = 'project'\n\nexport enum ProjectTypeValue {\n  FACTOR = 0,\n  WITHIN_FACTOR = 1,\n}\n\nexport type CurrentProject = {\n  id: string\n  created_time: string\n  image_count: number\n  project_name: string\n  project_type: ProjectTypeValue\n  updated_time: string\n}\n\nexport type Project = {\n  projects: ProjectType[]\n  currentProject?: CurrentProject\n}\n\nexport type ProjectCreate = {\n  project_name: string\n  project_type: ProjectTypeValue\n}\n\nexport type ProjectType = {\n  id: number | string\n  uid?: number | string\n  created_time: string\n  updated_time: string\n  role?: string | number\n  image_count: number\n} & ProjectCreate\n","import { createContext, useContext } from 'react'\n\nexport type User = {\n  created_time: null | string\n  display_name: null | string\n  email: string\n  last_login_time: null | string\n  role: string\n  uid: string\n}\n\nexport const UserContext = createContext<{ user?: User; setUser: Function }>({\n  setUser: () => null,\n})\n\nexport const useUser = () => useContext(UserContext)\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useRef, useState } from 'react'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { useUser } from 'providers'\nimport { removeToken } from 'utils/auth'\nimport { useNavigate } from 'react-router-dom'\n\nconst Header: FC = () => {\n  const [open, setOpen] = useState(false)\n  const navigate = useNavigate()\n  const { user } = useUser()\n\n  const refMenu = useRef<HTMLDivElement | null>(null)\n\n  const closeMenu = () => {\n    setTimeout(() => {\n      setOpen(false)\n    }, 100)\n  }\n\n  const onClick = () => {\n    if (open) {\n      return refMenu.current?.blur?.()\n    }\n    setOpen(true)\n  }\n\n  const onLogout = () => {\n    removeToken()\n    navigate('/login')\n  }\n\n  const onNavigateAccount = () => {\n    navigate('/account')\n  }\n\n  return (\n    <HeaderWrapper>\n      <BoxWrapper>\n        {/* <Image src=\"/static/favicon.ico\" alt=\"logo\" /> */}\n        <TitleLogo>MRI Analysis Studio</TitleLogo>\n      </BoxWrapper>\n      <BoxMenu ref={refMenu} tabIndex={1} onClick={onClick} onBlur={closeMenu}>\n        <AccountCircleIcon />\n        {open && (\n          <BoxDropdown>\n            <BoxInfo>\n              <AccountCircleIcon />\n              <Box>\n                <Typography>{user?.display_name}</Typography>\n                <Typography>{user?.email}</Typography>\n              </Box>\n            </BoxInfo>\n            <BoxMenuItem onClick={onNavigateAccount}>\n              <PortraitIcon /> Account Profile\n            </BoxMenuItem>\n            <BoxMenuItemLogout onClick={onLogout}>\n              SIGN OUT\n            </BoxMenuItemLogout>\n          </BoxDropdown>\n        )}\n      </BoxMenu>\n    </HeaderWrapper>\n  )\n}\n\nconst BoxDropdown = styled(Box)({\n  position: 'absolute',\n  backgroundColor: '#ffffff',\n  padding: '8px 16px 0',\n  top: 30,\n  right: 0,\n  listStyleType: 'none',\n  backgroundClip: 'padding-box',\n  borderRadius: 3,\n  outline: 'none',\n  boxShadow:\n    '0 6px 16px 0 rgb(0 0 0 / 8%), 0 3px 6px -4px rgb(0 0 0 / 12%), 0 9px 28px 8px rgb(0 0 0 / 5%)',\n  cursor: 'default',\n  zIndex: 1,\n  minWidth: 250,\n})\n\n/*\nconst Image = styled('img')({\n  height: 46,\n})\n*/\n\nconst BoxWrapper = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 8,\n})\n\nconst BoxMenu = styled(BoxWrapper)({\n  cursor: 'pointer',\n  position: 'relative',\n  userSelect: 'none',\n})\n\nconst BoxInfo = styled(BoxWrapper)({\n  borderBottom: `1px solid #e7e7e7`,\n  padding: '8px 0',\n  cursor: 'default',\n})\n\nconst BoxMenuItem = styled(BoxWrapper)({\n  padding: '8px 0',\n  cursor: 'pointer',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.05) translateX(5px)',\n  },\n})\n\nconst BoxMenuItemLogout = styled(BoxMenuItem)({\n  color: '#1a73e8',\n  fontWeight: 600,\n  marginTop: 30,\n  justifyContent: 'flex-end',\n  '&:hover': {\n    transform: 'scale(1.02)',\n  },\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nconst HeaderWrapper = styled(Box)({\n  height: 48,\n  backgroundColor: '#E1DEDB',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  color: 'rgba(0, 0, 0, 0.87)',\n  boxShadow:\n    '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n  position: 'fixed',\n  width: 'calc(100% - 32px)',\n  padding: '0 16px',\n  zIndex: 9999,\n})\n\nexport default Header\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useEffect, useState } from 'react'\nimport Header from './Header'\nimport { KeyboardBackspace } from '@mui/icons-material'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { User, UserContext, useUser } from 'providers'\nimport {\n  getToken,\n  isAdmin,\n  removeExToken,\n  removeToken,\n} from 'utils/auth'\nimport { getMe } from 'api/auth'\n\nexport const drawerWidth = 240\n\nconst ignorePaths = ['/login', '/account-delete', '/reset-password']\n\nconst Layout: FC = ({ children }) => {\n  const [user, setUser] = useState<User | undefined>()\n  const location = useLocation()\n  const [width, setWidth] = useState(drawerWidth)\n  const navigate = useNavigate()\n  const onResize = () => {\n    setWidth(width === drawerWidth ? 54 : drawerWidth)\n  }\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname])\n\n  const checkkAuth = async () => {\n    if (user) return\n    const token = getToken()\n    const isPageLogin = ['/login', '/reset-password'].includes(\n      window.location.pathname,\n    )\n    try {\n      if (token) {\n        const data = await getMe()\n        setUser(data)\n        if (isPageLogin) navigate('/')\n      } else if (!isPageLogin) throw new Error('fail auth')\n    } catch {\n      removeToken()\n      removeExToken()\n      navigate('/login')\n    }\n  }\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <LayoutWrapper>\n        {ignorePaths.includes(location.pathname) ? null : <Header />}\n        <ContentBodyWrapper>\n          {ignorePaths.includes(location.pathname) ? null : (\n            <MenuLeft onResize={onResize} width={width} />\n          )}\n          <ChildrenWrapper\n            style={{\n              width: `calc(100% - ${\n                ignorePaths.includes(location.pathname) ? 0 : width + 10\n              }px)`,\n              height: '100%',\n              overflow: 'auto',\n            }}\n          >\n            {children}\n          </ChildrenWrapper>\n        </ContentBodyWrapper>\n      </LayoutWrapper>\n    </UserContext.Provider>\n  )\n}\n\nconst MenuLeft: FC<{ onResize: () => void; width: number }> = ({\n  onResize,\n  width,\n}) => {\n  const { user } = useUser()\n  const { pathname } = useLocation()\n  const isClose = width !== drawerWidth\n  return (\n    <MenuLeftWrapper style={{ width, minWidth: width }}>\n      <BoxBack>\n        <ButtonBack\n          onClick={onResize}\n          style={{ transform: `rotate(${width === drawerWidth ? 0 : 180}deg)` }}\n        >\n          <BoxDivider />\n          <KeyboardBackspaceIcon />\n        </ButtonBack>\n      </BoxBack>\n      <MenuList>\n        <LinkWrapper to=\"/\">\n          <MenuItem isClose={isClose} active={pathname === '/'}>\n            <HomeIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Dashboard\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/database\">\n          <MenuItem isClose={isClose} active={pathname === '/database'}>\n            <StorageIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Database\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/projects\">\n          <MenuItem isClose={isClose} active={pathname.includes('/projects')}>\n            <SourceIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Projects\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        {isAdmin(user?.role) ? (\n          <LinkWrapper to=\"/account-manager\">\n            <MenuItem\n              isClose={isClose}\n              active={pathname === '/account-manager'}\n            >\n              <GroupIcon />\n              <TypographyMenu\n                style={{ opacity: Number(width === drawerWidth) }}\n              >\n                Account Manager\n              </TypographyMenu>\n            </MenuItem>\n          </LinkWrapper>\n        ) : null}\n      </MenuList>\n    </MenuLeftWrapper>\n  )\n}\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: 48,\n  height: 'calc(100% - 48px)',\n  paddingRight: 10,\n  overflow: 'hidden',\n}))\n\nconst ChildrenWrapper = styled(Box)(() => ({\n  height: 'calc(100% - 10px)',\n  display: 'flex',\n  paddingTop: 10,\n  paddingLeft: 10,\n}))\n\nconst MenuLeftWrapper = styled(Box)({\n  height: '100%',\n  backgroundColor: '#283237',\n  overflow: 'auto',\n  transition: 'all 0.3s',\n})\n\nconst BoxBack = styled(Box)({\n  width: '100%',\n  height: 54,\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonBack = styled(Box)({\n  height: 54,\n  width: 54,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n})\n\nconst BoxDivider = styled(Box)({\n  height: 15,\n  width: 1,\n  backgroundColor: '#ffffff',\n  marginRight: -2,\n})\n\nconst KeyboardBackspaceIcon = styled(KeyboardBackspace)({\n  color: '#ffffff',\n  fontSize: 20,\n})\n\nconst MenuList = styled('ul')({\n  margin: 0,\n  padding: 0,\n})\n\nconst MenuItem = styled('li', {\n  shouldForwardProp: (props) => props !== 'isClose' && props !== 'active',\n})<{ isClose: boolean; active: boolean }>(({ isClose, active }) => ({\n  padding: '0 15px',\n  color: '#ffffff',\n  listStyle: 'none',\n  height: 38,\n  minHeight: 38,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  width: 'calc(100% - 30px)',\n  minWidth: 'max-content',\n  transition: 'all 0.3s',\n  cursor: 'pointer',\n  backgroundColor: active ? 'rgba(255,255,255,0.4) !important' : 'transparent',\n  '&:hover': {\n    transform: isClose\n      ? 'scale(1.05) translateX(2px)'\n      : 'scale(1.05) translateX(10px)',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n  },\n}))\n\nconst TypographyMenu = styled(Typography)({\n  lineHeight: '20px',\n  marginTop: 4,\n  fontWeight: 500,\n  transition: 'opacity 0.3s',\n})\n\nexport default Layout\n","import { Box, styled, Typography } from '@mui/material'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Link } from 'react-router-dom'\nimport { useUser } from 'providers'\nimport { isAdmin } from 'utils/auth'\n\nconst Dashboard = () => {\n  const { user } = useUser()\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/database\">\n            <BoxMenu>\n              <Box>\n                <SourceIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/projects\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Projects</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/account\">\n            <BoxMenu>\n              <Box>\n                <AccountCircleIcon fontSize=\"large\" />\n                <TitleMenu>Account</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {isAdmin(user?.role) ? (\n            <LinkWrapper to=\"/account-manager\">\n              <BoxMenu>\n                <Box>\n                  <GroupIcon fontSize=\"large\" />\n                  <TitleMenu>Account Manager</TitleMenu>\n                </Box>\n              </BoxMenu>\n            </LinkWrapper>\n          ) : null}\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { styled } from '@mui/material'\n\nexport const Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\nimport Loading from \"../common/Loading\";\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description?: string\n  isLoading?: boolean\n}\nconst ModalDeleteAccount: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description || 'Delete account will erase all of your data.'}This\n            operation cannot be undone. To continue, type \"\n            <span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <ButtonConfirm onClick={onConfirm} sx={{ backgroundColor: 'red !important' }}>{titleSubmit}</ButtonConfirm>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default ModalDeleteAccount\n","import { Box, styled, Typography } from '@mui/material'\nimport { FC, useCallback } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport { ProjectType } from 'store/slice/Project/ProjectType'\nimport dayjs from \"dayjs\";\n\nexport type Column = {\n  width?: number | string\n  title: string\n  dataIndex?: string\n  name?: string\n  align?: string\n  filter?: boolean\n  render?: (\n    item: ProjectType,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined\n}\n\ntype TableComponentProps = {\n  data?: ProjectType[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  className?: string\n  columns?: Column[]\n  paginate?: {\n    page: number\n    total: number\n    page_size: number\n    breakLabel?: string\n    nextLabel?: string\n    previousLabel?: string\n    pageRangeDisplayed?: number\n    renderOnZeroPageCount?: string\n    onPageChange?: (selectedItem: { selected: number }) => any\n  }\n}\n\nconst TableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    data = [],\n    columns = [],\n    paginate,\n    className,\n    orderBy,\n    orderKey,\n  } = props\n  const pageCount = (paginate?.total || 0) / (paginate?.page_size || 1)\n\n  const renderCol = useCallback(\n    (col: Column, item: ProjectType, index: number) => {\n      if(col.name === 'created_time' || col.name === 'updated_time') {\n        return dayjs(item[col.name]).format('YYYY-MM-DD HH:mm')\n      }\n      const value = item[(col.name || col.dataIndex || '') as keyof ProjectType]\n      if (col.render) return col.render(item, value, index)\n      return value || null\n    },\n    [],\n  )\n\n  return (\n    <Box className={className}>\n      <Table>\n        <Thead>\n          <Tr>\n            {columns.map((col, iCol) => {\n              const nameCol = col.name || col.dataIndex || ''\n              return (\n                <Th\n                  style={{ width: col.width, textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {col.title}\n                  <ArrowDownwardIconOrder\n                    style={{\n                      transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                      opacity:\n                        orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                  />\n                </Th>\n              )\n            })}\n          </Tr>\n        </Thead>\n        <TBody>\n          {data.map((item, index) => (\n            <Tr key={item.id || index}>\n              {columns.map((col, iCol) => (\n                <Td\n                  style={{ textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {renderCol(col, item, index)}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n        </TBody>\n      </Table>\n      {!data.length ? <NoData>No Data</NoData> : null}\n      {pageCount ? (\n        <MyPaginate\n          disableInitialCallback\n          marginPagesDisplayed={3}\n          pageRangeDisplayed={3}\n          breakLabel={'...'}\n          pageCount={pageCount}\n          previousLabel={<KeyboardArrowLeftIcon />}\n          nextLabel={<ChevronRightIcon />}\n          {...paginate}\n        />\n      ) : null}\n    </Box>\n  )\n}\n\nconst MyPaginate = styled(ReactPaginate)<any>`\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  list-style-type: none;\n  padding: 1rem 0;\n  li a {\n    padding: 0.6rem 1rem;\n    cursor: pointer;\n  }\n  li.previous,\n  li.next {\n    margin-top: -2px;\n  }\n  li.previous.disabled,\n  li.next.disabled {\n    opacity: 0.4;\n  }\n  li.previous a,\n  li.next a,\n  li.break a {\n    border-color: transparent;\n  }\n  li.active a {\n    background-color: #0366d6;\n    border-color: transparent;\n    color: white;\n    min-width: 32px;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n  li.selected {\n    color: #1677ff;\n    font-weight: 600;\n  }\n`\n\nconst Table = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  maxWidth: 155,\n  wordBreak: 'break-word',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nexport default TableComponent\n","import { InputProps, styled, Typography } from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n  errorMessage: string\n  value?: string\n}\n\nconst InputError = ({\n  errorMessage,\n  onChange,\n  value,\n  type,\n  onBlur,\n  name,\n}: InputErrorProps) => {\n  return (\n    <>\n      <Input\n        autoComplete=\"Off\"\n        error={!!errorMessage}\n        onChange={onChange}\n        value={value}\n        type={type}\n        name={name}\n        onBlur={onBlur}\n      />\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\n\nexport default InputError\n","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  name?: string\n  options: {\n    code: number\n    name: string\n  }[]\n}\n\nconst SelectError: FC<SelectErrorProps> = ({\n  value,\n  onChange,\n  onBlur,\n  errorMessage,\n  options,\n  name,\n}) => {\n  return (\n    <>\n      <SelectModal\n        name={name}\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: { code: number, name: string }) => {\n          return (\n            <MenuItem key={item.code} value={item.code}>\n              {item.name}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import { Box, Button, SelectChangeEvent, styled } from '@mui/material'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport TableComponent, { Column } from 'components/Table'\nimport {\n  ChangeEvent,\n  FC,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InputError from 'components/common/InputError'\nimport SelectError from 'components/common/SelectError'\nimport { createUser, deleteUser, editUser, listUser } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ProjectType } from 'store/slice/Project/ProjectType'\nimport { isAdmin, optionsRole } from 'utils/auth'\nimport Loading from 'components/common/Loading'\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setIsOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role: '',\n  lab: '',\n  display_name: '',\n  confirmPassword: '',\n}\n\nexport const regexPassword = /^(?=.*\\d)(?=.*[!#$%&()*+,-./@_|])(?=.*[a-zA-Z]).{6,255}$/\nexport const regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\nexport const regexIgnoreS = /[^!#$%&()*+,-./@_|a-zA-Z0-9]/\n\nconst ModalComponent: FC<ModalComponentProps> = ({\n  onSubmitEdit,\n  setIsOpenModal,\n  dataEdit,\n}) => {\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n    dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255, value)\n    if (error) return error\n    if (!regexEmail.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (\n    value: string,\n    isConfirm: boolean = false,\n    values?: { [key: string]: string },\n  ): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255, value)\n    if (errorLength) {\n      return errorLength\n    }\n    let datas = values || formData\n    if (!regexPassword.test(value) && value) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)){\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    if (isConfirm && datas.password !== value && value) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number, value?: string) => {\n    if (!value) return 'This field is required'\n    return validateLength(name, length, value)\n  }\n\n  const validateLength = (name: string, length: number, value?: string) => {\n    if (value && value.length > length)\n      return `The text may not be longer than ${length} characters`\n    if (formData[name]?.length && value && value.length > length) {\n      return `The text may not be longer than ${length} characters`\n    }\n    return ''\n  }\n\n  const validateForm = (): { [key: string]: string } => {\n    const errorName = validateField('display_name', 100, formData.display_name)\n    const errorEmail = validateEmail(formData.email)\n    const errorLab = validateField('lab', 100, formData.lab)\n    const errorRole = validateField('role', 50, formData.role)\n    const errorPassword = validatePassword(formData.password)\n    const errorConfirmPassword = validatePassword(\n      formData.confirmPassword,\n      true,\n    )\n    return {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      display_name: errorName,\n      lab: errorLab,\n      role: errorRole,\n    }\n  }\n\n  const onChangeData = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | SelectChangeEvent,\n    length: number,\n  ) => {\n    const { value, name } = e.target\n    const newDatas = { ...formData, [name]: value }\n    setFormData(newDatas)\n    let error: string =\n      name === 'email'\n        ? validateEmail(value)\n        : validateField(name, length, value)\n    let errorConfirm = errors.confirmPassword\n    if (name.toLowerCase().includes('password')) {\n      error = validatePassword(value, name === 'confirmPassword', newDatas)\n      if (name !== 'confirmPassword' && formData.confirmPassword) {\n        errorConfirm = validatePassword(\n          newDatas.confirmPassword,\n          true,\n          newDatas,\n        )\n      }\n    }\n    setErrors({ ...errors, confirmPassword: errorConfirm, [name]: error })\n  }\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const newErrors = validateForm()\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.uid, formData)\n      setTimeout(() => {\n        if (!dataEdit?.uid) {\n          alert('Your account has been created successfully!')\n        } else {\n          alert('Your account has been successfully updated!')\n        }\n      }, 1)\n      setIsOpenModal(false)\n    } catch {\n      if (!dataEdit?.uid) {\n        setTimeout(() => {\n          alert('This email already exists!')\n        }, 300)\n      }\n    } finally {\n      setIsDisabled(false)\n    }\n  }\n  const onCancel = () => {\n    setIsOpenModal(false)\n  }\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.uid ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Lab: </LabelModal>\n          <InputError\n            name=\"lab\"\n            value={formData?.lab || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.lab}\n          />\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            name=\"display_name\"\n            value={formData?.display_name || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.display_name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role || ''}\n            options={optionsRole}\n            name=\"role\"\n            onChange={(e) => onChangeData(e, 50)}\n            onBlur={(e) => onChangeData(e, 50)}\n            errorMessage={errors.role}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            name=\"email\"\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 255)}\n            onBlur={(e) => onChangeData(e, 255)}\n            errorMessage={errors.email}\n          />\n          {!dataEdit?.uid ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                name=\"password\"\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                name=\"confirmPassword\"\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n        </ButtonModal>\n      </ModalBox>\n      {isDisabled ? <Loading /> : null}\n    </Modal>\n  )\n}\nconst AccountManager = () => {\n  const [openDelete, setOpenDelete] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [dataEdit, setDataEdit] = useState({})\n  const [idDel, setIdDel] = useState<string | undefined>()\n  const [data, setData] = useState<any[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [paginate, setPaginate] = useState({\n    total: 0,\n    per_page: 10,\n    page: -1,\n    next_page_token: [],\n  })\n  const { user } = useUser()\n\n  useEffect(() => {\n    getList()\n    //eslint-disable-next-line\n  }, [])\n\n  const getList = async (page: number = 0) => {\n    const query: { [key: string]: string | number } = {\n      offset: paginate.per_page * page,\n    }\n    if (paginate.next_page_token[page - 1]) {\n      query.next_page_token = paginate.next_page_token[page - 1]\n    }\n    setIsLoading(true)\n    try {\n      const data = await listUser(query)\n      const nextPageToken: string[] = paginate.next_page_token\n      if (page > paginate.page) {\n        nextPageToken.push(data.next_page_token)\n      }\n      const newData = data.data.map((item: any) => {\n        const name = optionsRole.find((role) => item.role === role.code)?.name\n        return { ...item, role: name }\n      })\n      setData(newData)\n      setPaginate((pre) => ({\n        ...pre,\n        total: data.total_page * paginate.per_page,\n        next_page_token: nextPageToken as any,\n        page,\n      }))\n    }\n    finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onOpenModal = () => {\n    setIsOpenModal(true)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = (id?: string | number) => {\n    setIdDel(String(id))\n    setOpenDelete(true)\n  }\n\n  const onForgotPassword = (data: ProjectType) => {\n    const code = optionsRole.find(\n      (role) => String(role.name) === String(data.role),\n    )?.code\n    //todo call api\n    setDataEdit({ ...data, role: code })\n    setIsOpenModal(true)\n  }\n\n  const onDelete = async () => {\n    if (idDel === undefined) return\n    setIsLoading(true)\n    try {\n      await deleteUser(idDel)\n      setIsLoading(false)\n      setTimeout(() => {\n        alert('Your account has been successfully deleted!')\n      }, 100)\n      handleCloseDelete()\n      setIdDel(undefined)\n      setOpenDelete(false)\n      getList()\n    } catch {\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    if (id !== undefined) {\n      await editUser(id, data)\n      setIsOpenModal(false)\n    } else {\n      await createUser(data)\n    }\n    await getList(id !== undefined ? paginate.page : 0)\n    return undefined\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'UID', name: 'uid' },\n      { title: 'Lab', name: 'lab' },\n      { title: 'Name', name: 'display_name' },\n      { title: 'Role', name: 'role' },\n      { title: 'Mail', name: 'email' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data) => {\n          return (\n            <>\n              <ALink\n                sx={{ color: 'red' }}\n                onClick={() => onForgotPassword(data)}\n              >\n                <EditIcon sx={{ color: 'black' }} />\n              </ALink>\n              {\n                !(data?.uid === user?.uid) &&\n                <ALink\n                    sx={{ ml: 1.25 }}\n                    onClick={() => onConfirmDelete(data?.uid)}\n                >\n                  <DeleteIcon sx={{ color: 'red' }} />\n                </ALink>\n              }\n            </>\n          )\n        },\n      },\n    ],\n    [user?.uid],\n  )\n\n  if (!isAdmin(user?.role)) {\n    return null\n  }\n\n  return (\n    <AccountManagerWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Account Manager</h1>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        isLoading={isLoading}\n        onSubmit={onDelete}\n      />\n      <BoxButton>\n        <ButtonAdd onClick={() => onOpenModal()} variant=\"contained\">\n          Add\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{\n          total: paginate.total,\n          page: paginate.page,\n          page_size: paginate.per_page,\n          onPageChange: ({ selected }) => {\n            getList(selected)\n          },\n        }}\n        data={data}\n        columns={columns}\n      />\n      {isOpenModal ? (\n        <ModalComponent\n          onSubmitEdit={onSubmitEdit}\n          setIsOpenModal={(flag) => {\n            setIsOpenModal(flag)\n            if (!flag) {\n              setDataEdit({})\n            }\n          }}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst BoxButton = styled(Box)({\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  width: 100,\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  height: 550,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport InputPassword from 'components/InputPassword'\nimport { ChangeEvent, FC, useState } from 'react'\nimport { regexIgnoreS, regexPassword } from \"pages/AccountManager\";\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: (oldPass: string, newPass: string) => void\n}\n\nconst ModalChangePassword: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    if(name === 'new_password' && values.confirm_password) {\n      if(!validate?.(value)) {\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: value !== values.confirm_password ? 'Passwords do not match' : ''})\n        return\n      }\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: ''})\n        return\n    }\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if(value.length > 255) return 'The text may not be longer than 255 characters'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.new_password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, new_password } = values\n    if (!new_password) setErrors((pre) => ({ ...pre, new_password: 'This field is required' }))\n    if (reEnter && reEnter !== new_password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  const validateForm = () => {\n    const errorPass = validatePassword(values.password)\n    const errorNewPass = validatePassword(values.new_password)\n    const errorConfirmPass = validatePassword(values.confirm_password)\n    return {\n      password: errorPass,\n      new_password: errorNewPass,\n      confirm_password: errorConfirmPass\n    }\n  }\n\n  const onChangePass = () => {\n    const newErrors: { [key: string]: string } = validateForm()\n    if(errors.password || errors.new_password || errors.confirm_password) return\n    if(newErrors.password || newErrors.new_password || newErrors.confirm_password) {\n      setErrors(newErrors)\n      return\n    }\n    onSubmit(values.password, values.new_password)\n  }\n\n  const onCloseModal = () => {\n    setErrors({})\n    setValues({})\n    onClose()\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              onBlur={(e) => onChangeValue(e, validatePassword)}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n              onBlur={(e) => onChangeValue(e, validateReEnter)}\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={() => onChangePass()}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onCloseModal}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ModalChangePassword\n","import { Box, Button, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport ModalChangePassword from 'components/ModalChangePassword'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { useUser } from 'providers'\nimport { useState } from 'react'\nimport { isAdmin, optionsRole } from \"utils/auth\";\nimport {deleteAccountProfile, editNameProfile, editPassProfile} from \"api/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"components/common/Loading\";\n\nconst Account = () => {\n  const { user, setUser } = useUser()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [openChangePw, setOpenChangePw] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const onEditName = async (e: any) => {\n    const { value } = e.target\n    if(!value) {\n      alert('This field is required')\n      setIsEditName(false)\n      return\n    }\n    setIsLoading(true)\n    try {\n      setUser({...user, display_name: value})\n      await editNameProfile({...user, display_name: value})\n    }\n    catch {}\n    finally {\n      setIsLoading(false)\n      setIsEditName(false)\n    }\n  }\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = () => {\n    setOpenDelete(true)\n  }\n\n  const onDelete = async () => {\n    //todo call api\n    if(!user) return\n    setIsLoading(true)\n    try {\n      await deleteAccountProfile()\n      navigate('/login')\n    }\n    catch {}\n    finally {\n      setIsLoading(false)\n    }\n    handleCloseDelete()\n  }\n\n  const handleCloseChangePw = () => {\n    setOpenChangePw(false)\n  }\n\n  const onConfirmChangePw = () => {\n    setOpenChangePw(true)\n  }\n\n  const onChangePw = async (oldPass: string, newPass: string) => {\n    //todo call api\n    setIsLoading(true)\n    try {\n      await editPassProfile({old_password: oldPass, new_password: newPass})\n      alert('Your password has been successfully changed.')\n      handleCloseChangePw()\n    }\n    catch {\n      alert('Failed to Change Password!')\n    }\n    finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <AccountWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ModalChangePassword\n        onSubmit={onChangePw}\n        open={openChangePw}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData sx={{ marginTop: isEditName ? -2 : 0 }}>Full name</TitleData>\n        <BoxData>\n          {isEditName ? (\n            <Input\n              autoFocus\n              defaultValue={user?.display_name || ''}\n              onBlur={(e) => onEditName(e)}\n              placeholder=\"Full name\"\n            />\n          ) : (\n            <>\n              {user?.display_name || \"--\"}\n              <Button sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n                Edit\n              </Button>\n            </>\n          )}\n        </BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{optionsRole.find(role => String(role.code) === String(user?.role))?.name}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10 }}>\n        <ButtonSubmit onClick={onConfirmChangePw}>Change Password</ButtonSubmit>\n        {\n          !isAdmin(user?.role) &&\n          <ButtonSubmit onClick={onConfirmDelete}>Delete Account</ButtonSubmit>\n        }\n      </BoxFlex>\n      {\n        isLoading && <Loading />\n      }\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n})\n\nconst ButtonSubmit = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from '../../const/API'\nimport { ProjectCreate } from 'store/slice/Project/ProjectType'\n\nexport const getProjectListApi = async () => {\n  const response = await axios.get(\n    `${DATABASE_URL_HOST}/workdb/projects/search`,\n  )\n  return response.data\n}\nexport const getProjectApi = async (project_id: string | number) => {\n  const response = await axios.get(\n    `${DATABASE_URL_HOST}/workdb/project/${project_id}`,\n  )\n  return response.data\n}\n\nexport const createProjectApi = async (data: ProjectCreate) => {\n  const response = await axios.post(`${DATABASE_URL_HOST}/workdb/project`, data)\n  return response.data\n}\n\nexport const updateProjectApi = async (id: string, data: ProjectCreate) => {\n  const response = await axios.put(\n    `${DATABASE_URL_HOST}/workdb/project/${id}`,\n    data,\n  )\n  return response.data\n}\n\nexport const deleteProjectApi = async (project_id: number) => {\n  const response = await axios.delete(\n    `${DATABASE_URL_HOST}/workdb/project/${project_id}`,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  CurrentProject,\n  PROJECT_SLICE_NAME,\n  Project,\n  ProjectCreate,\n  ProjectType,\n} from './ProjectType'\nimport {\n  createProjectApi,\n  deleteProjectApi,\n  getProjectApi,\n  getProjectListApi,\n  updateProjectApi,\n} from 'api/project'\nimport { DatasetPostType } from '../Dataset/DatasetType'\nimport { createDataset } from '../Dataset/DatasetAction'\n\nexport const getProjectList = createAsyncThunk<\n  Project,\n  { callback?: (isSuccess: boolean) => void } | undefined\n>(`${PROJECT_SLICE_NAME}/getProjects`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getProjectListApi()\n    param?.callback?.(true)\n    return response\n  } catch (e) {\n    param?.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const getProjectId = createAsyncThunk<\n  CurrentProject,\n  { project_id: string; callback?: (isSuccess: boolean) => void } | undefined\n>(`${PROJECT_SLICE_NAME}/getProjectId`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    if (!param?.project_id) return undefined\n    const response = await getProjectApi(param.project_id)\n    param?.callback?.(true)\n    return response\n  } catch (e) {\n    param?.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const createProject = createAsyncThunk<\n  ProjectType,\n  {\n    project: ProjectCreate\n    dataset: DatasetPostType[]\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/createProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await createProjectApi(param.project)\n    thunkAPI.dispatch(\n      createDataset({\n        project_id: response.id,\n        dataset: param.dataset,\n        callback: param.callback,\n      }),\n    )\n    return response\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const editProject = createAsyncThunk<\n  ProjectType,\n  {\n    project: ProjectCreate\n    project_id: string\n    dataset: DatasetPostType[]\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/editProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await updateProjectApi(param.project_id, param.project)\n    await thunkAPI.dispatch(\n      createDataset({\n        project_id: Number(param.project_id),\n        dataset: param.dataset,\n        callback: param.callback,\n      }),\n    )\n    param.callback?.(true)\n    return response\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const deleteProject = createAsyncThunk<\n  null,\n  {\n    project_id: number\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/deleteProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    await deleteProjectApi(param.project_id)\n    thunkAPI.dispatch(getProjectList({ callback: param.callback }))\n    return null\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n","import { Box, Button, styled } from '@mui/material'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TableComponent, { Column } from 'components/Table'\nimport { useNavigate } from 'react-router-dom'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { selectProjectList } from 'store/slice/Project/ProjectSelector'\nimport {\n  deleteProject,\n  getProjectList,\n} from 'store/slice/Project/ProjectAction'\n\nexport type DataProject = {\n  id: number | string\n  uid?: number | string\n  name: string\n  project_type: number\n  image_count: number\n  created_time: string\n  updated_time: string\n  role?: string | number\n}\n\nconst Projects = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const projects = useSelector(selectProjectList)\n  const [idDelete, setIdDelete] = useState<number | string | undefined>()\n\n  useEffect(() => {\n    dispatch(getProjectList())\n    //eslint-disable-next-line\n  }, [])\n\n  const onEdit = useCallback((id: number | string) => {\n    navigate(`/projects/new-project?id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onWorkflow = useCallback((id: number | string) => {\n    navigate(`/projects/workflow?tab=0&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onResults = useCallback((id: number | string) => {\n    navigate(`/projects/workflow?tab=1&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addNewProject = useCallback(() => {\n    navigate('/projects/new-project')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onDelete = (id: number | string) => {\n    setIdDelete(id)\n  }\n\n  const onDeleteSubmit = () => {\n    const id = idDelete\n    if (!id) return\n    setIdDelete(undefined)\n    dispatch(deleteProject({ project_id: Number(id) }))\n  }\n\n  const handleCloseDelete = () => {\n    setIdDelete(undefined)\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'Project Name', name: 'project_name' },\n      { title: 'Created', name: 'created_time' },\n      { title: 'Updated', name: 'updated_time' },\n      { title: 'Images', name: 'image_count', align: 'center' },\n      {\n        title: '',\n        name: 'action',\n        width: 400,\n        render: (data) => {\n          return (\n            <BoxAction>\n              <ButtonAdd variant=\"contained\" onClick={() => onEdit(data.id)}>\n                Edit\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onWorkflow(data.id)}\n                sx={{ backgroundColor: '#1976D2 !important' }}\n              >\n                Workflow\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onResults(data.id)}\n                sx={{ backgroundColor: '#1976D2 !important' }}\n              >\n                Result\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onDelete(data.id)}\n                sx={{ backgroundColor: 'red !important' }}\n              >\n                Del\n              </ButtonAdd>\n            </BoxAction>\n          )\n        },\n      },\n    ],\n    [onWorkflow, onResults, onEdit],\n  )\n  return (\n    <ProjectsWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Project\"\n        description=\"Delete My Project\"\n        onClose={handleCloseDelete}\n        open={!!idDelete}\n        onSubmit={onDeleteSubmit}\n      />\n      <ProjectsTitle>Projects</ProjectsTitle>\n      <BoxButton>\n        <ButtonAdd\n          variant=\"contained\"\n          onClick={addNewProject}\n          sx={{ marginBottom: 2 }}\n        >\n          Add Project\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        data={projects}\n        columns={columns}\n      />\n    </ProjectsWrapper>\n  )\n}\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  height: 'calc(100% - 90px)',\n  overflow: 'auto'\n}))\n\nconst ProjectsTitle = styled('h1')(({ theme }) => ({}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst BoxAction = styled(BoxButton)({\n  justifyContent: 'flex-start',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  minWidth: 80,\n  letterSpacing: 'unset',\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nexport default Projects\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  MouseEvent as MouseEventReact,\n  FC,\n  Fragment,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport {\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n} from 'pages/Database'\nimport React from 'react'\n\ntype Object = {\n  [key: string]: Object | string\n}\n\nexport type Column = {\n  width?: number\n  title: string\n  dataIndex?: string\n  name?: string\n  child?: string\n  filter?: boolean\n  render?: (\n    item?: RecordDatabase | RecordList | ImagesDatabase,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined | string | number\n}\n\ntype TableComponentProps = {\n  addProject: boolean\n  data?: (RecordDatabase | RecordList)[]\n  className?: string\n  columns?: Column[]\n  orderBy?: 'ASC' | 'DESC' | ''\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: 'ASC' | 'DESC' | '') => void\n  rowClick?: (row: ImagesDatabase) => void\n  onClickEvent?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (row?: ImagesDatabase[]) => void\n  onBeginDrag?: () => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  defaultExpand?: boolean\n}\n\ntype RenderColumnProps = {\n  data: RecordDatabase | SessionsDatabase | ImagesDatabase | RecordList\n  columns: Column[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: string) => void\n  rowClick?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    row?: ImagesDatabase[],\n  ) => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  recordIndex: number\n  defaultExpand?: boolean\n  dataShow?: boolean\n  beginDrag?: boolean\n  draggableProps?: boolean\n  allowMutilKey?: boolean\n  drags: ImagesDatabase[]\n  onMouseDown: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => void\n}\n\nconst renderCol = (\n  col: Column,\n  item: ImagesDatabase | RecordDatabase | RecordList,\n  index: number,\n) => {\n  const key = col.name || col.dataIndex || ''\n  let value: ImagesDatabase | RecordDatabase | RecordList | string = item\n  if (key.includes('.')) {\n    const keys = key.split('.')\n    keys.forEach((k) => {\n      if (k === 'voxel_size' || k === 'size') {\n        value = JSON.stringify((value as unknown as Object)?.[k])\n      } else {\n        value = (value as unknown as Object)?.[k] as\n          | ImagesDatabase\n          | RecordDatabase\n          | RecordList\n          | string\n      }\n    })\n  } else value = (item as unknown as Object)[key] as string\n  if (col.render) return col.render(item, value, index)\n  return typeof value === 'object' || Array.isArray(value) ? null : value\n}\n\nconst RenderColumn = (props: RenderColumnProps) => {\n  const { columns, data, recordIndex, rowClick, drags, onMouseDown } = props\n  const { draggable, onDrag } = props\n  const [openChild, setOpenChild] = useState(true)\n  const [openChildParent, setOpenChildPrent] = useState(true)\n  const [openSubjects, setOpenSubjects] = useState<string[]>(\n    (data as RecordDatabase)?.subjects?.map?.((e) => e.id) || [],\n  )\n\n  const isDrag = drags.find((drag) => {\n    return (\n      drag.id === data.id &&\n      drag.session_id === (data as ImagesDatabase).session_id &&\n      drag.datatype_index === (data as ImagesDatabase).datatype_index\n    )\n  })\n\n  const onDragEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    return onDrag?.(event, [image])\n  }\n\n  const onSetOpenSubject = (subId: string) => {\n    if (openSubjects.includes(subId)) {\n      setOpenSubjects(openSubjects.filter((o) => o !== subId))\n    } else setOpenSubjects([...openSubjects, subId])\n  }\n\n  if (\n    (data as RecordDatabase)?.subjects?.length ||\n    (data as SessionsDatabase).datatypes?.length\n  ) {\n    return (\n      <Fragment>\n        <Tr\n          style={{\n            transition: 'all 0.3s',\n            backgroundColor: 'rgb(238, 238, 238)',\n          }}\n        >\n          {columns.map((column) => {\n            const key = column.name || column.dataIndex || ''\n            return (\n              <Td\n                key={`col_${column.name || column.dataIndex}`}\n                onClick={() =>\n                  key === 'session' && setOpenChildPrent(!openChildParent)\n                }\n              >\n                {key === 'action' ? null : (\n                  <BoxCenter>\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    )}\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    ) &&\n                      key === 'session' && (\n                        <ArrowDropDownIcon\n                          style={{\n                            transform: `rotate(${\n                              !openChildParent ? -180 : 0\n                            }deg)`,\n                          }}\n                        />\n                      )}\n                  </BoxCenter>\n                )}\n              </Td>\n            )\n          })}\n        </Tr>\n        {openChildParent &&\n          (data as RecordDatabase).subjects?.map((sub, subject_index) => {\n            return (\n              <Fragment key={sub.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'subject' && onSetOpenSubject(sub.id)\n                        }\n                      >\n                        {key === 'subject' ? (\n                          <BoxCenter>\n                            {sub.label}\n                            {sub.sessions?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openSubjects.includes(sub.id) ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openSubjects.includes(sub.id) &&\n                  sub.sessions.map((session, session_index) => (\n                    <RenderColumn\n                      {...props}\n                      key={session.id}\n                      data={\n                        {\n                          ...session,\n                          session: session.label,\n                          session_index,\n                          subject_index,\n                        } as SessionsDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n        {openChildParent &&\n          (data as SessionsDatabase).datatypes?.map((type, ii) => {\n            return (\n              <Fragment key={type.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'datatype' && setOpenChild(!openChild)\n                        }\n                      >\n                        {key === 'datatype' ? (\n                          <BoxCenter>\n                            {type.label}\n                            {type.images?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openChild ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openChild &&\n                  type.images.map((image, index) => (\n                    <RenderColumn\n                      {...props}\n                      key={`row_image_${image.id}_${index}`}\n                      data={\n                        {\n                          ...image,\n                          session_index: (data as SessionsDatabase)\n                            .session_index,\n                          subject_index: (data as SessionsDatabase)\n                            .subject_index,\n                          session_id: data.id,\n                          datatype_index: ii,\n                          image_index: index,\n                          datatype_label: type.label,\n                          subject_id: (data as SessionsDatabase).parent_id,\n                          record_index: recordIndex,\n                        } as ImagesDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n      </Fragment>\n    )\n  }\n\n  return (\n    <Tr\n      onClick={(e) => rowClick?.(e, data as ImagesDatabase)}\n      draggable={draggable}\n      onDragStart={(e) => onDragEvent?.(e, data as ImagesDatabase)}\n      onMouseDown={(e) => onMouseDown(e, data as ImagesDatabase)}\n      style={{\n        transition: 'all 0.3s',\n        backgroundColor: isDrag ? 'rgba(25,118,210,0.15)' : '',\n      }}\n    >\n      {columns.map((column) => {\n        return (\n          <Td key={`col_${column.name || column.dataIndex}`}>\n            {renderCol(column, data as ImagesDatabase, recordIndex)}\n          </Td>\n        )\n      })}\n    </Tr>\n  )\n}\n\nconst DatabaseTableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    addProject,\n    className,\n    orderKey,\n    orderBy,\n    onSort,\n    draggable,\n    rowClick,\n    onDrag,\n    onDragEnd,\n    onBeginDrag: onBeginDragProps,\n    ...p\n  } = props\n  const { data = [], columns = [] } = props\n  const [drags, setDrags] = useState<ImagesDatabase[]>([])\n  const [mouseMoveRect, setMouseMoveRect] = useState({ pageX: 0, pageY: 0 })\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n\n  const ctrRef = useRef(false)\n  const refTable = useRef<HTMLDivElement | null>(null)\n  const refTdSelect = useRef<{\n    [key: string]: {\n      dom: HTMLTableRowElement\n      tds: { id: number | string; dom: HTMLTableCellElement; html: string }[]\n    }\n  }>({})\n  const mouseStart = useRef<{ pageX: number; pageY: number } | undefined>()\n  const [beginDrag, setBeginDrag] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydownEvent)\n    window.addEventListener('keyup', onKeyupEvent)\n    window.addEventListener('mouseup', onMouseUp)\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('click', onClick)\n    return () => {\n      window.removeEventListener('keydown', onKeyupEvent)\n      window.removeEventListener('keyup', onKeyupEvent)\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('click', onClick)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onKeydownEvent = (event: KeyboardEvent) => {\n    ctrRef.current = event.ctrlKey || event.metaKey\n  }\n\n  const onKeyupEvent = () => {\n    ctrRef.current = false\n  }\n\n  const onClick = (event: MouseEvent) => {\n    if (refTable.current?.contains?.(event.target as Element)) return\n    ctrRef.current = false\n    setDrags([])\n    onDragEnd?.()\n  }\n\n  const onSortHandle = (nameCol: string) => {\n    if (orderKey === nameCol) {\n      let order: 'ASC' | 'DESC' | '' = ''\n      if (orderBy === 'ASC') {\n        order = 'DESC'\n      } else if (!orderBy) {\n        order = 'ASC'\n      }\n      onSort?.(nameCol, order)\n    } else onSort?.(nameCol, 'ASC')\n  }\n\n  const onRowClickEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    const idDom = `${image.id}_${image.datatype_index}_${image.session_id}`\n    if (!ctrRef.current) {\n      if (!timeoutClick.current) {\n        timeoutClick.current = setTimeout(() => {\n          timeoutClick.current = undefined\n        }, 300)\n        if (draggable) {\n          setDrags([image])\n          const tds = event.currentTarget.getElementsByTagName('td')\n          refTdSelect.current[idDom] = {\n            dom: event.currentTarget as unknown as HTMLTableRowElement,\n            tds: [],\n          }\n          for (let i = 0; i < tds.length; i++) {\n            refTdSelect.current[idDom].tds.push({\n              id: tds[i].id,\n              dom: tds[i],\n              html: tds[i].innerHTML,\n            })\n          }\n        }\n        return\n      }\n      return rowClick?.(image)\n    }\n    if (!draggable) return\n    if (\n      drags.find(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      setDrags(\n        drags.filter(\n          (drag: ImagesDatabase) =>\n            drag.id === image.id &&\n            drag.datatype_index === image.datatype_index &&\n            drag.session_index === image.session_index,\n        ),\n      )\n      delete refTdSelect.current[idDom]\n    } else {\n      setDrags([...drags, image])\n      const tds = event.currentTarget.getElementsByTagName('td')\n      refTdSelect.current[idDom] = {\n        dom: event.currentTarget as unknown as HTMLTableRowElement,\n        tds: [],\n      }\n      for (let i = 0; i < tds.length; i++) {\n        refTdSelect.current[idDom].tds.push({\n          id: tds[i].id,\n          dom: tds[i],\n          html: tds[i].innerHTML,\n        })\n      }\n    }\n  }\n\n  const onMouseDown = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    if (\n      !drags.length ||\n      !draggable ||\n      !drags.some(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      return\n    }\n    mouseStart.current = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n    }\n    onBeginDragProps?.()\n    setMouseMoveRect({ pageX: 0, pageY: 0 })\n    onDrag?.(drags)\n  }\n\n  const onMouseUp = () => {\n    mouseStart.current = undefined\n    setBeginDrag(false)\n    setTimeout(() => {\n      onDrag?.(undefined)\n    }, 100)\n  }\n\n  const onMouseMove = (event: MouseEvent) => {\n    if (!mouseStart.current || !draggable || !mouseStart.current) return\n    setBeginDrag(true)\n    setMouseMoveRect({\n      pageX: event.pageX - mouseStart.current.pageX,\n      pageY: event.pageY - mouseStart.current.pageY,\n    })\n  }\n\n  const onBeginDrag = (\n    e: MouseEventReact<HTMLTableRowElement>,\n    image?: ImagesDatabase[],\n  ) => {\n    e.preventDefault()\n    onDrag?.(image)\n  }\n\n  return (\n    <>\n      <TableWrap ref={refTable} className={className} addProject={addProject}>\n        <DataTable\n          style={{\n            width: columns.reduce((a, b) => a + (Number(b.width) || 110), 0),\n          }}\n        >\n          <Thead>\n            <Tr>\n              {columns.map((col, iCol) => {\n                const nameCol = col.name || col.dataIndex || ''\n                return (\n                  <Th\n                    onClick={() => onSortHandle(nameCol)}\n                    style={{\n                      maxWidth: col.width,\n                      minWidth: col.width,\n                      width: col.width,\n                      cursor: 'pointer',\n                    }}\n                    key={col.dataIndex || col.name || iCol}\n                  >\n                    {col.title}\n                    <ArrowDownwardIconOrder\n                      style={{\n                        transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                        opacity:\n                          orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                      }}\n                    />\n                  </Th>\n                )\n              })}\n            </Tr>\n          </Thead>\n          <TBody>\n            {data.map((item, index) => (\n              <RenderColumn\n                allowMutilKey={ctrRef.current}\n                recordIndex={index}\n                columns={columns}\n                {...p}\n                data={item}\n                rowClick={(e, image) => onRowClickEvent(e, image)}\n                onMouseDown={onMouseDown}\n                beginDrag={beginDrag}\n                draggable={false}\n                draggableProps={draggable}\n                key={`row_table_${item.id}_${index}`}\n                drags={drags}\n                onDrag={onBeginDrag}\n                onDragEnd={onDragEnd}\n              />\n            ))}\n          </TBody>\n        </DataTable>\n        {!data.length ? <NoData>No Data</NoData> : null}\n      </TableWrap>\n      {beginDrag &&\n        drags.map((el) => {\n          const rowId = `${el.id}_${el.datatype_index}_${el.session_id}`\n          const trNow = refTdSelect.current[rowId]\n          const { width, height, top, left } =\n            trNow.dom?.getBoundingClientRect()\n          const style = {\n            width,\n            height,\n            top: top + mouseMoveRect.pageY,\n            left: left + mouseMoveRect.pageX,\n          }\n          return (\n            <BoxDrag key={el.id} style={style}>\n              {trNow.tds.map((td, index) => {\n                const { width } = td.dom.getBoundingClientRect()\n                return (\n                  <Box\n                    key={`${rowId}_-${index}`}\n                    style={{ width, padding: 16 }}\n                  >\n                    {td.html}\n                  </Box>\n                )\n              })}\n            </BoxDrag>\n          )\n        })}\n    </>\n  )\n}\n\nconst BoxDrag = styled(Box)({\n  position: 'absolute',\n  background: '#ffffff',\n  backgroundColor: 'rgba(25,118,210,0.15)',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst TableWrap = styled(Box, {\n  shouldForwardProp: (props) => props !== 'addProject',\n})<{ addProject: boolean }>(({ addProject }) => ({\n  overflowX: 'scroll',\n  height: `calc(100vh - ${addProject ? 365 : 200}px)`,\n}))\n\nconst DataTable = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  userSelect: 'none',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nconst BoxCenter = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport default React.memo(DatabaseTableComponent)\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  FC,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  TouchEvent,\n} from 'react'\n\ntype ChangeDragProps = {\n  title: string\n  value: number\n  onChange: (value: number) => void\n  className?: string\n  max?: number\n  min?: number\n  onChangeMin?: (v: number) => any\n  showInputMax?: boolean\n  showInputMin?: boolean\n}\n\nconst ChangeDrag: FC<ChangeDragProps> = (props) => {\n  const { title, value, onChange, className, max = 2, min = 0 } = props\n  const { onChangeMin, showInputMax } = props\n  const [width, setWidth] = useState(0)\n  const mouseDown = useRef(0)\n\n  const refDrag = useRef<any>()\n  const refDot = useRef<any>()\n\n  useEffect(() => {\n    getWidth()\n    //eslint-disable-next-line\n  }, [])\n\n  const getWidth = () => {\n    if (!refDrag.current) getWidth()\n    setWidth(refDrag.current.clientWidth - 24)\n  }\n\n  const onMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n    mouseDown.current = event.pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onTouchStart = useCallback((event: TouchEvent<HTMLDivElement>) => {\n    mouseDown.current = event.touches[0].pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onMouseMove = (event: MouseEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.pageX - mouseInit - 12\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(scale)\n  }\n\n  const onTouchMove = (event: TouchEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.touches[0].pageX - mouseInit\n    let scale = (mouseMove / width) * (max - min)\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onMouseLeave = useCallback(() => {\n    mouseDown.current = 0\n    refDrag.current.style.cursor = 'default'\n    refDot.current.style.cursor = ''\n  }, [])\n\n  return (\n    <ScaleWrapper\n      className={className}\n      ref={refDrag}\n      onMouseMove={onMouseMove}\n      onTouchMove={onTouchMove}\n      onMouseLeave={onMouseLeave}\n      onMouseUp={onMouseLeave}\n    >\n      <TitleScale>{title}</TitleScale>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Input\n          value={Number(value.toPrecision(2))}\n          onChange={(e) => onChangeMin?.(Number(e.target.value))}\n        />\n        {showInputMax ? (\n          <Input\n            style={{ textAlign: 'right' }}\n            value={Number(max.toPrecision(2))}\n            readOnly\n          />\n        ) : null}\n      </div>\n      <BoxWrapper>\n        <BoxLine style={{ width: ((value - min) * width) / (max - min) }} />\n        <Dot\n          ref={refDot}\n          onMouseDown={onMouseDown}\n          onTouchEnd={onMouseLeave}\n          onTouchStart={onTouchStart}\n          style={{ left: ((value - min) * width) / (max - min) }}\n        />\n      </BoxWrapper>\n    </ScaleWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 4,\n  background: 'rgba(60, 60, 67, 0.18)',\n  position: 'relative',\n  borderRadius: 2,\n  userSelect: 'none',\n}))\n\nconst Dot = styled(Box)(() => ({\n  position: 'absolute',\n  width: 24,\n  height: 24,\n  background: '#7a7a7a',\n  borderRadius: 100,\n  top: -11,\n  cursor: 'pointer',\n}))\n\nconst TitleScale = styled(Typography)(() => ({\n  fontSize: 14,\n  fontWeight: 700,\n}))\n\nconst BoxLine = styled(Box)(() => ({\n  position: 'absolute',\n  height: 4,\n  background: '#0A7AFF',\n  borderRadius: 2,\n}))\n\nconst ScaleWrapper = styled(Box)(({ theme }) => ({\n  paddingBottom: 20,\n  '@media (max-width: 809px)': {\n    paddingTop: theme.spacing(2),\n  },\n}))\n\nconst Input = styled('input')({\n  border: 'none',\n  outline: 'none',\n  width: 50,\n  marginBottom: 20,\n})\n\nexport default ChangeDrag\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from 'const/API'\n\nexport const getDataBaseTree = async () => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/search`)\n  return response.data\n}\n\nexport const getDataBaseList = async () => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/search/list`)\n  return response.data\n}\n\nexport const getRawdb = async (id: number) => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/${id}`)\n  return response.data\n}\n\nexport const editAttributes = async (id: number, data: string) => {\n  const response = await axios.put(`${DATABASE_URL_HOST}/rawdb/${id}`, data)\n  return response.data\n}\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogContentText,\n  IconButton,\n  Modal,\n  styled,\n  Typography,\n  DialogContent,\n  DialogActions,\n} from '@mui/material'\nimport { FC, useEffect, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ChangeDrag from './ChangeSize'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { ObjectType } from 'pages/Database'\nimport { editAttributes } from 'api/rawdb'\nimport Loading from '../common/Loading'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  url?: string\n  jsonData?: ObjectType\n  disabled?: { left: boolean; right: boolean }\n  id: number\n  editAttribute?: boolean\n}\n\ntype AlertDialogProps = {\n  open: boolean\n  handleClose: () => void\n  handleSaveAttributes: () => void\n}\n\nconst AlertDialog = ({\n  open,\n  handleClose,\n  handleSaveAttributes,\n}: AlertDialogProps) => {\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Do you want Save?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSaveAttributes} autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nconst ImageView: FC<ImageViewProps> = ({\n  editAttribute = true,\n  open,\n  onClose,\n  url,\n  onNext,\n  onPrevious,\n  jsonData,\n  disabled,\n  id,\n}) => {\n  const viewerRef = useRef<any>()\n  const [worldCoords, setWorldCoords] = useState({ x: 0, y: 0, z: 0 })\n  const [voxelCoords, setVoxelCoords] = useState({ i: 0, j: 0, k: 0 })\n  const [values, setValues] = useState(0)\n  const [opacity, setOpacity] = useState(0)\n  const [thresholds, setThresholds] = useState(0)\n  const [maxThres, setMaxThres] = useState(0)\n  const [contracts, setContracts] = useState(1)\n  const [brightness, setBrightness] = useState(0)\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const [openSave, setOpenSave] = useState(false)\n  const [textAttribute, setTextAttribute] = useState(\n    JSON.stringify(jsonData || ''),\n  )\n  const [errorAttribute, setErrorAttribute] = useState<string>('')\n  const [isLoading, setIsLoading] = useState(false)\n  const volumes = useRef<any>()\n  const refTextArea = useRef<HTMLTextAreaElement | null>(null)\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n    }\n    return () => {\n      viewerRef.current.clearVolumes?.()\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n  useEffect(() => {\n    setTextAttribute(JSON.stringify(jsonData || ''))\n    //eslint-disable-next-line\n  }, [jsonData])\n\n  const onChangeThreshold = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeContract = (num: number) => {\n    if (!volumes.current) return\n    setContracts(num)\n    volumes.current.display.setContrast(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeBrightness = (num: number) => {\n    if (!volumes.current) return\n    setBrightness(num)\n    volumes.current.display.setBrightness(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMinThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeJson = (event: any) => {\n    const { value } = event.target\n    try {\n      JSON.parse(value)\n      setErrorAttribute('')\n    } catch {\n      setErrorAttribute('format JSON invalid')\n    }\n    setTextAttribute(value)\n  }\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n          complete: function () {},\n        },\n      ],\n    })\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', function () {\n          setOpacity(1)\n          setIsLoadFile(false)\n        })\n        viewer.addEventListener('sliceupdate', function (event: any) {\n          // const panel = event.target\n          const { volume } = event\n          volumes.current = volume\n          setThresholds(volumes.current.intensity_min)\n          setMaxThres(volumes.current.intensity_max)\n          setValues(volume.getIntensityValue())\n          if (brainbrowser.utils.isFunction(volume.getWorldCoords)) {\n            setWorldCoords(volume.getWorldCoords())\n          }\n          if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n            setVoxelCoords(volume.getVoxelCoords())\n          }\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {},\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  const handleClickOpenSave = () => {\n    if (errorAttribute) return\n    setOpenSave(true)\n  }\n\n  const handleCloseSave = () => {\n    setOpenSave(false)\n  }\n\n  const handleSaveAttributes = async () => {\n    setIsLoading(true)\n    try {\n      await editAttributes(id, textAttribute)\n    } finally {\n      handleCloseSave()\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div\n            style={{\n              display: !opacity ? 'none' : 'flex',\n              alignItems: 'stretch',\n            }}\n          >\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              {opacity ? (\n                <Box sx={{ background: '#ffffff' }}>\n                  <BoxContentData>\n                    <p style={{ margin: 0, padding: '20px 0' }}>\n                      World Coordinates:\n                    </p>\n                    <span>X: {worldCoords.x.toPrecision(4)}</span>\n                    <span style={{ marginLeft: 20 }}>\n                      Y: {worldCoords.y.toPrecision(4)}\n                    </span>\n                    <span style={{ marginLeft: 20 }}>\n                      Z: {worldCoords.z.toPrecision(4)}\n                    </span>\n                    <p>Voxel Coordinates:</p>\n                    <span>I: {voxelCoords.i}</span>\n                    <span style={{ marginLeft: 20 }}>J: {voxelCoords.j}</span>\n                    <span style={{ marginLeft: 20 }}>K: {voxelCoords.k}</span>\n                    <p>Value: {values}</p>\n                    <ChangeDrag\n                      onChangeMin={onChangeMinThresh}\n                      max={maxThres}\n                      min={-maxThres}\n                      title={'Threshold'}\n                      value={thresholds}\n                      showInputMax\n                      showInputMin\n                      onChange={onChangeThreshold}\n                    />\n                    <ChangeDrag\n                      title={'Contrast (0.0 to 2.0)'}\n                      value={contracts}\n                      onChange={onChangeContract}\n                    />\n                    <ChangeDrag\n                      title={'Brightness (-1 to 1):'}\n                      value={brightness}\n                      min={-1}\n                      max={1}\n                      onChange={onChangeBrightness}\n                    />\n                  </BoxContentData>\n                  <WrapperButton sx={{ justifyContent: 'flex-end' }}>\n                    <ButtonCanCel onClick={onClose}>Close</ButtonCanCel>\n                  </WrapperButton>\n                </Box>\n              ) : null}\n            </div>\n            {editAttribute && (\n              <WrapperJson>\n                <WrapArea onClick={() => refTextArea.current?.focus?.()}>\n                  <TextArea\n                    ref={refTextArea}\n                    onChange={(event) => onChangeJson(event)}\n                    value={textAttribute}\n                    readOnly={\n                      window.location.pathname === '/projects/new-project'\n                    }\n                  />\n                  <Typography\n                    sx={{ color: 'red', paddingLeft: 1, fontSize: 12 }}\n                  >\n                    {errorAttribute}\n                  </Typography>\n                </WrapArea>\n                <WrapperButton>\n                  <ButtonOk onClick={handleClickOpenSave}>\n                    Save Attributes\n                  </ButtonOk>\n                </WrapperButton>\n              </WrapperJson>\n            )}\n            {!disabled?.right ? (\n              <ButtonNext onClick={onNext}>\n                <ArrowForwardIosIconWrapper />\n              </ButtonNext>\n            ) : null}\n            {!disabled?.left ? (\n              <ButtonPrevious onClick={onPrevious}>\n                <ArrowBackIosIconWrapper />\n              </ButtonPrevious>\n            ) : null}\n          </div>\n          {(!opacity || isLoadFile) && (\n            <BoxLoading>\n              <img\n                src=\"/lib/loading.gif\"\n                alt=\"icon loading\"\n                style={{ width: 80, height: 80 }}\n              />\n            </BoxLoading>\n          )}\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n        <AlertDialog\n          open={openSave}\n          handleClose={handleCloseSave}\n          handleSaveAttributes={handleSaveAttributes}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </Modal>\n  )\n}\n\nconst BoxLoading = styled(Box)({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'rgba(255,255,255, 0.1)',\n  zIndex: 88,\n})\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '10%',\n  right: '10%',\n  zIndex: 9999,\n  background: 'rgba(255,255,255,0.4)',\n})\n\nconst ButtonNext = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  right: '10%',\n  zIndex: 1,\n})\n\nconst ButtonPrevious = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  left: '10%',\n  zIndex: 1,\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst BoxContentData = styled(Box)({\n  margin: '-5px 0 0',\n  padding: '10px',\n  background: '#ffffff',\n})\n\nconst WrapperJson = styled(Box)({\n  minWidth: 300,\n  background: '#ffffff',\n})\n\nconst WrapArea = styled(Box)({\n  height: 'calc(100% - 120px)',\n  borderLeft: '1px solid',\n})\nconst TextArea = styled('textarea')({\n  width: '98%',\n  outline: 'none !important',\n  border: 'none',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nconst ArrowBackIosIconWrapper = styled(ArrowBackIosIcon)({\n  color: '#ffffff',\n  marginLeft: 10,\n})\n\nconst ArrowForwardIosIconWrapper = styled(ArrowForwardIosIcon)({\n  color: '#ffffff',\n})\n\nconst WrapperButton = styled(Box)({\n  display: 'flex',\n  gap: 15,\n  paddingBottom: 20,\n  justifyContent: 'center',\n  marginTop: 60,\n})\n\nconst ButtonOk = styled('button')({\n  padding: '10px 20px',\n  border: '2px solid #000',\n  cursor: 'pointer',\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.2)',\n  },\n})\n\nconst ButtonCanCel = styled('button')({\n  padding: 10,\n  border: '2px solid #000',\n  cursor: 'pointer',\n  background: '#000000c7',\n  color: 'white',\n  marginRight: 10,\n})\n\nexport default ImageView\n","import {\n  DatabaseData,\n  DatabaseListData,\n  DatatypesDatabase,\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n  SubjectDatabase,\n} from 'pages/Database'\nimport { getRawdb } from 'api/rawdb'\n\nexport type OrderKey =\n  | keyof (RecordDatabase | RecordList)\n  | 'subject'\n  | 'session'\n  | 'datatype'\n  | 'image_attributes.image_type'\n  | 'image_attributes.protocol'\n  | 'image_attributes.scale'\n  | 'image_attributes.voxel'\n\nexport const onRowClick = async (\n  datas: DatabaseData | DatabaseListData,\n  row: ImagesDatabase | RecordList,\n  type: 'tree' | 'list' = 'tree',\n) => {\n  const data = await getRawdb(row.id)\n  const view = {\n    open: true,\n    url: row.image_url,\n    id: row.id,\n    session_id: (row as ImagesDatabase).session_id,\n    parent_id: (row as ImagesDatabase).parent_id,\n    jsonData: data,\n    image: row,\n  }\n  const checkNext = onGet(datas, row, false, type)\n  const checkPre = onGet(datas, row, true, type)\n  return { view, checkNext, checkPre }\n}\n\nexport const onGet = (\n  datas: DatabaseData | DatabaseListData,\n  rowClick: ImagesDatabase | RecordList,\n  isSub?: boolean,\n  type: 'tree' | 'list' = 'tree',\n): ImagesDatabase | RecordList | undefined => {\n  if (type === 'tree') {\n    const row = rowClick as ImagesDatabase\n    const dataNow = datas.records[row.record_index || 0] as RecordDatabase\n    const subjectNow = dataNow?.subjects?.[row.subject_index || 0]\n    const sessionNow = subjectNow?.sessions[row.session_index || 0]\n    const datatypeNow = sessionNow?.datatypes[row.datatype_index || 0]\n    if (!isSub) {\n      const imageNext = datatypeNow?.images[(row.image_index || 0) + 1]\n      if (imageNext) {\n        return { ...row, ...imageNext, image_index: (row.image_index || 0) + 1 }\n      }\n      const datatypeNext = sessionNow?.datatypes[(row.datatype_index || 0) + 1]\n      if (datatypeNext) {\n        const images = datatypeNext?.images\n        if (images[0])\n          return {\n            ...row,\n            ...images[0],\n            datatype_index: (row.datatype_index || 0) + 1,\n            image_index: 0,\n          }\n      }\n    } else {\n      const imagePre = datatypeNow?.images[(row.image_index || 0) - 1]\n      if (imagePre) {\n        return { ...row, ...imagePre, image_index: (row.image_index || 0) - 1 }\n      }\n      const datatypeImagePre =\n        sessionNow?.datatypes?.[(row.datatype_index || 0) - 1]\n      if (datatypeImagePre) {\n        const images = datatypeImagePre?.images\n        if (images?.[images.length - 1]) {\n          return {\n            ...row,\n            ...images?.[images.length - 1],\n            datatype_index: (row.datatype_index || 0) - 1,\n            image_index: images.length - 1,\n          }\n        }\n      }\n    }\n  } else {\n    const row = rowClick as RecordList\n    const indexImageNow = datas.records.findIndex(\n      (record) => record.id === row.id,\n    )\n    return datas.records[indexImageNow + (isSub ? -2 : 2)] as RecordList\n  }\n  return undefined\n}\n\nconst sortWithLabName = (\n  datasTable: (RecordDatabase | RecordList)[],\n  orderKey: keyof (RecordDatabase | RecordList),\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return a[orderKey] > b[orderKey] ? -1 : 1\n      }\n      return a[orderKey] < b[orderKey] ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nconst sortSubjectTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort((dataA, dataB) => {\n    const subjectsA = dataA.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    const subjectsB = dataB.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    if (typeOrder === 'DESC') {\n      return subjectsA[0]?.label > subjectsB[0]?.label ? -1 : 1\n    }\n    return subjectsA[0]?.label < subjectsB[0]?.label ? -1 : 1\n  })\n  return newDatas.map((element) => ({\n    ...element,\n    subjects: element.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    }),\n  }))\n}\n\nconst sortSessionTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          const subSessB = subB.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions.sort((ssA, ssB) => {\n            if (typeOrder === 'DESC') {\n              return ssA.label > ssB.label ? -1 : 1\n            }\n            return ssA.label < ssB.label ? -1 : 1\n          }),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortDataTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              const dataTypeB = ssB.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.label > dataTypeB[0]?.label ? -1 : 1\n              }\n              return dataTypeA[0]?.label < dataTypeB[0]?.label ? -1 : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes.sort((typeA, typeB) => {\n                if (typeOrder === 'DESC') {\n                  return typeA.label > typeB.label ? -1 : 1\n                }\n                return typeA.label < typeB.label ? -1 : 1\n              }),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortAttributesTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n  key: string = 'type',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const typeA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.image_attributes[key]?.toString?.() >\n                        imageB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return imageA.image_attributes[key]?.toString?.() <\n                      imageB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.image_attributes[key]?.toString?.() >\n              dataB.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return dataA.image_attributes[key]?.toString?.() <\n            dataB.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n      const typeB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.image_attributes[key]?.toString?.() >\n                        imageB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return imageA.image_attributes[key]?.toString?.() <\n                      imageB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.image_attributes[key]?.toString?.() >\n              dataB.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return dataA.image_attributes[key]?.toString?.() <\n            dataB.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n\n      if (typeOrder === 'DESC') {\n        return typeA[0]?.image_attributes[key]?.toString?.() >\n          typeB[0]?.image_attributes[key]?.toString?.()\n          ? -1\n          : 1\n      }\n      return typeA[0]?.image_attributes[key]?.toString?.() <\n        typeB[0]?.image_attributes[key]?.toString?.()\n        ? -1\n        : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.image_attributes[key]?.toString?.() >\n              subSessB[0]?.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return subSessA[0]?.image_attributes[key]?.toString?.() <\n            subSessB[0]?.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n              const dataTypeB = ssB.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.image_attributes[key]?.toString?.() >\n                  dataTypeB[0]?.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataTypeA[0]?.image_attributes[key]?.toString?.() <\n                dataTypeB[0]?.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes\n                .sort((typeA, typeB) => {\n                  const imageA = typeA.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                  const imageB = typeB.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                  if (typeOrder === 'DESC') {\n                    return imageA[0]?.image_attributes[key]?.toString?.() >\n                      imageB[0]?.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  }\n                  return imageA[0]?.image_attributes[key]?.toString?.() <\n                    imageB[0]?.image_attributes[key]?.toString?.()\n                    ? -1\n                    : 1\n                })\n                .map((type) => ({\n                  ...type,\n                  images: type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  }),\n                })),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortWithKey = (\n  datasTable: RecordList[],\n  orderKey: keyof RecordList,\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  return datasTable.sort((dataA: RecordList, dataB: RecordList) => {\n    let valueA: RecordList | string = dataA\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueA !== 'string') {\n          valueA = valueA?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueA = valueA[orderKey] as string\n\n    let valueB: RecordList | string = dataB\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueB !== 'string') {\n          valueB = valueB?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueB = valueB[orderKey] as string\n    if (typeOrder === 'DESC') {\n      return valueA > valueB ? -1 : 1\n    }\n    return valueA < valueB ? -1 : 1\n  })\n}\n\nconst sortWithTime = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return new Date(a.recording_time) > new Date(b.recording_time) ? -1 : 1\n      }\n      return new Date(a.recording_time) < new Date(b.recording_time) ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nexport const onSort = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC' | '',\n  orderKey: OrderKey,\n  type: string = 'tree',\n): (RecordDatabase | RecordList)[] => {\n  if (!typeOrder) return datasTable\n  let newDatas = datasTable\n  if (type === 'tree') {\n    if (['lab_name', 'user_name'].includes(orderKey)) {\n      newDatas = sortWithLabName(\n        datasTable,\n        orderKey as 'lab_name' | 'user_name',\n        typeOrder,\n      )\n    } else if (orderKey === 'recording_time') {\n      newDatas = sortWithTime(datasTable, typeOrder)\n    } else if (orderKey === 'subject' && type === 'tree') {\n      newDatas = sortSubjectTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'session' && type === 'tree') {\n      newDatas = sortSessionTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'datatype' && type === 'tree') {\n      newDatas = sortDataTypeTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'image_attributes.image_type' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n      )\n    } else if (orderKey === 'image_attributes.protocol' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'protocol',\n      )\n    } else if (orderKey === 'image_attributes.voxel' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'voxel',\n      )\n    } else if (orderKey === 'image_attributes.scale' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'scale',\n      )\n    }\n  } else {\n    newDatas = sortWithKey(\n      datasTable as RecordList[],\n      orderKey as keyof RecordList,\n      typeOrder,\n    )\n  }\n  return newDatas\n}\n\nexport const onFilterValue = (\n  value: { [key: string]: string },\n  setDatabases: (value: any) => void,\n  initDataTable: DatabaseData,\n  type: 'tree' | 'list',\n) => {\n  if (!Object.keys(value).some((key) => value[key])) {\n    setDatabases(initDataTable)\n    return\n  }\n  if (type === 'list') {\n    const arrFilter = initDataTable.records.filter((item: any) => {\n      return !Object.keys(value).some((key: string) => {\n        if (!value[key]) return false\n        if (key === 'protocol') {\n          return !item.image_attributes[key]\n            ?.toLowerCase()\n            .includes(value[key].toLowerCase?.())\n        }\n        return !item[key]?.includes(value[key].toLowerCase?.())\n      })\n    })\n    setDatabases({\n      pagenation: {\n        page: 0,\n        limit: 0,\n        total: 0,\n        total_pages: 0,\n      },\n      records: arrFilter,\n    })\n    return\n  }\n  const newRecords = initDataTable.records.reduce(\n    (arrRecord: RecordDatabase[], record) => {\n      const subjects = record.subjects.reduce(\n        (arrSub: SubjectDatabase[], subject) => {\n          const sessions = subject.sessions.reduce(\n            (arrSess: SessionsDatabase[], session) => {\n              if (\n                session.label\n                  ?.toLowerCase()\n                  ?.includes((value.session_label || '')?.toLowerCase())\n              ) {\n                const datatypes = session.datatypes.reduce(\n                  (arrDt: DatatypesDatabase[], dt) => {\n                    if (\n                      dt.label\n                        ?.toLowerCase()\n                        ?.includes((value.datatypes_label || '')?.toLowerCase())\n                    ) {\n                      const images = dt.images.filter((image) => {\n                        const { image_type, protocol } = image.image_attributes\n                        return (\n                          (image_type as string)\n                            ?.toLowerCase()\n                            .includes((value.type || '').toLowerCase()) &&\n                          (protocol as string)\n                            ?.toLowerCase()\n                            .includes((value.protocol || '').toLowerCase())\n                        )\n                      })\n                      if (images.length) {\n                        arrDt.push({ ...dt, images })\n                      }\n                    }\n                    return arrDt\n                  },\n                  [],\n                )\n                if (datatypes.length) {\n                  arrSess.push({ ...session, datatypes })\n                }\n              }\n              return arrSess\n            },\n            [],\n          )\n          if (sessions.length) {\n            arrSub.push({ ...subject, sessions })\n          }\n          return arrSub\n        },\n        [],\n      )\n      if (subjects.length) {\n        arrRecord.push({ ...record, subjects })\n      }\n      return arrRecord\n    },\n    [],\n  )\n  setDatabases({\n    pagenation: {\n      page: 0,\n      limit: 0,\n      total: 0,\n      total_pages: 0,\n    },\n    records: newRecords,\n  })\n  return\n}\n","import { Box, Button, IconButton, styled, TextField } from '@mui/material'\nimport { ChangeEvent, useCallback, useEffect, useState } from 'react'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ImageView from 'components/ImageView'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport {\n  onFilterValue,\n  onGet,\n  onRowClick,\n  onSort,\n  OrderKey,\n} from 'utils/database'\nimport { User, useUser } from 'providers'\nimport { isReseacher } from 'utils/auth'\nimport { getDataBaseList, getDataBaseTree } from 'api/rawdb'\nimport { DATABASE_URL_HOST } from 'const/API'\nimport Loading from 'components/common/Loading'\nimport { useSearchParams } from 'react-router-dom'\n\ntype PopupSearchProps = {\n  onClose?: () => any\n  onFilter?: (values: { [key: string]: string }) => any\n  defaultValue?: { [key: string]: string }\n}\n\nexport const PopupSearch = ({\n  onClose,\n  defaultValue = {},\n  onFilter,\n}: PopupSearchProps) => {\n  const [values, setValues] = useState(defaultValue)\n\n  const handleFilter = () => {\n    onFilter?.(values)\n    onClose?.()\n  }\n\n  const onChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    setValues({ ...values, [event.target.name]: event.target.value })\n  }\n\n  return (\n    <Popup>\n      <PopupInner>\n        <HeaderTitle>\n          <span>Filter</span>\n          <ButtonControl onClick={onClose}>\n            <CloseIcon />\n          </ButtonControl>\n        </HeaderTitle>\n        <InputSearch\n          onChange={onChange}\n          name={'session_label'}\n          label=\"Session\"\n          variant=\"outlined\"\n          value={values.session_label}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'datatypes_label'}\n          label=\"Datatype\"\n          variant=\"outlined\"\n          value={values.datatypes_label}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'type'}\n          label=\"Type\"\n          variant=\"outlined\"\n          value={values.type}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'protocol'}\n          label=\"Protocol\"\n          variant=\"outlined\"\n          value={values.protocol}\n        />\n        <Button variant=\"contained\" onClick={handleFilter}>\n          Filter\n        </Button>\n      </PopupInner>\n    </Popup>\n  )\n}\n\nexport type ObjectType = {\n  [key: string]: ObjectType | string | number | number[]\n}\n\nexport type Image = {\n  id: number\n  parent_id: number\n  session_id: number\n  label: string\n  image: {\n    id: number\n    parent_id: number\n    image_url: string\n    image_attributes: ObjectType\n  }\n}\n\nexport type Viewer = {\n  open: boolean\n  url: string\n  jsonData?: ObjectType\n  id?: number | string\n  session_id?: number\n  parent_id?: string\n  image?: ImagesDatabase | RecordList\n}\n\nexport type ImagesDatabase = {\n  id: number\n  parent_id: string\n  image_url: string\n  datatype_label?: string\n  type?: string\n  image_attributes: ObjectType\n  session_id?: number\n  record_index?: number\n  subject_index?: number\n  session_index?: number\n  datatype_index?: number\n  image_index?: number\n}\n\nexport type DatatypesDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  images: ImagesDatabase[]\n}\n\nexport type SessionsDatabase = {\n  id: string\n  parent_id: string\n  session_index?: number\n  label: string\n  datatypes: DatatypesDatabase[]\n  subject_index?: number\n}\n\nexport type SubjectDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  sessions: SessionsDatabase[]\n  subject_index?: number\n}\n\nexport type RecordDatabase = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  created_time: string\n  updated_time: string\n  subjects: SubjectDatabase[]\n}\n\nexport type DatabaseData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordDatabase[]\n}\n\nexport type RecordList = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  subject_label: string\n  session_label: string\n  datatypes_label: string\n  image_id: number\n  image_url: string\n  image_attributes: {\n    size: number[]\n    type: string\n    protocol: string\n    voxel_size: number[]\n  }\n  created_time: string\n  updated_time: string\n}\n\nexport type DatabaseListData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordList[]\n}\n\nexport const defaultDatabase: DatabaseData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [],\n}\n\nexport const columns = (\n  rowClick: Function,\n  setOpenDelete: Function,\n  type: 'tree' | 'list' = 'tree',\n  user?: User,\n): Column[] => [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true, width: 110 },\n  {\n    title: 'Subject',\n    name: type === 'tree' ? 'subject' : 'subject_label',\n    filter: true,\n  },\n  {\n    title: 'Session',\n    name: type === 'tree' ? 'session' : 'session_label',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Datatype',\n    name: type === 'tree' ? 'datatype' : 'datatypes_label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Type',\n    name: 'image_attributes.image_type',\n    filter: true,\n    width: 70,\n  },\n  {\n    title: 'Protocol',\n    name: 'image_attributes.protocol',\n    filter: true,\n  },\n  {\n    title: 'Size',\n    name: 'image_attributes.scale',\n    filter: true,\n    render: (_, v) => JSON.stringify(v),\n  },\n  {\n    title: 'Voxel size',\n    name: 'image_attributes.voxel',\n    filter: true,\n    width: 130,\n    render: (_, v) => JSON.stringify(v),\n  },\n  {\n    title: '',\n    name: 'action',\n    render: (data) => {\n      if (isReseacher(user?.role)) return null\n      return (\n        <BoxButton>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              rowClick?.(data)\n            }}\n          >\n            <EditIcon fontSize=\"small\" color={'inherit'} />\n          </ButtonControl>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              setOpenDelete?.(true)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </ButtonControl>\n        </BoxButton>\n      )\n    },\n  },\n]\n\nconst Database = () => {\n  const [openPopup, setOpenPopup] = useState(false)\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [databases, setDatabases] = useState<DatabaseData | DatabaseListData>()\n  const [openDelete, setOpenDelete] = useState(false)\n  const [{ orderBy, type, columnSort }, setOrderByAndTypeAndSort] = useState<{\n    orderBy: 'ASC' | 'DESC' | ''\n    type: 'tree' | 'list'\n    columnSort: string\n  }>({ orderBy: '', type: 'tree', columnSort: '' })\n\n  // const [columnSort, setColumnSort] = useState<string>('')\n  const [initDataTable, setInitDataTable] =\n    useState<DatabaseData>(defaultDatabase)\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [isLoading, setIsLoading] = useState(false)\n  const { user } = useUser()\n  const [searchParams, setParams] = useSearchParams()\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const fetchData = useCallback(async () => {\n    const defaultValue = {\n      session_label: searchParams.get('session_label') || '',\n      datatypes_label: searchParams.get('datatypes_label') || '',\n      type: searchParams.get('type') || '',\n      protocol: searchParams.get('protocol') || '',\n    }\n    setIsLoading(true)\n    let data\n    try {\n      data = type === 'tree' ? await getDataBaseTree() : await getDataBaseList()\n      onFilterValue(defaultValue, setDatabases, data, type)\n      setInitDataTable(data)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [type, searchParams])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  const rowClick = async (row: ImagesDatabase | RecordList) => {\n    if (!databases) return\n    const { view, checkNext, checkPre } = await onRowClick(databases, row, type)\n    setViewer(view)\n    setDisabled({\n      left: type === 'list' || !checkPre,\n      right: type === 'list' || !checkNext,\n    })\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    if (!databases) return\n\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDataTable.records)),\n      orderByValue,\n      orderKey as OrderKey,\n      type,\n    )\n    setDatabases({ ...databases, records: data as any })\n    setOrderByAndTypeAndSort((pre) => ({\n      ...pre,\n      orderBy: orderByValue,\n      columnSort: orderKey,\n    }))\n  }\n\n  const onNext = async () => {\n    if (!viewer.image) return\n    const imageNext = onGet(databases as any, viewer.image, false, type)\n    if (imageNext) await rowClick(imageNext)\n  }\n\n  const onPrevious = async () => {\n    if (!viewer.image || !databases) return\n    const imagePre = onGet(databases, viewer.image, true, type)\n    if (imagePre) await rowClick(imagePre)\n  }\n\n  const onFilter = (value: { [key: string]: string }) => {\n    if (!databases) return\n    onFilterValue(value, setDatabases, initDataTable, type)\n    if (!Object.keys(value).length) return\n    const newParams = Object.keys(value)\n      .map((key) => value[key] && `${key}=${value[key]}`)\n      .join('&')\n    setParams(newParams)\n  }\n\n  const setType = (type: 'tree' | 'list') => {\n    setOrderByAndTypeAndSort({ type, orderBy: '', columnSort: '' })\n  }\n\n  return (\n    <DatabaseWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Image\"\n        description={`Are you sure delete?\\n`}\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ProjectsTitle>\n        <span>Database</span>\n        <ButtonFilter\n          onClick={() => setOpenPopup(true)}\n          style={{ margin: '0 26px 0 0' }}\n        >\n          Filter\n        </ButtonFilter>\n      </ProjectsTitle>\n      <BoxSelectTypeView>\n        <Box\n          onClick={() => setType('tree')}\n          style={{\n            marginRight: 4,\n            fontWeight: type === 'tree' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'tree' ? '' : '#4687f4',\n          }}\n        >\n          Tree\n        </Box>\n        /\n        <Box\n          onClick={() => setType('list')}\n          style={{\n            marginLeft: 4,\n            fontWeight: type === 'list' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'list' ? '' : '#4687f4',\n          }}\n        >\n          List\n        </Box>\n      </BoxSelectTypeView>\n      {openPopup && (\n        <PopupSearch\n          onClose={() => setOpenPopup(false)}\n          defaultValue={{\n            session_label: searchParams.get('session_label') || '',\n            datatypes_label: searchParams.get('datatypes_label') || '',\n            type: searchParams.get('type') || '',\n            protocol: searchParams.get('protocol') || '',\n          }}\n          onFilter={onFilter}\n        />\n      )}\n      <DatabaseTableComponent\n        addProject={false}\n        defaultExpand\n        onSort={handleSort}\n        rowClick={rowClick}\n        orderKey={columnSort}\n        orderBy={orderBy}\n        data={databases && databases.records}\n        columns={columns(rowClick, setOpenDelete, type, user)}\n      />\n      {viewer.url && viewer.open && (\n        <ImageView\n          disabled={disabled}\n          url={`${DATABASE_URL_HOST}${viewer.url}`}\n          open={viewer.open}\n          jsonData={viewer.jsonData}\n          onClose={onCloseImageView}\n          onNext={onNext}\n          onPrevious={onPrevious}\n          id={Number(viewer.id)}\n        />\n      )}\n      {isLoading && <Loading />}\n    </DatabaseWrapper>\n  )\n}\n\nconst DatabaseWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst HeaderTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst Popup = styled(Box)(() => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n  zIndex: 9999,\n}))\n\nconst PopupInner = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2, 3),\n  backgroundColor: '#fff',\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n}))\n\nconst InputSearch = styled(TextField)(() => ({\n  minWidth: 250,\n}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ButtonControl = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0, 1),\n  width: 30,\n  height: 30,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst ProjectsTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst BoxSelectTypeView = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 16,\n})\n\nexport default Database\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { getMe, login } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { saveExToken, saveRefreshToken, saveToken } from 'utils/auth'\nimport Loading from '../../components/common/Loading'\n\nconst Login = () => {\n  const { setUser } = useUser()\n  const navigate = useNavigate()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n    try {\n      const { access_token, ex_token, refresh_token } = await login(values)\n      saveToken(access_token)\n      saveRefreshToken(refresh_token)\n      saveExToken(ex_token)\n      getUser()\n    } catch (e) {\n      setErrors({ email: 'Email or password is wrong', password: '' })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const getUser = async () => {\n    const data = await getMe()\n    setUser(data)\n    navigate('/')\n  }\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">\n              {errors.password}\n            </TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {isLoading && <Loading />}\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { createSlice } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Project } from './ProjectType'\nimport { getProjectList, getProjectId } from './ProjectAction'\n\nconst initialState: Project = {\n  projects: [],\n  currentProject: undefined,\n}\n\nexport const projectSlice = createSlice({\n  name: PROJECT_SLICE_NAME,\n  initialState,\n  reducers: {\n    resetCurrentProject: (state) => {\n      state.currentProject = undefined\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getProjectList.fulfilled, (state, action) => {\n      state.projects = action.payload.projects\n    })\n    builder.addCase(getProjectId.fulfilled, (state, action) => {\n      state.currentProject = action.payload\n    })\n  },\n})\n\nexport const { resetCurrentProject } = projectSlice.actions\nexport default projectSlice.reducer\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  styled,\n  Typography,\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport React, {\n  useState,\n  DragEvent,\n  Fragment,\n  useRef,\n  CSSProperties,\n  useEffect,\n  useMemo,\n} from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport {\n  DatabaseData,\n  defaultDatabase,\n  ImagesDatabase,\n  PopupSearch,\n  Viewer,\n} from '../Database'\nimport ImageView from 'components/ImageView'\nimport {\n  onFilterValue,\n  onGet,\n  onRowClick,\n  onSort,\n  OrderKey,\n} from 'utils/database'\nimport { ObjectType } from '../Database'\nimport { ChangeEvent } from 'react'\nimport { RecordDatabase } from '../Database'\nimport { useDispatch } from 'react-redux'\nimport { getDatasetList } from 'store/slice/Dataset/DatasetAction'\nimport { ProjectTypeValue } from 'store/slice/Project/ProjectType'\nimport {\n  createProject,\n  editProject,\n  getProjectId,\n} from 'store/slice/Project/ProjectAction'\nimport Loading from 'components/common/Loading'\nimport { getDataBaseTree } from 'api/rawdb'\nimport { DATABASE_URL_HOST } from 'const/API'\nimport {\n  getUrlFromSubfolder,\n  selectDataset,\n} from 'store/slice/Dataset/DatasetSelector'\nimport { useSelector } from 'react-redux'\nimport { Dataset } from 'store/slice/Dataset/DatasetType'\nimport { selectCurrentProject } from 'store/slice/Project/ProjectSelector'\nimport { resetCurrentProject } from 'store/slice/Project/ProjectSlice'\nimport { reset } from 'store/slice/Dataset/DatasetSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { setLoadingExpriment } from 'store/slice/Experiments/ExperimentsSlice'\nimport { getDatasetListApi } from 'api/dataset'\n\nconst columns: Column[] = [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true, width: 100 },\n  { title: 'Date', name: 'recording_time', filter: true, width: 130 },\n  { title: 'Subject', name: 'subject', filter: true, width: 120 },\n  {\n    title: 'Session',\n    name: 'session',\n    child: 'label',\n    filter: true,\n    width: 190,\n  },\n  {\n    title: 'Datatype',\n    name: 'datatype',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Type',\n    name: 'image_attributes.image_type',\n    filter: true,\n    width: 70,\n  },\n  {\n    title: 'Protocol',\n    name: 'image_attributes.protocol',\n    filter: true,\n  },\n  {\n    title: 'Size',\n    name: 'image_attributes.scale',\n    filter: true,\n    render: (_, value) => JSON.stringify(value),\n  },\n  {\n    title: 'Voxel size',\n    name: 'image_attributes.voxel',\n    filter: true,\n    width: 110,\n    render: (_, value) => JSON.stringify(value),\n  },\n]\n\ntype ProjectAdd = {\n  project_name?: string\n  project_type?: string\n  image_count: number\n  image_url: string\n  protocol: string\n  id: string\n  image_id: number\n  jsonData: ObjectType\n}\n\ntype DataWithin = {\n  id: string\n  data: ProjectAdd[]\n  name: string\n}\n\ntype DataFactor = {\n  within: DataWithin[]\n} & DataWithin\n\nconst nameDefault = 'DEFAULT'\n\nconst defaultFactor = [\n  { name: nameDefault, within: [], id: getNanoId(), data: [] },\n]\n\nconst remapDatasetToDataFactor = ({\n  dataset,\n}: Dataset): { datasets: DataFactor[]; ids: number[] } => {\n  if (!dataset) return { ids: [], datasets: defaultFactor }\n  let ids: number[] = []\n  const datasets = dataset.map((sub) => ({\n    id: sub.id,\n    name: sub.folder_name || nameDefault,\n    within: (sub.sub_folders || []).map((sub_within) => ({\n      id: sub_within.id,\n      name: sub_within.folder_name,\n      data: (sub_within.images || []).map((image) => {\n        ids.push(image.id)\n        return {\n          project_name: image.attributes.datatype as string,\n          project_type: image.attributes.image_type as string,\n          id: String(image.id),\n          image_count: 1,\n          image_id: image.id,\n          protocol: image.attributes.protocol as string,\n          image_url: image.image_url,\n          jsonData: image.attributes,\n        }\n      }),\n    })),\n    data: (sub.images || []).map((image) => {\n      ids.push(image.id)\n      return {\n        project_name: image.attributes.datatype as string,\n        project_type: image.attributes.image_type as string,\n        id: String(image.id),\n        image_count: 1,\n        image_id: image.id,\n        protocol: image.attributes.protocol as string,\n        image_url: image.image_url,\n        jsonData: image.attributes,\n      }\n    }),\n  }))\n  return { ids, datasets }\n}\n\nconst ProjectFormComponent = () => {\n  const [searchParams, setParams] = useSearchParams()\n  const idEdit = searchParams.get('id')\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [loading, setLoading] = useState<boolean>(false)\n  const routeGoback = searchParams.get('back')\n  const nodeId = searchParams.get('nodeId')\n  const isPendingDrag = useRef(false)\n  const dispatch = useDispatch()\n\n  const dataset = useSelector(selectDataset)\n  const currentProject = useSelector(selectCurrentProject)\n\n  const [databasese, setDatabases] = useState<DatabaseData>(defaultDatabase)\n  const [initDatabase, setInitDatabase] =\n    useState<DatabaseData>(defaultDatabase)\n  const [projectName, setProjectName] = useState(\n    currentProject?.project_name || 'Prj Name 1',\n  )\n  const [projectType, setProjectType] = useState<ProjectTypeValue>(\n    currentProject?.project_type || ProjectTypeValue.FACTOR,\n  )\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [openFilter, setOpenFilter] = useState(false)\n  const [rowDrag, setRowDrag] = useState<ImagesDatabase | ImagesDatabase[]>()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const { datasets, ids } = useMemo(() => remapDatasetToDataFactor(dataset), [])\n  const [dataFactors, setDataFactors] = useState<DataFactor[]>(datasets)\n  const [imageIDs, setImageIDs] = useState<number[]>(ids)\n\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n\n  useEffect(() => {\n    if (!idEdit) return\n    setLoading(true)\n    dispatch(getDatasetList({ project_id: idEdit }))\n    dispatch(\n      getProjectId({\n        project_id: idEdit,\n        callback: () => setLoading(false),\n      }),\n    )\n    return () => {\n      dispatch(resetCurrentProject())\n      dispatch(reset())\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    const { datasets, ids } = remapDatasetToDataFactor(dataset)\n    setDataFactors(datasets)\n    setImageIDs(ids)\n  }, [dataset])\n\n  useEffect(() => {\n    if (currentProject?.project_name) {\n      setProjectName(currentProject?.project_name)\n    }\n  }, [currentProject?.project_name])\n\n  useEffect(() => {\n    if (typeof currentProject?.project_type === 'number') {\n      setProjectType(currentProject.project_type)\n    }\n  }, [currentProject?.project_type])\n\n  useEffect(() => {\n    getDataTree().then()\n    //eslint-disable-next-line\n  }, [])\n\n  const onFilter = (value: { [key: string]: string }) => {\n    if (!initDatabase) return\n    onFilterValue(value, setDatabases, initDatabase, 'tree')\n    if (!Object.keys(value).length) return\n    const newParams = Object.keys(value)\n      .map((key) => value[key] && `${key}=${value[key]}`)\n      .join('&')\n    setParams(newParams)\n  }\n\n  const getDataTree = async () => {\n    try {\n      const response = await getDataBaseTree()\n      setDatabases(response)\n      setInitDatabase(response)\n    } catch {}\n  }\n\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n    setProjectName(e.target.value)\n  }\n\n  const handleChangeLevel = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const type = Number(event.target.value) as ProjectTypeValue\n    setProjectType(type)\n    let within: DataWithin[] = []\n    if (type === ProjectTypeValue.WITHIN_FACTOR) {\n      within = [{ name: nameDefault, id: getNanoId(), data: [] }]\n    }\n    setImageIDs([])\n    setDataFactors([{ name: nameDefault, within, id: getNanoId(), data: [] }])\n  }\n\n  const onAddBetween = () => {\n    setDataFactors((pre) => [\n      ...pre,\n      { name: nameDefault, within: [], id: getNanoId(), data: [] },\n    ])\n  }\n\n  const onAddWithin = (idFactor: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === idFactor) {\n          return {\n            ...p,\n            within: [\n              ...p.within,\n              { name: nameDefault, within: [], id: getNanoId(), data: [] },\n            ],\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteFactor = (row: DataFactor) => {\n    setImageIDs((pre) =>\n      pre.filter((id) => {\n        if (projectType === ProjectTypeValue.FACTOR) {\n          return !row.data.find((rowData) => rowData.image_id === id)\n        }\n        return !row.within.find((w) => w.data.find((d) => d.image_id === id))\n      }),\n    )\n    setDataFactors((pre) => pre.filter((e) => e.id !== row.id))\n  }\n\n  const onDeleteWithin = (factor: DataFactor, row: DataWithin) => {\n    setImageIDs((pre) =>\n      pre.filter((id) => !row.data.find((rowData) => rowData.image_id === id)),\n    )\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, within: p.within.filter((w) => w.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataWithin = (\n    factor: DataFactor,\n    within: DataWithin,\n    row: ProjectAdd,\n  ) => {\n    setImageIDs((pre) => pre.filter((id) => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, data: w.data.filter((d) => d.id !== row.id) }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataFactor = (factor: DataFactor, row: ProjectAdd) => {\n    setImageIDs((pre) => pre.filter((id) => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, data: p.data.filter((d) => d.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDragRow = (row: ImagesDatabase[] = []) => {\n    setRowDrag(row)\n  }\n\n  const onBeginDrag = () => {\n    isPendingDrag.current = true\n    const mouseup = () => {\n      isPendingDrag.current = false\n      window.removeEventListener('mouseup', mouseup)\n    }\n    window.addEventListener('mouseup', mouseup)\n  }\n\n  const onDragEnd = () => {\n    setRowDrag(undefined)\n  }\n\n  const onMouseOver = (factor: DataFactor, within?: DataWithin) => {\n    if (isPendingDrag.current) return\n    onDropData(factor, within)\n    setRowDrag(undefined)\n  }\n\n  const onDropData = (factor: DataFactor, within?: DataWithin) => {\n    if (!Array.isArray(rowDrag) && !rowDrag?.image_url) {\n      return\n    }\n    let newData: ProjectAdd[] = []\n    const checkExistIdImage =\n      imageIDs.length &&\n      imageIDs.some((id) => {\n        if (!Array.isArray(rowDrag)) return rowDrag.id === id\n        return rowDrag.some((row) => row.id === id)\n      })\n    if (checkExistIdImage) {\n      return alert('Duplicate images cannot be registered.')\n    }\n    const newIds = Array.isArray(rowDrag)\n      ? rowDrag.map((row) => row.id)\n      : [rowDrag.id]\n    setImageIDs([...imageIDs, ...newIds])\n    if (!Array.isArray(rowDrag)) {\n      newData = [\n        {\n          id: getNanoId(),\n          project_name: rowDrag.datatype_label,\n          image_count: 1,\n          image_id: rowDrag.id,\n          project_type: rowDrag.image_attributes.image_type as string,\n          protocol: rowDrag.image_attributes.protocol as string,\n          image_url: rowDrag?.image_url,\n          jsonData: rowDrag?.image_attributes,\n        },\n      ]\n    } else if (Array.isArray(rowDrag)) {\n      newData = rowDrag.map((row) => ({\n        id: getNanoId(),\n        project_name: row.datatype_label,\n        image_count: 1,\n        image_id: row.id,\n        project_type: row.image_attributes.image_type as string,\n        protocol: row.image_attributes.protocol as string,\n        image_url: row?.image_url,\n        jsonData: row?.image_attributes,\n      }))\n    }\n    if (projectType === ProjectTypeValue.FACTOR) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return { ...p, data: [...p.data, ...newData] }\n          }\n          return p\n        }),\n      )\n      return\n    }\n    if (within) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return {\n              ...p,\n              within: p.within.map((w) => {\n                if (w.id === within.id) {\n                  return { ...w, data: [...w.data, ...newData] }\n                }\n                return w\n              }),\n            }\n          }\n          return p\n        }),\n      )\n    }\n  }\n\n  const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onDragLeave = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onChangeNameFactor = (factor: DataFactor, value: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, name: value }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onChangeNameWithinFactor = (\n    factor: DataFactor,\n    within: DataWithin,\n    value: string,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, name: value }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const renderData = (\n    data: ProjectAdd[],\n    style?: CSSProperties,\n    onDelete?: (row: ProjectAdd) => void,\n  ) => {\n    return data.map((e, index) => (\n      <BoxItem\n        key={`${e.id}_${index}`}\n        style={style}\n        onClick={() => rowDataClick(e)}\n      >\n        <TypographyBoxItem>{e.project_name}</TypographyBoxItem>\n        <TypographyBoxItem>{e.project_type}</TypographyBoxItem>\n        <TypographyBoxItem>{e.protocol}</TypographyBoxItem>\n        <Box style={{ display: 'flex', justifyContent: 'flex-end', width: 64 }}>\n          <Button\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              onDelete?.(e)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </Button>\n        </Box>\n      </BoxItem>\n    ))\n  }\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const rowClick = async (row: ImagesDatabase) => {\n    const { view, checkNext, checkPre } = await onRowClick(databasese, row)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const rowDataClick = (row: ProjectAdd) => {\n    if (!row?.image_url || !timeoutClick.current) {\n      timeoutClick.current = setTimeout(() => {\n        timeoutClick.current = undefined\n      }, 300)\n      return\n    }\n    setViewer({\n      open: true,\n      url: row.image_url,\n      jsonData: row.jsonData,\n    })\n    setDisabled({ left: true, right: true })\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDatabase.records)),\n      orderByValue,\n      orderKey as OrderKey,\n    )\n    setDatabases({ ...databasese, records: data as RecordDatabase[] })\n    setColumnSort(orderKey)\n    setOrdeBy(orderByValue)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(databasese, viewer.image, false)\n    if (imageNext) rowClick(imageNext as ImagesDatabase)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(databasese, viewer.image, true)\n    if (imagePre) rowClick(imagePre as ImagesDatabase)\n  }\n\n  const onCancle = () => {\n    if (routeGoback) {\n      navigate(`${routeGoback}&id=${idEdit}`, { state: { edited: true } })\n      dispatch(setLoadingExpriment({ loading: false }))\n    } else {\n      navigate('/projects')\n    }\n  }\n\n  const generateName = (name: string, index: number, subject: string) => {\n    if (name === nameDefault) {\n      return `${subject} factor name ${index}`\n    }\n    return name\n  }\n\n  const getBorderDrag = (): string => {\n    if (\n      (Array.isArray(rowDrag) && rowDrag.length) ||\n      (!Array.isArray(rowDrag) && !!rowDrag)\n    ) {\n      return '1px dashed red'\n    }\n    return ''\n  }\n\n  const onOk = async () => {\n    setLoading(true)\n    const project = {\n      project_name: projectName,\n      project_type: projectType,\n    }\n    const dataset = dataFactors.map((factor, index) => ({\n      folder_name: generateName(factor.name, index, 'Between'),\n      source_image_ids: factor.data.map((d) => d.image_id),\n      sub_folders: factor.within.map((within, iWithin) => ({\n        folder_name: generateName(within.name, iWithin, 'Within'),\n        source_image_ids: within.data.map((d) => d.image_id),\n      })),\n    }))\n    if (idEdit) {\n      dispatch(\n        editProject({\n          project,\n          project_id: idEdit,\n          dataset,\n          callback: async (isSuccess: boolean) => {\n            if (isSuccess) {\n              if (nodeId) {\n                const response = await getDatasetListApi(idEdit)\n                let urls: { id: string | number; url: string }[] = []\n                getUrlFromSubfolder(response.records, urls)\n                await Promise.all([\n                  dispatch(setInputNodeFilePath({ nodeId, filePath: urls.map(({ url }) => url) })),\n                  dispatch(getDatasetList({ project_id: idEdit })),\n                  dispatch(setLoadingExpriment({ loading: false })),\n                ])\n                if (routeGoback) {\n                  navigate(`${routeGoback}&id=${idEdit}`, {\n                    state: { edited: true },\n                  })\n                }\n              } else {\n                onCancle()\n              }\n            }\n            setLoading(false)\n          },\n        }),\n      )\n    } else {\n      dispatch(\n        createProject({\n          project,\n          dataset,\n          callback: (isSuccess: boolean) => {\n            if (isSuccess) {\n              return onCancle()\n            }\n            setLoading(false)\n          },\n        }),\n      )\n    }\n  }\n\n  return (\n    <ProjectsWrapper>\n      {openFilter && (\n        <PopupSearch\n          defaultValue={{\n            session_label: searchParams.get('session_label') || '',\n            datatypes_label: searchParams.get('datatypes_label') || '',\n            type: searchParams.get('type') || '',\n            protocol: searchParams.get('protocol') || '',\n          }}\n          onFilter={onFilter}\n          onClose={() => setOpenFilter(false)}\n        />\n      )}\n      {viewer.url && viewer.open && (\n        <ImageView\n          editAttribute={false}\n          disabled={disabled}\n          url={viewer.url && `${DATABASE_URL_HOST}${viewer.url}`}\n          open={viewer.open}\n          jsonData={viewer.jsonData}\n          onClose={onCloseImageView}\n          onNext={onNext}\n          onPrevious={onPrevious}\n          id={Number(viewer.id)}\n        />\n      )}\n      {isEditName ? (\n        <InputName\n          autoFocus\n          onBlur={() => setIsEditName(false)}\n          value={projectName}\n          onChange={onChangeName}\n        />\n      ) : (\n        <TextName onClick={() => setIsEditName(true)}>{projectName}</TextName>\n      )}\n      <BoxOptions\n        aria-labelledby=\"demo-radio-buttons-group-label\"\n        value={projectType}\n        name=\"radio-buttons-group\"\n        onChange={handleChangeLevel}\n      >\n        <Box>\n          <Box>\n            <FormControlLabel\n              value={ProjectTypeValue.FACTOR}\n              control={<Radio />}\n              label=\"Between factor\"\n              disabled={!!idEdit}\n            />\n          </Box>\n          <FormControlLabel\n            value={ProjectTypeValue.WITHIN_FACTOR}\n            control={<Radio />}\n            label=\"Between factor-within factor\"\n            disabled={!!idEdit}\n          />\n        </Box>\n      </BoxOptions>\n      <DropAndDropBox>\n        <DragBox>\n          {dataFactors.map((factor, index) => {\n            return (\n              <Fragment key={factor.id}>\n                <BoxFactor>\n                  <Input\n                    onChange={(e) => onChangeNameFactor(factor, e.target.value)}\n                    style={{ width: 'calc(100% - 64px)' }}\n                    value={generateName(factor.name, index, 'Between')}\n                  />\n                  <Button onClick={() => onDeleteFactor(factor)}>\n                    <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                  </Button>\n                  {projectType === ProjectTypeValue.WITHIN_FACTOR ? (\n                    factor.within.map((within, iWithin) => (\n                      <BoxFactor key={within.id} style={{ marginLeft: 24 }}>\n                        <Input\n                          onChange={(e) => {\n                            const { value } = e.target\n                            onChangeNameWithinFactor(factor, within, value)\n                          }}\n                          style={{ width: 'calc(100% - 64px)' }}\n                          value={generateName(within.name, iWithin, 'Within')}\n                        />\n                        <Button onClick={() => onDeleteWithin(factor, within)}>\n                          <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                        </Button>\n                        {renderData(within.data, { marginLeft: 48 }, (row) => {\n                          onDeleteDataWithin(factor, within, row)\n                        })}\n                        <BoxDrag\n                          style={{ borderBottom: getBorderDrag() }}\n                          onDrop={() => onDropData(factor, within)}\n                          onMouseOver={() => onMouseOver(factor, within)}\n                          onDragOver={onDragOver}\n                          onDragLeave={onDragLeave}\n                        />\n                      </BoxFactor>\n                    ))\n                  ) : (\n                    <>\n                      {renderData(factor.data, { marginLeft: 24 }, (row) => {\n                        onDeleteDataFactor(factor, row)\n                      })}\n                      <BoxDrag\n                        style={{ borderBottom: getBorderDrag() }}\n                        onDrop={() => onDropData(factor)}\n                        onDragOver={onDragOver}\n                        onDragLeave={onDragLeave}\n                        onMouseOver={() => onMouseOver(factor)}\n                      />\n                    </>\n                  )}\n                </BoxFactor>\n                {projectType === ProjectTypeValue.WITHIN_FACTOR &&\n                dataFactors.length ? (\n                  <NewRowButton\n                    onClick={() => onAddWithin(factor.id)}\n                    style={{ marginLeft: 24 }}\n                  >\n                    + Add Within Factor\n                  </NewRowButton>\n                ) : null}\n              </Fragment>\n            )\n          })}\n          <NewRowButton onClick={onAddBetween}>\n            + Add Between Factor\n          </NewRowButton>\n        </DragBox>\n        <DropBox>\n          <BoxFilter>\n            <ButtonFilter\n              onClick={() => setOpenFilter(true)}\n              style={{ margin: '0 26px 0 0' }}\n            >\n              Filter\n            </ButtonFilter>\n          </BoxFilter>\n          <DatabaseTableComponent\n            addProject={true}\n            onSort={handleSort}\n            orderKey={columnSort}\n            orderBy={orderBy}\n            rowClick={rowClick}\n            defaultExpand\n            onBeginDrag={onBeginDrag}\n            onDrag={onDragRow}\n            onDragEnd={onDragEnd}\n            draggable\n            data={databasese.records}\n            columns={columns}\n          />\n        </DropBox>\n      </DropAndDropBox>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <ButtonFilter onClick={onOk} sx={{ backgroundColor: 'limegreen !important' }}>{idEdit ? 'Ok' : 'Add'}</ButtonFilter>\n        <ButtonFilter onClick={onCancle}>Cancel</ButtonFilter>\n      </Box>\n      {loading && <Loading />}\n    </ProjectsWrapper>\n  )\n}\n\nconst TextName = styled(Typography)(({ theme }) => ({\n  textOverflow: 'ellipsis',\n  width: 'calc(40% - 16px)',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  padding: theme.spacing(1),\n  borderWidth: 1,\n  fontSize: 16,\n}))\n\nconst BoxItem = styled(Box)({\n  display: 'flex',\n  height: 40,\n  alignItems: 'center',\n  borderBottom: '1px solid rgba(0,0,0,0.8)',\n  paddingLeft: 16,\n  marginBottom: 4,\n})\n\nconst TypographyBoxItem = styled(Box)({\n  minWidth: 120,\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n})\n\nconst BoxDrag = styled(Box)({\n  paddingBottom: 24,\n  width: '100%',\n  borderWidth: 1,\n})\n\nconst BoxFactor = styled(Box)({})\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: `calc(100% - ${theme.spacing(2)})`,\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(3),\n  userSelect: 'none',\n}))\n\nconst BoxOptions = styled(RadioGroup)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(1, 2),\n  display: 'flex',\n  flexDirection: 'inherit',\n}))\n\nconst InputName = styled('input')(({ theme }) => ({\n  padding: theme.spacing(1),\n  outline: 'none',\n  borderColor: 'transparent',\n  fontSize: 18,\n  width: 'calc(40% - 16px)',\n  '&:focus': {\n    borderColor: '#000',\n  },\n  display: 'block',\n  borderWidth: 1,\n}))\n\nconst DropAndDropBox = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  gap: theme.spacing(2),\n  height: 'calc(100% - 177px)',\n  overflow: 'hidden',\n}))\n\nconst DragBox = styled(Box)(({ theme }) => ({\n  width: '40%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #000',\n  minHeight: 100,\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst DropBox = styled(Box)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #dedede',\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst NewRowButton = styled(Button)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  borderStyle: 'dashed',\n  borderWidth: 1,\n  margin: theme.spacing(1, 0),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 1),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  color: '#ffffff',\n  backgroundColor: '#283237 !important',\n}))\n\nconst BoxFilter = styled(Box)({\n  display: 'flex',\n  marginBottom: 10,\n  justifyContent: 'flex-end',\n})\n\nexport default ProjectFormComponent\n","import { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { resetPassword } from \"api/auth\";\nimport Loading from \"components/common/Loading\";\nimport { useNavigate } from \"react-router-dom\";\nimport { regexEmail } from \"../AccountManager\";\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await resetPassword(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Pls check your mail!`)\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'This field is validate'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Workflow from './components/Project'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport AccountManager from 'pages/AccountManager'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Projects from './pages/Projects'\nimport Database from './pages/Database'\nimport Login from 'pages/Login'\nimport ProjectFormComponent from \"./pages/Projects/Create\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<Dashboard />} />\n            <Route path=\"/projects/workflow\" element={<Workflow />} />\n            <Route path=\"/account-manager\" element={<AccountManager />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            <Route path=\"/database\" element={<Database />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            <Route path=\"/account-deleted\" element={<AccountDelete />} />\n            <Route path=\"/projects/new-project\" element={<ProjectFormComponent />} />\n          </Routes>\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n  projectReducer,\n  datasetReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n  project: projectReducer,\n  dataset: datasetReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}