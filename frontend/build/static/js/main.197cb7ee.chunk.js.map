{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/selectors/run/RunSelectors.ts","const/API.ts","api/run/Run.ts","store/slice/Project/ProjectSelector.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/Snakemake.tsx","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/DialogContext.tsx","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","store/slice/DisplayData/DisplayDataSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","components/Visualize/DataContext.tsx","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","components/Visualize/Plot/CsvPlot.tsx","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/ImageAlignment/index.tsx","store/slice/Dataset/DatasetType.ts","utils/auth/index.ts","api/auth/index.ts","utils/axios.ts","api/dataset/index.ts","store/slice/Dataset/DatasetAction.ts","store/slice/Dataset/DatasetSelector.ts","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","components/FlowChart/NWB.tsx","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/CollapsibleTable.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Experiment/Experiment.tsx","components/common/Loading.tsx","components/VisualizeNew/index.tsx","components/Project.tsx","store/slice/Project/ProjectType.ts","store/slice/Pipeline/PipelineHook.ts","providers/index.ts","components/Header.tsx","components/Layout.tsx","pages/Dashboard/index.tsx","components/common/Input.tsx","components/ModalDeleteAccount/index.tsx","components/Table/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","components/InputPassword/index.tsx","components/ModalChangePassword/index.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","api/project/index.ts","store/slice/Project/ProjectAction.ts","pages/Projects/index.tsx","components/DatabaseTable.tsx","components/ImageView/ChangeSize.tsx","api/rawdb/index.tsx","components/ImageView/index.tsx","utils/database/index.ts","pages/Database/index.tsx","pages/Login/index.tsx","store/slice/Project/ProjectSlice.ts","pages/Projects/Create.tsx","pages/ResetPassword/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsSlice.ts","store/slice/Dataset/DatasetSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","data","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","filter","id","label","convertToRunResult","nodeResultDto","outputPath","outputPaths","message","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectInputNodeParam","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","inputNodePosyData","isEdge","edge","HOST","process","BASE_URL","DATABASE_URL_HOST","runApi","projectId","a","axios","post","response","runByUidApi","pendingNodeIdList","selectCurrentProjectId","project","currentProject","selectProjectList","projects","selectCurrentProject","createAsyncThunk","thunkAPI","getState","responseData","rejectWithValue","runByCurrentUid","currentUid","pollRunResult","getExperimentsApi","get","deleteExperimentByUidApi","delete","deleteExperimentByListApi","uidList","importExperimentByUidApi","fetchExperimentApi","EXPERIMENTS_SLICE_NAME","getExperiments","_","fetchExperiment","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","convertToExperimentType","functions","function","unique_id","convertToExperimentStatus","success","hasNWB","timestamp","started_at","convertFunctionsToRunResultDTO","key","initialState","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","extraReducers","builder","addCase","fulfilled","rejected","meta","_state","_action","addMatcher","isAnyOf","pending","actions","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","ImageFileNode","CsvFileNode","HDF5FileNode","FluoFileNode","AlgorithmNode","BehaviorFileNode","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","position","newNode","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","style","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","config","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","find","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","max","random","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","SnakemakeButton","Button","endIcon","SnakemakeContents","paramKeyList","className","Component","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","errorMessage","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","navigate","useNavigate","float","textAlign","top","right","zIndex","textTransform","useHandleColor","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","createContext","onOpen","onOpenDialogFile","onMessageError","onOpenImageAlignment","FileSelect","multiSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","useSearchParams","searchParams","useContext","alignments","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","alpha","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","title","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","initParams","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeParamAlignment","setInputNodeHDF5Path","setHeader","setIndex","transpose","newState","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","DisplayDataContext","dataType","itemId","NaN","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectVisualizeItems","visualaizeItem","items","selectVisualizeItemById","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectRoiItemFilePath","roiItem","selectImageItemStartIndex","selectImageItemEndIndex","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","selectTimeSeriesItemFilePath","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","CsvPlot","isInitialized","isPending","isFulfilled","CsvPlotImple","selectCsvItemTranspose","selectCsvItemSetHeader","selectCsvItemSetIndex","PresentationalCsvPlot","csvData","useMemo","col","row","header","headerData","field","headerName","idx","rows","row_id","rowObj","fromEntries","columns","CsvFileNodeImple","ParamSettingDialog","setOpen","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","p","m","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","shape","nbytes","FluoFileNodeImple","fluoColor","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","setImageItemClikedDataId","clickedDataId","drawOrderList","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","isWorkflowDialog","imageItemInitialValue","showticklabels","showline","zsmooth","showgrid","showscale","colors","rgb","offset","activeIndex","roiAlpha","duration","timeSeriesItemInitialValue","span","zeroline","xrange","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","selectedItemId","layout","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","selectHeatMapItemShowScale","colorscale","selectHeatMapItemColors","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","selectImageItemShowticklabels","selectImageItemShowLine","selectImageItemZsmooth","selectImageItemShowGrid","selectImageItemShowScale","selectImageItemColors","selectImageItemAlpha","timeDataMaxIndex","maxIdx","selectRoiItemIndex","selectImageItemRoiAlpha","colorscaleRoi","createColormap","colormap","nshades","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","ml","PlayBack","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","text","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","selectTimeSeriesItemOffset","selectTimeSeriesItemSpan","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","selectTimeSeriesItemXrange","selectTimeSeriesItemDrawOrderList","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","selectVisualizeDataFilePath","selectVisualizeDataNodeId","selectVisualizeDataType","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allChecked","allNotChecked","indeterminate","TreeItemLabel","checkboxProps","Checkbox","disableRipple","ButtonClose","ButtonPre","backgroundColor","cursor","ButtonNext","InputImage","ImageViewWrapper","justifyContent","ContentSet","Flex","Text","ButtonSet","BoxSet","SwitchImage","flexDirection","SwitchContent","ButtonOk","ButtonCanCel","CloseIconWrapper","CloseIcon","ImageAlignment","urls","readOnly","viewerRef","url","setUrl","isLoadFile","setIsLoadFile","loadedSuccess","setLoadedSuccess","volumes","urlRef","stateParams","setStateParams","paramAligment","image_id","loadFile","loadFileIndex","paramInit","setValueToBraibrowser","valueParams","setResize","x_resize","y_resize","z_resize","setRadian","y_rotate","x_rotate","z_rotate","setVoxelCoords","y_pos","z_pos","x_pos","redrawVolumes","onChangeValue","newParams","align","onBlurRadian","valueRadian","isNaN","PI","clearVolumes","loadVolumes","nii_url","template","element_id","viewer_insert_className","overlay","complete","volumeLoaded","isLoaded","brainbrowser","window","BrainBrowser","volume","paramsNode","xspace","radian","yspace","zspace","utils","isFunction","getVoxelCoords","voxel","k","j","pre","gerenateValueNumber","color_map_config","VolumeViewer","start","viewer","addEventListener","urlColor","cursor_color","loadDefaultColorMapFromURL","setDefaultPanelSize","render","Modal","minHeight","onBlur","gap","PROJECT_SLICE_NAME","saveToken","access_token","localStorage","setItem","getToken","getItem","saveRefreshToken","refresh_token","removeToken","removeItem","isAdmin","isReseacher","optionsRole","code","login","refreshToken","getMe","listUser","query","createUser","editUser","userId","put","deleteUser","deleteAccountProfile","editNameProfile","editPassProfile","saveParams","loadParams","resetPassword","email","axiosLibrary","create","baseURL","timeout","interceptors","request","use","headers","Authorization","ExToken","Promise","reject","res","getDatasetListApi","project_id","createDatasetApi","getDatasetList","dataset","createDataset","selectDataset","getUrlFromSubfolder","subfolders","sub","sub_folders","images","urlsImage","image_url","selectListImageUrl","initDialogFile","ReactFlowComponent","projectID","openPopupAlignment","setOpenPopupAlignment","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","flowElementInput","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","accept","drop","monitorOffset","getClientOffset","offsetLeft","offsetTop","flag","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","preventDefault","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","Popover","anchorOrigin","vertical","horizontal","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","getNWBParamsApi","getNWBParams","nwbSlice","NWBSettingContents","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","borderRight","paddingTop","transitions","easing","sharp","leavingScreen","easeOut","enteringScreen","ExperimentStatusIcon","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","unmountOnExit","Table","Head","Body","TableHead","TableBody","TableRowOfFunction","outputs","popup","setPopup","component","scope","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","ExperimentUidContext","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListKeys","recordsIsEmpty","startTime","finishTime","page","storageKey","initialValue","parseFn","savedStr","JSON","parse","setValue","stringify","useLocalStorage","valueNum","rowsPerPage","emptyRows","flexGlow","records","TableContainer","RowItem","secondary","Fragment","tableCellClasses","root","borderBottomWidth","Experiment","LoaderWrapper","bottom","rotate","keyframes","prixClipFix","Loader","animation","content","boxSizing","inset","Loading","regexThreshold","regexCutCoords","AlertDialog","onSaveParams","DialogContentText","WrapperInput","VisualizeInput","SpanError","Title","fontWeight","CutCoords","VisualizeInputWrapper","ParamsButton","ButtonWrapper","VisualizeButton","ImageWrapper","Image","objectFit","VisualizeNew","setIsLoading","cut_coords","coronal","sagittal","threshold","dataParams","setDataParams","errors","setErrors","onLoadParams","newCutCoords","toNumberArr","validateParams","newArr","checkArr","some","onChangeParams","test","checkChar","Container","src","alt","StyledAppBar","drawer","TabPanel","other","hidden","a11yProps","Project","ProjectTypeValue","setParams","runPipeline","isCanceled","location","useLocation","isEdited","intervalId","prevStatus","setPrevStatus","useRunPipeline","set","centered","textColor","UserContext","setUser","useUser","BoxDropdown","listStyleType","backgroundClip","outline","BoxWrapper","BoxMenu","userSelect","BoxInfo","BoxMenuItem","transform","BoxMenuItemLogout","TitleLogo","HeaderWrapper","Header","user","refMenu","blur","display_name","drawerWidth","ignorePaths","MenuLeft","onResize","pathname","isClose","MenuLeftWrapper","BoxBack","ButtonBack","BoxDivider","KeyboardBackspaceIcon","LinkWrapper","to","active","TypographyMenu","Link","textDecoration","LayoutWrapper","ContentBodyWrapper","paddingRight","ChildrenWrapper","KeyboardBackspace","shouldForwardProp","listStyle","lineHeight","Layout","setWidth","checkkAuth","token","isPageLogin","DashboardWrapper","DashboardContent","flexWrap","TitleMenu","Dashboard","Input","ContentDelete","ButtonConfirm","BoxConfirm","ModalDeleteAccount","onSubmit","titleSubmit","description","textDelete","setTextDelete","whiteSpace","placeholder","MyPaginate","ReactPaginate","borderCollapse","Thead","Tr","Th","borderTopLeftRadius","borderTopRightRadius","TBody","Td","maxWidth","wordBreak","NoData","ArrowDownwardIconOrder","ArrowDownwardIcon","TableComponent","paginate","orderBy","orderKey","pageCount","page_size","renderCol","dayjs","dataIndex","iCol","nameCol","disableInitialCallback","marginPagesDisplayed","pageRangeDisplayed","breakLabel","previousLabel","nextLabel","TextError","InputError","autoComplete","SelectModal","SelectError","options","initState","password","lab","confirmPassword","regexPassword","regexEmail","regexIgnoreS","ModalComponent","onSubmitEdit","setIsOpenModal","dataEdit","setFormData","isDisabled","setIsDisabled","validateEmail","validateField","validatePassword","isConfirm","errorLength","validateLength","datas","validateForm","errorName","errorEmail","errorLab","errorRole","onChangeData","newDatas","errorConfirm","toLowerCase","newErrors","alert","ModalBox","TitleModal","BoxData","LabelModal","ButtonModal","AccountManagerWrapper","BoxButton","ButtonAdd","ALink","button","AccountManager","openDelete","setOpenDelete","isOpenModal","setDataEdit","idDel","setIdDel","setData","per_page","next_page_token","setPaginate","getList","nextPageToken","newData","total_page","handleCloseDelete","onDelete","onForgotPassword","onPageChange","InputPassword","setType","BoxTitle","FormInline","Label","ModalChangePassword","setValues","validate","confirm_password","validateReEnter","new_password","onChangePass","onCloseModal","reEnter","AccountWrapper","BoxFlex","TitleData","ButtonSubmit","Account","isEditName","setIsEditName","openChangePw","setOpenChangePw","onEditName","handleCloseChangePw","onChangePw","oldPass","newPass","old_password","mt","AccountDelete","getProjectListApi","createProjectApi","deleteProjectApi","getProjectList","getProjectId","createProject","editProject","deleteProject","ProjectsWrapper","ProjectsTitle","BoxAction","letterSpacing","Projects","idDelete","setIdDelete","setPage","onEdit","onWorkflow","onResults","addNewProject","RenderColumn","recordIndex","rowClick","drags","onMouseDown","draggable","onDrag","openChild","setOpenChild","openChildParent","setOpenChildPrent","subjects","openSubjects","setOpenSubjects","isDrag","drag","session_id","datatype_index","onDragEvent","datatypes","column","BoxCenter","subject_index","subId","o","sessions","session","session_index","ii","image_index","datatype_label","subject_id","parent_id","record_index","onDragStart","BoxDrag","TableWrap","overflowX","DataTable","DatabaseTableComponent","onSort","onBeginDragProps","onBeginDrag","setDrags","pageX","pageY","mouseMoveRect","setMouseMoveRect","timeoutClick","ctrRef","refTable","refTdSelect","mouseStart","beginDrag","setBeginDrag","onKeydownEvent","onKeyupEvent","onMouseUp","onMouseMove","removeEventListener","ctrlKey","metaKey","onRowClickEvent","idDom","tds","currentTarget","getElementsByTagName","dom","innerHTML","order","onSortHandle","allowMutilKey","draggableProps","el","rowId","trNow","getBoundingClientRect","td","Dot","TitleScale","BoxLine","ScaleWrapper","ChangeDrag","onChangeMin","showInputMax","mouseDown","refDrag","refDot","getWidth","clientWidth","onTouchStart","touches","mouseInit","scale","onTouchMove","toPrecision","onTouchEnd","getDataBaseTree","getDataBaseList","getRawdb","editAttributes","handleSaveAttributes","BoxLoading","ButtonPrevious","BoxContentData","WrapperJson","WrapArea","borderLeft","TextArea","ArrowBackIosIconWrapper","ArrowBackIosIcon","ArrowForwardIosIconWrapper","ArrowForwardIosIcon","WrapperButton","ImageView","onNext","onPrevious","jsonData","worldCoords","setWorldCoords","voxelCoords","setOpacity","thresholds","setThresholds","maxThres","setMaxThres","contracts","setContracts","brightness","setBrightness","openSave","setOpenSave","textAttribute","setTextAttribute","errorAttribute","setErrorAttribute","refTextArea","intensity_min","intensity_max","getIntensityValue","getWorldCoords","handleCloseSave","num","showInputMin","setContrast","refreshPanels","focus","onChangeJson","onRowClick","view","checkNext","onGet","checkPre","isSub","indexImageNow","record","dataNow","subjectNow","sessionNow","datatypeNow","imagePre","datatypeImagePre","imageNext","datatypeNext","sortWithLabName","datasTable","typeOrder","sort","sortSubjectTree","dataA","dataB","subjectsA","subA","subB","subjectsB","sortSessionTree","sessionsA","sA","sB","flat","sessionsB","subSessA","subSessB","ssA","ssB","sortDataTypeTree","ses","ss","dataTypeA","dataTypeB","typeA","typeB","sortAttributesTypeTree","s","imageA","imageB","image_attributes","sortWithKey","valueA","valueB","sortWithTime","Date","recording_time","onFilterValue","setDatabases","initDataTable","pagenation","limit","total_pages","arrRecord","arrSub","subject","arrSess","session_label","arrDt","dt","datatypes_label","image_type","protocol","PopupSearch","onFilter","Popup","PopupInner","HeaderTitle","ButtonControl","InputSearch","defaultDatabase","child","DatabaseWrapper","ButtonFilter","BoxSelectTypeView","Database","openPopup","setOpenPopup","setViewer","databases","setOrdeBy","columnSort","setColumnSort","setInitDataTable","setDisabled","fetchData","DatabaseTable","defaultExpand","orderByValue","LoginWrapper","LoginContent","FormSignUp","LabelField","LableRequired","Description","LinkWrappper","ButtonLogin","Login","validateSubmit","ex_token","getUser","Stack","projectSlice","resetCurrentProject","nameDefault","defaultFactor","within","remapDatasetToDataFactor","folder_name","sub_within","project_name","attributes","datatype","project_type","image_count","TextName","borderWidth","BoxItem","TypographyBoxItem","BoxFactor","BoxOptions","RadioGroup","InputName","DropAndDropBox","DragBox","DropBox","NewRowButton","borderStyle","BoxFilter","ProjectFormComponent","idEdit","loading","setLoading","imageIDs","setImageIDs","routeGoback","isPendingDrag","databasese","initDatabase","setInitDatabase","projectName","setProjectName","FACTOR","projectType","setProjectType","openFilter","setOpenFilter","rowDrag","setRowDrag","dataFactors","setDataFactors","getDataTree","then","onMouseOver","factor","onDropData","newIds","w","onDragLeave","renderData","rowDataClick","onCancle","edited","generateName","getBorderDrag","onOk","source_image_ids","iWithin","isSuccess","WITHIN_FACTOR","Radio","onChangeNameFactor","rowData","onChangeNameWithinFactor","onDeleteWithin","onDeleteDataWithin","onDrop","onDeleteDataFactor","idFactor","mouseup","Heading","ButtonSignIn","ResetPassword","onReset","errorCheck","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","deleteData","prevDataType","prevFilePath","roi1Ddata","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","experimentsSlice","convertToExperimentListType","datasetSlice","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","projectReducer","datasetReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.197cb7ee.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else if (nodeResultDto.status === 'running') {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: nodeResultDto.name,\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type Params = {\n  image_id: number | string\n  x_pos: number\n  y_pos: number\n  z_pos: number\n  x_rotate: number\n  y_rotate: number\n  z_rotate: number\n  x_resize: number\n  y_resize: number\n  z_resize: number\n}\n\nexport type AlignmentData = {\n  alignments: {\n    path: string\n    type: string\n    value: Params[]\n  }\n}\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode\n  extends InputNodeBaseType<'image', AlignmentData> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\nconst HOST_DATABASE = process.env.REACT_APP_SERVER_DATABASE_HOST\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\nexport const DATABASE_URL_HOST = `${HOST_DATABASE}`\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(\n  projectId: string,\n  data: RunPostData,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${projectId}`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  projectId: string,\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${projectId}/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  projectId: string\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { projectId, uid, pendingNodeIdList } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/result/${projectId}/${uid}`,\n    {\n      pendingNodeIdList,\n    },\n  )\n  return response.data\n}\n","import { RootState } from 'store/store'\n\nexport const selectProject = (state: RootState) => state.project\nexport const selectCurrentProjectId = (state: RootState) =>\n  state.project.currentProject?.id\n  \nexport const selectProjectList = (state: RootState) => state.project.projects\n\nexport const selectCurrentProject = (state: RootState) => state.project.currentProject\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\nimport { selectCurrentProjectId } from '../Project/ProjectSelector'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  if (projectId) {\n    try {\n      const responseData = await runApi(projectId, runPostData)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('projectId does not exist.')\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const projectId = selectCurrentProjectId(thunkAPI.getState())\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (projectId && currentUid != null) {\n      try {\n        const responseData = await runByUidApi(\n          projectId,\n          currentUid,\n          runPostData,\n        )\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('projectId or currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  if (projectId) {\n    try {\n      const responseData = await runResult({\n        projectId,\n        uid,\n        pendingNodeIdList,\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('projectId does not exist.')\n  }\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { EdgeDict, NodeDict, OutputPathsDTO, RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type FunctionsDTO = {\n  [nodeId: string]: {\n    name: string\n    success: string\n    unique_id: string\n    hasNWB: boolean\n    message?: string\n    started_at?: string\n    finished_at?: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type ExperimentDTO = {\n  function: FunctionsDTO\n  name: string\n  success?: EXPERIMENTS_STATUS\n  started_at: string\n  finished_at?: string\n  unique_id: string\n  hasNWB: boolean\n  edgeDict: EdgeDict\n  nodeDict: NodeDict\n}\n\nexport async function getExperimentsApi(\n  projectId: string,\n): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/${projectId}`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function fetchExperimentApi(\n  projectId: string,\n): Promise<ExperimentDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/fetch/${projectId}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  status?: EXPERIMENTS_STATUS\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n  ExperimentDTO,\n  fetchExperimentApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\nimport { selectCurrentProjectId } from '../Project/ProjectSelector'\nimport { ThunkApiConfig } from 'store/store'\n\nexport const getExperiments = createAsyncThunk<\n  ExperimentsDTO,\n  undefined,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/getExperiments`, async (_, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  if (projectId) {\n    try {\n      const response = await getExperimentsApi(projectId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('project id does not exist.')\n  }\n})\n\nexport const fetchExperiment = createAsyncThunk<ExperimentDTO, string>(\n  `${EXPERIMENTS_SLICE_NAME}/fetchExperiment`,\n  async (projectId, thunkAPI) => {\n    try {\n      const response = await fetchExperimentApi(projectId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import type {\n  ExperimentDTO,\n  ExperimentsDTO,\n  FunctionsDTO,\n} from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\nimport { RunResultDTO } from 'api/run/Run'\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.started_at,\n    status: dto.success,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nexport function convertFunctionsToRunResultDTO(\n  dto: FunctionsDTO,\n): RunResultDTO {\n  const result: RunResultDTO = {}\n  Object.entries(dto).forEach(([key, value]) => {\n    result[key] = {\n      status: value.success,\n      message: value.message ?? '',\n      name: value.name,\n      outputPaths: value.outputPaths,\n    }\n  })\n  return result\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\nimport { convertFunctionsToRunResultDTO } from '../Experiments/ExperimentsUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.payload.unique_id,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          uid: action.payload.unique_id,\n          status: RUN_STATUS.START_SUCCESS,\n          runResult: {\n            ...convertToRunResult(\n              convertFunctionsToRunResultDTO(action.payload.function),\n            ),\n          },\n          runPostData: {\n            name: action.payload.name,\n            nodeDict: action.payload.nodeDict,\n            edgeDict: action.payload.edgeDict,\n            snakemakeParam: {},\n            nwbParam: {},\n            forceRunList: [],\n          },\n        }\n\n        const runResultPendingList = Object.values(state.run.runResult).filter(\n          isNodeResultPending,\n        )\n        if (runResultPendingList.length === 0) {\n          state.run.status = RUN_STATUS.FINISHED\n        }\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 130,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { FlowElement, Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node as FlowElement<NodeData>)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node as FlowElement<NodeData>)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n    // editFlowElementParamsAlignmentById: (\n    //   state,\n    //   action: PayloadAction<{\n    //     nodeId: string\n    //     params: Params[]\n    //   }>,\n    // ) => {\n    //   let { nodeId, params } = action.payload\n    //   const elementIdx = state.flowElements.findIndex(\n    //     (ele) => ele.id === nodeId,\n    //   )\n    //   const targetItem = state.flowElements[elementIdx]\n    //   if (isNode(targetItem)) {\n    //     if (!targetItem.data) {\n    //       return\n    //     }\n    //     let newParams = params\n    //     if (!targetItem.data.param) {\n    //       targetItem.data.param = initParams\n    //     }\n    //     targetItem.data.param.alignments.value = newParams as Params[]\n    //   }\n    // },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n  // editFlowElementParamsAlignmentById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n      .addCase(fetchExperiment.fulfilled, (_state, _action) => initialState)\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n// import { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n      }}\n    >\n      <Button onClick={() => navigate('/projects')}>\n        <ArrowBackIosIcon />\n        Projects\n      </Button>\n      <SnakemakeButton />\n      {/*<NWBSettingButton />*/}\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n  onOpenImageAlignment: (\n    v: boolean,\n    params?: { nodeId: string; alignments: Params[] },\n  ) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n  onOpenImageAlignment: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { AlignmentData, FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { DialogContext } from '../DialogContext'\nimport { useSelector } from 'react-redux'\nimport { selectInputNodeParam } from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        nodeId={nodeId}\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n  nodeId?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({ filePath, nodeId }) => {\n    const navigate = useNavigate()\n    const [searchParams] = useSearchParams()\n    const { onOpenImageAlignment } = useContext(DialogContext)\n\n    const inputNode = useSelector(selectInputNodeParam(nodeId || '')) as AlignmentData\n\n    const id = searchParams.get('id')\n    const getNameSelectec = () => {\n      if (Array.isArray(filePath)) {\n        return `${filePath.length} images selected.`\n      }\n      return `${filePath ? 1 : 0} images selected.`\n    }\n\n    return (\n      <div style={{ padding: 16 }}>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: 'auto' }}>\n          <Button\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n            onClick={() =>\n              navigate(\n                `/projects/new-project?id=${id}&nodeId=${nodeId}&back=/projects/workflow?tab=0&id=${id}`,\n              )\n            }\n          >\n            EDIT IMAGESET\n          </Button>\n        </ButtonGroup>\n        <div style={{ marginTop: 8 }}>\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {getNameSelectec()}\n          </Typography>\n        </div>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: '8px 0' }}>\n          <Button\n            onClick={() => {\n              if (!nodeId) return\n              onOpenImageAlignment(true, {\n                nodeId,\n                alignments: inputNode.alignments.value,\n              })\n            }}\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n          >\n            ALIGNMENT\n          </Button>\n        </ButtonGroup>\n      </div>\n    )\n  },\n)\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n  Params,\n  ImageInputNode,\n  AlignmentData,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initParams: AlignmentData = {\n  alignments: {\n    path: 'alignments',\n    type: 'child',\n    value: [],\n  },\n}\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: initParams,\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeParamAlignment(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: Params[]\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId] as ImageInputNode\n      inputNode.param.alignments.value = param\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: initParams,\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: initParams,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: initParams,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const {\n  setCsvInputNodeParam,\n  setInputNodeHDF5Path,\n  setInputNodeParamAlignment,\n} = inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        label=\"dur[msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { ChangeEvent, FC, useEffect, useMemo, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { ObjectType } from 'pages/Database'\nimport { useDispatch } from 'react-redux'\nimport { setInputNodeParamAlignment } from 'store/slice/InputNode/InputNodeSlice'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\n// import { setSaveFileName } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  urls: string[]\n  jsonData?: ObjectType\n  disabled?: { left: boolean; right: boolean }\n  params?: { nodeId: string; alignments: Params[] }\n  readOnly?: boolean\n}\n\nconst ImageAlignment: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  urls,\n  params = { nodeId: '', alignments: [] },\n  readOnly= false\n}) => {\n  const viewerRef = useRef<any>()\n  const [url, setUrl] = useState(urls[0])\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const [loadedSuccess, setLoadedSuccess] = useState(false)\n  const volumes = useRef<any>()\n  const dispatch = useDispatch()\n\n  const urlRef = useRef(url)\n\n  const [stateParams, setStateParams] = useState<Params[]>(params.alignments)\n\n  const paramAligment = useMemo(() => {\n    return stateParams.find((param) => param.image_id === url)\n  }, [url, stateParams])\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    setStateParams(params.alignments)\n    setUrl(urls[0])\n    setIsLoadFile(false)\n    setLoadedSuccess(false)\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    urlRef.current = url\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n\n  useEffect(() => {\n    if (loadedSuccess) {\n      const paramInit = params.alignments?.find(\n        (param) => param.image_id === url,\n      )\n      setValueToBraibrowser(paramInit)\n    }\n    //eslint-disable-next-line\n  }, [loadedSuccess, url])\n\n  const onOk = () => {\n    if (params?.nodeId && stateParams) {\n      dispatch(\n        setInputNodeParamAlignment({\n          nodeId: params.nodeId,\n          param: stateParams,\n        }),\n      )\n    }\n    onClose?.()\n  }\n\n  const onPreImage = () => {\n    const index = urls.findIndex((item) => item === url)\n    if (index === 0) return\n    setUrl(urls[index - 1])\n  }\n\n  const onNextImage = () => {\n    const index = urls.findIndex((item) => item === url)\n    if (index === urls.length - 1) return\n    setUrl(urls[index + 1])\n  }\n\n  const setValueToBraibrowser = (valueParams?: Params) => {\n    if (valueParams) {\n      volumes.current.setResize({\n        x: Number(valueParams.x_resize),\n        y: Number(valueParams.y_resize),\n        z: Number(valueParams.z_resize),\n      })\n      volumes.current.setRadian(\n        Number(valueParams.y_rotate),\n        Number(valueParams.x_rotate),\n        Number(valueParams.z_rotate),\n      )\n      volumes.current.setVoxelCoords(\n        Number(valueParams.y_pos),\n        Number(valueParams.z_pos),\n        Number(valueParams.x_pos),\n      )\n      viewerRef.current.redrawVolumes()\n    }\n  }\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === url ? { ...align, [name]: value } : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const onBlurRadian = (e: any) => {\n    const { name, value } = e.target\n    let valueRadian = Number(value)\n    if (isNaN(valueRadian)) {\n      valueRadian = 0\n    } else if (valueRadian < 0) {\n      valueRadian = 0\n    } else if (valueRadian > 2 * Math.PI) {\n      valueRadian = 0\n    }\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === url ? { ...align, [name]: valueRadian } : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    setLoadedSuccess(false)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n        },\n      ],\n      complete: () => setValueToBraibrowser(paramAligment),\n    })\n  }\n\n  const volumeLoaded = (event: any, isLoaded?: boolean) => {\n    const brainbrowser = (window as any).BrainBrowser\n    const { volume } = event\n    volumes.current = volume\n    const paramsNode: Params = {\n      image_id: urlRef.current,\n      x_pos: 0,\n      y_pos: 0,\n      z_pos: 0,\n      x_rotate: volume.header.xspace.radian,\n      y_rotate: volume.header.yspace.radian,\n      z_rotate: volume.header.zspace.radian,\n      x_resize: volume.header.xspace.step,\n      y_resize: volume.header.yspace.step,\n      z_resize: volume.header.zspace.step,\n    }\n    if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n      const voxel = volume.getVoxelCoords()\n      paramsNode.x_pos = voxel.k\n      paramsNode.y_pos = voxel.i\n      paramsNode.z_pos = voxel.j\n    }\n    const newParams = (pre: Params[]) => {\n      if (pre.find((align) => align.image_id === urlRef.current)) {\n        return pre.map((align) => {\n          if (align.image_id === urlRef.current) return paramsNode\n          return align\n        })\n      }\n      return [...pre, paramsNode]\n    }\n    setStateParams(newParams)\n    setIsLoadFile(false)\n    setLoadedSuccess(true)\n  }\n\n  const gerenateValueNumber = (value?: number) => {\n    if (typeof value === 'undefined') return ''\n    return value\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    setLoadedSuccess(false)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', (e: any) =>\n          volumeLoaded(e, true),\n        )\n        viewer.addEventListener('sliceupdate', volumeLoaded)\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {\n                setIsLoadFile(false)\n              },\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div style={{ alignItems: 'stretch' }}>\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              <Flex>\n                <BoxSet>\n                  <ContentSet>\n                    <Flex>\n                      <Text>right {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"x_pos\"\n                        value={gerenateValueNumber(paramAligment?.x_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>forward {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"y_pos\"\n                        value={gerenateValueNumber(paramAligment?.y_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>up {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"z_pos\"\n                        value={gerenateValueNumber(paramAligment?.z_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>roll {'{rad}'}</Text>\n                      <input\n                        name=\"x_rotate\"\n                        value={gerenateValueNumber(paramAligment?.x_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>pitch {'{rad}'}</Text>\n                      <input\n                        name=\"y_rotate\"\n                        value={gerenateValueNumber(paramAligment?.y_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>yaw {'{rad}'}</Text>\n                      <input\n                        name=\"z_rotate\"\n                        value={gerenateValueNumber(paramAligment?.z_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{x}'}</Text>\n                      <input\n                        name=\"x_resize\"\n                        value={gerenateValueNumber(paramAligment?.x_resize)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{y}'}</Text>\n                      <input\n                        value={gerenateValueNumber(paramAligment?.y_resize)}\n                        name=\"y_resize\"\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{z}'}</Text>\n                      <input\n                        value={gerenateValueNumber(paramAligment?.z_resize)}\n                        name=\"z_resize\"\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <ButtonSet\n                      onClick={() => setValueToBraibrowser(paramAligment)}\n                    >\n                      Set Origin\n                    </ButtonSet>\n                  </ContentSet>\n                </BoxSet>\n                <Flex\n                  sx={{\n                    flexDirection: 'column',\n                    position: 'relative',\n                    gap: 15,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <SwitchImage>\n                    <span>Select Image</span>\n                    <SwitchContent>\n                      <ButtonPre onClick={onPreImage}>{'<'}</ButtonPre>\n                      <InputImage value={url} readOnly />\n                      <ButtonNext onClick={onNextImage}>{'>'}</ButtonNext>\n                    </SwitchContent>\n                    <span>{`(${\n                      urls.findIndex((item: string) => item === url) + 1\n                    }/${urls.length})`}</span>\n                  </SwitchImage>\n                  <Flex sx={{ gap: 5 }}>\n                    <ButtonCanCel onClick={onClose}>CANCEL</ButtonCanCel>\n                    <ButtonOk onClick={onOk}>OK</ButtonOk>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </div>\n          </div>\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  right: '10%',\n  top: '10%',\n  zIndex: 9999,\n  background: 'rgba(0, 0, 0, 0.6)',\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.8)',\n  },\n})\n\nconst ButtonPre = styled('button')({\n  width: 50,\n  height: 50,\n  position: 'unset',\n  zIndex: 1,\n  borderRadius: '50%',\n  backgroundColor: 'unset',\n  border: 'none',\n  cursor: 'pointer',\n  fontSize: 20,\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.1)',\n  },\n})\n\nconst ButtonNext = styled(ButtonPre)({\n  right: '10%',\n})\n\nconst InputImage = styled('input')({\n  height: 'fit-content',\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: '#fff',\n})\n\nconst ContentSet = styled(Box)({\n  padding: 20,\n})\n\nconst Flex = styled(Box)({\n  display: 'flex',\n})\n\nconst Text = styled('span')({\n  display: 'block',\n  minWidth: 150,\n})\n\nconst ButtonSet = styled('button')({\n  marginTop: 20,\n  cursor: 'pointer',\n})\n\nconst BoxSet = styled(Box)({\n  border: '2px solid #000',\n  width: 'fit-content',\n  margin: '30px 50px',\n})\n\nconst SwitchImage = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n})\n\nconst SwitchContent = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst ButtonOk = styled('button')({\n  padding: '10px 20px',\n  background: '#000000c7',\n  border: '2px solid #000',\n  color: '#fff',\n  cursor: 'pointer',\n})\n\nconst ButtonCanCel = styled('button')({\n  padding: 10,\n  border: '2px solid #000',\n  cursor: 'pointer',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageAlignment\n\n","import { ObjectType } from 'pages/Database'\n\nexport const PROJECT_SLICE_NAME = 'project'\n\nexport type DatasetPostType = {\n  folder_name: string\n  sub_folders: { folder_name: string; source_image_ids: number[] }[]\n  source_image_ids: number[]\n}\n\nexport type DatasetType = {\n  folder_name: string\n  sub_folders: { folder_name: string; images: number[] }[]\n  images: number[]\n}\n\nexport type SubFolder = {\n  folder_name: string\n  id: string\n  images?: {\n    attributes: ObjectType\n    id: number\n    image_url: string\n    parent_id: string\n  }[]\n  parent_id: string\n  sub_folders: SubFolder[]\n}\n\nexport type Dataset = {\n  dataset?: {\n    id: string\n    project_id: number\n    sub_folders: SubFolder[]\n  }\n  project_id: string | null\n}\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\nexport const saveRefreshToken = (refresh_token: string) => {\n  localStorage.setItem('refresh_token', refresh_token)\n}\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refresh_token')\n}\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\nexport const saveExToken = (ExToken: string) => {\n  localStorage.setItem('ExToken', ExToken)\n}\nexport const getExToken = () => {\n  return localStorage.getItem('ExToken')\n}\nexport const removeExToken = () => {\n  return localStorage.removeItem('ExToken')\n}\n\nexport const isAdmin = (role?: number | string) => {\n  return role === 1\n}\n\nexport const isReseacher = (role?: string | number) => {\n  return role === 20\n}\n\nexport const optionsRole = [\n  {\n    code: 1,\n    name: 'Admin',\n  },\n  {\n    code: 10,\n    name: 'Data Manager',\n  },\n  {\n    code: 20,\n    name: 'User',\n  },\n]\n","import { getRefreshToken } from 'utils/auth'\nimport axios from 'utils/axios'\n\nexport const login = async (data: { email: string; password: string }) => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const refreshToken = async () => {\n  const response = await axios.post('/auth/refresh', {\n    refresh_token: getRefreshToken(),\n  })\n  return response.data\n}\n\nexport const getMe = async () => {\n  const response = await axios.get('/auth/me')\n  return response.data\n}\n\nexport const listUser = async (query?: object) => {\n  const response = await axios.get('/admin/user', { params: query })\n  return response.data\n}\n\nexport const createUser = async (data: object) => {\n  const response = await axios.post(`/admin/user`, data)\n  return response.data\n}\n\nexport const editUser = async (userId: string | number, data: object) => {\n  const response = await axios.put(`/admin/user/${userId}`, data)\n  return response.data\n}\n\nexport const deleteUser = async (userId: string | number) => {\n  const response = await axios.delete(`/admin/user/${userId}`)\n  return response.data\n}\n\nexport const deleteAccountProfile = async () => {\n  const response = await axios.delete(`/auth/me`)\n  return response.data\n}\n\nexport const editNameProfile = async (data: object) => {\n  const response = await axios.put(`/auth/me`, data)\n  return response.data\n}\n\nexport const editPassProfile = async (data: object) => {\n  const response = await axios.put(`/auth/change-password`, data)\n  return response.data\n}\n\nexport const saveParams = async (data: object) => {\n  const response = await axios.post(`/image_stat/param`, data)\n  return response.data\n}\n\nexport const loadParams = async () => {\n  const response = await axios.get(`/image_stat/param`)\n  return response.data\n}\n\nexport const resetPassword = async (email: string) => {\n  const response = await axios.post(\n    `/admin/user/send_reset_password?email=${email}`,\n    email,\n  )\n  return response.data\n}\n","import { refreshToken } from 'api/auth'\nimport axiosLibrary from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { getExToken, getToken, saveToken } from 'utils/auth'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    config.headers.ExToken = getExToken()\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\naxios.interceptors.response.use(\n  async (res) => res,\n  async (error) => {\n    if (error?.response?.status === 401) {\n      const { access_token } = await refreshToken()\n      saveToken(access_token)\n      error.config.headers.Authorization = `Bearer ${access_token}`\n      return axiosLibrary(error.config)\n    }\n    return Promise.reject(error)\n  },\n)\n\nexport default axios\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from '../../const/API'\nimport { DatasetPostType } from 'store/slice/Dataset/DatasetType'\n\nexport const getDatasetListApi = async (project_id: string) => {\n  const response = await axios.get(\n    `${DATABASE_URL_HOST}/workdb/dataset/search?project_id=${project_id}`,\n  )\n  return response.data\n}\n\nexport const createDatasetApi = async (\n  data: DatasetPostType[],\n  project_id: number,\n) => {\n  const response = await axios.post(\n    `${DATABASE_URL_HOST}/workdb/dataset/${project_id}`,\n    data,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Dataset, DatasetPostType } from './DatasetType'\nimport { createDatasetApi, getDatasetListApi } from 'api/dataset'\n\nexport const getDatasetList = createAsyncThunk<Dataset, { project_id: string }>(\n  `${PROJECT_SLICE_NAME}/getDatasets`,\n  async (param, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getDatasetListApi(param.project_id)\n      return { dataset: response?.[0], project_id: param.project_id }\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const createDataset = createAsyncThunk<\n  Dataset,\n  {\n    dataset: DatasetPostType[]\n    project_id: number\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/createDataset`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await createDatasetApi(param.dataset, param.project_id)\n    param.callback?.(true)\n    return response\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n","import { RootState } from 'store/store'\nimport { SubFolder } from './DatasetType'\n\nexport const selectDataset = (state: RootState) => state.dataset\n\nconst getUrlFromSubfolder = (subfolders: SubFolder[], urls: string[]) => {\n  subfolders.forEach((sub) => {\n    if (sub.sub_folders) {\n      getUrlFromSubfolder(sub.sub_folders, urls)\n    } else if (sub.images?.length) {\n      const urlsImage = sub.images.map((image) => image.image_url)\n      urls.push(...urlsImage)\n    }\n  })\n  return urls\n}\n\nexport const selectListImageUrl = (state: RootState): string[] => {\n  if (!state.dataset.dataset) return []\n  let urls: string[] = []\n  urls = getUrlFromSubfolder(state.dataset.dataset.sub_folders, urls)\n  return urls\n}\n","import React, { DragEvent, MouseEvent, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\nimport ImageAlignment from '../ImageAlignment'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\nimport { getDatasetList } from 'store/slice/Dataset/DatasetAction'\nimport { selectListImageUrl } from 'store/slice/Dataset/DatasetSelector'\nimport { useSearchParams } from 'react-router-dom'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n    const [searchParams] = useSearchParams()\n    const projectID = searchParams.get('id')\n    const urls = useSelector(selectListImageUrl)\n\n    const [openPopupAlignment, setOpenPopupAlignment] = useState<{\n      open: boolean\n      params?: { nodeId: string; alignments: Params[] }\n    }>({\n      open: false,\n      params: { nodeId: '', alignments: [] },\n    })\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    useEffect(() => {\n      if (!projectID) return\n      dispatch(getDatasetList({ project_id: projectID }))\n      //eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n      const flowElementInput = flowElements[0]\n      if (\n        flowElementInput?.type &&\n        Object.keys(REACT_FLOW_NODE_TYPE_KEY).includes(flowElementInput.type)\n      ) {\n        dispatch(\n          setInputNodeFilePath({ nodeId: flowElementInput.id, filePath: urls }),\n        )\n      }\n      //eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n      const flowElementInput = flowElements[0]\n      if (\n        flowElementInput?.type &&\n        Object.keys(REACT_FLOW_NODE_TYPE_KEY).includes(flowElementInput.type)\n      ) {\n        dispatch(\n          setInputNodeFilePath({ nodeId: flowElementInput.id, filePath: urls }),\n        )\n      }\n      //eslint-disable-next-line\n    }, [flowElements[0]])\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n            onOpenImageAlignment: (flag, params) => {\n              setOpenPopupAlignment({ open: flag, params })\n            },\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                elements={flowElements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                onLoad={onLoad}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition.x, flowPosition.y]}\n                defaultZoom={flowPosition.zoom}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          <ImageAlignment\n            open={openPopupAlignment.open}\n            onClose={() => setOpenPopupAlignment({ open: false })}\n            urls={['/lib/test.nii', '/lib/test0.nii']}\n            params={openPopupAlignment.params}\n          />\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { Box } from '@mui/material'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer>\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n  height: '100%',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n    paddingTop: theme.spacing(1.125),\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, {useState} from 'react'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nimport {MouseType} from './ExperimentTable'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport {Button} from \"@mui/material\";\nimport ImageAlignment from \"../ImageAlignment\";\n\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n  data?: MouseType[]\n}>(({ open , data}) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Table size=\"small\" aria-label=\"purchases\">\n            <Head />\n            {data && data.map((item) => {\n              return (\n                <Body key={item?.unique_id} data={item}/>\n              )\n            })}\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>Output</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo<{\n    data: MouseType\n}>(({data}) => {\n  return (\n    <TableBody>\n      <TableRowOfFunction data={data} />\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = ({ data } : {data: MouseType}) => {\n    const {name, success, outputs, unique_id} = data\n    const [popup, setPopup] = useState(false)\n  return (\n    <>\n        <TableRow >\n            <TableCell component=\"th\" scope=\"row\">\n                {name}\n            </TableCell>\n            <TableCell>{unique_id}</TableCell>\n            <TableCell>\n                <ExperimentStatusIcon status={success} />\n            </TableCell>\n            <TableCell>\n                <Button disabled={success === 'success'? false : true} onClick={() => setPopup(true)}>\n                    <OpenInNewIcon />\n                </Button>\n            </TableCell>\n        </TableRow>\n        <ImageAlignment\n            open={popup}\n            urls={outputs}\n            onClose={() => setPopup(false)}\n            readOnly={true}\n        />\n    </>\n  )\n}\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const experiment = selectExperimentList(state)[uid]\n    if (experiment.status) {\n      return experiment.status\n    } else {\n      const functions = selectExperimentList(state)[uid].functions\n      const statusList = Object.values(functions).map((f) => f.status)\n      if (statusList.findIndex((status) => status === 'error') >= 0) {\n        return 'error'\n      } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n        return 'running'\n      } else {\n        return 'success'\n      }\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableRow from '@mui/material/TableRow'\n// import TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\n// import ReplayIcon from '@mui/icons-material/Replay'\n// import DeleteIcon from '@mui/icons-material/Delete'\n// import Dialog from '@mui/material/Dialog'\n// import DialogActions from '@mui/material/DialogActions'\n// import DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  // deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { EXPERIMENTS_STATUS} from 'store/slice/Experiments/ExperimentsType'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport {useNavigate} from \"react-router-dom\";\n\nexport type MouseType = {\n    unique_id: string\n    name: string\n    success: EXPERIMENTS_STATUS\n    outputs: string[]\n}\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\ntype Data = {\n    pagenation: object\n    records: {\n        id: number\n        name: string\n        data?: MouseType[]\n    }[]\n    nodeDict: object\n    edgeDict: object\n    startTime: string\n    finishTime: string\n}\n\nconst data: Data = {\n  \"pagenation\": {\n    \"page\": 0,\n    \"limit\": 0,\n    \"total\": 0,\n    \"total_pages\": 0\n  },\n  \"records\": [{\n      \"id\": 0,\n      \"name\": \"MOUSE1\",\n      \"data\": [{\n          \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n          \"name\": \"caiman_cnmf\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"caiman_mc_2rg3nrb410\",\n          \"name\": \"caiman_mc\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"input_0\",\n          \"name\": \"mouse2p_2_donotouse.tiff\",\n          \"success\": \"success\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]}\n        ]\n      },\n      {\n          \"id\": 1,\n          \"name\": \"MOUSE2\",\n          \"data\": [{\n              \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n              \"name\": \"caiman_cnmf\",\n              \"success\": \"error\",\n              \"outputs\": [\n                  \"/lib/test.nii\",\n                  \"/lib/test0.nii\",\n                  \"/lib/test1.nii\"\n              ]},\n              {\n                  \"unique_id\": \"caiman_mc_2rg3nrb410\",\n                  \"name\": \"caiman_mc\",\n                  \"success\": \"error\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]},\n              {\n                  \"unique_id\": \"input_0\",\n                  \"name\": \"mouse2p_2_donotouse.tiff\",\n                  \"success\": \"success\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]}\n          ]\n      },\n      {\n          \"id\": 2,\n          \"name\": \"MOUSE3\"\n      }\n  ],\n      \"nodeDict\": {},\n      \"edgeDict\": {},\n      \"startTime\":\"2023/05/16 04:28\",\n      \"finishTime\":\"2023/05/16 04:28\"\n}\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'studio_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  // const dispatch = useDispatch()\n  const navigate = useNavigate()\n  // const onClickReload = () => {\n  //   dispatch(getExperiments())\n  // }\n  // const [checkedList, setCheckedList] = useState<string[]>([])\n  // const [open, setOpen] = React.useState(false)\n  const recordsIsEmpty = experimentListKeys.length === 0\n  const startTime = data.startTime.split(' ')\n  const finishTime = data.finishTime.split(' ')\n\n  // const onClickDelete = () => {\n  //   setOpen(true)\n  // }\n  // const onClickCancel = () => {\n  //   setOpen(false)\n  // }\n  // const onClickOk = () => {\n  //   dispatch(deleteExperimentByList(checkedList))\n  //   setCheckedList([])\n  //   setOpen(false)\n  // }\n\n  const onClickBack = () => {\n    navigate('/projects')\n  }\n\n  const [page,\n    // setPage\n  ] = useState(0)\n\n  // const handleChangePage = (event: unknown, newPage: number) => {\n  //   setPage(newPage)\n  // }\n\n  const [rowsPerPage,\n    // setRowsPerPage\n  ] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  // const handleChangeRowsPerPage = (\n  //   event: React.ChangeEvent<HTMLInputElement>,\n  // ) => {\n  //   const newValue = parseInt(event.target.value, 10)\n  //   setRowsPerPage(newValue)\n  //   setPage(0)\n  // }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 5 }}>\n      <Button onClick={onClickBack}\n        sx={{width: 'fit-content', textTransform: 'unset', fontSize: 20}}\n      >\n        <KeyboardBackspaceIcon /> Projects\n      </Button>\n          <Box sx={{\n            display: 'flex',\n            gap : 4,\n            width: '90%',\n            margin: 'auto',\n            alignItems: 'flex-start'\n          }}>\n              <Typography>\n                  Status:\n              </Typography>\n              <Box>\n                  <ExperimentStatusIcon status={'success'}/>\n              </Box>\n              <Box>\n                  <Typography>Start time: {startTime[0]} {startTime[1]}</Typography>\n                  <Typography>Finish time: {finishTime[0]} {finishTime[1]}</Typography>\n              </Box>\n          </Box>\n          {/*<Box*/}\n          {/*    sx={{*/}\n          {/*        display: 'flex',*/}\n          {/*        justifyContent: 'flex-end',*/}\n          {/*        alignItems: 'center',*/}\n          {/*    }}*/}\n          {/*>*/}\n              {/*<Button*/}\n              {/*  sx={{*/}\n              {/*    margin: (theme) => theme.spacing(0, 1, 1, 0),*/}\n              {/*  }}*/}\n              {/*  variant=\"outlined\"*/}\n              {/*  endIcon={<ReplayIcon />}*/}\n              {/*  onClick={onClickReload}*/}\n              {/*>*/}\n              {/*  Reload*/}\n              {/*</Button>*/}\n              {/*<Button*/}\n              {/*  sx={{*/}\n              {/*    marginBottom: (theme) => theme.spacing(1),*/}\n              {/*  }}*/}\n              {/*  variant=\"outlined\"*/}\n              {/*  color=\"error\"*/}\n              {/*  endIcon={<DeleteIcon />}*/}\n              {/*  onClick={onClickDelete}*/}\n              {/*  disabled={checkedList.length === 0}*/}\n              {/*>*/}\n              {/*  Delete*/}\n              {/*</Button>*/}\n          {/*</Box>*/}\n          {/*<Dialog open={open}>*/}\n          {/*    <DialogTitle>Are you sure you want to delete?</DialogTitle>*/}\n          {/*    <DialogActions>*/}\n          {/*        <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">*/}\n          {/*            Cancel*/}\n          {/*        </Button>*/}\n          {/*        <Button onClick={onClickOk} variant=\"outlined\" autoFocus>*/}\n          {/*            OK*/}\n          {/*        </Button>*/}\n          {/*    </DialogActions>*/}\n          {/*</Dialog>*/}\n          <Paper\n              elevation={0}\n              variant=\"outlined\"\n              sx={{\n                  flexGlow: 1,\n                  height: '100%',\n                  width: '90%',\n                  margin: 'auto'\n              }}\n          >\n              {\n                  data.records.map((item) => {\n                      const { name, id } = item\n                      return (\n                          <TableContainer key={id} component={Paper} elevation={0}>\n                              <Table aria-label=\"collapsible table\">\n                                  <TableBody>\n                                      <ExperimentUidContext.Provider\n                                          value={String(id)}\n                                          key={id}\n                                      >\n                                          <RowItem\n                                              data={item.data}\n                                              name={name}\n                                          />\n                                      </ExperimentUidContext.Provider>\n                                      {emptyRows > 0 && (\n                                          <TableRow\n                                              style={{\n                                                  height: 53 * emptyRows,\n                                              }}\n                                          >\n                                              <TableCell colSpan={10} />\n                                          </TableRow>\n                                      )}\n                                      {recordsIsEmpty && (\n                                          <TableRow>\n                                              <TableCell colSpan={10}>\n                                                  <Typography\n                                                      sx={{\n                                                          color: (theme) => theme.palette.text.secondary,\n                                                          display: 'flex',\n                                                          alignItems: 'center',\n                                                          justifyContent: 'center',\n                                                          height: '300px',\n                                                          textAlign: 'center',\n                                                      }}\n                                                      variant=\"h6\"\n                                                  >\n                                                      No Rows...\n                                                  </Typography>\n                                              </TableCell>\n                                          </TableRow>\n                                      )}\n                                  </TableBody>\n                              </Table>\n                          </TableContainer>\n                      )\n                  })\n              }\n              {/*<TablePagination*/}\n              {/*    rowsPerPageOptions={[5, 10, 25]}*/}\n              {/*    component=\"div\"*/}\n              {/*    count={experimentListKeys.length}*/}\n              {/*    rowsPerPage={rowsPerPage}*/}\n              {/*    page={page}*/}\n              {/*    onPageChange={handleChangePage}*/}\n              {/*    onRowsPerPageChange={handleChangeRowsPerPage}*/}\n              {/*/>*/}\n          </Paper>\n    </Box>\n  )\n})\n\nconst RowItem = React.memo<{\n  name: string\n  data?: MouseType[]\n}>(({ name, data }) => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <React.Fragment>\n      <TableRow\n        onClick={() => data && setOpen((prevOpen) => !prevOpen)}\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell\n          sx={{padding: '20px',\n               display: 'flex',\n               alignItems: 'center'\n          }}\n        >\n          {name} {data && (!open ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />)}\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable data={data} open={open} />\n    </React.Fragment>\n  )\n})\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex', height: 'calc(100% - 58px)' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100%',\n          padding: 16,\n        }}\n      >\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import {Box, keyframes, styled} from \"@mui/material\";\n\nconst Loading = () => {\n    return (\n        <LoaderWrapper>\n            <Loader />\n        </LoaderWrapper>\n    )\n}\n\nconst LoaderWrapper = styled(Box)(({theme}) => ({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    position: 'fixed',\n    backgroundColor: 'rgba(255,255,255,0.6)',\n    zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme })=> ({\n    display: 'block',\n    width: 48,\n    height: 48,\n    borderRadius: '50%',\n    position: 'relative',\n    zIndex: 100,\n    top: 'calc(50% - 24px)',\n    left: 'calc(50% - 24px)',\n    animation: `${rotate} 1s linear infinite`,\n    '&:before': {\n        content: \"''\",\n        boxSizing: 'border-box',\n        position: 'absolute',\n        inset: 0,\n        borderRadius: '50%',\n        border: '3px solid rgba(0,0,0,0.8)',\n        animation: `${prixClipFix} 2s linear infinite`\n    }\n}))\n\nexport default Loading\n","import {\n  styled,\n  Box,\n  Typography,\n  Container,\n  Button,\n  DialogContent,\n  Dialog,\n  DialogActions,\n  DialogContentText\n} from \"@mui/material\";\nimport { useCallback, useState } from \"react\";\nimport { loadParams, saveParams } from \"api/auth\";\nimport Loading from \"../common/Loading\";\n\ntype InputType = {\n  text: string\n  value?: string\n  onChange: (e: any) => void\n  error: string\n}\n\ntype ParamsType = {\n  cut_coords: any\n  threshold: string\n}\n\ntype AlertDialogProps = {\n  open: boolean\n  handleClose: () => void\n  onSaveParams: () => void\n}\n\nconst regexThreshold = /[^0-9,.-]/\nconst regexCutCoords = /[^0-9,-]/\n\nconst  AlertDialog = ({open, handleClose, onSaveParams}: AlertDialogProps) => {\n  return (\n      <div>\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogContent>\n            <DialogContentText>\n              Save parameters OK?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={onSaveParams} autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  );\n}\n\nconst WrapperInput = ({text, value, onChange, error} : InputType) => {\n    return (\n        <Box sx={{display: 'flex'}}>\n              <Typography sx={{minWidth: 100}}>{text}</Typography>\n              <Box sx={{display: 'flex', flexDirection: 'column'}}>\n                <VisualizeInput\n                    name={text}\n                    sx={{width: 250}}\n                    value={value}\n                    onChange={(event: any) => onChange(event)}\n                    onBlur={(event: any) => onChange(event)}\n                />\n                <SpanError>{error}</SpanError>\n              </Box>\n        </Box>\n    )\n}\n\nconst VisualizeNew = () => {\n  const [open, setOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false)\n  const [dataParams, setDataParams] = useState<ParamsType>({\n    cut_coords: {\n      coronal: '',\n      sagittal: '',\n      horizontal: '',\n    },\n    threshold: ''\n  })\n  const [errors, setErrors] = useState<ParamsType>({\n    cut_coords: {\n      coronal: '',\n      sagittal: '',\n      horizontal: '',\n    },\n    threshold: ''\n  })\n\n  const onLoadParams = async () => {\n    setIsLoading(true)\n    try {\n      const res = await loadParams()\n      const { coronal, sagittal, horizontal} = res.cut_coords\n      const newCutCoords = {\n        coronal: coronal.join(','),\n        sagittal: sagittal.join(','),\n        horizontal: horizontal.join(',')\n      }\n      setDataParams({cut_coords: newCutCoords, threshold: res.threshold.join(',')})\n    }\n    finally {\n      setIsLoading(false)\n      setErrors({\n        cut_coords: {\n          coronal: '',\n          sagittal: '',\n          horizontal: '',\n        },\n        threshold: ''\n      }\n      )}\n  }\n\n  const toNumberArr = useCallback((value: string) => {\n    return value.split(',').map((item: string) => Number(item))\n  },[])\n\n  const onSaveParams = async () => {\n    const { coronal, sagittal, horizontal} = dataParams.cut_coords\n    const newParams = {\n      threshold: toNumberArr(dataParams.threshold),\n      cut_coords: {\n        coronal: toNumberArr(coronal),\n        sagittal: toNumberArr(sagittal),\n        horizontal: toNumberArr(horizontal)\n      }\n    }\n    setIsLoading(true)\n    try {\n      await saveParams(newParams)\n    }\n    finally {\n      setIsLoading(false)\n      setOpen(false)\n    }\n  }\n\n  const validateParams = (value: string, name: string) => {\n    if (!value) return 'This field is required'\n    const newArr = value.split(',')\n    const checkArr = newArr.some((item: string) => !Number(item) && item !== '0')\n    if (name === 'threshold') {\n      if (checkArr || newArr.length !== 2) {\n        return 'wrong format [float, float]'\n      }\n      return ''\n    }\n    if(checkArr || newArr.length !== 5) {\n      return 'wrong format [int, int, int, int, int]'\n    }\n    return ''\n  }\n\n  const onChangeParams = (event: any) => {\n    let { value, name } = event.target\n    if(name === 'threshold') setErrors({...errors, threshold: validateParams(value, name)})\n    if(name !== 'threshold') setErrors({...errors, cut_coords: {...errors.cut_coords, [name]: validateParams(value, name)}})\n    if((name === 'threshold' && regexThreshold.test(value)) || (name !== 'threshold' && regexCutCoords.test(value))) {\n      const checkChar = (checkChar: any, value: string) => {\n        const arrValue = value.split('')\n        const index = arrValue.findIndex((item: string) => {\n          if(name === 'threshold') {\n            return regexThreshold.test(item)\n          }\n          return regexCutCoords.test(item)\n        })\n        if(index !== -1) {\n          value = value.replace(value[index], '')\n          return checkChar(checkChar, value)\n        }\n        return value\n      }\n      value = checkChar(checkChar, value)\n    }\n    if(name === 'threshold') {\n       setDataParams({...dataParams, threshold: value})\n      return\n    }\n    const newCutCoords = {...dataParams.cut_coords, [name]: value}\n    setDataParams({...dataParams, cut_coords: newCutCoords})\n  }\n  \n  const handleClickOpen = () => {\n    const { coronal, sagittal, horizontal} = dataParams.cut_coords\n    const { cut_coords } = errors\n    setErrors({\n      cut_coords: {\n        coronal: validateParams(coronal, 'coronal'),\n        sagittal: validateParams(sagittal, 'sagittal'),\n        horizontal: validateParams(horizontal, 'horizontal'),\n      },\n      threshold: validateParams(dataParams.threshold, 'threshold')\n    })\n    if( !coronal || ! sagittal || !horizontal || !dataParams.threshold ) return\n    if(Object.keys(cut_coords).some(item => !!cut_coords[item]) || errors.threshold) return\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n      <Container>\n          <AlertDialog\n            open={open}\n            handleClose={handleClose}\n            onSaveParams={onSaveParams}\n          />\n          <Title>STAT IMAGES</Title>\n          <VisualizeInputWrapper>\n            <Box>\n                <WrapperInput\n                    text={'threshold'}\n                    value={dataParams?.threshold || ''}\n                    onChange={onChangeParams}\n                    error={errors.threshold}\n                />\n            </Box>\n            <CutCoords>\n                <Typography>cut_coords</Typography>\n                <Box>\n                    <WrapperInput\n                        text={'coronal'}\n                        value={dataParams?.cut_coords.coronal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.coronal}\n                    />\n                    <WrapperInput\n                        text={'sagittal'}\n                        value={dataParams?.cut_coords.sagittal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.sagittal}\n                    />\n                    <WrapperInput\n                        text={'horizontal'}\n                        value={dataParams?.cut_coords.horizontal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.horizontal}\n                    />\n                </Box>\n            </CutCoords>\n            <Box sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 2\n            }}>\n              <ParamsButton onClick={handleClickOpen}>Save Params</ParamsButton>\n              <ParamsButton onClick={onLoadParams}>Load Params</ParamsButton>\n            </Box>\n          </VisualizeInputWrapper>\n          <ButtonWrapper>\n              <VisualizeButton>GENERATE</VisualizeButton>\n              <VisualizeButton>DOWNLOAD</VisualizeButton>\n          </ButtonWrapper>\n          <ImageWrapper>\n              <Image src={'/Images/image-visualize.png'} alt={''} />\n          </ImageWrapper>\n        {\n          isLoading &&\n          <Loading />\n        }\n      </Container>\n  )\n}\n\nconst Title = styled(Typography)({\n    fontSize: 25,\n    fontWeight: 700,\n    margin: '50px 0',\n})\n\nconst CutCoords = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeInputWrapper = styled(Box)({\n    display: 'flex',\n    justifyContent: 'space-between'\n})\n\nconst ParamsButton = styled('button')({\n  height: 'fit-content',\n  padding: 5,\n  '&:hover': {\n    cursor: 'pointer',\n    background: '#d1d7e0',\n  }\n})\n\nconst ButtonWrapper = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeButton = styled('button')({\n    border: '1px solid #006fff',\n    color: '#006fff',\n    padding: 10,\n    '&:hover': {\n        cursor: 'pointer',\n        background: '#d1d7e0'\n    }\n})\n\nconst VisualizeInput = styled('input')({\n    height: 'fit-content',\n})\n\nconst SpanError = styled('span')({\n  color: 'red'\n})\n\nconst ImageWrapper = styled(Box)({\n    width: '80%',\n    margin: 'auto'\n})\n\nconst Image = styled('img')({\n    width: '100%',\n    objectFit: 'contain',\n})\n\nexport default VisualizeNew\n","import React from 'react'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Toolbar from '@mui/material/Toolbar'\n// import IconButton from '@mui/material/IconButton'\n// import Tooltip from '@mui/material/Tooltip'\nimport { styled } from '@mui/material/styles'\n// import GitHubIcon from '@mui/icons-material/GitHub'\n// import MenuBookIcon from '@mui/icons-material/MenuBook'\n\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport FlowChart from './FlowChart/FlowChart'\nimport Experiment from './Experiment/Experiment'\nimport { Box } from '@mui/material'\nimport { useSearchParams } from 'react-router-dom'\nimport VisualizeNew from \"./VisualizeNew\";\n\nconst Project: React.FC = () => {\n  const [searchParams, setParams] = useSearchParams()\n  const [value, setValue] = React.useState(Number(searchParams.get('tab') || 0))\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    searchParams.set('tab', String(newValue))\n    setParams(searchParams)\n    setValue(newValue)\n  }\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n  return (\n    <RootDiv>\n      <StyledAppBar color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          {/* <img src={studioLogo} alt=\"studio\" width={75} height={50} /> */}\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Result\" {...a11yProps(1)} />\n            <Tab label=\"Visualize\" {...a11yProps(2)} />\n          </Tabs>\n          {/*<Tooltip title=\"GitHub repository\">*/}\n          {/*  <IconButton*/}\n          {/*    sx={{ mr: 1 }}*/}\n          {/*    href=\"https://github.com/oist/studio\"*/}\n          {/*    target=\"_blank\"*/}\n          {/*  >*/}\n          {/*    <GitHubIcon />*/}\n          {/*  </IconButton>*/}\n          {/*</Tooltip>*/}\n          {/*<Tooltip title=\"Documentation\">*/}\n          {/*  <IconButton*/}\n          {/*    href=\"https://studio.readthedocs.io/en/latest/\"*/}\n          {/*    target=\"_blank\"*/}\n          {/*  >*/}\n          {/*    <MenuBookIcon />*/}\n          {/*  </IconButton>*/}\n          {/*</Tooltip>*/}\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <VisualizeNew />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\nconst StyledAppBar = styled(Box)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Project\n","export const PROJECT_SLICE_NAME = 'project'\n\nexport enum ProjectTypeValue {\n  FACTOR = 0,\n  WITHIN_FACTOR = 1,\n}\n\nexport type CurrentProject = {\n  id: string\n  created_time: string\n  image_count: number\n  project_name: string\n  project_type: ProjectTypeValue\n  updated_time: string\n}\n\nexport type Project = {\n  projects: ProjectType[]\n  currentProject?: CurrentProject\n}\n\nexport type ProjectCreate = {\n  project_name: string\n  project_type: ProjectTypeValue\n  image_count: number\n}\n\nexport type ProjectType = {\n  id: number | string\n  uid?: number | string\n  created_time: string\n  updated_time: string\n  role?: string | number\n} & ProjectCreate\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useSearchParams, useLocation } from 'react-router-dom'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\nimport {\n  fetchExperiment,\n  getExperiments,\n} from '../Experiments/ExperimentsActions'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const [searchParams] = useSearchParams()\n  const location = useLocation()\n  const [isEdited] = useState<{ edited: boolean }>(\n    location.state as { edited: boolean },\n  )\n\n  React.useEffect(() => {\n    const projectId = searchParams.get('id')\n    projectId && !isEdited && dispatch(fetchExperiment(projectId.toString()))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.START_SUCCESS) {\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n        dispatch(getExperiments())\n      }\n      setPrevStatus(status)\n    }\n  }, [dispatch, status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import { createContext, useContext } from 'react'\n\nexport type User = {\n  created_time: null | string\n  display_name: null | string\n  email: string\n  last_login_time: null | string\n  role: string\n  uid: string\n}\n\nexport const UserContext = createContext<{ user?: User; setUser: Function }>({\n  setUser: () => null,\n})\n\nexport const useUser = () => useContext(UserContext)\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useRef, useState } from 'react'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { useUser } from 'providers'\nimport { removeToken } from 'utils/auth'\nimport { useNavigate } from 'react-router-dom'\n\nconst Header: FC = () => {\n  const [open, setOpen] = useState(false)\n  const navigate = useNavigate()\n  const { user } = useUser()\n\n  const refMenu = useRef<HTMLDivElement | null>(null)\n\n  const closeMenu = () => {\n    setTimeout(() => {\n      setOpen(false)\n    }, 100)\n  }\n\n  const onClick = () => {\n    if (open) {\n      return refMenu.current?.blur?.()\n    }\n    setOpen(true)\n  }\n\n  const onLogout = () => {\n    removeToken()\n    navigate('/login')\n  }\n\n  const onNavigateAccount = () => {\n    navigate('/account')\n  }\n\n  return (\n    <HeaderWrapper>\n      <BoxWrapper>\n        <Image src=\"/static/favicon.ico\" alt=\"logo\" />\n        <TitleLogo>Studio</TitleLogo>\n      </BoxWrapper>\n      <BoxMenu ref={refMenu} tabIndex={1} onClick={onClick} onBlur={closeMenu}>\n        <AccountCircleIcon />\n        {open && (\n          <BoxDropdown>\n            <BoxInfo>\n              <AccountCircleIcon />\n              <Box>\n                <Typography>{user?.display_name}</Typography>\n                <Typography>{user?.email}</Typography>\n              </Box>\n            </BoxInfo>\n            <BoxMenuItem onClick={onNavigateAccount}>\n              <PortraitIcon /> Account Profile\n            </BoxMenuItem>\n            <BoxMenuItemLogout onClick={onLogout}>\n              SIGN OUT\n            </BoxMenuItemLogout>\n          </BoxDropdown>\n        )}\n      </BoxMenu>\n    </HeaderWrapper>\n  )\n}\n\nconst BoxDropdown = styled(Box)({\n  position: 'absolute',\n  backgroundColor: '#ffffff',\n  padding: '8px 16px 0',\n  top: 30,\n  right: 0,\n  listStyleType: 'none',\n  backgroundClip: 'padding-box',\n  borderRadius: 3,\n  outline: 'none',\n  boxShadow:\n    '0 6px 16px 0 rgb(0 0 0 / 8%), 0 3px 6px -4px rgb(0 0 0 / 12%), 0 9px 28px 8px rgb(0 0 0 / 5%)',\n  cursor: 'default',\n  zIndex: 1,\n  minWidth: 250,\n})\n\nconst Image = styled('img')({\n  height: 46,\n})\n\nconst BoxWrapper = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 8,\n})\n\nconst BoxMenu = styled(BoxWrapper)({\n  cursor: 'pointer',\n  position: 'relative',\n  userSelect: 'none',\n})\n\nconst BoxInfo = styled(BoxWrapper)({\n  borderBottom: `1px solid #e7e7e7`,\n  padding: '8px 0',\n  cursor: 'default',\n})\n\nconst BoxMenuItem = styled(BoxWrapper)({\n  padding: '8px 0',\n  cursor: 'pointer',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.05) translateX(5px)',\n  },\n})\n\nconst BoxMenuItemLogout = styled(BoxMenuItem)({\n  color: '#1a73e8',\n  fontWeight: 600,\n  marginTop: 30,\n  justifyContent: 'flex-end',\n  '&:hover': {\n    transform: 'scale(1.02)',\n  },\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nconst HeaderWrapper = styled(Box)({\n  height: 48,\n  backgroundColor: '#E1DEDB',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  color: 'rgba(0, 0, 0, 0.87)',\n  boxShadow:\n    '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n  position: 'fixed',\n  width: 'calc(100% - 32px)',\n  padding: '0 16px',\n  zIndex: 9999,\n})\n\nexport default Header\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useEffect, useState } from 'react'\nimport Header from './Header'\nimport { KeyboardBackspace } from '@mui/icons-material'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { User, UserContext, useUser } from 'providers'\nimport {\n  getToken,\n  isAdmin,\n  removeExToken,\n  removeToken,\n} from 'utils/auth'\nimport { getMe } from 'api/auth'\n\nexport const drawerWidth = 240\n\nconst ignorePaths = ['/login', '/account-delete', '/reset-password']\n\nconst Layout: FC = ({ children }) => {\n  const [user, setUser] = useState<User | undefined>()\n  const location = useLocation()\n  const [width, setWidth] = useState(drawerWidth)\n  const navigate = useNavigate()\n  const onResize = () => {\n    setWidth(width === drawerWidth ? 54 : drawerWidth)\n  }\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname])\n\n  const checkkAuth = async () => {\n    if (user) return\n    const token = getToken()\n    const isPageLogin = ['/login', '/reset-password'].includes(\n      window.location.pathname,\n    )\n    try {\n      if (token) {\n        const data = await getMe()\n        setUser(data)\n        if (isPageLogin) navigate('/')\n      } else if (!isPageLogin) throw new Error('fail auth')\n    } catch {\n      removeToken()\n      removeExToken()\n      navigate('/login')\n    }\n  }\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <LayoutWrapper>\n        {ignorePaths.includes(location.pathname) ? null : <Header />}\n        <ContentBodyWrapper>\n          {ignorePaths.includes(location.pathname) ? null : (\n            <MenuLeft onResize={onResize} width={width} />\n          )}\n          <ChildrenWrapper\n            style={{\n              width: `calc(100% - ${\n                ignorePaths.includes(location.pathname) ? 0 : width + 10\n              }px)`,\n              height: '100%',\n              overflow: 'auto',\n            }}\n          >\n            {children}\n          </ChildrenWrapper>\n        </ContentBodyWrapper>\n      </LayoutWrapper>\n    </UserContext.Provider>\n  )\n}\n\nconst MenuLeft: FC<{ onResize: () => void; width: number }> = ({\n  onResize,\n  width,\n}) => {\n  const { user } = useUser()\n  const { pathname } = useLocation()\n  const isClose = width !== drawerWidth\n  return (\n    <MenuLeftWrapper style={{ width, minWidth: width }}>\n      <BoxBack>\n        <ButtonBack\n          onClick={onResize}\n          style={{ transform: `rotate(${width === drawerWidth ? 0 : 180}deg)` }}\n        >\n          <BoxDivider />\n          <KeyboardBackspaceIcon />\n        </ButtonBack>\n      </BoxBack>\n      <MenuList>\n        <LinkWrapper to=\"/\">\n          <MenuItem isClose={isClose} active={pathname === '/'}>\n            <HomeIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Dashboard\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/database\">\n          <MenuItem isClose={isClose} active={pathname === '/database'}>\n            <StorageIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Database\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/projects\">\n          <MenuItem isClose={isClose} active={pathname.includes('/projects')}>\n            <SourceIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Projects\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        {isAdmin(user?.role) ? (\n          <LinkWrapper to=\"/account-manager\">\n            <MenuItem\n              isClose={isClose}\n              active={pathname === '/account-manager'}\n            >\n              <GroupIcon />\n              <TypographyMenu\n                style={{ opacity: Number(width === drawerWidth) }}\n              >\n                Account Manager\n              </TypographyMenu>\n            </MenuItem>\n          </LinkWrapper>\n        ) : null}\n      </MenuList>\n    </MenuLeftWrapper>\n  )\n}\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: 48,\n  height: 'calc(100% - 48px)',\n  paddingRight: 10,\n  overflow: 'hidden',\n}))\n\nconst ChildrenWrapper = styled(Box)(() => ({\n  height: 'calc(100% - 10px)',\n  display: 'flex',\n  paddingTop: 10,\n  paddingLeft: 10,\n}))\n\nconst MenuLeftWrapper = styled(Box)({\n  height: '100%',\n  backgroundColor: '#283237',\n  overflow: 'auto',\n  transition: 'all 0.3s',\n})\n\nconst BoxBack = styled(Box)({\n  width: '100%',\n  height: 54,\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonBack = styled(Box)({\n  height: 54,\n  width: 54,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n})\n\nconst BoxDivider = styled(Box)({\n  height: 15,\n  width: 1,\n  backgroundColor: '#ffffff',\n  marginRight: -2,\n})\n\nconst KeyboardBackspaceIcon = styled(KeyboardBackspace)({\n  color: '#ffffff',\n  fontSize: 20,\n})\n\nconst MenuList = styled('ul')({\n  margin: 0,\n  padding: 0,\n})\n\nconst MenuItem = styled('li', {\n  shouldForwardProp: (props) => props !== 'isClose' && props !== 'active',\n})<{ isClose: boolean; active: boolean }>(({ isClose, active }) => ({\n  padding: '0 15px',\n  color: '#ffffff',\n  listStyle: 'none',\n  height: 38,\n  minHeight: 38,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  width: 'calc(100% - 30px)',\n  minWidth: 'max-content',\n  transition: 'all 0.3s',\n  cursor: 'pointer',\n  backgroundColor: active ? 'rgba(255,255,255,0.4) !important' : 'transparent',\n  '&:hover': {\n    transform: isClose\n      ? 'scale(1.05) translateX(2px)'\n      : 'scale(1.05) translateX(10px)',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n  },\n}))\n\nconst TypographyMenu = styled(Typography)({\n  lineHeight: '20px',\n  marginTop: 4,\n  fontWeight: 500,\n  transition: 'opacity 0.3s',\n})\n\nexport default Layout\n","import { Box, styled, Typography } from '@mui/material'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Link } from 'react-router-dom'\nimport { useUser } from 'providers'\nimport { isAdmin } from 'utils/auth'\n\nconst Dashboard = () => {\n  const { user } = useUser()\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/database\">\n            <BoxMenu>\n              <Box>\n                <SourceIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/projects\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Projects</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/account\">\n            <BoxMenu>\n              <Box>\n                <AccountCircleIcon fontSize=\"large\" />\n                <TitleMenu>Account</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {isAdmin(user?.role) ? (\n            <LinkWrapper to=\"/account-manager\">\n              <BoxMenu>\n                <Box>\n                  <GroupIcon fontSize=\"large\" />\n                  <TitleMenu>Account Manager</TitleMenu>\n                </Box>\n              </BoxMenu>\n            </LinkWrapper>\n          ) : null}\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { styled } from '@mui/material'\n\nexport const Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\nimport Loading from \"../common/Loading\";\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description?: string\n  isLoading?: boolean\n}\nconst ModalDeleteAccount: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description || 'Delete account will erase all of your data.'}This\n            operation cannot be undone. To continue, type \"\n            <span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <ButtonConfirm onClick={onConfirm}>{titleSubmit}</ButtonConfirm>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default ModalDeleteAccount\n","import { Box, styled, Typography } from '@mui/material'\nimport { FC, useCallback } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport { ProjectType } from 'store/slice/Project/ProjectType'\nimport dayjs from \"dayjs\";\n\nexport type Column = {\n  width?: number | string\n  title: string\n  dataIndex?: string\n  name?: string\n  align?: string\n  filter?: boolean\n  render?: (\n    item: ProjectType,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined\n}\n\ntype TableComponentProps = {\n  data?: ProjectType[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  className?: string\n  columns?: Column[]\n  paginate?: {\n    page: number\n    total: number\n    page_size: number\n    breakLabel?: string\n    nextLabel?: string\n    previousLabel?: string\n    pageRangeDisplayed?: number\n    renderOnZeroPageCount?: string\n    onPageChange?: (selectedItem: { selected: number }) => any\n  }\n}\n\nconst TableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    data = [],\n    columns = [],\n    paginate,\n    className,\n    orderBy,\n    orderKey,\n  } = props\n  const pageCount = (paginate?.total || 0) / (paginate?.page_size || 1)\n\n  const renderCol = useCallback(\n    (col: Column, item: ProjectType, index: number) => {\n      if(col.name === 'created_time' || col.name === 'updated_time') {\n        return dayjs(item[col.name]).format('YYYY-MM-DD HH:mm')\n      }\n      const value = item[(col.name || col.dataIndex || '') as keyof ProjectType]\n      if (col.render) return col.render(item, value, index)\n      return value || null\n    },\n    [],\n  )\n\n  return (\n    <Box className={className}>\n      <Table>\n        <Thead>\n          <Tr>\n            {columns.map((col, iCol) => {\n              const nameCol = col.name || col.dataIndex || ''\n              return (\n                <Th\n                  style={{ width: col.width, textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {col.title}\n                  <ArrowDownwardIconOrder\n                    style={{\n                      transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                      opacity:\n                        orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                  />\n                </Th>\n              )\n            })}\n          </Tr>\n        </Thead>\n        <TBody>\n          {data.map((item, index) => (\n            <Tr key={item.id || index}>\n              {columns.map((col, iCol) => (\n                <Td\n                  style={{ textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {renderCol(col, item, index)}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n        </TBody>\n      </Table>\n      {!data.length ? <NoData>No Data</NoData> : null}\n      {pageCount ? (\n        <MyPaginate\n          disableInitialCallback\n          marginPagesDisplayed={3}\n          pageRangeDisplayed={3}\n          breakLabel={'...'}\n          pageCount={pageCount}\n          previousLabel={<KeyboardArrowLeftIcon />}\n          nextLabel={<ChevronRightIcon />}\n          {...paginate}\n        />\n      ) : null}\n    </Box>\n  )\n}\n\nconst MyPaginate = styled(ReactPaginate)<any>`\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  list-style-type: none;\n  padding: 1rem 0;\n  li a {\n    padding: 0.6rem 1rem;\n    cursor: pointer;\n  }\n  li.previous,\n  li.next {\n    margin-top: -2px;\n  }\n  li.previous.disabled,\n  li.next.disabled {\n    opacity: 0.4;\n  }\n  li.previous a,\n  li.next a,\n  li.break a {\n    border-color: transparent;\n  }\n  li.active a {\n    background-color: #0366d6;\n    border-color: transparent;\n    color: white;\n    min-width: 32px;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n  li.selected {\n    color: #1677ff;\n    font-weight: 600;\n  }\n`\n\nconst Table = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  maxWidth: 155,\n  wordBreak: 'break-word',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nexport default TableComponent\n","import { InputProps, styled, Typography } from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n  errorMessage: string\n  value?: string\n}\n\nconst InputError = ({\n  errorMessage,\n  onChange,\n  value,\n  type,\n  onBlur,\n  name,\n}: InputErrorProps) => {\n  return (\n    <>\n      <Input\n        autoComplete=\"Off\"\n        error={!!errorMessage}\n        onChange={onChange}\n        value={value}\n        type={type}\n        name={name}\n        onBlur={onBlur}\n      />\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\n\nexport default InputError\n","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  name?: string\n  options: {\n    code: number\n    name: string\n  }[]\n}\n\nconst SelectError: FC<SelectErrorProps> = ({\n  value,\n  onChange,\n  onBlur,\n  errorMessage,\n  options,\n  name,\n}) => {\n  return (\n    <>\n      <SelectModal\n        name={name}\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: { code: number, name: string }) => {\n          return (\n            <MenuItem key={item.code} value={item.code}>\n              {item.name}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import { Box, Button, SelectChangeEvent, styled } from '@mui/material'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport TableComponent, { Column } from 'components/Table'\nimport {\n  ChangeEvent,\n  FC,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InputError from 'components/common/InputError'\nimport SelectError from 'components/common/SelectError'\nimport { createUser, deleteUser, editUser, listUser } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ProjectType } from 'store/slice/Project/ProjectType'\nimport { isAdmin, optionsRole } from 'utils/auth'\nimport Loading from 'components/common/Loading'\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setIsOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role: '',\n  lab: '',\n  display_name: '',\n  confirmPassword: '',\n}\n\nexport const regexPassword = /^(?=.*\\d)(?=.*[!#$%&()*+,-./@_|])(?=.*[a-zA-Z]).{6,255}$/\nexport const regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\nexport const regexIgnoreS = /[^!#$%&()*+,-./@_|a-zA-Z0-9]/\n\nconst ModalComponent: FC<ModalComponentProps> = ({\n  onSubmitEdit,\n  setIsOpenModal,\n  dataEdit,\n}) => {\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n    dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255, value)\n    if (error) return error\n    if (!regexEmail.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (\n    value: string,\n    isConfirm: boolean = false,\n    values?: { [key: string]: string },\n  ): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255, value)\n    if (errorLength) {\n      return errorLength\n    }\n    let datas = values || formData\n    if (!regexPassword.test(value) && value) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)){\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    if (isConfirm && datas.password !== value && value) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number, value?: string) => {\n    if (!value) return 'This field is required'\n    return validateLength(name, length, value)\n  }\n\n  const validateLength = (name: string, length: number, value?: string) => {\n    if (value && value.length > length)\n      return `The text may not be longer than ${length} characters`\n    if (formData[name]?.length && value && value.length > length) {\n      return `The text may not be longer than ${length} characters`\n    }\n    return ''\n  }\n\n  const validateForm = (): { [key: string]: string } => {\n    const errorName = validateField('display_name', 100, formData.display_name)\n    const errorEmail = validateEmail(formData.email)\n    const errorLab = validateField('lab', 100, formData.lab)\n    const errorRole = validateField('role', 50, formData.role)\n    const errorPassword = validatePassword(formData.password)\n    const errorConfirmPassword = validatePassword(\n      formData.confirmPassword,\n      true,\n    )\n    return {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      display_name: errorName,\n      lab: errorLab,\n      role: errorRole,\n    }\n  }\n\n  const onChangeData = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | SelectChangeEvent,\n    length: number,\n  ) => {\n    const { value, name } = e.target\n    const newDatas = { ...formData, [name]: value }\n    setFormData(newDatas)\n    let error: string =\n      name === 'email'\n        ? validateEmail(value)\n        : validateField(name, length, value)\n    let errorConfirm = errors.confirmPassword\n    if (name.toLowerCase().includes('password')) {\n      error = validatePassword(value, name === 'confirmPassword', newDatas)\n      if (name !== 'confirmPassword' && formData.confirmPassword) {\n        errorConfirm = validatePassword(\n          newDatas.confirmPassword,\n          true,\n          newDatas,\n        )\n      }\n    }\n    setErrors({ ...errors, confirmPassword: errorConfirm, [name]: error })\n  }\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const newErrors = validateForm()\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.uid, formData)\n      setTimeout(() => {\n        if (!dataEdit?.uid) {\n          alert('Your account has been created successfully!')\n        } else {\n          alert('Your account has been successfully updated!')\n        }\n      }, 1)\n      setIsOpenModal(false)\n    } catch {\n      if (!dataEdit?.uid) {\n        setTimeout(() => {\n          alert('This email already exists!')\n        }, 300)\n      }\n    } finally {\n      setIsDisabled(false)\n    }\n  }\n  const onCancel = () => {\n    setIsOpenModal(false)\n  }\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.uid ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Lab: </LabelModal>\n          <InputError\n            name=\"lab\"\n            value={formData?.lab || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.lab}\n          />\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            name=\"display_name\"\n            value={formData?.display_name || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.display_name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role || ''}\n            options={optionsRole}\n            name=\"role\"\n            onChange={(e) => onChangeData(e, 50)}\n            onBlur={(e) => onChangeData(e, 50)}\n            errorMessage={errors.role}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            name=\"email\"\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 255)}\n            onBlur={(e) => onChangeData(e, 255)}\n            errorMessage={errors.email}\n          />\n          {!dataEdit?.uid ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                name=\"password\"\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                name=\"confirmPassword\"\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n        </ButtonModal>\n      </ModalBox>\n      {isDisabled ? <Loading /> : null}\n    </Modal>\n  )\n}\nconst AccountManager = () => {\n  const [openDelete, setOpenDelete] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [dataEdit, setDataEdit] = useState({})\n  const [idDel, setIdDel] = useState<string | undefined>()\n  const [data, setData] = useState<any[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [paginate, setPaginate] = useState({\n    total: 0,\n    per_page: 10,\n    page: -1,\n    next_page_token: [],\n  })\n  const { user } = useUser()\n\n  useEffect(() => {\n    getList()\n    //eslint-disable-next-line\n  }, [])\n\n  const getList = async (page: number = 0) => {\n    const query: { [key: string]: string | number } = {\n      offset: paginate.per_page * page,\n    }\n    if (paginate.next_page_token[page - 1]) {\n      query.next_page_token = paginate.next_page_token[page - 1]\n    }\n    const data = await listUser(query)\n    const nextPageToken: string[] = paginate.next_page_token\n    if (page > paginate.page) {\n      nextPageToken.push(data.next_page_token)\n    }\n    const newData = data.data.map((item: any) => {\n      const name = optionsRole.find((role) => item.role === role.code)?.name\n      return { ...item, role: name }\n    })\n    setData(newData)\n    setPaginate((pre) => ({\n      ...pre,\n      total: data.total_page * paginate.per_page,\n      next_page_token: nextPageToken as any,\n      page,\n    }))\n  }\n\n  const onOpenModal = () => {\n    setIsOpenModal(true)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = (id?: string | number) => {\n    setIdDel(String(id))\n    setOpenDelete(true)\n  }\n\n  const onForgotPassword = (data: ProjectType) => {\n    const code = optionsRole.find(\n      (role) => String(role.name) === String(data.role),\n    )?.code\n    //todo call api\n    setDataEdit({ ...data, role: code })\n    setIsOpenModal(true)\n  }\n\n  const onDelete = async () => {\n    if (idDel === undefined) return\n    setIsLoading(true)\n    try {\n      await deleteUser(idDel)\n      setIsLoading(false)\n      setTimeout(() => {\n        alert('Your account has been successfully deleted!')\n      }, 100)\n      handleCloseDelete()\n      setIdDel(undefined)\n      setOpenDelete(false)\n      getList()\n    } catch {\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    if (id !== undefined) {\n      await editUser(id, data)\n      setIsOpenModal(false)\n    } else {\n      await createUser(data)\n    }\n    await getList(id !== undefined ? paginate.page : 0)\n    return undefined\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'UID', name: 'uid' },\n      { title: 'Lab', name: 'lab' },\n      { title: 'Name', name: 'display_name' },\n      { title: 'Role', name: 'role' },\n      { title: 'Mail', name: 'email' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data) => {\n          return (\n            <>\n              <ALink\n                sx={{ color: 'red' }}\n                onClick={() => onForgotPassword(data)}\n              >\n                <EditIcon sx={{ color: 'black' }} />\n              </ALink>\n              {\n                !(data?.uid === user?.uid) &&\n                <ALink\n                    sx={{ ml: 1.25 }}\n                    onClick={() => onConfirmDelete(data?.uid)}\n                >\n                  <DeleteIcon sx={{ color: 'red' }} />\n                </ALink>\n              }\n            </>\n          )\n        },\n      },\n    ],\n    [user?.uid],\n  )\n\n  if (!isAdmin(user?.role)) {\n    return null\n  }\n\n  return (\n    <AccountManagerWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Account Manager</h1>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        isLoading={isLoading}\n        onSubmit={onDelete}\n      />\n      <BoxButton>\n        <ButtonAdd onClick={() => onOpenModal()} variant=\"contained\">\n          Add\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{\n          total: paginate.total,\n          page: paginate.page,\n          page_size: paginate.per_page,\n          onPageChange: ({ selected }) => {\n            getList(selected)\n          },\n        }}\n        data={data}\n        columns={columns}\n      />\n      {isOpenModal ? (\n        <ModalComponent\n          onSubmitEdit={onSubmitEdit}\n          setIsOpenModal={(flag) => {\n            setIsOpenModal(flag)\n            if (!flag) {\n              setDataEdit({})\n            }\n          }}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst BoxButton = styled(Box)({\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  width: 100,\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  height: 550,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport InputPassword from 'components/InputPassword'\nimport { ChangeEvent, FC, useState } from 'react'\nimport { regexIgnoreS, regexPassword } from \"pages/AccountManager\";\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: (oldPass: string, newPass: string) => void\n}\n\nconst ModalChangePassword: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    if(name === 'new_password' && values.confirm_password) {\n      if(!validate?.(value)) {\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: value !== values.confirm_password ? 'Passwords do not match' : ''})\n        return\n      }\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: ''})\n        return\n    }\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if(value.length > 255) return 'The text may not be longer than 255 characters'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.new_password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, new_password } = values\n    if (!new_password) setErrors((pre) => ({ ...pre, new_password: 'This field is required' }))\n    if (reEnter && reEnter !== new_password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  const validateForm = () => {\n    const errorPass = validatePassword(values.password)\n    const errorNewPass = validatePassword(values.new_password)\n    const errorConfirmPass = validatePassword(values.confirm_password)\n    return {\n      password: errorPass,\n      new_password: errorNewPass,\n      confirm_password: errorConfirmPass\n    }\n  }\n\n  const onChangePass = () => {\n    const newErrors: { [key: string]: string } = validateForm()\n    if(errors.password || errors.new_password || errors.confirm_password) return\n    if(newErrors.password || newErrors.new_password || newErrors.confirm_password) {\n      setErrors(newErrors)\n      return\n    }\n    onSubmit(values.password, values.new_password)\n  }\n\n  const onCloseModal = () => {\n    setErrors({})\n    setValues({})\n    onClose()\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              onBlur={(e) => onChangeValue(e, validatePassword)}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n              onBlur={(e) => onChangeValue(e, validateReEnter)}\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={() => onChangePass()}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onCloseModal}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ModalChangePassword\n","import { Box, Button, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport ModalChangePassword from 'components/ModalChangePassword'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { useUser } from 'providers'\nimport { useState } from 'react'\nimport { isAdmin, optionsRole } from \"utils/auth\";\nimport {deleteAccountProfile, editNameProfile, editPassProfile} from \"api/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"components/common/Loading\";\n\nconst Account = () => {\n  const { user, setUser } = useUser()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [openChangePw, setOpenChangePw] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const onEditName = async (e: any) => {\n    const { value } = e.target\n    if(!value) {\n      alert('This field is required')\n      setIsEditName(false)\n      return\n    }\n    setIsLoading(true)\n    try {\n      setUser({...user, display_name: value})\n      await editNameProfile({...user, display_name: value})\n    }\n    catch {}\n    finally {\n      setIsLoading(false)\n      setIsEditName(false)\n    }\n  }\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = () => {\n    setOpenDelete(true)\n  }\n\n  const onDelete = async () => {\n    //todo call api\n    if(!user) return\n    setIsLoading(true)\n    try {\n      await deleteAccountProfile()\n      navigate('/login')\n    }\n    catch {}\n    finally {\n      setIsLoading(false)\n    }\n    handleCloseDelete()\n  }\n\n  const handleCloseChangePw = () => {\n    setOpenChangePw(false)\n  }\n\n  const onConfirmChangePw = () => {\n    setOpenChangePw(true)\n  }\n\n  const onChangePw = async (oldPass: string, newPass: string) => {\n    //todo call api\n    setIsLoading(true)\n    try {\n      await editPassProfile({old_password: oldPass, new_password: newPass})\n      alert('Your password has been successfully changed.')\n      handleCloseChangePw()\n    }\n    catch {\n      alert('Failed to Change Password!')\n    }\n    finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <AccountWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ModalChangePassword\n        onSubmit={onChangePw}\n        open={openChangePw}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData sx={{ marginTop: isEditName ? -2 : 0 }}>Full name</TitleData>\n        <BoxData>\n          {isEditName ? (\n            <Input\n              autoFocus\n              defaultValue={user?.display_name || ''}\n              onBlur={(e) => onEditName(e)}\n              placeholder=\"Full name\"\n            />\n          ) : (\n            <>\n              {user?.display_name || \"--\"}\n              <Button sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n                Edit\n              </Button>\n            </>\n          )}\n        </BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{optionsRole.find(role => String(role.code) === String(user?.role))?.name}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10 }}>\n        <ButtonSubmit onClick={onConfirmChangePw}>Change Password</ButtonSubmit>\n        {\n          !isAdmin(user?.role) &&\n          <ButtonSubmit onClick={onConfirmDelete}>Delete Account</ButtonSubmit>\n        }\n      </BoxFlex>\n      {\n        isLoading && <Loading />\n      }\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n})\n\nconst ButtonSubmit = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from '../../const/API'\nimport { ProjectCreate } from 'store/slice/Project/ProjectType'\n\nexport const getProjectListApi = async (params?: { [key: string]: string }) => {\n  const response = await axios.get(\n    `${DATABASE_URL_HOST}/workdb/projects/search`,\n    { params },\n  )\n  return response.data\n}\n\nexport const createProjectApi = async (data: ProjectCreate) => {\n  const response = await axios.post(`${DATABASE_URL_HOST}/workdb/project`, data)\n  return response.data\n}\n\nexport const updateProjectApi = async (id: string, data: ProjectCreate) => {\n  const response = await axios.put(`${DATABASE_URL_HOST}/workdb/project/${id}`, data)\n  return response.data\n}\n\nexport const deleteProjectApi = async (project_id: number) => {\n  const response = await axios.delete(\n    `${DATABASE_URL_HOST}/workdb/project/${project_id}`,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  CurrentProject,\n  PROJECT_SLICE_NAME,\n  Project,\n  ProjectCreate,\n  ProjectType,\n} from './ProjectType'\nimport {\n  createProjectApi,\n  deleteProjectApi,\n  getProjectListApi,\n  // updateProjectApi,\n} from 'api/project'\nimport { DatasetPostType } from '../Dataset/DatasetType'\nimport { createDataset } from '../Dataset/DatasetAction'\n\nexport const getProjectList = createAsyncThunk<\n  Project,\n  { callback?: (isSuccess: boolean) => void } | undefined\n>(`${PROJECT_SLICE_NAME}/getProjects`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getProjectListApi()\n    param?.callback?.(true)\n    return response\n  } catch (e) {\n    param?.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const getProjectId = createAsyncThunk<\n  CurrentProject,\n  { project_id: string; callback?: (isSuccess: boolean) => void } | undefined\n>(`${PROJECT_SLICE_NAME}/getProjectId`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    if (!param?.project_id) return undefined\n    const response = await getProjectListApi({ project_id: param.project_id })\n    param?.callback?.(true)\n    return response.projects.find(\n      (project: CurrentProject) =>\n        String(project.id) === String(param.project_id),\n    )\n  } catch (e) {\n    param?.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const createProject = createAsyncThunk<\n  ProjectType,\n  {\n    project: ProjectCreate\n    dataset: DatasetPostType[]\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/createProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await createProjectApi(param.project)\n    thunkAPI.dispatch(\n      createDataset({\n        project_id: response.id,\n        dataset: param.dataset,\n        callback: param.callback,\n      }),\n    )\n    return response\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const editProject = createAsyncThunk<\n  // ProjectType,\n  boolean,\n  {\n    project: ProjectCreate\n    project_id: string\n    dataset: DatasetPostType[]\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/editProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    // const response = await updateProjectApi(param.project_id, param.project)\n    // thunkAPI.dispatch(\n    //   createDataset({\n    //     project_id: response.id,\n    //     dataset: param.dataset,\n    //     callback: param.callback,\n    //   }),\n    // )\n    // return response\n    //todo\n    param.callback?.(true)\n    return true\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const deleteProject = createAsyncThunk<\n  null,\n  {\n    project_id: number\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/deleteProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    await deleteProjectApi(param.project_id)\n    thunkAPI.dispatch(getProjectList({ callback: param.callback }))\n    return null\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n","import { Box, Button, styled } from '@mui/material'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TableComponent, { Column } from 'components/Table'\nimport { useNavigate } from 'react-router-dom'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { selectProjectList } from 'store/slice/Project/ProjectSelector'\nimport {\n  deleteProject,\n  getProjectList,\n} from 'store/slice/Project/ProjectAction'\n\nexport type DataProject = {\n  id: number | string\n  uid?: number | string\n  name: string\n  project_type: number\n  image_count: number\n  created_time: string\n  updated_time: string\n  role?: string | number\n}\n\nconst Projects = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const projects = useSelector(selectProjectList)\n  const [idDelete, setIdDelete] = useState<number | string | undefined>()\n  const [page, setPage] = useState(1)\n\n  useEffect(() => {\n    dispatch(getProjectList())\n    //eslint-disable-next-line\n  }, [])\n\n  const onEdit = useCallback((id: number | string) => {\n    navigate(`/projects/new-project?id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onWorkflow = useCallback((id: number | string) => {\n    navigate(`/projects/workflow?tab=0&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onResults = useCallback((id: number | string) => {\n    navigate(`/projects/workflow?tab=1&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addNewProject = useCallback(() => {\n    navigate('/projects/new-project')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onDelete = (id: number | string) => {\n    setIdDelete(id)\n  }\n\n  const onDeleteSubmit = () => {\n    const id = idDelete\n    if (!id) return\n    setIdDelete(undefined)\n    dispatch(deleteProject({ project_id: Number(id) }))\n  }\n\n  const handleCloseDelete = () => {\n    setIdDelete(undefined)\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'Project Name', name: 'project_name' },\n      { title: 'Created', name: 'created_time' },\n      { title: 'Updated', name: 'updated_time' },\n      { title: 'Images', name: 'image_count', align: 'center' },\n      {\n        title: '',\n        name: 'action',\n        width: 400,\n        render: (data) => {\n          return (\n            <BoxAction>\n              <ButtonAdd variant=\"contained\" onClick={() => onEdit(data.id)}>\n                Edit\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onWorkflow(data.id)}\n              >\n                Workflow\n              </ButtonAdd>\n              <ButtonAdd variant=\"contained\" onClick={() => onResults(data.id)}>\n                Result\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onDelete(data.id)}\n                sx={{ backgroundColor: 'red !important' }}\n              >\n                Del\n              </ButtonAdd>\n            </BoxAction>\n          )\n        },\n      },\n    ],\n    [onWorkflow, onResults, onEdit],\n  )\n  return (\n    <ProjectsWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Project\"\n        description=\"Delete My Project\"\n        onClose={handleCloseDelete}\n        open={!!idDelete}\n        onSubmit={onDeleteSubmit}\n      />\n      <ProjectsTitle>Projects</ProjectsTitle>\n      <BoxButton>\n        <ButtonAdd\n          variant=\"contained\"\n          onClick={addNewProject}\n          sx={{ marginBottom: 2 }}\n        >\n          Add Project\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{\n          total: projects.length,\n          page,\n          page_size: 10,\n          onPageChange: ({ selected }) => setPage(selected),\n        }}\n        data={projects}\n        columns={columns}\n      />\n    </ProjectsWrapper>\n  )\n}\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst ProjectsTitle = styled('h1')(({ theme }) => ({}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst BoxAction = styled(BoxButton)({\n  justifyContent: 'flex-start',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  minWidth: 80,\n  letterSpacing: 'unset',\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nexport default Projects\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  MouseEvent as MouseEventReact,\n  FC,\n  Fragment,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport {\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n} from 'pages/Database'\n\ntype Object = {\n  [key: string]: Object | string\n}\n\nexport type Column = {\n  width?: number\n  title: string\n  dataIndex?: string\n  name?: string\n  child?: string\n  filter?: boolean\n  render?: (\n    item?: RecordDatabase | RecordList | ImagesDatabase,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined | string | number\n}\n\ntype TableComponentProps = {\n  data?: (RecordDatabase | RecordList)[]\n  className?: string\n  columns?: Column[]\n  orderBy?: 'ASC' | 'DESC' | ''\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: 'ASC' | 'DESC' | '') => void\n  rowClick?: (row: ImagesDatabase) => void\n  onClickEvent?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (row?: ImagesDatabase[]) => void\n  onBeginDrag?: () => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  defaultExpand?: boolean\n}\n\ntype RenderColumnProps = {\n  data: RecordDatabase | SessionsDatabase | ImagesDatabase | RecordList\n  columns: Column[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: string) => void\n  rowClick?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    row?: ImagesDatabase[],\n  ) => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  recordIndex: number\n  defaultExpand?: boolean\n  dataShow?: boolean\n  beginDrag?: boolean\n  draggableProps?: boolean\n  allowMutilKey?: boolean\n  drags: ImagesDatabase[]\n  onMouseDown: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => void\n}\n\nconst renderCol = (\n  col: Column,\n  item: ImagesDatabase | RecordDatabase | RecordList,\n  index: number,\n) => {\n  const key = col.name || col.dataIndex || ''\n  let value: ImagesDatabase | RecordDatabase | RecordList | string = item\n  if (key.includes('.')) {\n    const keys = key.split('.')\n    keys.forEach((k) => {\n      if (k === 'voxel_size' || k === 'size') {\n        value = JSON.stringify((value as unknown as Object)?.[k])\n      } else {\n        value = (value as unknown as Object)?.[k] as\n          | ImagesDatabase\n          | RecordDatabase\n          | RecordList\n          | string\n      }\n    })\n  } else value = (item as unknown as Object)[key] as string\n  if (col.render) return col.render(item, value, index)\n  return typeof value === 'object' || Array.isArray(value) ? null : value\n}\n\nconst RenderColumn = (props: RenderColumnProps) => {\n  const { columns, data, recordIndex, rowClick, drags, onMouseDown } = props\n  const { draggable, onDrag } = props\n  const [openChild, setOpenChild] = useState(true)\n  const [openChildParent, setOpenChildPrent] = useState(true)\n  const [openSubjects, setOpenSubjects] = useState<string[]>(\n    (data as RecordDatabase)?.subjects?.map?.((e) => e.id) || [],\n  )\n\n  const isDrag = drags.find((drag) => {\n    return (\n      drag.id === data.id &&\n      drag.session_id === (data as ImagesDatabase).session_id &&\n      drag.datatype_index === (data as ImagesDatabase).datatype_index\n    )\n  })\n\n  const onDragEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    return onDrag?.(event, [image])\n  }\n\n  const onSetOpenSubject = (subId: string) => {\n    if (openSubjects.includes(subId)) {\n      setOpenSubjects(openSubjects.filter((o) => o !== subId))\n    } else setOpenSubjects([...openSubjects, subId])\n  }\n\n  if (\n    (data as RecordDatabase)?.subjects?.length ||\n    (data as SessionsDatabase).datatypes?.length\n  ) {\n    return (\n      <Fragment>\n        <Tr\n          style={{\n            transition: 'all 0.3s',\n            backgroundColor: 'rgb(238, 238, 238)',\n          }}\n        >\n          {columns.map((column) => {\n            const key = column.name || column.dataIndex || ''\n            return (\n              <Td\n                key={`col_${column.name || column.dataIndex}`}\n                onClick={() =>\n                  key === 'session' && setOpenChildPrent(!openChildParent)\n                }\n              >\n                {key === 'action' ? null : (\n                  <BoxCenter>\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    )}\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    ) &&\n                      key === 'session' && (\n                        <ArrowDropDownIcon\n                          style={{\n                            transform: `rotate(${\n                              !openChildParent ? -180 : 0\n                            }deg)`,\n                          }}\n                        />\n                      )}\n                  </BoxCenter>\n                )}\n              </Td>\n            )\n          })}\n        </Tr>\n        {openChildParent &&\n          (data as RecordDatabase).subjects?.map((sub, subject_index) => {\n            return (\n              <Fragment key={sub.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'subject' && onSetOpenSubject(sub.id)\n                        }\n                      >\n                        {key === 'subject' ? (\n                          <BoxCenter>\n                            {sub.label}\n                            {sub.sessions?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openSubjects.includes(sub.id) ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openSubjects.includes(sub.id) &&\n                  sub.sessions.map((session, session_index) => (\n                    <RenderColumn\n                      {...props}\n                      key={session.id}\n                      data={\n                        {\n                          ...session,\n                          session: session.label,\n                          session_index,\n                          subject_index,\n                        } as SessionsDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n        {openChildParent &&\n          (data as SessionsDatabase).datatypes?.map((type, ii) => {\n            return (\n              <Fragment key={type.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'datatype' && setOpenChild(!openChild)\n                        }\n                      >\n                        {key === 'datatype' ? (\n                          <BoxCenter>\n                            {type.label}\n                            {type.images?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openChild ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openChild &&\n                  type.images.map((image, index) => (\n                    <RenderColumn\n                      {...props}\n                      key={`row_image_${image.id}_${index}`}\n                      data={\n                        {\n                          ...image,\n                          session_index: (data as SessionsDatabase)\n                            .session_index,\n                          subject_index: (data as SessionsDatabase)\n                            .subject_index,\n                          session_id: data.id,\n                          datatype_index: ii,\n                          image_index: index,\n                          datatype_label: type.label,\n                          subject_id: (data as SessionsDatabase).parent_id,\n                          record_index: recordIndex,\n                        } as ImagesDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n      </Fragment>\n    )\n  }\n\n  return (\n    <Tr\n      onClick={(e) => rowClick?.(e, data as ImagesDatabase)}\n      draggable={draggable}\n      onDragStart={(e) => onDragEvent?.(e, data as ImagesDatabase)}\n      onMouseDown={(e) => onMouseDown(e, data as ImagesDatabase)}\n      style={{\n        transition: 'all 0.3s',\n        backgroundColor: isDrag ? 'rgba(25,118,210,0.15)' : '',\n      }}\n    >\n      {columns.map((column) => {\n        return (\n          <Td key={`col_${column.name || column.dataIndex}`}>\n            {renderCol(column, data as ImagesDatabase, recordIndex)}\n          </Td>\n        )\n      })}\n    </Tr>\n  )\n}\n\nconst DatabaseTableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    className,\n    orderKey,\n    orderBy,\n    onSort,\n    draggable,\n    rowClick,\n    onDrag,\n    onDragEnd,\n    onBeginDrag: onBeginDragProps,\n    ...p\n  } = props\n  const { data = [], columns = [] } = props\n  const [drags, setDrags] = useState<ImagesDatabase[]>([])\n  const [mouseMoveRect, setMouseMoveRect] = useState({ pageX: 0, pageY: 0 })\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n\n  const ctrRef = useRef(false)\n  const refTable = useRef<HTMLDivElement | null>(null)\n  const refTdSelect = useRef<{\n    [key: string]: {\n      dom: HTMLTableRowElement\n      tds: { id: number | string; dom: HTMLTableCellElement; html: string }[]\n    }\n  }>({})\n  const mouseStart = useRef<{ pageX: number; pageY: number } | undefined>()\n  const [beginDrag, setBeginDrag] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydownEvent)\n    window.addEventListener('keyup', onKeyupEvent)\n    window.addEventListener('mouseup', onMouseUp)\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('click', onClick)\n    return () => {\n      window.removeEventListener('keydown', onKeyupEvent)\n      window.removeEventListener('keyup', onKeyupEvent)\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('click', onClick)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onKeydownEvent = (event: KeyboardEvent) => {\n    ctrRef.current = event.ctrlKey || event.metaKey\n  }\n\n  const onKeyupEvent = () => {\n    ctrRef.current = false\n  }\n\n  const onClick = (event: MouseEvent) => {\n    if (refTable.current?.contains?.(event.target as Element)) return\n    ctrRef.current = false\n    setDrags([])\n    onDragEnd?.()\n  }\n\n  const onSortHandle = (nameCol: string) => {\n    if (orderKey === nameCol) {\n      let order: 'ASC' | 'DESC' | '' = ''\n      if (orderBy === 'ASC') {\n        order = 'DESC'\n      } else if (!orderBy) {\n        order = 'ASC'\n      }\n      onSort?.(nameCol, order)\n    } else onSort?.(nameCol, 'ASC')\n  }\n\n  const onRowClickEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    const idDom = `${image.id}_${image.datatype_index}_${image.session_id}`\n    if (!ctrRef.current) {\n      if (!timeoutClick.current) {\n        timeoutClick.current = setTimeout(() => {\n          timeoutClick.current = undefined\n        }, 300)\n        if (draggable) {\n          setDrags([image])\n          const tds = event.currentTarget.getElementsByTagName('td')\n          refTdSelect.current[idDom] = {\n            dom: event.currentTarget as unknown as HTMLTableRowElement,\n            tds: [],\n          }\n          for (let i = 0; i < tds.length; i++) {\n            refTdSelect.current[idDom].tds.push({\n              id: tds[i].id,\n              dom: tds[i],\n              html: tds[i].innerHTML,\n            })\n          }\n        }\n        return\n      }\n      return rowClick?.(image)\n    }\n    if (!draggable) return\n    if (\n      drags.find(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      setDrags(\n        drags.filter(\n          (drag: ImagesDatabase) =>\n            drag.id === image.id &&\n            drag.datatype_index === image.datatype_index &&\n            drag.session_index === image.session_index,\n        ),\n      )\n      delete refTdSelect.current[idDom]\n    } else {\n      setDrags([...drags, image])\n      const tds = event.currentTarget.getElementsByTagName('td')\n      refTdSelect.current[idDom] = {\n        dom: event.currentTarget as unknown as HTMLTableRowElement,\n        tds: [],\n      }\n      for (let i = 0; i < tds.length; i++) {\n        refTdSelect.current[idDom].tds.push({\n          id: tds[i].id,\n          dom: tds[i],\n          html: tds[i].innerHTML,\n        })\n      }\n    }\n  }\n\n  const onMouseDown = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    if (\n      !drags.length ||\n      !draggable ||\n      !drags.some(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      return\n    }\n    mouseStart.current = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n    }\n    onBeginDragProps?.()\n    setMouseMoveRect({ pageX: 0, pageY: 0 })\n    onDrag?.(drags)\n  }\n\n  const onMouseUp = () => {\n    mouseStart.current = undefined\n    setBeginDrag(false)\n    setTimeout(() => {\n      onDrag?.(undefined)\n    }, 100)\n  }\n\n  const onMouseMove = (event: MouseEvent) => {\n    if (!mouseStart.current || !draggable || !mouseStart.current) return\n    setBeginDrag(true)\n    setMouseMoveRect({\n      pageX: event.pageX - mouseStart.current.pageX,\n      pageY: event.pageY - mouseStart.current.pageY,\n    })\n  }\n\n  const onBeginDrag = (\n    e: MouseEventReact<HTMLTableRowElement>,\n    image?: ImagesDatabase[],\n  ) => {\n    e.preventDefault()\n    onDrag?.(image)\n  }\n\n  return (\n    <>\n      <TableWrap ref={refTable} className={className}>\n        <DataTable\n          style={{\n            width: columns.reduce((a, b) => a + (Number(b.width) || 110), 0),\n          }}\n        >\n          <Thead>\n            <Tr>\n              {columns.map((col, iCol) => {\n                const nameCol = col.name || col.dataIndex || ''\n                return (\n                  <Th\n                    onClick={() => onSortHandle(nameCol)}\n                    style={{\n                      maxWidth: col.width,\n                      minWidth: col.width,\n                      width: col.width,\n                      cursor: 'pointer',\n                    }}\n                    key={col.dataIndex || col.name || iCol}\n                  >\n                    {col.title}\n                    <ArrowDownwardIconOrder\n                      style={{\n                        transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                        opacity:\n                          orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                    />\n                  </Th>\n                )\n              })}\n            </Tr>\n          </Thead>\n          <TBody>\n            {data.map((item, index) => (\n              <RenderColumn\n                allowMutilKey={ctrRef.current}\n                recordIndex={index}\n                columns={columns}\n                {...p}\n                data={item}\n                rowClick={(e, image) => onRowClickEvent(e, image)}\n                onMouseDown={onMouseDown}\n                beginDrag={beginDrag}\n                draggable={false}\n                draggableProps={draggable}\n                key={`row_table_${item.id}_${index}`}\n                drags={drags}\n                onDrag={onBeginDrag}\n                onDragEnd={onDragEnd}\n              />\n            ))}\n          </TBody>\n        </DataTable>\n        {!data.length ? <NoData>No Data</NoData> : null}\n      </TableWrap>\n      {beginDrag &&\n        drags.map((el) => {\n          const rowId = `${el.id}_${el.datatype_index}_${el.session_id}`\n          const trNow = refTdSelect.current[rowId]\n          const { width, height, top, left } =\n            trNow.dom?.getBoundingClientRect()\n          const style = {\n            width,\n            height,\n            top: top + mouseMoveRect.pageY,\n            left: left + mouseMoveRect.pageX,\n          }\n          return (\n            <BoxDrag key={el.id} style={style}>\n              {trNow.tds.map((td, index) => {\n                const { width } = td.dom.getBoundingClientRect()\n                return (\n                  <Box\n                    key={`${rowId}_-${index}`}\n                    style={{ width, padding: 16 }}\n                  >\n                    {td.html}\n                  </Box>\n                )\n              })}\n            </BoxDrag>\n          )\n        })}\n    </>\n  )\n}\n\nconst BoxDrag = styled(Box)({\n  position: 'absolute',\n  background: '#ffffff',\n  backgroundColor: 'rgba(25,118,210,0.15)',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst TableWrap = styled(Box)({\n  overflowX: 'scroll',\n})\n\nconst DataTable = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  userSelect: 'none',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nconst BoxCenter = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport default DatabaseTableComponent\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  FC,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  TouchEvent,\n} from 'react'\n\ntype ChangeDragProps = {\n  title: string\n  value: number\n  onChange: (value: number) => void\n  className?: string\n  max?: number\n  min?: number\n  onChangeMin?: (v: number) => any\n  showInputMax?: boolean\n  showInputMin?: boolean\n}\n\nconst ChangeDrag: FC<ChangeDragProps> = (props) => {\n  const { title, value, onChange, className, max = 2, min = 0 } = props\n  const { onChangeMin, showInputMax } = props\n  const [width, setWidth] = useState(0)\n  const mouseDown = useRef(0)\n\n  const refDrag = useRef<any>()\n  const refDot = useRef<any>()\n\n  useEffect(() => {\n    getWidth()\n    //eslint-disable-next-line\n  }, [])\n\n  const getWidth = () => {\n    if (!refDrag.current) getWidth()\n    setWidth(refDrag.current.clientWidth - 24)\n  }\n\n  const onMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n    mouseDown.current = event.pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onTouchStart = useCallback((event: TouchEvent<HTMLDivElement>) => {\n    mouseDown.current = event.touches[0].pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onMouseMove = (event: MouseEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.pageX - mouseInit - 12\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(scale)\n  }\n\n  const onTouchMove = (event: TouchEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.touches[0].pageX - mouseInit\n    let scale = (mouseMove / width) * (max - min)\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onMouseLeave = useCallback(() => {\n    mouseDown.current = 0\n    refDrag.current.style.cursor = 'default'\n    refDot.current.style.cursor = ''\n  }, [])\n\n  return (\n    <ScaleWrapper\n      className={className}\n      ref={refDrag}\n      onMouseMove={onMouseMove}\n      onTouchMove={onTouchMove}\n      onMouseLeave={onMouseLeave}\n      onMouseUp={onMouseLeave}\n    >\n      <TitleScale>{title}</TitleScale>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Input\n          value={Number(value.toPrecision(2))}\n          onChange={(e) => onChangeMin?.(Number(e.target.value))}\n        />\n        {showInputMax ? (\n          <Input\n            style={{ textAlign: 'right' }}\n            value={Number(max.toPrecision(2))}\n            readOnly\n          />\n        ) : null}\n      </div>\n      <BoxWrapper>\n        <BoxLine style={{ width: ((value - min) * width) / (max - min) }} />\n        <Dot\n          ref={refDot}\n          onMouseDown={onMouseDown}\n          onTouchEnd={onMouseLeave}\n          onTouchStart={onTouchStart}\n          style={{ left: ((value - min) * width) / (max - min) }}\n        />\n      </BoxWrapper>\n    </ScaleWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 4,\n  background: 'rgba(60, 60, 67, 0.18)',\n  position: 'relative',\n  borderRadius: 2,\n  userSelect: 'none',\n}))\n\nconst Dot = styled(Box)(() => ({\n  position: 'absolute',\n  width: 24,\n  height: 24,\n  background: '#7a7a7a',\n  borderRadius: 100,\n  top: -11,\n  cursor: 'pointer',\n}))\n\nconst TitleScale = styled(Typography)(() => ({\n  fontSize: 14,\n  fontWeight: 700,\n}))\n\nconst BoxLine = styled(Box)(() => ({\n  position: 'absolute',\n  height: 4,\n  background: '#0A7AFF',\n  borderRadius: 2,\n}))\n\nconst ScaleWrapper = styled(Box)(({ theme }) => ({\n  paddingBottom: 20,\n  '@media (max-width: 809px)': {\n    paddingTop: theme.spacing(2),\n  },\n}))\n\nconst Input = styled('input')({\n  border: 'none',\n  outline: 'none',\n  width: 50,\n  marginBottom: 20,\n})\n\nexport default ChangeDrag\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from 'const/API'\n\nexport const getDataBaseTree = async () => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/search`)\n  return response.data\n}\n\nexport const getDataBaseList = async () => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/search/list`)\n  return response.data\n}\n\nexport const getRawdb = async (id: number) => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/${id}`)\n  return response.data\n}\n\nexport const editAttributes = async (id: number, data: string) => {\n  const response = await axios.put(`${DATABASE_URL_HOST}/rawdb/${id}`, data)\n  return response.data\n}\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogContentText,\n  IconButton,\n  Modal,\n  styled,\n  Typography,\n  DialogContent,\n  DialogActions\n} from '@mui/material'\nimport { FC, useEffect, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ChangeDrag from './ChangeSize'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { ObjectType } from 'pages/Database'\nimport { editAttributes } from \"api/rawdb\";\nimport Loading from \"../common/Loading\";\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  url?: string\n  jsonData?: ObjectType\n  disabled?: { left: boolean; right: boolean }\n  id: number\n}\n\ntype AlertDialogProps = {\n  open: boolean\n  handleClose: () => void\n  handleSaveAttributes: () => void\n}\n\nconst AlertDialog = ({ open, handleClose, handleSaveAttributes }: AlertDialogProps) => {\n  return (\n      <div>\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Do you want Save?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={handleSaveAttributes} autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  );\n}\n\nconst ImageView: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  url,\n  onNext,\n  onPrevious,\n  jsonData,\n  disabled,\n  id\n}) => {\n  const viewerRef = useRef<any>()\n  const [worldCoords, setWorldCoords] = useState({ x: 0, y: 0, z: 0 })\n  const [voxelCoords, setVoxelCoords] = useState({ i: 0, j: 0, k: 0 })\n  const [values, setValues] = useState(0)\n  const [opacity, setOpacity] = useState(0)\n  const [thresholds, setThresholds] = useState(0)\n  const [maxThres, setMaxThres] = useState(0)\n  const [contracts, setContracts] = useState(1)\n  const [brightness, setBrightness] = useState(0)\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const [openSave, setOpenSave] = useState(false)\n  const [textAttribute, setTextAttribute] = useState(JSON.stringify(jsonData || ''))\n  const [errorAttribute, setErrorAttribute] = useState<string>('')\n  const [isLoading, setIsLoading] = useState(false)\n  const volumes = useRef<any>()\n  const refTextArea = useRef<HTMLTextAreaElement | null>(null)\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    setIsLoadFile(false)\n    setOpacity(0)\n    setContracts(1)\n    setBrightness(0)\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n  useEffect(() => {\n    setTextAttribute(JSON.stringify(jsonData || ''))\n    //eslint-disable-next-line\n  }, [jsonData])\n\n  const onChangeThreshold = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeContract = (num: number) => {\n    if (!volumes.current) return\n    setContracts(num)\n    volumes.current.display.setContrast(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeBrightness = (num: number) => {\n    if (!volumes.current) return\n    setBrightness(num)\n    volumes.current.display.setBrightness(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMinThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeJson = (event: any) => {\n    const { value } = event.target\n    try {\n      JSON.parse(value)\n      setErrorAttribute('')\n    }\n    catch {\n      setErrorAttribute('format JSON invalid')\n    }\n    setTextAttribute(value)\n  }\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n          complete: function () {},\n        },\n      ],\n    })\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', function () {\n          setOpacity(1)\n          setIsLoadFile(false)\n        })\n        viewer.addEventListener('sliceupdate', function (event: any) {\n          // const panel = event.target\n          const { volume } = event\n          volumes.current = volume\n          setThresholds(volumes.current.intensity_min)\n          setMaxThres(volumes.current.intensity_max)\n          setValues(volume.getIntensityValue())\n          if (brainbrowser.utils.isFunction(volume.getWorldCoords)) {\n            setWorldCoords(volume.getWorldCoords())\n          }\n          if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n            setVoxelCoords(volume.getVoxelCoords())\n          }\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {},\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  const handleClickOpenSave = () => {\n    if(errorAttribute) return\n    setOpenSave(true);\n  };\n\n  const handleCloseSave = () => {\n    setOpenSave(false);\n  };\n\n  const handleSaveAttributes = async () => {\n    setIsLoading(true)\n    try {\n      await editAttributes(id, textAttribute)\n    }\n    finally {\n      handleCloseSave()\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div\n            style={{\n              display: !opacity ? 'none' : 'flex',\n              alignItems: 'stretch',\n            }}\n          >\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              {opacity ? (\n                <Box sx={{background: '#ffffff'}}>\n                  <BoxContentData>\n                    <p style={{ margin: 0, padding: '20px 0' }}>\n                      World Coordinates:\n                    </p>\n                    <span>X: {worldCoords.x.toPrecision(4)}</span>\n                    <span style={{ marginLeft: 20 }}>\n                    Y: {worldCoords.y.toPrecision(4)}\n                  </span>\n                    <span style={{ marginLeft: 20 }}>\n                    Z: {worldCoords.z.toPrecision(4)}\n                  </span>\n                    <p>Voxel Coordinates:</p>\n                    <span>I: {voxelCoords.i}</span>\n                    <span style={{ marginLeft: 20 }}>J: {voxelCoords.j}</span>\n                    <span style={{ marginLeft: 20 }}>K: {voxelCoords.k}</span>\n                    <p>Value: {values}</p>\n                    <ChangeDrag\n                        onChangeMin={onChangeMinThresh}\n                        max={maxThres}\n                        min={-maxThres}\n                        title={'Threshold'}\n                        value={thresholds}\n                        showInputMax\n                        showInputMin\n                        onChange={onChangeThreshold}\n                    />\n                    <ChangeDrag\n                        title={'Contrast (0.0 to 2.0)'}\n                        value={contracts}\n                        onChange={onChangeContract}\n                    />\n                    <ChangeDrag\n                        title={'Brightness (-1 to 1):'}\n                        value={brightness}\n                        min={-1}\n                        max={1}\n                        onChange={onChangeBrightness}\n                    />\n                  </BoxContentData>\n                  <WrapperButton sx={{justifyContent: 'flex-end'}}>\n                    <ButtonCanCel onClick={onClose}>Close</ButtonCanCel>\n                  </WrapperButton>\n                </Box>\n              ) : null}\n            </div>\n            <WrapperJson>\n              <WrapArea onClick={() => refTextArea.current?.focus?.()}>\n                <TextArea\n                    ref={refTextArea}\n                    onChange={(event) => onChangeJson(event)}\n                    value={textAttribute}\n                    readOnly={window.location.pathname === '/projects/new-project'}\n                />\n                <Typography sx={{color: 'red', paddingLeft: 1, fontSize: 12}}>{errorAttribute}</Typography>\n              </WrapArea>\n              <WrapperButton>\n                {\n                  window.location.pathname !== '/projects/new-project' &&\n                    <ButtonOk onClick={handleClickOpenSave}>Save Attributes</ButtonOk>\n                }\n              </WrapperButton>\n            </WrapperJson>\n            {!disabled?.right ? (\n              <ButtonNext onClick={onNext}>\n                <ArrowForwardIosIconWrapper />\n              </ButtonNext>\n            ) : null}\n            {!disabled?.left ? (\n              <ButtonPrevious onClick={onPrevious}>\n                <ArrowBackIosIconWrapper />\n              </ButtonPrevious>\n            ) : null}\n          </div>\n          {(!opacity || isLoadFile) && (\n            <BoxLoading>\n              <img\n                src=\"/lib/loading.gif\"\n                alt=\"icon loading\"\n                style={{ width: 80, height: 80 }}\n              />\n            </BoxLoading>\n          )}\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n        <AlertDialog\n            open={openSave}\n            handleClose={handleCloseSave}\n            handleSaveAttributes={handleSaveAttributes}\n        />\n        {\n          isLoading && <Loading />\n        }\n      </div>\n    </Modal>\n  )\n}\n\nconst BoxLoading = styled(Box)({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'rgba(255,255,255, 0.1)',\n  zIndex: 88,\n})\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '10%',\n  right: '10%',\n  zIndex: 9999,\n  background: 'rgba(255,255,255,0.4)',\n})\n\nconst ButtonNext = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  right: '10%',\n  zIndex: 1,\n})\n\nconst ButtonPrevious = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  left: '10%',\n  zIndex: 1,\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst BoxContentData = styled(Box)({\n  margin: '-5px 0 0',\n  padding: '10px',\n  background: '#ffffff',\n})\n\nconst WrapperJson = styled(Box)({\n  minWidth: 300,\n  background: '#ffffff',\n})\n\nconst WrapArea = styled(Box)({\n  height: 'calc(100% - 120px)',\n  borderLeft: '1px solid',\n})\nconst TextArea = styled('textarea')({\n  width: '98%',\n  outline: 'none !important',\n  border: 'none',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nconst ArrowBackIosIconWrapper = styled(ArrowBackIosIcon)({\n  color: '#ffffff',\n  marginLeft: 10,\n})\n\nconst ArrowForwardIosIconWrapper = styled(ArrowForwardIosIcon)({\n  color: '#ffffff',\n})\n\nconst WrapperButton = styled(Box)({\n  display: 'flex',\n  gap: 15,\n  paddingBottom: 20,\n  justifyContent: 'center',\n  marginTop: 60,\n})\n\nconst ButtonOk = styled('button')({\n  padding: '10px 20px',\n  border: '2px solid #000',\n  cursor: 'pointer',\n})\n\nconst ButtonCanCel = styled('button')({\n  padding: 10,\n  border: '2px solid #000',\n  cursor: 'pointer',\n  background: '#000000c7',\n  color: 'red',\n  marginRight: 10\n})\n\nexport default ImageView\n","import {\n  DatabaseData,\n  DatabaseListData,\n  DatatypesDatabase,\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n  SubjectDatabase,\n} from 'pages/Database'\nimport { getRawdb } from 'api/rawdb'\n\nexport type OrderKey =\n  | keyof (RecordDatabase | RecordList)\n  | 'subject'\n  | 'session'\n  | 'datatype'\n  | 'image_attributes.image_type'\n  | 'image_attributes.protocol'\n  | 'image_attributes.scale'\n  | 'image_attributes.voxel'\n\nexport const onRowClick = async (\n  datas: DatabaseData | DatabaseListData,\n  row: ImagesDatabase | RecordList,\n  type: 'tree' | 'list' = 'tree',\n) => {\n  const data = await getRawdb(row.id)\n  const view = {\n    open: true,\n    url: row.image_url,\n    id: row.id,\n    session_id: (row as ImagesDatabase).session_id,\n    parent_id: (row as ImagesDatabase).parent_id,\n    jsonData: data,\n    image: row,\n  }\n  const checkNext = onGet(datas, row, false, type)\n  const checkPre = onGet(datas, row, true, type)\n  return { view, checkNext, checkPre }\n}\n\nexport const onGet = (\n  datas: DatabaseData | DatabaseListData,\n  rowClick: ImagesDatabase | RecordList,\n  isSub?: boolean,\n  type: 'tree' | 'list' = 'tree',\n): ImagesDatabase | RecordList | undefined => {\n  if (type === 'tree') {\n    const row = rowClick as ImagesDatabase\n    const dataNow = datas.records[row.record_index || 0] as RecordDatabase\n    const subjectNow = dataNow?.subjects?.[row.subject_index || 0]\n    const sessionNow = subjectNow?.sessions[row.session_index || 0]\n    const datatypeNow = sessionNow?.datatypes[row.datatype_index || 0]\n    if (!isSub) {\n      const imageNext = datatypeNow?.images[(row.image_index || 0) + 1]\n      if (imageNext) {\n        return { ...row, ...imageNext, image_index: (row.image_index || 0) + 1 }\n      }\n      const datatypeNext = sessionNow?.datatypes[(row.datatype_index || 0) + 1]\n      if (datatypeNext) {\n        const images = datatypeNext?.images\n        if (images[0])\n          return {\n            ...row,\n            ...images[0],\n            datatype_index: (row.datatype_index || 0) + 1,\n            image_index: 0,\n          }\n      }\n    } else {\n      const imagePre = datatypeNow?.images[(row.image_index || 0) - 1]\n      if (imagePre) {\n        return { ...row, ...imagePre, image_index: (row.image_index || 0) - 1 }\n      }\n      const datatypeImagePre =\n        sessionNow?.datatypes?.[(row.datatype_index || 0) - 1]\n      if (datatypeImagePre) {\n        const images = datatypeImagePre?.images\n        if (images?.[images.length - 1]) {\n          return {\n            ...row,\n            ...images?.[images.length - 1],\n            datatype_index: (row.datatype_index || 0) - 1,\n            image_index: images.length - 1,\n          }\n        }\n      }\n    }\n  } else {\n    const row = rowClick as RecordList\n    const indexImageNow = datas.records.findIndex(\n      (record) => record.id === row.id,\n    )\n    return datas.records[indexImageNow + (isSub ? -2 : 2)] as RecordList\n  }\n  return undefined\n}\n\nconst sortWithLabName = (\n  datasTable: (RecordDatabase | RecordList)[],\n  orderKey: keyof (RecordDatabase | RecordList),\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return a[orderKey] > b[orderKey] ? -1 : 1\n      }\n      return a[orderKey] < b[orderKey] ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nconst sortSubjectTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort((dataA, dataB) => {\n    const subjectsA = dataA.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    const subjectsB = dataB.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    if (typeOrder === 'DESC') {\n      return subjectsA[0]?.label > subjectsB[0]?.label ? -1 : 1\n    }\n    return subjectsA[0]?.label < subjectsB[0]?.label ? -1 : 1\n  })\n  return newDatas.map((element) => ({\n    ...element,\n    subjects: element.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    }),\n  }))\n}\n\nconst sortSessionTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          const subSessB = subB.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions.sort((ssA, ssB) => {\n            if (typeOrder === 'DESC') {\n              return ssA.label > ssB.label ? -1 : 1\n            }\n            return ssA.label < ssB.label ? -1 : 1\n          }),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortDataTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              const dataTypeB = ssB.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.label > dataTypeB[0]?.label ? -1 : 1\n              }\n              return dataTypeA[0]?.label < dataTypeB[0]?.label ? -1 : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes.sort((typeA, typeB) => {\n                if (typeOrder === 'DESC') {\n                  return typeA.label > typeB.label ? -1 : 1\n                }\n                return typeA.label < typeB.label ? -1 : 1\n              }),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortAttributesTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n  key: string = 'type',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const typeA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.image_attributes[key]?.toString?.() >\n                        imageB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return imageA.image_attributes[key]?.toString?.() <\n                      imageB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.image_attributes[key]?.toString?.() >\n              dataB.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return dataA.image_attributes[key]?.toString?.() <\n            dataB.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n      const typeB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.image_attributes[key]?.toString?.() >\n                        imageB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return imageA.image_attributes[key]?.toString?.() <\n                      imageB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.image_attributes[key]?.toString?.() >\n              dataB.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return dataA.image_attributes[key]?.toString?.() <\n            dataB.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n\n      if (typeOrder === 'DESC') {\n        return typeA[0]?.image_attributes[key]?.toString?.() >\n          typeB[0]?.image_attributes[key]?.toString?.()\n          ? -1\n          : 1\n      }\n      return typeA[0]?.image_attributes[key]?.toString?.() <\n        typeB[0]?.image_attributes[key]?.toString?.()\n        ? -1\n        : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.image_attributes[key]?.toString?.() >\n              subSessB[0]?.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return subSessA[0]?.image_attributes[key]?.toString?.() <\n            subSessB[0]?.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n              const dataTypeB = ssB.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.image_attributes[key]?.toString?.() >\n                  dataTypeB[0]?.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataTypeA[0]?.image_attributes[key]?.toString?.() <\n                dataTypeB[0]?.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes\n                .sort((typeA, typeB) => {\n                  const imageA = typeA.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                  const imageB = typeB.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                  if (typeOrder === 'DESC') {\n                    return imageA[0]?.image_attributes[key]?.toString?.() >\n                      imageB[0]?.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  }\n                  return imageA[0]?.image_attributes[key]?.toString?.() <\n                    imageB[0]?.image_attributes[key]?.toString?.()\n                    ? -1\n                    : 1\n                })\n                .map((type) => ({\n                  ...type,\n                  images: type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  }),\n                })),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortWithKey = (\n  datasTable: RecordList[],\n  orderKey: keyof RecordList,\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  return datasTable.sort((dataA: RecordList, dataB: RecordList) => {\n    let valueA: RecordList | string = dataA\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueA !== 'string') {\n          valueA = valueA?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueA = valueA[orderKey] as string\n\n    let valueB: RecordList | string = dataB\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueB !== 'string') {\n          valueB = valueB?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueB = valueB[orderKey] as string\n    if (typeOrder === 'DESC') {\n      return valueA > valueB ? -1 : 1\n    }\n    return valueA < valueB ? -1 : 1\n  })\n}\n\nconst sortWithTime = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return new Date(a.recording_time) > new Date(b.recording_time) ? -1 : 1\n      }\n      return new Date(a.recording_time) < new Date(b.recording_time) ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nexport const onSort = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC' | '',\n  orderKey: OrderKey,\n  type: string = 'tree',\n): (RecordDatabase | RecordList)[] => {\n  if (!typeOrder) return datasTable\n  let newDatas = datasTable\n  if (type === 'tree') {\n    if (['lab_name', 'user_name'].includes(orderKey)) {\n      newDatas = sortWithLabName(\n        datasTable,\n        orderKey as 'lab_name' | 'user_name',\n        typeOrder,\n      )\n    } else if (orderKey === 'recording_time') {\n      newDatas = sortWithTime(datasTable, typeOrder)\n    } else if (orderKey === 'subject' && type === 'tree') {\n      newDatas = sortSubjectTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'session' && type === 'tree') {\n      newDatas = sortSessionTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'datatype' && type === 'tree') {\n      newDatas = sortDataTypeTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'image_attributes.image_type' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n      )\n    } else if (orderKey === 'image_attributes.protocol' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'protocol',\n      )\n    } else if (orderKey === 'image_attributes.voxel' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'voxel',\n      )\n    } else if (orderKey === 'image_attributes.scale' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'scale',\n      )\n    }\n  } else {\n    newDatas = sortWithKey(\n      datasTable as RecordList[],\n      orderKey as keyof RecordList,\n      typeOrder,\n    )\n  }\n  return newDatas\n}\n\nexport const onFilterValue = (\n  value: { [key: string]: string },\n  setDatabases: (value: any) => void,\n  initDataTable: DatabaseData,\n  type: 'tree' | 'list',\n) => {\n  if (!Object.keys(value).some((key) => value[key])) {\n    setDatabases(initDataTable)\n    return\n  }\n  if (type === 'list') {\n    const arrFilter = initDataTable.records.filter((item: any) => {\n      return !Object.keys(value).some((key: string) => {\n        if (!value[key]) return false\n        if (key === 'protocol') {\n          return !item.image_attributes[key]\n            ?.toLowerCase()\n            .includes(value[key].toLowerCase?.())\n        }\n        return !item[key]?.includes(value[key].toLowerCase?.())\n      })\n    })\n    setDatabases({\n      pagenation: {\n        page: 0,\n        limit: 0,\n        total: 0,\n        total_pages: 0,\n      },\n      records: arrFilter,\n    })\n    return\n  }\n  const newRecords = initDataTable.records.reduce(\n    (arrRecord: RecordDatabase[], record) => {\n      const subjects = record.subjects.reduce(\n        (arrSub: SubjectDatabase[], subject) => {\n          const sessions = subject.sessions.reduce(\n            (arrSess: SessionsDatabase[], session) => {\n              if (\n                session.label\n                  ?.toLowerCase()\n                  ?.includes((value.session_label || '')?.toLowerCase())\n              ) {\n                const datatypes = session.datatypes.reduce(\n                  (arrDt: DatatypesDatabase[], dt) => {\n                    if (\n                      dt.label\n                        ?.toLowerCase()\n                        ?.includes((value.datatypes_label || '')?.toLowerCase())\n                    ) {\n                      const images = dt.images.filter((image) => {\n                        const { image_type, protocol } = image.image_attributes\n                        return (\n                          (image_type as string)\n                            ?.toLowerCase()\n                            .includes((value.type || '').toLowerCase()) &&\n                          (protocol as string)\n                            ?.toLowerCase()\n                            .includes((value.protocol || '').toLowerCase())\n                        )\n                      })\n                      if (images.length) {\n                        arrDt.push({ ...dt, images })\n                      }\n                    }\n                    return arrDt\n                  },\n                  [],\n                )\n                if (datatypes.length) {\n                  arrSess.push({ ...session, datatypes })\n                }\n              }\n              return arrSess\n            },\n            [],\n          )\n          if (sessions.length) {\n            arrSub.push({ ...subject, sessions })\n          }\n          return arrSub\n        },\n        [],\n      )\n      if (subjects.length) {\n        arrRecord.push({ ...record, subjects })\n      }\n      return arrRecord\n    },\n    [],\n  )\n  setDatabases({\n    pagenation: {\n      page: 0,\n      limit: 0,\n      total: 0,\n      total_pages: 0,\n    },\n    records: newRecords,\n  })\n  return\n}\n","import { Box, Button, IconButton, styled, TextField } from '@mui/material'\nimport { ChangeEvent, useCallback, useEffect, useState } from 'react'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ImageView from 'components/ImageView'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport {\n  onFilterValue,\n  onGet,\n  onRowClick,\n  onSort,\n  OrderKey,\n} from 'utils/database'\nimport { User, useUser } from 'providers'\nimport { isReseacher } from 'utils/auth'\nimport { getDataBaseList, getDataBaseTree } from 'api/rawdb'\nimport { DATABASE_URL_HOST } from 'const/API'\nimport Loading from 'components/common/Loading'\nimport { useSearchParams } from 'react-router-dom'\n\ntype PopupSearchProps = {\n  onClose?: () => any\n  onFilter?: (values: { [key: string]: string }) => any\n  defaultValue?: { [key: string]: string }\n}\n\nexport const PopupSearch = ({\n  onClose,\n  defaultValue = {},\n  onFilter,\n}: PopupSearchProps) => {\n  const [values, setValues] = useState(defaultValue)\n\n  const handleFilter = () => {\n    onFilter?.(values)\n    onClose?.()\n  }\n\n  const onChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    setValues({ ...values, [event.target.name]: event.target.value })\n  }\n\n  return (\n    <Popup>\n      <PopupInner>\n        <HeaderTitle>\n          <span>Filter</span>\n          <ButtonControl onClick={onClose}>\n            <CloseIcon />\n          </ButtonControl>\n        </HeaderTitle>\n        <InputSearch\n          onChange={onChange}\n          name={'session_label'}\n          label=\"Session\"\n          variant=\"outlined\"\n          value={values.session_label}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'datatypes_label'}\n          label=\"Datatype\"\n          variant=\"outlined\"\n          value={values.datatypes_label}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'type'}\n          label=\"Type\"\n          variant=\"outlined\"\n          value={values.type}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'protocol'}\n          label=\"Protocol\"\n          variant=\"outlined\"\n          value={values.protocol}\n        />\n        <Button variant=\"contained\" onClick={handleFilter}>\n          Filter\n        </Button>\n      </PopupInner>\n    </Popup>\n  )\n}\n\nexport type ObjectType = {\n  [key: string]: ObjectType | string | number | number[]\n}\n\nexport type Image = {\n  id: number\n  parent_id: number\n  session_id: number\n  label: string\n  image: {\n    id: number\n    parent_id: number\n    image_url: string\n    image_attributes: ObjectType\n  }\n}\n\nexport type Viewer = {\n  open: boolean\n  url: string\n  jsonData?: ObjectType\n  id?: number | string\n  session_id?: number\n  parent_id?: string\n  image?: ImagesDatabase | RecordList\n}\n\nexport type ImagesDatabase = {\n  id: number\n  parent_id: string\n  image_url: string\n  datatype_label?: string\n  type?: string\n  image_attributes: ObjectType\n  session_id?: number\n  record_index?: number\n  subject_index?: number\n  session_index?: number\n  datatype_index?: number\n  image_index?: number\n}\n\nexport type DatatypesDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  images: ImagesDatabase[]\n}\n\nexport type SessionsDatabase = {\n  id: string\n  parent_id: string\n  session_index?: number\n  label: string\n  datatypes: DatatypesDatabase[]\n  subject_index?: number\n}\n\nexport type SubjectDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  sessions: SessionsDatabase[]\n  subject_index?: number\n}\n\nexport type RecordDatabase = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  created_time: string\n  updated_time: string\n  subjects: SubjectDatabase[]\n}\n\nexport type DatabaseData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordDatabase[]\n}\n\nexport type RecordList = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  subject_label: string\n  session_label: string\n  datatypes_label: string\n  image_id: number\n  image_url: string\n  image_attributes: {\n    size: number[]\n    type: string\n    protocol: string\n    voxel_size: number[]\n  }\n  created_time: string\n  updated_time: string\n}\n\nexport type DatabaseListData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordList[]\n}\n\nexport const defaultDatabase: DatabaseData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [],\n}\n\nexport const columns = (\n  rowClick: Function,\n  setOpenDelete: Function,\n  type: 'tree' | 'list' = 'tree',\n  user?: User,\n): Column[] => [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true, width: 110 },\n  {\n    title: 'Subject',\n    name: type === 'tree' ? 'subject' : 'subject_label',\n    filter: true,\n  },\n  {\n    title: 'Session',\n    name: type === 'tree' ? 'session' : 'session_label',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Datatype',\n    name: type === 'tree' ? 'datatype' : 'datatypes_label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Type',\n    name: 'image_attributes.image_type',\n    filter: true,\n    width: 70,\n  },\n  {\n    title: 'Protocol',\n    name: 'image_attributes.protocol',\n    filter: true,\n  },\n  {\n    title: 'Size',\n    name: 'image_attributes.scale',\n    filter: true,\n    render: (_, v) => JSON.stringify(v),\n  },\n  {\n    title: 'Voxel size',\n    name: 'image_attributes.voxel',\n    filter: true,\n    width: 130,\n    render: (_, v) => JSON.stringify(v),\n  },\n  {\n    title: '',\n    name: 'action',\n    render: (data) => {\n      if (isReseacher(user?.role)) return null\n      return (\n        <BoxButton>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              rowClick?.(data)\n            }}\n          >\n            <EditIcon fontSize=\"small\" color={'inherit'} />\n          </ButtonControl>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              setOpenDelete?.(true)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </ButtonControl>\n        </BoxButton>\n      )\n    },\n  },\n]\n\nconst Database = () => {\n  const [openPopup, setOpenPopup] = useState(false)\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [databases, setDatabases] = useState<DatabaseData | DatabaseListData>()\n  const [openDelete, setOpenDelete] = useState(false)\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [type, setType] = useState<'tree' | 'list'>('tree')\n  const [initDataTable, setInitDataTable] =\n    useState<DatabaseData>(defaultDatabase)\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [isLoading, setIsLoading] = useState(false)\n  const { user } = useUser()\n  const [searchParams, setParams] = useSearchParams()\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const fetchData = useCallback(async () => {\n    const defaultValue = {\n      session_label: searchParams.get('session_label') || '',\n      datatypes_label: searchParams.get('datatypes_label') || '',\n      type: searchParams.get('type') || '',\n      protocol: searchParams.get('protocol') || '',\n    }\n    setIsLoading(true)\n    let data\n    try {\n      data = type === 'tree' ? await getDataBaseTree() : await getDataBaseList()\n      onFilterValue(defaultValue, setDatabases, data, type)\n      setInitDataTable(data)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [type, searchParams])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  const rowClick = async (row: ImagesDatabase | RecordList) => {\n    if (!databases) return\n    const { view, checkNext, checkPre } = await onRowClick(databases, row, type)\n    setViewer(view)\n    setDisabled({\n      left: type === 'list' || !checkPre,\n      right: type === 'list' || !checkNext,\n    })\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    if (!databases) return\n\n    const data = onSort(\n      JSON.parse(JSON.stringify(databases.records)),\n      orderByValue,\n      orderKey as OrderKey,\n      type,\n    )\n    setDatabases({ ...databases, records: data as any })\n    setColumnSort(orderKey)\n    setOrdeBy(orderByValue)\n  }\n\n  const onNext = async () => {\n    if (!viewer.image) return\n    const imageNext = onGet(databases as any, viewer.image, false, type)\n    if (imageNext) await rowClick(imageNext)\n  }\n\n  const onPrevious = async () => {\n    if (!viewer.image || !databases) return\n    const imagePre = onGet(databases, viewer.image, true, type)\n    if (imagePre) await rowClick(imagePre)\n  }\n\n  const onFilter = (value: { [key: string]: string }) => {\n    if (!databases) return\n    onFilterValue(value, setDatabases, initDataTable, type)\n    if (!Object.keys(value).length) return\n    const newParams = Object.keys(value)\n      .map((key) => value[key] && `${key}=${value[key]}`)\n      .join('&')\n    setParams(newParams)\n  }\n\n  return (\n    <DatabaseWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Image\"\n        description={`Are you sure delete?\\n`}\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ProjectsTitle>\n        <span>Database</span>\n        <ButtonFilter\n          onClick={() => setOpenPopup(true)}\n          style={{ margin: '0 26px 0 0' }}\n        >\n          Filter\n        </ButtonFilter>\n      </ProjectsTitle>\n      <BoxSelectTypeView>\n        <Box\n          onClick={() => setType('tree')}\n          style={{\n            marginRight: 4,\n            fontWeight: type === 'tree' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'tree' ? '' : '#4687f4',\n          }}\n        >\n          Tree\n        </Box>\n        /\n        <Box\n          onClick={() => setType('list')}\n          style={{\n            marginLeft: 4,\n            fontWeight: type === 'list' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'list' ? '' : '#4687f4',\n          }}\n        >\n          List\n        </Box>\n      </BoxSelectTypeView>\n      {openPopup && (\n        <PopupSearch\n          onClose={() => setOpenPopup(false)}\n          defaultValue={{\n            session_label: searchParams.get('session_label') || '',\n            datatypes_label: searchParams.get('datatypes_label') || '',\n            type: searchParams.get('type') || '',\n            protocol: searchParams.get('protocol') || '',\n          }}\n          onFilter={onFilter}\n        />\n      )}\n      <DatabaseTableComponent\n        defaultExpand\n        onSort={handleSort}\n        rowClick={rowClick}\n        orderKey={columnSort}\n        orderBy={orderBy}\n        data={databases && databases.records}\n        columns={columns(rowClick, setOpenDelete, type, user)}\n      />\n      <ImageView\n        disabled={disabled}\n        url={viewer.url && `${DATABASE_URL_HOST}${viewer.url}`}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n        id={Number(viewer.id)}\n      />\n      {isLoading && <Loading />}\n    </DatabaseWrapper>\n  )\n}\n\nconst DatabaseWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst HeaderTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst Popup = styled(Box)(() => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n  zIndex: 9999,\n}))\n\nconst PopupInner = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2, 3),\n  backgroundColor: '#fff',\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n}))\n\nconst InputSearch = styled(TextField)(() => ({\n  minWidth: 250,\n}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ButtonControl = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0, 1),\n  width: 30,\n  height: 30,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst ProjectsTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst BoxSelectTypeView = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 16,\n})\n\nexport default Database\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { getMe, login } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { saveExToken, saveRefreshToken, saveToken } from 'utils/auth'\nimport Loading from '../../components/common/Loading'\n\nconst Login = () => {\n  const { setUser } = useUser()\n  const navigate = useNavigate()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n    try {\n      const { access_token, ex_token, refresh_token } = await login(values)\n      saveToken(access_token)\n      saveRefreshToken(refresh_token)\n      saveExToken(ex_token)\n      getUser()\n    } catch (e) {\n      setErrors({ email: 'Email or password is wrong', password: '' })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const getUser = async () => {\n    const data = await getMe()\n    setUser(data)\n    navigate('/')\n  }\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">\n              {errors.password}\n            </TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {isLoading && <Loading />}\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { createSlice } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Project } from './ProjectType'\nimport { getProjectList, getProjectId } from './ProjectAction'\n\nconst initialState: Project = {\n  projects: [],\n  currentProject: undefined,\n}\n\nexport const projectSlice = createSlice({\n  name: PROJECT_SLICE_NAME,\n  initialState,\n  reducers: {\n    resetCurrentProject: (state) => {\n      state.currentProject = undefined\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getProjectList.fulfilled, (state, action) => {\n      state.projects = action.payload.projects\n    })\n    builder.addCase(getProjectId.fulfilled, (state, action) => {\n      state.currentProject = action.payload\n    })\n  },\n})\n\nexport const { resetCurrentProject } = projectSlice.actions\nexport default projectSlice.reducer\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  styled,\n  Typography,\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport React, {\n  useState,\n  DragEvent,\n  Fragment,\n  useRef,\n  CSSProperties,\n  useEffect,\n} from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport {\n  DatabaseData,\n  defaultDatabase,\n  ImagesDatabase,\n  PopupSearch,\n  Viewer,\n} from '../Database'\nimport ImageView from 'components/ImageView'\nimport {\n  onFilterValue,\n  onGet,\n  onRowClick,\n  onSort,\n  OrderKey,\n} from 'utils/database'\nimport { ObjectType } from '../Database'\nimport { ChangeEvent } from 'react'\nimport { RecordDatabase } from '../Database'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { useDispatch } from 'react-redux'\nimport { getDatasetList } from 'store/slice/Dataset/DatasetAction'\nimport { ProjectTypeValue } from 'store/slice/Project/ProjectType'\nimport {\n  createProject,\n  editProject,\n  getProjectId,\n} from 'store/slice/Project/ProjectAction'\nimport Loading from 'components/common/Loading'\nimport { getDataBaseTree } from 'api/rawdb'\nimport { DATABASE_URL_HOST } from 'const/API'\nimport { selectDataset } from 'store/slice/Dataset/DatasetSelector'\nimport { useSelector } from 'react-redux'\nimport { Dataset } from 'store/slice/Dataset/DatasetType'\nimport { selectCurrentProject } from 'store/slice/Project/ProjectSelector'\nimport { resetCurrentProject } from 'store/slice/Project/ProjectSlice'\n\nconst columns: Column[] = [\n  { title: 'User', name: 'user_name', filter: true, width: 100 },\n  { title: 'Date', name: 'recording_time', filter: true, width: 130 },\n  { title: 'Subject', name: 'subject', filter: true, width: 120 },\n  {\n    title: 'Session',\n    name: 'session',\n    child: 'label',\n    filter: true,\n    width: 190,\n  },\n  {\n    title: 'Datatype',\n    name: 'datatype',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Size',\n    name: 'image_attributes.scale',\n    filter: true,\n    render: (_, value) => JSON.stringify(value),\n  },\n  {\n    title: 'Voxel size',\n    name: 'image_attributes.voxel',\n    filter: true,\n    render: (_, value) => JSON.stringify(value),\n  },\n]\n\ntype ProjectAdd = {\n  project_name?: string\n  project_type?: string\n  image_count: number\n  image_url: string\n  protocol: string\n  id: string\n  image_id: number\n  jsonData: ObjectType\n}\n\ntype DataWithin = {\n  id: string\n  data: ProjectAdd[]\n  name: string\n}\n\ntype DataFactor = {\n  within: DataWithin[]\n} & DataWithin\n\nconst nameDefault = 'DEFAULT'\n\nconst defaultFactor = [\n  { name: nameDefault, within: [], id: getNanoId(), data: [] },\n]\n\nconst remapDatasetToDataFactor = ({ dataset }: Dataset): DataFactor[] => {\n  if (!dataset) return defaultFactor\n  return dataset.sub_folders.map((sub) => ({\n    id: sub.id,\n    name: sub.folder_name || nameDefault,\n    within: (sub.sub_folders || []).map((sub_within) => ({\n      id: sub_within.id,\n      name: sub_within.folder_name,\n      data: (sub_within.images || []).map((image) => ({\n        project_name: image.attributes.datatype as string,\n        project_type: image.attributes.image_type as string,\n        id: String(image.id),\n        image_count: 1,\n        image_id: image.id,\n        protocol: image.attributes.protocol as string,\n        image_url: image.image_url,\n        jsonData: image.attributes,\n      })),\n    })),\n    data: (sub.images || []).map((image) => ({\n      project_name: image.attributes.datatype as string,\n      project_type: image.attributes.image_type as string,\n      id: String(image.id),\n      image_count: 1,\n      image_id: image.id,\n      protocol: image.attributes.protocol as string,\n      image_url: image.image_url,\n      jsonData: image.attributes,\n    })),\n  }))\n}\n\nconst ProjectFormComponent = () => {\n  const [searchParams, setParams] = useSearchParams()\n  const idEdit = searchParams.get('id')\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [loading, setLoading] = useState<boolean>(false)\n  const [imageIDs, setImageIDs] = useState<number[]>([])\n  const routeGoback = searchParams.get('back')\n  const nodeId = searchParams.get('nodeId')\n  const isPendingDrag = useRef(false)\n  const dispatch = useDispatch()\n\n  const dataset = useSelector(selectDataset)\n  const currentProject = useSelector(selectCurrentProject)\n\n  const [databasese, setDatabases] = useState<DatabaseData>(defaultDatabase)\n  const [initDatabase, setInitDatabase] =\n    useState<DatabaseData>(defaultDatabase)\n  const [projectName, setProjectName] = useState(\n    currentProject?.project_name || 'Prj Name 1',\n  )\n  const [projectType, setProjectType] = useState<ProjectTypeValue>(\n    currentProject?.project_type || ProjectTypeValue.FACTOR,\n  )\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [openFilter, setOpenFilter] = useState(false)\n  const [rowDrag, setRowDrag] = useState<ImagesDatabase | ImagesDatabase[]>()\n  const [dataFactors, setDataFactors] = useState<DataFactor[]>(\n    remapDatasetToDataFactor(dataset),\n  )\n\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n\n  useEffect(() => {\n    if (!idEdit) return\n    setLoading(true)\n    dispatch(getDatasetList({ project_id: idEdit }))\n    dispatch(\n      getProjectId({\n        project_id: idEdit,\n        callback: () => setLoading(false),\n      }),\n    )\n    //eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetCurrentProject())\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    setDataFactors(remapDatasetToDataFactor(dataset))\n  }, [dataset])\n\n  useEffect(() => {\n    if (currentProject?.project_name) {\n      setProjectName(currentProject?.project_name)\n    }\n  }, [currentProject?.project_name])\n\n  useEffect(() => {\n    if (typeof currentProject?.project_type === 'number') {\n      setProjectType(currentProject.project_type)\n    }\n  }, [currentProject?.project_type])\n\n  useEffect(() => {\n    getDataTree().then()\n    //eslint-disable-next-line\n  }, [])\n\n  const onFilter = (value: { [key: string]: string }) => {\n    if (!initDatabase) return\n    onFilterValue(value, setDatabases, initDatabase, 'tree')\n    if (!Object.keys(value).length) return\n    const newParams = Object.keys(value)\n      .map((key) => value[key] && `${key}=${value[key]}`)\n      .join('&')\n    setParams(newParams)\n  }\n\n  const getDataTree = async () => {\n    try {\n      const response = await getDataBaseTree()\n      setDatabases(response)\n      setInitDatabase(response)\n    } catch {}\n  }\n\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n    setProjectName(e.target.value)\n  }\n\n  const handleChangeLevel = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const type = Number(event.target.value) as ProjectTypeValue\n    setProjectType(type)\n    let within: DataWithin[] = []\n    if (type === ProjectTypeValue.WITHIN_FACTOR) {\n      within = [{ name: nameDefault, id: getNanoId(), data: [] }]\n    }\n    setImageIDs([])\n    setDataFactors([{ name: nameDefault, within, id: getNanoId(), data: [] }])\n  }\n\n  const onAddBetween = () => {\n    setDataFactors((pre) => [\n      ...pre,\n      { name: nameDefault, within: [], id: getNanoId(), data: [] },\n    ])\n  }\n\n  const onAddWithin = (idFactor: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === idFactor) {\n          return {\n            ...p,\n            within: [\n              ...p.within,\n              { name: nameDefault, within: [], id: getNanoId(), data: [] },\n            ],\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteFactor = (row: DataFactor) => {\n    setImageIDs((pre) =>\n      pre.filter((id) => {\n        if (projectType === ProjectTypeValue.FACTOR) {\n          return !row.data.find((rowData) => rowData.image_id === id)\n        }\n        return !row.within.find((w) => w.data.find((d) => d.image_id === id))\n      }),\n    )\n    setDataFactors((pre) => pre.filter((e) => e.id !== row.id))\n  }\n\n  const onDeleteWithin = (factor: DataFactor, row: DataWithin) => {\n    setImageIDs((pre) =>\n      pre.filter((id) => !row.data.find((rowData) => rowData.image_id === id)),\n    )\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, within: p.within.filter((w) => w.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataWithin = (\n    factor: DataFactor,\n    within: DataWithin,\n    row: ProjectAdd,\n  ) => {\n    setImageIDs((pre) => pre.filter((id) => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, data: w.data.filter((d) => d.id !== row.id) }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataFactor = (factor: DataFactor, row: ProjectAdd) => {\n    setImageIDs((pre) => pre.filter((id) => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, data: p.data.filter((d) => d.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDragRow = (row: ImagesDatabase[] = []) => {\n    setRowDrag(row)\n  }\n\n  const onBeginDrag = () => {\n    isPendingDrag.current = true\n    const mouseup = () => {\n      isPendingDrag.current = false\n      window.removeEventListener('mouseup', mouseup)\n    }\n    window.addEventListener('mouseup', mouseup)\n  }\n\n  const onDragEnd = () => {\n    setRowDrag(undefined)\n  }\n\n  const onMouseOver = (factor: DataFactor, within?: DataWithin) => {\n    if (isPendingDrag.current) return\n    onDropData(factor, within)\n    setRowDrag(undefined)\n  }\n\n  const onDropData = (factor: DataFactor, within?: DataWithin) => {\n    if (!Array.isArray(rowDrag) && !rowDrag?.image_url) {\n      return\n    }\n    let newData: ProjectAdd[] = []\n    const checkExistIdImage =\n      imageIDs.length &&\n      imageIDs.some((id) => {\n        if (!Array.isArray(rowDrag)) return rowDrag.id === id\n        return rowDrag.some((row) => row.id === id)\n      })\n    if (checkExistIdImage) {\n      return alert('Duplicate images cannot be registered.')\n    }\n    const newIds = Array.isArray(rowDrag)\n      ? rowDrag.map((row) => row.id)\n      : [rowDrag.id]\n    setImageIDs([...imageIDs, ...newIds])\n    if (!Array.isArray(rowDrag)) {\n      newData = [\n        {\n          id: getNanoId(),\n          project_name: rowDrag.datatype_label,\n          image_count: 1,\n          image_id: rowDrag.id,\n          project_type: rowDrag.image_attributes.image_type as string,\n          protocol: rowDrag.image_attributes.protocol as string,\n          image_url: rowDrag?.image_url,\n          jsonData: rowDrag?.image_attributes,\n        },\n      ]\n    } else if (Array.isArray(rowDrag)) {\n      newData = rowDrag.map((row) => ({\n        id: getNanoId(),\n        project_name: row.datatype_label,\n        image_count: 1,\n        image_id: row.id,\n        project_type: row.image_attributes.image_type as string,\n        protocol: row.image_attributes.protocol as string,\n        image_url: row?.image_url,\n        jsonData: row?.image_attributes,\n      }))\n    }\n    if (projectType === ProjectTypeValue.FACTOR) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return { ...p, data: [...p.data, ...newData] }\n          }\n          return p\n        }),\n      )\n      return\n    }\n    if (within) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return {\n              ...p,\n              within: p.within.map((w) => {\n                if (w.id === within.id) {\n                  return { ...w, data: [...w.data, ...newData] }\n                }\n                return w\n              }),\n            }\n          }\n          return p\n        }),\n      )\n    }\n  }\n\n  const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onDragLeave = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onChangeNameFactor = (factor: DataFactor, value: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, name: value }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onChangeNameWithinFactor = (\n    factor: DataFactor,\n    within: DataWithin,\n    value: string,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, name: value }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const renderData = (\n    data: ProjectAdd[],\n    style?: CSSProperties,\n    onDelete?: (row: ProjectAdd) => void,\n  ) => {\n    return data.map((e, index) => (\n      <BoxItem\n        key={`${e.id}_${index}`}\n        style={style}\n        onClick={() => rowDataClick(e)}\n      >\n        <TypographyBoxItem>{e.project_name}</TypographyBoxItem>\n        <TypographyBoxItem>{e.project_type}</TypographyBoxItem>\n        <TypographyBoxItem>{e.protocol}</TypographyBoxItem>\n        <Box style={{ display: 'flex', justifyContent: 'flex-end', width: 64 }}>\n          <Button\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              onDelete?.(e)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </Button>\n        </Box>\n      </BoxItem>\n    ))\n  }\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const rowClick = async (row: ImagesDatabase) => {\n    const { view, checkNext, checkPre } = await onRowClick(databasese, row)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const rowDataClick = (row: ProjectAdd) => {\n    if (!row?.image_url || !timeoutClick.current) {\n      timeoutClick.current = setTimeout(() => {\n        timeoutClick.current = undefined\n      }, 300)\n      return\n    }\n    setViewer({\n      open: true,\n      url: row.image_url,\n      jsonData: row.jsonData,\n    })\n    setDisabled({ left: true, right: true })\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDatabase.records)),\n      orderByValue,\n      orderKey as OrderKey,\n    )\n    setDatabases({ ...databasese, records: data as RecordDatabase[] })\n    setColumnSort(orderKey)\n    setOrdeBy(orderByValue)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(databasese, viewer.image, false)\n    if (imageNext) rowClick(imageNext as ImagesDatabase)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(databasese, viewer.image, true)\n    if (imagePre) rowClick(imagePre as ImagesDatabase)\n  }\n\n  const onCancle = () => {\n    !routeGoback\n      ? navigate('/projects')\n      : navigate(`${routeGoback}&id=${idEdit}`, { state: { edited: true } })\n  }\n\n  const generateName = (name: string, index: number, subject: string) => {\n    if (name === nameDefault) {\n      return `${subject} factor name ${index}`\n    }\n    return name\n  }\n\n  const getBorderDrag = (): string => {\n    if (\n      (Array.isArray(rowDrag) && rowDrag.length) ||\n      (!Array.isArray(rowDrag) && !!rowDrag)\n    ) {\n      return '1px dashed red'\n    }\n    return ''\n  }\n\n  const onOk = async () => {\n    setLoading(true)\n    const project = {\n      project_name: projectName,\n      project_type: projectType,\n      image_count: imageIDs.length,\n    }\n    const dataset = dataFactors.map((factor, index) => ({\n      folder_name: generateName(factor.name, index, 'Between'),\n      source_image_ids: factor.data.map((d) => d.image_id),\n      sub_folders: factor.within.map((within, iWithin) => ({\n        folder_name: generateName(within.name, iWithin, 'Within'),\n        source_image_ids: within.data.map((d) => d.image_id),\n      })),\n    }))\n    if (nodeId) {\n      dispatch(\n        editProject({\n          project,\n          project_id: nodeId,\n          dataset,\n          callback: (isSuccess: boolean) => {\n            if (isSuccess) {\n              const urls = dataFactors\n                .map((el) => {\n                  if (el.data.length) return el.data\n                  return el.within.map((w) => w.data).flat()\n                })\n                .flat()\n                .map((image) => image.image_url)\n              dispatch(setInputNodeFilePath({ nodeId, filePath: urls }))\n              if (routeGoback) navigate(routeGoback)\n            }\n            setLoading(false)\n          },\n        }),\n      )\n    } else {\n      dispatch(\n        createProject({\n          project,\n          dataset,\n          callback: (isSuccess: boolean) => {\n            if (isSuccess) {\n              return onCancle()\n            }\n            setLoading(false)\n          },\n        }),\n      )\n    }\n  }\n\n  return (\n    <ProjectsWrapper>\n      {openFilter && (\n        <PopupSearch\n          defaultValue={{\n            session_label: searchParams.get('session_label') || '',\n            datatypes_label: searchParams.get('datatypes_label') || '',\n            type: searchParams.get('type') || '',\n            protocol: searchParams.get('protocol') || '',\n          }}\n          onFilter={onFilter}\n          onClose={() => setOpenFilter(false)}\n        />\n      )}\n      <ImageView\n        disabled={disabled}\n        url={viewer.url && `${DATABASE_URL_HOST}${viewer.url}`}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n        id={Number(viewer.id)}\n      />\n      {isEditName ? (\n        <InputName\n          autoFocus\n          onBlur={() => setIsEditName(false)}\n          value={projectName}\n          onChange={onChangeName}\n        />\n      ) : (\n        <TextName onClick={() => setIsEditName(true)}>{projectName}</TextName>\n      )}\n      <BoxOptions\n        aria-labelledby=\"demo-radio-buttons-group-label\"\n        value={projectType}\n        name=\"radio-buttons-group\"\n        onChange={handleChangeLevel}\n      >\n        <Box>\n          <Box>\n            <FormControlLabel\n              value={ProjectTypeValue.FACTOR}\n              control={<Radio />}\n              label=\"Between factor\"\n            />\n          </Box>\n          <FormControlLabel\n            value={ProjectTypeValue.WITHIN_FACTOR}\n            control={<Radio />}\n            label=\"Between factor-within factor\"\n            disabled={idEdit ? true : false}\n          />\n        </Box>\n      </BoxOptions>\n      <DropAndDropBox>\n        <DragBox>\n          {dataFactors.map((factor, index) => {\n            return (\n              <Fragment key={factor.id}>\n                <BoxFactor>\n                  <Input\n                    onChange={(e) => onChangeNameFactor(factor, e.target.value)}\n                    style={{ width: 'calc(100% - 64px)' }}\n                    value={generateName(factor.name, index, 'Between')}\n                  />\n                  <Button onClick={() => onDeleteFactor(factor)}>\n                    <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                  </Button>\n                  {projectType === ProjectTypeValue.WITHIN_FACTOR ? (\n                    factor.within.map((within, iWithin) => (\n                      <BoxFactor key={within.id} style={{ marginLeft: 24 }}>\n                        <Input\n                          onChange={(e) => {\n                            const { value } = e.target\n                            onChangeNameWithinFactor(factor, within, value)\n                          }}\n                          style={{ width: 'calc(100% - 64px)' }}\n                          value={generateName(within.name, iWithin, 'Within')}\n                        />\n                        <Button onClick={() => onDeleteWithin(factor, within)}>\n                          <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                        </Button>\n                        {renderData(within.data, { marginLeft: 48 }, (row) => {\n                          onDeleteDataWithin(factor, within, row)\n                        })}\n                        <BoxDrag\n                          style={{ borderBottom: getBorderDrag() }}\n                          onDrop={() => onDropData(factor, within)}\n                          onMouseOver={() => onMouseOver(factor, within)}\n                          onDragOver={onDragOver}\n                          onDragLeave={onDragLeave}\n                        />\n                      </BoxFactor>\n                    ))\n                  ) : (\n                    <>\n                      {renderData(factor.data, { marginLeft: 24 }, (row) => {\n                        onDeleteDataFactor(factor, row)\n                      })}\n                      <BoxDrag\n                        style={{ borderBottom: getBorderDrag() }}\n                        onDrop={() => onDropData(factor)}\n                        onDragOver={onDragOver}\n                        onDragLeave={onDragLeave}\n                        onMouseOver={() => onMouseOver(factor)}\n                      />\n                    </>\n                  )}\n                </BoxFactor>\n                {projectType === ProjectTypeValue.WITHIN_FACTOR &&\n                dataFactors.length ? (\n                  <NewRowButton\n                    onClick={() => onAddWithin(factor.id)}\n                    style={{ marginLeft: 24 }}\n                  >\n                    + Add Within Factor\n                  </NewRowButton>\n                ) : null}\n              </Fragment>\n            )\n          })}\n          <NewRowButton onClick={onAddBetween}>\n            + Add Between Factor\n          </NewRowButton>\n        </DragBox>\n        <DropBox>\n          <BoxFilter>\n            <ButtonFilter\n              onClick={() => setOpenFilter(true)}\n              style={{ margin: '0 26px 0 0' }}\n            >\n              Filter\n            </ButtonFilter>\n          </BoxFilter>\n          <DatabaseTableComponent\n            onSort={handleSort}\n            orderKey={columnSort}\n            orderBy={orderBy}\n            rowClick={rowClick}\n            defaultExpand\n            onBeginDrag={onBeginDrag}\n            onDrag={onDragRow}\n            onDragEnd={onDragEnd}\n            draggable\n            data={databasese.records}\n            columns={columns}\n          />\n        </DropBox>\n      </DropAndDropBox>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <ButtonFilter onClick={onOk}>{idEdit ? 'Ok' : 'Add'}</ButtonFilter>\n        <ButtonFilter onClick={onCancle}>Cancel</ButtonFilter>\n      </Box>\n      {loading && <Loading />}\n    </ProjectsWrapper>\n  )\n}\n\nconst TextName = styled(Typography)(({ theme }) => ({\n  textOverflow: 'ellipsis',\n  width: 'calc(40% - 16px)',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  padding: theme.spacing(1),\n  borderWidth: 1,\n  fontSize: 16,\n}))\n\nconst BoxItem = styled(Box)({\n  display: 'flex',\n  height: 40,\n  alignItems: 'center',\n  borderBottom: '1px solid rgba(0,0,0,0.8)',\n  paddingLeft: 16,\n  marginBottom: 4,\n})\n\nconst TypographyBoxItem = styled(Box)({\n  minWidth: 120,\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n})\n\nconst BoxDrag = styled(Box)({\n  paddingBottom: 24,\n  width: '100%',\n  borderWidth: 1,\n})\n\nconst BoxFactor = styled(Box)({})\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: `calc(100% - ${theme.spacing(2)})`,\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(3),\n  userSelect: 'none',\n}))\n\nconst BoxOptions = styled(RadioGroup)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(1, 2),\n  display: 'flex',\n  flexDirection: 'inherit',\n}))\n\nconst InputName = styled('input')(({ theme }) => ({\n  padding: theme.spacing(1),\n  outline: 'none',\n  borderColor: 'transparent',\n  fontSize: 18,\n  width: 'calc(40% - 16px)',\n  '&:focus': {\n    borderColor: '#000',\n  },\n  display: 'block',\n  borderWidth: 1,\n}))\n\nconst DropAndDropBox = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  gap: theme.spacing(2),\n  height: 'calc(100% - 177px)',\n  overflow: 'hidden',\n}))\n\nconst DragBox = styled(Box)(({ theme }) => ({\n  width: '40%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #000',\n  minHeight: 100,\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst DropBox = styled(Box)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #dedede',\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst NewRowButton = styled(Button)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  borderStyle: 'dashed',\n  borderWidth: 1,\n  margin: theme.spacing(1, 0),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 1),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  color: '#ffffff',\n  backgroundColor: '#283237 !important',\n}))\n\nconst BoxFilter = styled(Box)({\n  display: 'flex',\n  marginBottom: 10,\n  justifyContent: 'flex-end',\n})\n\nexport default ProjectFormComponent\n","import { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { resetPassword } from \"api/auth\";\nimport Loading from \"components/common/Loading\";\nimport { useNavigate } from \"react-router-dom\";\nimport { regexEmail } from \"../AccountManager\";\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await resetPassword(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Pls check your mail!`)\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'This field is validate'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Workflow from './components/Project'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport AccountManager from 'pages/AccountManager'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Projects from './pages/Projects'\nimport Database from './pages/Database'\nimport Login from 'pages/Login'\nimport ProjectFormComponent from \"./pages/Projects/Create\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<Dashboard />} />\n            <Route path=\"/projects/workflow\" element={<Workflow />} />\n            <Route path=\"/account-manager\" element={<AccountManager />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            <Route path=\"/database\" element={<Database />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            <Route path=\"/account-deleted\" element={<AccountDelete />} />\n            <Route path=\"/projects/new-project\" element={<ProjectFormComponent />} />\n          </Routes>\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n  fetchExperiment,\n} from './ExperimentsActions'\nimport {\n  convertToExperimentListType,\n  convertToExperimentType,\n} from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          state.experimentList[action.payload.unique_id] =\n            convertToExperimentType(action.payload)\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Dataset } from './DatasetType'\nimport { getDatasetList } from './DatasetAction'\n\nconst initialState: Dataset = {\n  dataset: undefined,\n  project_id: null,\n}\n\nexport const datasetSlice = createSlice({\n  name: PROJECT_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getDatasetList.fulfilled, (state, action) => {\n      state.dataset = action.payload.dataset\n      state.project_id = action.payload.project_id\n    })\n  },\n})\n\n// eslint-disable-next-line no-empty-pattern\nexport const {} = datasetSlice.actions\nexport default datasetSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n  projectReducer,\n  datasetReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n  project: projectReducer,\n  dataset: datasetReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}