{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/selectors/run/RunSelectors.ts","const/API.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/FlowChart/Snakemake.tsx","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","components/Visualize/DialogContext.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","store/slice/DisplayData/DisplayDataSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","components/Visualize/DataContext.tsx","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","components/Visualize/Plot/CsvPlot.tsx","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Visualize/VisualizeItemAddButton.tsx","components/utils/MouseDragUtil.ts","components/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Visualize/FilePathSelect.tsx","components/Visualize/VisualizeItem.tsx","components/Visualize/FlexItemList.tsx","components/Visualize/Editor/GradientColorPicker.tsx","components/Visualize/Editor/SaveFig.tsx","components/Visualize/Editor/ImageItemEditor.tsx","components/Visualize/Editor/CsvItemEditor.tsx","components/Visualize/Editor/HeatmapItemEditor.tsx","components/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Visualize/Editor/RoiItemEditor.tsx","components/Visualize/Editor/ScatterItemEditor.tsx","components/Visualize/Editor/BarItemEditor.tsx","components/Visualize/VisualizeItemEditor.tsx","components/Visualize/Visualize.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/Button/DownloadButton.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/Button/DeleteButton.tsx","components/Experiment/Button/ImportButton.tsx","components/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Experiment/Experiment.tsx","components/Project.tsx","store/slice/Pipeline/PipelineHook.ts","providers/index.ts","utils/auth/index.ts","components/Header.tsx","components/utils/axios.ts","api/auth/index.ts","components/Layout.tsx","pages/Dashboard/index.tsx","components/common/Input.tsx","components/ModalDeleteAccount/index.tsx","components/Table/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","components/InputPassword/index.tsx","components/ModalChangePassword/index.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","pages/Projects/index.tsx","components/DatabaseTable.tsx","components/ImageView/ChangeSize.tsx","components/ImageView/index.tsx","utils/database/index.ts","pages/Database/index.tsx","pages/Login/index.tsx","pages/Projects/Create.tsx","pages/ResetPassword/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","data","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNodeById","filter","find","id","selectNodeLabelById","label","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","outputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","isEdge","edge","HOST","process","PORT","BASE_URL","runApi","a","axios","post","response","runByUidApi","pendingNodeIdList","createAsyncThunk","thunkAPI","responseData","rejectWithValue","runByCurrentUid","currentUid","getState","pollRunResult","getExperimentsApi","get","deleteExperimentByUidApi","delete","deleteExperimentByListApi","uidList","importExperimentByUidApi","downloadExperimentNwbApi","responseType","downloadExperimentConfigApi","EXPERIMENTS_SLICE_NAME","getExperiments","_","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","initialState","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","extraReducers","builder","addCase","fulfilled","nodeResultDto","outputPath","message","convertToRunResult","rejected","meta","addMatcher","isAnyOf","pending","actions","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","position","newNode","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","style","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","config","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","max","random","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","Button","endIcon","NWBSettingContents","paramKeyList","className","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","errorMessage","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","navigate","useNavigate","float","textAlign","top","right","zIndex","textTransform","useHandleColor","key","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","FileSelect","multiSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","justifyContent","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","alpha","primary","light","DialogContext","createContext","onOpen","onOpenDialogFile","onMessageError","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useContext","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","title","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","setHeader","setIndex","transpose","newState","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","DisplayDataContext","dataType","itemId","NaN","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","items","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","selectImageItemEndIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","offset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","selectCsvItemSetHeader","selectCsvItemSetIndex","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","CsvPlot","isInitialized","isPending","isFulfilled","CsvPlotImple","PresentationalCsvPlot","csvData","useMemo","col","row","header","headerData","field","headerName","idx","rows","row_id","rowObj","fromEntries","columns","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","setOpen","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","p","m","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","colorscale","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","timeDataMaxIndex","maxIdx","selectRoiItemIndex","colorscaleRoi","createColormap","colormap","nshades","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","ml","PlayBack","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","text","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allChecked","allNotChecked","indeterminate","TreeItemLabel","checkboxProps","Checkbox","disableRipple","initDialogFile","ReactFlowComponent","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","accept","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","preventDefault","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","Popover","anchorOrigin","vertical","horizontal","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","drawerWidth","backgroundColor","borderRight","paddingTop","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","StyledButton","borderWidth","useMouseDragHandler","onMouseDown","dependencies","onMouseMove","onMouseUp","document","addEventListener","removeEventListener","once","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","maxWidth","VisualizeItem","isSelected","movingSize","setMovingSize","onCommitSize","onMouseDownX","downEvent","movingX","screenX","movingWidth","moveEvent","newWidth","MIN_WIDTH","onMouseDownY","movingY","screenY","movingHeight","newHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","flexDirection","ItemHeader","cursor","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","isNaN","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","flexWrap","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","SaveFig","SelectedItemIdContext","ImageItemEditor","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newLeft","newRight","LegendSelect","handleChange","drawIndexMap","mt","unmountOnExit","RoiItemEditor","ScatterItemEditor","BarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","selectExperiment","selectExperimentName","selectExperimentFunction","functions","ExperimentStatusIcon","NWBDownloadButton","hasNWB","ExperimentUidContext","url","setFileUrl","URL","createObjectURL","Blob","click","revokeObjectURL","href","download","ConfigDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","timeout","gutterBottom","component","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","selectExperimentFunctionHasNWB","scope","DeleteButton","isRunning","ImportButton","unwrap","then","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListValues","experimentListKeys","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","recordsIsEmpty","page","setPage","storageKey","initialValue","parseFn","savedStr","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","valueNum","rowsPerPage","setRowsPerPage","emptyRows","flexGlow","TableContainer","HeadItem","sortHandler","property","allCheckIndeterminate","onChangeAllCheck","experiment","checkboxVisible","sort","getComparator","slice","expData","RowItem","secondary","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","visibility","TableSortLabel","active","direction","timestamp","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","selectExperimentHasNWB","Fragment","tableCellClasses","root","borderBottomWidth","orderBy","descendingComparator","Experiment","StyledAppBar","drawer","TabPanel","other","hidden","a11yProps","Project","useSearchParams","searchParams","runPipeline","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","centered","textColor","UserContext","setUser","useUser","saveToken","access_token","getToken","isAdmin","isReseacher","optionsRole","BoxDropdown","listStyleType","backgroundClip","outline","Image","BoxWrapper","gap","BoxMenu","userSelect","BoxInfo","BoxMenuItem","transform","BoxMenuItemLogout","fontWeight","TitleLogo","HeaderWrapper","Header","user","refMenu","src","alt","blur","onBlur","display_name","email","removeItem","axiosLibrary","baseURL","interceptors","request","use","headers","Authorization","Promise","reject","login","getMe","listUser","query","createUser","editUser","userId","put","deleteUser","ignorePaths","MenuLeft","onResize","pathname","useLocation","isClose","MenuLeftWrapper","BoxBack","ButtonBack","BoxDivider","KeyboardBackspaceIcon","LinkWrapper","to","TypographyMenu","Link","textDecoration","LayoutWrapper","ContentBodyWrapper","paddingRight","ChildrenWrapper","KeyboardBackspace","shouldForwardProp","listStyle","minHeight","lineHeight","Layout","location","setWidth","checkkAuth","token","window","DashboardWrapper","DashboardContent","TitleMenu","Dashboard","Input","ContentDelete","ButtonConfirm","BoxConfirm","ModalDeleteAccount","onSubmit","titleSubmit","description","textDelete","setTextDelete","Modal","whiteSpace","placeholder","MyPaginate","ReactPaginate","boxSizing","borderCollapse","Thead","Tr","Th","borderTopLeftRadius","borderTopRightRadius","TBody","Td","NoData","ArrowDownwardIconOrder","ArrowDownwardIcon","TableComponent","paginate","orderKey","pageCount","page_size","renderCol","dataIndex","render","iCol","nameCol","align","disableInitialCallback","marginPagesDisplayed","pageRangeDisplayed","breakLabel","previousLabel","nextLabel","TextError","wordBreak","InputError","autoComplete","SelectModal","SelectError","options","initState","password","lab","confirmPassword","ModalComponent","onSubmitEdit","setIsOpenModal","dataEdit","regex","regexPassword","setFormData","isDisabled","setIsDisabled","errors","setErrors","setValues","validateEmail","validateField","test","validatePassword","isConfirm","errorLength","validateLength","onChangeData","pre","onBlurData","validate","errorName","errorEmail","errorLab","errorRole","errorPassword","errorConfirmPassword","newErrors","some","alert","ModalBox","TitleModal","BoxData","LabelModal","ButtonModal","AccountManagerWrapper","BoxButton","ButtonAdd","ALink","button","AccountManager","openDelete","setOpenDelete","isOpenModal","setType","setDataEdit","idDel","setIdDel","setData","per_page","next_page_token","setPaginate","getList","nextPageToken","total_page","handleCloseDelete","onForgotPassword","onOpenModal","InputPassword","BoxTitle","FormInline","Label","ModalChangePassword","onChangeValue","validateReEnter","new_password","reEnter","confirm_password","AccountWrapper","BoxFlex","Title","TitleData","ButtonSubmit","Account","isEditName","setIsEditName","openChangePw","setOpenChangePw","handleCloseChangePw","AccountDelete","ProjectsWrapper","ProjectsTitle","Projects","idDelete","setIdDelete","created_time","updated_time","image_count","project_type","onEdit","onWorkflow","console","log","onResults","addNewProject","k","RenderColumn","recordIndex","rowClick","drags","draggable","onDrag","openChild","setOpenChild","openChildParent","setOpenChildPrent","subjects","openSubjects","setOpenSubjects","isDrag","drag","session_id","datatype_index","onDragEvent","datatypes","column","BoxCenter","sub","subject_index","subId","o","sessions","session","session_index","ii","images","image_index","datatype_label","subject_id","parent_id","record_index","onDragStart","BoxDrag","TableWrap","overflowX","DataTable","DatabaseTableComponent","onSort","setDrags","pageX","pageY","mouseMoveRect","setMouseMoveRect","timeoutClick","ctrRef","refTable","refTdSelect","mouseStart","beginDrag","setBeginDrag","onKeydownEvent","onKeyupEvent","ctrlKey","metaKey","onRowClickEvent","idDom","tds","currentTarget","getElementsByTagName","dom","innerHTML","onBeginDrag","onSortHandle","allowMutilKey","draggableProps","el","rowId","trNow","getBoundingClientRect","scrollY","td","Dot","TitleScale","BoxLine","ScaleWrapper","ChangeDrag","onChangeMin","onChangeMax","showInputMax","mouseDown","refDrag","refDot","getWidth","clientWidth","onTouchStart","touches","mouseInit","scale","onTouchMove","onTouchEnd","BoxLoading","ButtonClose","ButtonNext","ButtonPrevious","ImageViewWrapper","BoxContentData","WrapperJson","TextArea","borderLeft","CloseIconWrapper","CloseIcon","ArrowBackIosIconWrapper","ArrowBackIosIcon","ArrowForwardIosIconWrapper","ArrowForwardIosIcon","ImageView","onNext","onPrevious","jsonData","viewerRef","worldCoords","setWorldCoords","j","voxelCoords","setVoxelCoords","setOpacity","thresholds","setThresholds","maxThres","setMaxThres","contracts","setContracts","brightness","setBrightness","isLoadFile","setIsLoadFile","volumes","loadFile","loadFileIndex","clearVolumes","loadVolumes","nii_url","template","element_id","viewer_insert_className","overlay","complete","brainbrowser","BrainBrowser","color_map_config","VolumeViewer","start","viewer","volume","intensity_min","intensity_max","getIntensityValue","utils","isFunction","getWorldCoords","getVoxelCoords","urlColor","cursor_color","loadDefaultColorMapFromURL","setDefaultPanelSize","toPrecision","num","redrawVolumes","showInputMin","setContrast","refreshPanels","onRowClick","datas","view","image_url","attributes","image_attributes","checkNext","onGet","checkPre","isSub","indexImageNow","records","record","dataNow","subjectNow","sessionNow","datatypeNow","imagePre","datatypeImagePre","imageNext","datatypeNext","sortWithLabName","datasTable","typeOrder","sortSubjectTree","dataA","dataB","subjectsA","subA","subB","subjectsB","sortSessionTree","sessionsA","sA","sB","flat","sessionsB","subSessA","subSessB","ssA","ssB","sortDataTypeTree","ses","ss","dataTypeA","dataTypeB","typeA","typeB","sortAttributesTypeTree","newDatas","s","imageA","imageB","sortWithKey","valueA","valueB","sortWithTime","Date","recording_time","PopupSearch","onFilter","Popup","PopupInner","HeaderTitle","ButtonControl","InputSearch","defaultDatabase","pagenation","limit","total_pages","lab_name","user_name","protocol","dataImages","subject_label","session_label","datatypes_id","datatypes_label","image_id","child","DatabaseWrapper","ButtonFilter","BoxSelectTypeView","Database","openPopup","setOpenPopup","setViewer","setDatasTable","initDataTable","setInitDataTable","setOrdeBy","columnSort","setColumnSort","setDisabled","DatabaseTable","defaultExpand","orderByValue","orderbyCheck","LoginWrapper","LoginContent","FormSignUp","LabelField","LableRequired","Description","LinkWrappper","ButtonLogin","bottom","Login","errorCheck","validateSubmit","getUser","Stack","nameDefault","TextName","BoxItem","TypographyBoxItem","BoxFactor","BoxOptions","RadioGroup","InputName","DropAndDropBox","DragBox","DropBox","NewRowButton","borderStyle","BoxFilter","ProjectFormComponent","idEdit","routeGoback","projectName","setProjectName","projectLevel","setProjectLevel","openFilter","setOpenFilter","rowDrag","setRowDrag","within","dataFactors","setDataFactors","onMouseOver","factor","onDropData","newData","project_name","w","onDragLeave","renderData","onDelete","rowDataClick","Radio","onChangeNameFactor","indexWithin","onChangeNameWithinFactor","onDeleteWithin","onDeleteDataWithin","onDrop","onDeleteDataFactor","idFactor","regexEmail","Heading","ResetPassword","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","function","unique_id","convertToExperimentStatus","success","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.4630be6b.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(data: RunPostData): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { uid, pendingNodeIdList } = data\n  const response = await axios.post(`${BASE_URL}/run/result/${uid}`, {\n    pendingNodeIdList,\n  })\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  try {\n    const responseData = await runApi(runPostData)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (currentUid != null) {\n      try {\n        const responseData = await runByUidApi(currentUid, runPostData)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  try {\n    const responseData = await runResult({ uid, pendingNodeIdList })\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { RunPostData } from 'api/run/Run'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type ExperimentDTO = {\n  function: {\n    [uid: string]: {\n      name: string\n      success: string\n      unique_id: string\n      hasNWB: boolean\n    }\n  }\n  name: string\n  success: string\n  timestamp: string\n  unique_id: string\n  hasNWB: boolean\n}\n\nexport async function getExperimentsApi(): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\n\nexport const getExperiments = createAsyncThunk<ExperimentsDTO, undefined>(\n  `${EXPERIMENTS_SLICE_NAME}/getExperiments`,\n  async (_, thunkAPI) => {\n    try {\n      const response = await getExperimentsApi()\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      }),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n      }}\n    >\n      <Button onClick={() => navigate('/projects')}>\n        <ArrowBackIosIcon />\n        Projects\n      </Button>\n      <SnakemakeButton />\n      <NWBSettingButton />\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import React from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport {\n  FILE_TREE_TYPE,\n  // FILE_TREE_TYPE_SET\n} from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\n// import { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { useNavigate } from 'react-router-dom'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    // multiSelect = false,\n    filePath,\n    // onSelectFile,\n    // onUploadFile,\n    // fileTreeType,\n    selectButtonLabel,\n    // uploadButtonLabel,\n  }) => {\n    // const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //   event.preventDefault()\n    //   if (event.target.files != null && event.target.files[0] != null) {\n    //     const file = event.target.files[0]\n    //     const formData = new FormData()\n    //     formData.append('file', file)\n    //     const fileName = file.name\n    //     onUploadFile(formData, fileName)\n    //   }\n    // }\n    const navigate = useNavigate()\n    // const inputRef = React.useRef<HTMLInputElement>(null)\n    // const onClick = () => {\n    //   if (inputRef.current != null) {\n    //     inputRef.current.click()\n    //   }\n    // }\n    // const [open, setOpen] = React.useState(false)\n    // const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: 16,\n          }}\n        >\n          <ButtonGroup\n            size=\"small\"\n            style={{ marginRight: 4, width: '90%', margin: 'auto' }}\n          >\n            <Button\n              style={{ width: '100%' }}\n              variant=\"outlined\"\n              onClick={() =>\n                navigate('/projects/new-project?id=1&back=/projects/workflow')\n              }\n            >\n              {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n            </Button>\n            {/* <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'or Upload'}\n          </Button> */}\n          </ButtonGroup>\n        </div>\n        <div>\n          {/* <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          /> */}\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n        {/* <FileSelectDialog\n          multiSelect={multiSelect}\n          initialFilePath={filePath}\n          open={open}\n          onClickOk={(path) => {\n            onSelectFile(path)\n            setOpen(false)\n          }}\n          onClickCancel={() => {\n            setOpen(false)\n          }}\n          fileType={fileTreeType}\n        /> */}\n      </div>\n    )\n  },\n)\n\n// function getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n//   switch (fileType) {\n//     case FILE_TREE_TYPE_SET.IMAGE:\n//       return '.tif,.tiff'\n//     case FILE_TREE_TYPE_SET.CSV:\n//       return '.csv'\n//     case FILE_TREE_TYPE_SET.HDF5:\n//       return '.hdf5,.nwb'\n//     default:\n//       return undefined\n//   }\n// }\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import { createContext } from 'react'\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => any\n  onOpenDialogFile: (value: {\n    filePath: string | string[]\n    open: boolean\n    fileTreeType?: string\n    multiSelect: boolean\n    onSelectFile: (path: string | string[]) => any\n  }) => any\n  onMessageError: (v: {\n    anchorElRef: { current: Element | null }\n    message: string\n  }) => any\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n})\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/Visualize/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        label=\"dur[msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport { DialogContext } from 'components/Visualize/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: '',\n  multiSelect: false,\n  onSelectFile: (path: string | string[]) => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] = useState(initDialogFile)\n    const [messageError, setMessageError] = useState({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile as any,\n            onMessageError: setMessageError as any\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                elements={flowElements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                onLoad={onLoad}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition.x, flowPosition.y]}\n                defaultZoom={flowPosition.zoom}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType as any}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { Box } from '@mui/material'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer>\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n  height: '100%',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n    paddingTop: theme.spacing(1.125),\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n  backgroundColor: '#283237 !important',\n  color: '#ffffff'\n})\n","import React from 'react'\n\nexport function useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n  ) => {\n    onSelect(nodeId, filePath, dataType)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { RootState } from 'store/store'\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { useMouseDragHandler } from 'components/utils/MouseDragUtil'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            height: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: dataType,\n              prevFilePath: selectedFilePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\n\nimport {\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setSaveFileName,\n  setSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\n\nexport const SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSaveFileName({ itemId, saveFileName: event.target.value }))\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { SaveFig } from './SaveFig'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (filePath !== null) {\n        dispatch(\n          getImageData({\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { SaveFig } from './SaveFig'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <SaveFig />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/common/Accordion'\n\nimport { SaveFig } from './SaveFig'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            label=\"left\"\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          <TextField\n            label=\"right\"\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const BarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { drawerWidth } from 'components/FlowChart/FlowChart'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\nimport { Box } from '@mui/material'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <StyledDrawer>\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </StyledDrawer>\n      <MainContents>\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')(({ theme }) => ({\n  height: '100%',\n  width: '100%',\n}))\n\nexport default Visualize\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n  nodeId?: string\n  hasNWB: boolean\n}>(({ name, nodeId, hasNWB }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentNwbApi(uid, nodeId)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick} color=\"primary\" disabled={!hasNWB}>\n        <GetAppIcon />\n      </IconButton>\n      <a href={url} download={`${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const ConfigDownloadButton = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`config.yaml`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionHasNWB,\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  const hasNWB = useSelector(selectExperimentFunctionHasNWB(uid, nodeId))\n\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} nodeId={nodeId} hasNWB={hasNWB} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineIsStartedSuccess,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const isRunning = useSelector((state: RootState) => {\n    const currentUid = selectPipelineLatestUid(state)\n    const isPending = selectPipelineIsStartedSuccess(state)\n    return uid === currentUid && isPending\n  })\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen} disabled={isRunning} color=\"error\">\n        <DeleteOutlineIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { importExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\n\nexport const ImportButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    dispatch(importExperimentByUid(uid))\n      .unwrap()\n      .then(() =>\n        enqueueSnackbar('Successfully imported.', { variant: 'success' }),\n      )\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Checkbox from '@mui/material/Checkbox'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n  selectExperimentHasNWB,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  ConfigDownloadButton,\n} from './Button/DownloadButton'\nimport { ImportButton } from './Button/ImportButton'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'studio_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListValues = Object.values(experimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n\n  const onChangeAllCheck = (checked: boolean) => {\n    if (checked) {\n      setCheckedList(experimentListValues.map((experiment) => experiment.uid))\n    } else {\n      setCheckedList([])\n    }\n  }\n\n  const recordsIsEmpty = experimentListKeys.length === 0\n\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  const [page, setPage] = React.useState(0)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const [rowsPerPage, setRowsPerPage] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const newValue = parseInt(event.target.value, 10)\n    setRowsPerPage(newValue)\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        {!recordsIsEmpty && (\n          <Typography sx={{ flexGrow: 1, m: 1 }}>\n            {checkedList.length} selected\n          </Typography>\n        )}\n        <Button\n          sx={{\n            margin: (theme) => theme.spacing(0, 1, 1, 0),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          color=\"error\"\n          endIcon={<DeleteIcon />}\n          onClick={onClickDelete}\n          disabled={checkedList.length === 0}\n        >\n          Delete\n        </Button>\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Paper\n        elevation={0}\n        variant=\"outlined\"\n        sx={{\n          flexGlow: 1,\n          height: '100%',\n        }}\n      >\n        <TableContainer component={Paper} elevation={0}>\n          <Table aria-label=\"collapsible table\">\n            <HeadItem\n              order={order}\n              sortHandler={sortHandler}\n              allCheckIndeterminate={\n                checkedList.length !== 0 &&\n                checkedList.length !== Object.keys(experimentList).length\n              }\n              allChecked={\n                checkedList.length === Object.keys(experimentList).length\n              }\n              onChangeAllCheck={onChangeAllCheck}\n              checkboxVisible={!recordsIsEmpty}\n            />\n            <TableBody>\n              {experimentListValues\n                .sort(getComparator(order, sortTarget))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((expData) => (\n                  <ExperimentUidContext.Provider\n                    value={expData.uid}\n                    key={expData.uid}\n                  >\n                    <RowItem\n                      onCheckBoxClick={onCheckBoxClick}\n                      checked={checkedList.includes(expData.uid)}\n                    />\n                  </ExperimentUidContext.Provider>\n                ))}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={10} />\n                </TableRow>\n              )}\n              {recordsIsEmpty && (\n                <TableRow>\n                  <TableCell colSpan={10}>\n                    <Typography\n                      sx={{\n                        color: (theme) => theme.palette.text.secondary,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '300px',\n                        textAlign: 'center',\n                      }}\n                      variant=\"h6\"\n                    >\n                      No Rows...\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={experimentListKeys.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n  allChecked: boolean\n  onChangeAllCheck: (checked: boolean) => void\n  allCheckIndeterminate: boolean\n  checkboxVisible: boolean\n}>(\n  ({\n    order,\n    sortHandler,\n    allChecked,\n    onChangeAllCheck,\n    allCheckIndeterminate,\n    checkboxVisible,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              sx={{ visibility: checkboxVisible ? 'visible' : 'hidden' }}\n              checked={allChecked}\n              indeterminate={allCheckIndeterminate}\n              onChange={(e) => onChangeAllCheck(e.target.checked)}\n            />\n          </TableCell>\n          <TableCell />\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('timestamp')}\n            >\n              Timestamp\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('uid')}\n            >\n              ID\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('name')}\n            >\n              Name\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>Success</TableCell>\n          <TableCell>Reproduce</TableCell>\n          <TableCell>SnakeFile</TableCell>\n          <TableCell>NWB</TableCell>\n          <TableCell>Delete</TableCell>\n        </TableRow>\n      </TableHead>\n    )\n  },\n)\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n  checked: boolean\n}>(({ onCheckBoxClick, checked }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const hasNWB = useSelector(selectExperimentHasNWB(uid))\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox onChange={() => onCheckBoxClick(uid)} checked={checked} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell>{name}</TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportButton />\n        </TableCell>\n        <TableCell>\n          <ConfigDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} hasNWB={hasNWB} />\n        </TableCell>\n        <TableCell>\n          <DeleteButton />\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex', height: 'calc(100% - 58px)' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100%',\n          padding: 16,\n        }}\n      >\n        <MuiToolbar />\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import React from 'react'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport Tooltip from '@mui/material/Tooltip'\nimport { styled } from '@mui/material/styles'\nimport GitHubIcon from '@mui/icons-material/GitHub'\nimport MenuBookIcon from '@mui/icons-material/MenuBook'\n\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport FlowChart from './FlowChart/FlowChart'\nimport Visualize from './Visualize/Visualize'\nimport Experiment from './Experiment/Experiment'\nimport { Box } from '@mui/material'\nimport { useSearchParams } from 'react-router-dom'\n// import studioLogo from './studio.png'\n\nconst Project: React.FC = () => {\n  const [searchParams] = useSearchParams()\n  const [value, setValue] = React.useState(Number(searchParams.get('tab') || 0))\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n\n  return (\n    <RootDiv>\n      <StyledAppBar color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          {/* <img src={studioLogo} alt=\"studio\" width={75} height={50} /> */}\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Visualize\" {...a11yProps(1)} />\n            <Tab label=\"Record\" {...a11yProps(2)} />\n          </Tabs>\n          <Tooltip title=\"GitHub repository\">\n            <IconButton\n              sx={{ mr: 1 }}\n              href=\"https://github.com/oist/studio\"\n              target=\"_blank\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Documentation\">\n            <IconButton\n              href=\"https://studio.readthedocs.io/en/latest/\"\n              target=\"_blank\"\n            >\n              <MenuBookIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\nconst StyledAppBar = styled(Box)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Project\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n      }\n      setPrevStatus(status)\n    }\n  }, [status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import { createContext, useContext } from 'react'\n\nexport type User = {\n  created_time: null | string\n  display_name: null | string\n  email: string\n  last_login_time: null | string\n  role: string\n  uid: string\n}\n\nexport const UserContext = createContext<{\n  user?: User\n  setUser: Function\n}>({ setUser: () => null })\n\nexport const useUser = () => useContext(UserContext)\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\n\nexport const isAdmin = (role?: string) => {\n  return role === 'ADMIN'\n}\n\nexport const isReseacher = (role?: string) => {\n  return role === 'RESEARCHER'\n}\n\nexport const optionsRole = ['ADMIN', 'RESEARCHER', 'MANAGER']\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useRef, useState } from 'react'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { useUser } from 'providers'\nimport { removeToken } from 'utils/auth'\nimport { useNavigate } from 'react-router-dom'\n\nconst Header: FC = () => {\n  const [open, setOpen] = useState(false)\n  const navigate = useNavigate()\n  const { user } = useUser()\n\n  const refMenu = useRef<HTMLDivElement | null>(null)\n\n  const closeMenu = () => {\n    setTimeout(() => {\n      setOpen(false)\n    }, 100)\n  }\n\n  const onClick = () => {\n    if (open) {\n      return refMenu.current?.blur?.()\n    }\n    setOpen(true)\n  }\n\n  const onLogout = () => {\n    removeToken()\n    navigate('/login')\n  }\n\n  const onNavigateAccount = () => {\n    navigate('/account')\n  }\n\n  return (\n    <HeaderWrapper>\n      <BoxWrapper>\n        <Image src=\"/static/favicon.ico\" alt=\"logo\" />\n        <TitleLogo>Studio</TitleLogo>\n      </BoxWrapper>\n      <BoxMenu ref={refMenu} tabIndex={1} onClick={onClick} onBlur={closeMenu}>\n        <AccountCircleIcon />\n        {open && (\n          <BoxDropdown>\n            <BoxInfo>\n              <AccountCircleIcon />\n              <Box>\n                <Typography>{user?.display_name}</Typography>\n                <Typography>{user?.email}</Typography>\n              </Box>\n            </BoxInfo>\n            <BoxMenuItem onClick={onNavigateAccount}>\n              <PortraitIcon /> Account Profile\n            </BoxMenuItem>\n            <BoxMenuItemLogout onClick={onLogout}>\n              SIGN OUT\n            </BoxMenuItemLogout>\n          </BoxDropdown>\n        )}\n      </BoxMenu>\n    </HeaderWrapper>\n  )\n}\n\nconst BoxDropdown = styled(Box)({\n  position: 'absolute',\n  backgroundColor: '#ffffff',\n  padding: '8px 16px 0',\n  top: 30,\n  right: 0,\n  listStyleType: 'none',\n  backgroundClip: 'padding-box',\n  borderRadius: 3,\n  outline: 'none',\n  boxShadow:\n    '0 6px 16px 0 rgb(0 0 0 / 8%), 0 3px 6px -4px rgb(0 0 0 / 12%), 0 9px 28px 8px rgb(0 0 0 / 5%)',\n  cursor: 'default',\n  zIndex: 1,\n  minWidth: 250,\n})\n\nconst Image = styled('img')({\n  height: 46,\n})\n\nconst BoxWrapper = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 8,\n})\n\nconst BoxMenu = styled(BoxWrapper)({\n  cursor: 'pointer',\n  position: 'relative',\n  userSelect: 'none',\n})\n\nconst BoxInfo = styled(BoxWrapper)({\n  borderBottom: `1px solid #e7e7e7`,\n  padding: '8px 0',\n  cursor: 'default',\n})\n\nconst BoxMenuItem = styled(BoxWrapper)({\n  padding: '8px 0',\n  cursor: 'pointer',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.05) translateX(5px)',\n  },\n})\n\nconst BoxMenuItemLogout = styled(BoxMenuItem)({\n  color: '#1a73e8',\n  fontWeight: 600,\n  marginTop: 30,\n  justifyContent: 'flex-end',\n  '&:hover': {\n    transform: 'scale(1.02)',\n  },\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nconst HeaderWrapper = styled(Box)({\n  height: 48,\n  backgroundColor: '#E1DEDB',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  color: 'rgba(0, 0, 0, 0.87)',\n  boxShadow:\n    '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n  position: 'fixed',\n  width: 'calc(100% - 32px)',\n  padding: '0 16px',\n  zIndex: 9999,\n})\n\nexport default Header\n","import axiosLibrary from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { getToken } from 'utils/auth'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\n\nexport default axios","import axios from 'components/utils/axios'\n\nexport const login = async (data: { email: string; password: string }) => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const getMe = async () => {\n  const response = await axios.get('/auth/me')\n  return response.data\n}\n\nexport const listUser = async (query?: object) => {\n  const response = await axios.get('/admin/user', { params: query })\n  return response.data\n}\n\nexport const createUser = async (data: object) => {\n  const response = await axios.post(`/admin/user`, data)\n  return response.data\n}\n\nexport const editUser = async (userId: string | number, data: object) => {\n  const response = await axios.put(`/admin/user/${userId}`, data)\n  return response.data\n}\n\nexport const deleteUser = async (userId: string | number) => {\n  const response = await axios.delete(`/admin/user/${userId}`)\n  return response.data\n}\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useEffect, useState } from 'react'\nimport Header from './Header'\nimport { KeyboardBackspace } from '@mui/icons-material'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { UserContext, useUser } from 'providers'\nimport { getToken, isAdmin } from 'utils/auth'\nimport { getMe } from 'api/auth'\n\nexport const drawerWidth = 240\n\nconst ignorePaths = ['/login', '/account-delete', '/reset-password']\n\nconst Layout: FC = ({ children }) => {\n  const [user, setUser] = useState()\n  const location = useLocation()\n  const [width, setWidth] = useState(drawerWidth)\n  const navigate = useNavigate()\n\n  const onResize = () => {\n    setWidth(width === drawerWidth ? 54 : drawerWidth)\n  }\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname])\n\n  const checkkAuth = async () => {\n    if (user) return\n    const token = getToken()\n    try {\n      if (token) {\n        const data = await getMe()\n        setUser(data)\n        if (['/login', '/reset-password'].includes(window.location.pathname)) {\n          navigate('/')\n        }\n        return\n      }\n      if (\n        // !auth.currentUser &&\n        !['/login', '/reset-password'].includes(window.location.pathname)\n      ) {\n        navigate('/login')\n      }\n    } catch {\n      navigate('/login')\n    }\n  }\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <LayoutWrapper>\n        {ignorePaths.includes(location.pathname) ? null : <Header />}\n        <ContentBodyWrapper>\n          {ignorePaths.includes(location.pathname) ? null : (\n            <MenuLeft onResize={onResize} width={width} />\n          )}\n          <ChildrenWrapper\n            style={{\n              width: `calc(100% - ${\n                ignorePaths.includes(location.pathname) ? 0 : width + 10\n              }px)`,\n              height: '100%',\n              overflow: 'auto',\n            }}\n          >\n            {children}\n          </ChildrenWrapper>\n        </ContentBodyWrapper>\n      </LayoutWrapper>\n    </UserContext.Provider>\n  )\n}\n\nconst MenuLeft: FC<{ onResize: () => void; width: number }> = ({\n  onResize,\n  width,\n}) => {\n  const { user } = useUser()\n  const { pathname } = useLocation()\n  const isClose = width !== drawerWidth\n  return (\n    <MenuLeftWrapper style={{ width, minWidth: width }}>\n      <BoxBack>\n        <ButtonBack\n          onClick={onResize}\n          style={{ transform: `rotate(${width === drawerWidth ? 0 : 180}deg)` }}\n        >\n          <BoxDivider />\n          <KeyboardBackspaceIcon />\n        </ButtonBack>\n      </BoxBack>\n      <MenuList>\n        <LinkWrapper to=\"/\">\n          <MenuItem isClose={isClose} active={pathname === '/'}>\n            <HomeIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Dashboard\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/database\">\n          <MenuItem isClose={isClose} active={pathname === '/database'}>\n            <StorageIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Database\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/projects\">\n          <MenuItem isClose={isClose} active={pathname.includes('/projects')}>\n            <SourceIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Projects\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        {isAdmin(user?.role) ? (\n          <LinkWrapper to=\"/account-manager\">\n            <MenuItem\n              isClose={isClose}\n              active={pathname === '/account-manager'}\n            >\n              <GroupIcon />\n              <TypographyMenu\n                style={{ opacity: Number(width === drawerWidth) }}\n              >\n                Account Manager\n              </TypographyMenu>\n            </MenuItem>\n          </LinkWrapper>\n        ) : null}\n      </MenuList>\n    </MenuLeftWrapper>\n  )\n}\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: 48,\n  height: 'calc(100% - 48px)',\n  paddingRight: 10,\n  overflow: 'hidden',\n}))\n\nconst ChildrenWrapper = styled(Box)(() => ({\n  height: 'calc(100% - 10px)',\n  display: 'flex',\n  paddingTop: 10,\n  paddingLeft: 10,\n}))\n\nconst MenuLeftWrapper = styled(Box)({\n  height: '100%',\n  backgroundColor: '#283237',\n  overflow: 'auto',\n  transition: 'all 0.3s',\n})\n\nconst BoxBack = styled(Box)({\n  width: '100%',\n  height: 54,\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonBack = styled(Box)({\n  height: 54,\n  width: 54,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n})\n\nconst BoxDivider = styled(Box)({\n  height: 15,\n  width: 1,\n  backgroundColor: '#ffffff',\n  marginRight: -2,\n})\n\nconst KeyboardBackspaceIcon = styled(KeyboardBackspace)({\n  color: '#ffffff',\n  fontSize: 20,\n})\n\nconst MenuList = styled('ul')({\n  margin: 0,\n  padding: 0,\n})\n\nconst MenuItem = styled('li', {\n  shouldForwardProp: (props) => props !== 'isClose' && props !== 'active',\n})<{ isClose: boolean; active: boolean }>(({ isClose, active }) => ({\n  padding: '0 15px',\n  color: '#ffffff',\n  listStyle: 'none',\n  height: 38,\n  minHeight: 38,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  width: 'calc(100% - 30px)',\n  minWidth: 'max-content',\n  transition: 'all 0.3s',\n  cursor: 'pointer',\n  backgroundColor: active ? 'rgba(255,255,255,0.4) !important' : 'transparent',\n  '&:hover': {\n    transform: isClose\n      ? 'scale(1.05) translateX(2px)'\n      : 'scale(1.05) translateX(10px)',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n  },\n}))\n\nconst TypographyMenu = styled(Typography)({\n  lineHeight: '20px',\n  marginTop: 4,\n  fontWeight: 500,\n  transition: 'opacity 0.3s',\n})\n\nexport default Layout\n","import { Box, styled, Typography } from '@mui/material'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Link } from 'react-router-dom'\nimport { useUser } from 'providers'\nimport { isAdmin } from 'utils/auth'\n\nconst Dashboard = () => {\n  const { user } = useUser()\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/database\">\n            <BoxMenu>\n              <Box>\n                <SourceIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/projects\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Projects</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/account\">\n            <BoxMenu>\n              <Box>\n                <AccountCircleIcon fontSize=\"large\" />\n                <TitleMenu>Account</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {isAdmin(user?.role) ? (\n            <LinkWrapper to=\"/account-manager\">\n              <BoxMenu>\n                <Box>\n                  <GroupIcon fontSize=\"large\" />\n                  <TitleMenu>Account Manager</TitleMenu>\n                </Box>\n              </BoxMenu>\n            </LinkWrapper>\n          ) : null}\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { styled } from '@mui/material'\n\nexport const Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description?: string\n}\nconst ModalDeleteAccount: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <Typography style={{ whiteSpace: 'pre-wrap' }}>\n          {description || 'Delete account will erase all of your data.'}This\n          operation cannot be undone. To continue, type \"\n          <span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n        </Typography>\n        <BoxConfirm>\n          <Input\n            placeholder=\"DELETE\"\n            value={textDelete}\n            onChange={(e) => setTextDelete(e.target.value)}\n          />\n          <ButtonConfirm onClick={onConfirm}>{titleSubmit}</ButtonConfirm>\n        </BoxConfirm>\n        <Button onClick={onClose}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default ModalDeleteAccount\n","import { Box, styled, Typography } from '@mui/material'\nimport { FC, useCallback } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport { DataProject } from 'pages/Projects'\n\nexport type Column = {\n  width?: number | string\n  title: string\n  dataIndex?: string\n  name?: string\n  align?: string\n  filter?: boolean\n  render?: (\n    item: DataProject,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined\n}\n\ntype TableComponentProps = {\n  data?: DataProject[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  className?: string\n  columns?: Column[]\n  paginate?: {\n    page: number\n    total: number\n    page_size: number\n    breakLabel?: string\n    nextLabel?: string\n    previousLabel?: string\n    pageRangeDisplayed?: number\n    renderOnZeroPageCount?: string\n    onPageChange?: (selectedItem: { selected: number }) => any\n  }\n}\n\nconst TableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    data = [],\n    columns = [],\n    paginate,\n    className,\n    orderBy,\n    orderKey,\n  } = props\n  const pageCount = (paginate?.total || 0) / (paginate?.page_size || 1)\n\n  const renderCol = useCallback(\n    (col: Column, item: DataProject, index: number) => {\n      const value = item[(col.name || col.dataIndex || '') as keyof DataProject]\n      if (col.render) return col.render(item, value, index)\n      return value || null\n    },\n    [],\n  )\n\n  return (\n    <Box className={className}>\n      <Table>\n        <Thead>\n          <Tr>\n            {columns.map((col, iCol) => {\n              const nameCol = col.name || col.dataIndex || ''\n              return (\n                <Th\n                  style={{ width: col.width, textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {col.title}\n                  <ArrowDownwardIconOrder\n                    style={{\n                      transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                      opacity:\n                        orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                  />\n                </Th>\n              )\n            })}\n          </Tr>\n        </Thead>\n        <TBody>\n          {data.map((item, index) => (\n            <Tr key={item.id || index}>\n              {columns.map((col, iCol) => (\n                <Td\n                  style={{ textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {renderCol(col, item, index)}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n        </TBody>\n      </Table>\n      {!data.length ? <NoData>No Data</NoData> : null}\n      {pageCount ? (\n        <MyPaginate\n          disableInitialCallback\n          marginPagesDisplayed={3}\n          pageRangeDisplayed={3}\n          breakLabel={'...'}\n          pageCount={pageCount}\n          previousLabel={<KeyboardArrowLeftIcon />}\n          nextLabel={<ChevronRightIcon />}\n          {...paginate}\n        />\n      ) : null}\n    </Box>\n  )\n}\n\nconst MyPaginate = styled(ReactPaginate)<any>`\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  list-style-type: none;\n  padding: 1rem 0;\n  li a {\n    padding: 0.6rem 1rem;\n    cursor: pointer;\n  }\n  li.previous,\n  li.next {\n    margin-top: -2px;\n  }\n  li.previous.disabled,\n  li.next.disabled {\n    opacity: 0.4;\n  }\n  li.previous a,\n  li.next a,\n  li.break a {\n    border-color: transparent;\n  }\n  li.active a {\n    background-color: #0366d6;\n    border-color: transparent;\n    color: white;\n    min-width: 32px;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n  li.selected {\n    color: #1677ff;\n    font-weight: 600;\n  }\n`\n\nconst Table = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  width: 118,\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nexport default TableComponent\n","import {InputProps, styled, Typography} from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n    errorMessage: string,\n    value?: string\n}\n\nconst InputError = ({ errorMessage, onChange, value, type, onBlur} :InputErrorProps) => {\n    return (\n        <>\n            <Input\n                autoComplete= \"Off\"\n                error={!!errorMessage}\n                onChange={onChange}\n                value={value}\n                type={type}\n                onBlur={onBlur}\n            />\n            <TextError>{errorMessage}</TextError>\n        </>\n    )\n}\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 15,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    minHeight: 18,\n    color: 'red',\n    lineHeight: '14px',\n    margin: \"-14px 0px 0px 305px\",\n    wordBreak: 'break-word',\n})\n\nexport default InputError;","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  options: string[]\n}\n\nconst SelectError: FC<SelectErrorProps> = ({\n  value,\n  onChange,\n  onBlur,\n  errorMessage,\n  options,\n}) => {\n  return (\n    <>\n      <SelectModal\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: string) => {\n          return (\n            <MenuItem key={item} value={item}>\n              {item}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import { Box, Button, SelectChangeEvent, styled } from '@mui/material'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport TableComponent, { Column } from 'components/Table'\nimport {\n  ChangeEvent,\n  FC,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InputError from '../../components/common/InputError'\nimport SelectError from '../../components/common/SelectError'\nimport { createUser, deleteUser, editUser, listUser } from 'api/auth'\nimport { useUser } from 'providers'\nimport { DataProject } from 'pages/Projects'\nimport { isAdmin, optionsRole } from 'utils/auth'\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setIsOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role: '',\n  lab: '',\n  display_name: '',\n  confirmPassword: '',\n}\n\nconst ModalComponent: FC<ModalComponentProps> = ({\n  onSubmitEdit,\n  setIsOpenModal,\n  dataEdit,\n}) => {\n  const regex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  const regexPassword = /^(?=.*\\d)(?=.*[@$!%*#?&])(?=.*[a-zA-Z]).{6,255}$/\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n    dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n  const [values, setValues] = useState<{ [key: string]: string }>(\n    dataEdit || initState,\n  )\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255)\n    if (error) return error\n    if (!regex.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (value: string, isConfirm?: boolean): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255)\n    if (errorLength) {\n      return errorLength\n    }\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if (isConfirm && formData.password !== formData.confirmPassword) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number) => {\n    if (!formData[name]) return 'This field is required'\n    return validateLength(name, length)\n  }\n\n  const validateLength = (name: string, length: number) => {\n    if (formData[name]?.length > length) {\n      return `${name} must be less than ${length} characters`\n    }\n    return ''\n  }\n\n  const onChangeData = useCallback(\n    (\n      e:\n        | ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n        | SelectChangeEvent,\n      type: string,\n    ) => {\n      setFormData({ ...formData, [type]: e.target.value })\n      const { value } = e.target\n      setValues((pre) => ({ ...pre, [type]: value }))\n    },\n    [formData],\n  )\n  const onBlurData = useCallback(\n    (\n      e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n      type: string,\n      validate?: Function,\n    ) => {\n      const { value } = e.target\n      setValues((pre) => ({ ...pre, [type]: value }))\n      setErrors((pre) => ({\n        ...pre,\n        [type]: value === '' ? 'This field is required' : validate?.(value),\n      }))\n    },\n    [],\n  )\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const errorName = validateField('display_name', 100)\n    const errorEmail = validateEmail(values.email)\n    const errorLab = validateField('lab', 100)\n    const errorRole = validateField('role', 50)\n    const errorPassword = validatePassword(values.password)\n    const errorConfirmPassword = validatePassword(values.confirmPassword, true)\n\n    const newErrors: { [key: string]: string } = {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      display_name: errorName,\n      lab: errorLab,\n      role: errorRole,\n    }\n\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.uid, formData)\n      if (!dataEdit?.uid) {\n        alert('Your account has been created successfully!')\n      }\n    } catch {\n      if (!dataEdit?.uid) {\n        alert('Your account creation failed!')\n      }\n    }\n    setIsOpenModal(false)\n  }\n  const onCancel = () => {\n    setIsOpenModal(false)\n  }\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.uid ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Lab: </LabelModal>\n          <InputError\n            value={formData?.lab || ''}\n            onChange={(e) => onChangeData(e, 'lab')}\n            onBlur={(e) => onBlurData(e, 'lab')}\n            errorMessage={errors.lab}\n          />\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            value={formData?.display_name || ''}\n            onChange={(e) => onChangeData(e, 'display_name')}\n            onBlur={(e) => onBlurData(e, 'display_name')}\n            errorMessage={errors.display_name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role || ''}\n            options={optionsRole}\n            onChange={(e) => onChangeData(e, 'role')}\n            onBlur={(e) => onBlurData(e, 'role')}\n            errorMessage={errors.role}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 'email')}\n            onBlur={(e) => onBlurData(e, 'email', validateEmail)}\n            errorMessage={errors.email}\n          />\n          {dataEdit?.uid ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 'password')}\n                onBlur={(e) => onBlurData(e, 'password', validatePassword)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 'confirmPassword')}\n                onBlur={(e) =>\n                  onBlurData(e, 'confirmPassword', validatePassword)\n                }\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n        </ButtonModal>\n      </ModalBox>\n    </Modal>\n  )\n}\nconst AccountManager = () => {\n  const [openDelete, setOpenDelete] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [type, setType] = useState<string>('')\n  const [dataEdit, setDataEdit] = useState({})\n  const [idDel, setIdDel] = useState<string | undefined>()\n  const [data, setData] = useState<any[]>([])\n  const [paginate, setPaginate] = useState({\n    total: 0,\n    per_page: 10,\n    page: -1,\n    next_page_token: [],\n  })\n  const { user } = useUser()\n\n  useEffect(() => {\n    getList()\n    //eslint-disable-next-line\n  }, [])\n\n  const getList = async (page: number = 0) => {\n    const query: { [key: string]: string | number } = {\n      offset: paginate.per_page * page,\n    }\n    if (paginate.next_page_token[page - 1]) {\n      query.next_page_token = paginate.next_page_token[page - 1]\n    }\n    const data = await listUser(query)\n    const nextPageToken: string[] = paginate.next_page_token\n    if (page > paginate.page) {\n      nextPageToken.push(data.next_page_token)\n    }\n    setData(data.data)\n    setPaginate((pre) => ({\n      ...pre,\n      total: data.total_page * paginate.per_page,\n      next_page_token: nextPageToken as any,\n      page,\n    }))\n  }\n\n  const onOpenModal = (type: string) => {\n    setIsOpenModal(true)\n    setType(type)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = (id: string | number) => {\n    setIdDel(String(id))\n    setOpenDelete(true)\n  }\n\n  const onForgotPassword = (data: DataProject) => {\n    //todo call api\n    setDataEdit(data)\n    setIsOpenModal(true)\n    setType('Edit')\n  }\n\n  const onDelete = () => {\n    if (idDel === undefined) return\n    deleteUser(idDel).then(() => {\n      handleCloseDelete()\n      setIdDel(undefined)\n      setOpenDelete(false)\n      getList()\n    })\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    if (id !== undefined) {\n      await editUser(id, data)\n    } else {\n      await createUser(data)\n    }\n    await getList(id !== undefined ? paginate.page : 0)\n    return undefined\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'Lab', name: 'lab' },\n      { title: 'Name', name: 'display_name' },\n      { title: 'Role', name: 'role' },\n      { title: 'Mail', name: 'email' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data) => {\n          if (data.id === user?.uid) return null\n          return (\n            <>\n              <ALink\n                sx={{ color: 'red' }}\n                onClick={() => onForgotPassword(data)}\n              >\n                <EditIcon sx={{ color: 'black' }} />\n              </ALink>\n              <ALink sx={{ ml: 1.25 }} onClick={() => onConfirmDelete(data.id)}>\n                <DeleteIcon sx={{ color: 'red' }} />\n              </ALink>\n            </>\n          )\n        },\n      },\n    ],\n    [user?.uid],\n  )\n\n  if (!isAdmin(user?.role)) {\n    return null\n  }\n\n  return (\n    <AccountManagerWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Account Manager</h1>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <BoxButton>\n        <ButtonAdd onClick={() => onOpenModal('Add')} variant=\"contained\">\n          Add\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{\n          total: paginate.total,\n          page: paginate.page,\n          page_size: paginate.per_page,\n          onPageChange: ({ selected }) => {\n            getList(selected)\n          },\n        }}\n        data={data}\n        columns={columns}\n      />\n      {isOpenModal ? (\n        <ModalComponent\n          onSubmitEdit={onSubmitEdit}\n          setIsOpenModal={setIsOpenModal}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst BoxButton = styled(Box)({\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  width: 100,\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  height: 550,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport InputPassword from 'components/InputPassword'\nimport { ChangeEvent, FC, useState } from 'react'\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n}\n\nconst regexPassword = /^(?=.*\\d)(?=.*[@$!%*#?&])(?=.*[a-zA-Z]).{6,100}$/\n\nconst ModalChangePassword: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, password } = values\n    if (reEnter && reEnter !== password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={onSubmit}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onClose}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ModalChangePassword\n","import { Box, Button, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport ModalChangePassword from 'components/ModalChangePassword'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { useUser } from 'providers'\nimport { useState } from 'react'\n\nconst Account = () => {\n  const { user } = useUser()\n  const [isEditName, setIsEditName] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [openChangePw, setOpenChangePw] = useState(false)\n\n  const onEditName = () => {\n    setIsEditName(false)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = () => {\n    setOpenDelete(true)\n  }\n\n  const onDelete = () => {\n    //todo call api\n    handleCloseDelete()\n  }\n\n  const handleCloseChangePw = () => {\n    setOpenChangePw(false)\n  }\n\n  const onConfirmChangePw = () => {\n    setOpenChangePw(true)\n  }\n\n  const onChangePw = () => {\n    //todo call api\n    handleCloseChangePw()\n  }\n\n  return (\n    <AccountWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ModalChangePassword\n        onSubmit={onChangePw}\n        open={openChangePw}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData sx={{ marginTop: isEditName ? -2 : 0 }}>Full name</TitleData>\n        <BoxData>\n          {isEditName ? (\n            <Input\n              autoFocus\n              defaultValue={user?.display_name || ''}\n              onBlur={onEditName}\n              placeholder=\"Full name\"\n            />\n          ) : (\n            <>\n              {user?.display_name || \"--\"}\n              <Button sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n                Edit\n              </Button>\n            </>\n          )}\n        </BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{user?.role}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10 }}>\n        <ButtonSubmit onClick={onConfirmChangePw}>Change Password</ButtonSubmit>\n        <ButtonSubmit onClick={onConfirmDelete}>Delete Account</ButtonSubmit>\n      </BoxFlex>\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n})\n\nconst ButtonSubmit = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import { Box, Button, styled } from '@mui/material'\nimport { useCallback, useMemo, useState } from 'react'\nimport TableComponent, { Column } from '../../components/Table'\nimport { useNavigate } from 'react-router-dom'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\n\nexport type DataProject = {\n  id: number | string\n  uid?: number | string\n  name: string\n  project_type: number\n  image_count: number\n  created_time: string\n  updated_time: string\n}\n\nconst Projects = () => {\n  const navigate = useNavigate()\n  const [idDelete, setIdDelete] = useState<number | string | undefined>()\n  const [data, setData] = useState<DataProject[]>([\n    {\n      id: '1',\n      name: 'prj name 1',\n      created_time: '2023-03-10 09:19:38',\n      updated_time: '2023-03-10 09:19:38',\n      image_count: 3,\n      project_type: 0,\n    },\n    {\n      id: '2',\n      name: 'prj name 2',\n      created_time: '2023-03-10 09:19:38',\n      updated_time: '2023-03-10 09:19:38',\n      image_count: 3,\n      project_type: 1,\n    },\n  ])\n\n  const onEdit = useCallback((id: number | string) => {\n    navigate(`/projects/new-project?id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onWorkflow = useCallback((id: number | string) => {\n    console.log('Workflow: ', id)\n    navigate('/projects/workflow')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onResults = useCallback((id: number | string) => {\n    console.log('Results: ', id)\n    navigate('/projects/workflow?tab=2')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addNewProject = useCallback(() => {\n    navigate('/projects/new-project')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onDelete = (id: number | string) => {\n    setIdDelete(id)\n  }\n\n  const onDeleteSubmit = () => {\n    const id = idDelete\n    setIdDelete(undefined)\n    setData(data.filter((e) => e.id !== id))\n  }\n\n  const handleCloseDelete = () => {\n    setIdDelete(undefined)\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'Project Name', name: 'name' },\n      { title: 'Created', name: 'created_time' },\n      { title: 'Updated', name: 'updated_time' },\n      { title: 'Images', name: 'image_count', align: 'center' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data) => {\n          return (\n            <BoxButton>\n              <ButtonAdd variant=\"contained\" onClick={() => onEdit(data.id)}>\n                Edit\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onWorkflow(data.id)}\n              >\n                Workflow\n              </ButtonAdd>\n              <ButtonAdd variant=\"contained\" onClick={() => onResults(data.id)}>\n                Results\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onDelete(data.id)}\n                sx={{ backgroundColor: 'red !important' }}\n              >\n                Del\n              </ButtonAdd>\n            </BoxButton>\n          )\n        },\n      },\n    ],\n    [onWorkflow, onResults, onEdit],\n  )\n  return (\n    <ProjectsWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Project\"\n        description=\"Delete My Project\"\n        onClose={handleCloseDelete}\n        open={!!idDelete}\n        onSubmit={onDeleteSubmit}\n      />\n      <ProjectsTitle>Projects</ProjectsTitle>\n      <BoxButton>\n        <ButtonAdd\n          variant=\"contained\"\n          onClick={addNewProject}\n          sx={{ marginBottom: 2 }}\n        >\n          Add Project\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{ total: 100, page: 1, page_size: 10 }}\n        data={data}\n        columns={columns}\n      />\n    </ProjectsWrapper>\n  )\n}\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst ProjectsTitle = styled('h1')(({ theme }) => ({}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nexport default Projects\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  MouseEvent as MouseEventReact,\n  FC,\n  Fragment,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport {\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n} from 'pages/Database'\n\ntype Object = {\n  [key: string]: Object | string\n}\n\nexport type Column = {\n  width?: number\n  title: string\n  dataIndex?: string\n  name?: string\n  child?: string\n  filter?: boolean\n  render?: (\n    item?: RecordDatabase | RecordList | ImagesDatabase,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined | string | number\n}\n\ntype TableComponentProps = {\n  data?: (RecordDatabase | RecordList)[]\n  className?: string\n  columns?: Column[]\n  orderBy?: 'ASC' | 'DESC' | ''\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: 'ASC' | 'DESC') => any\n  rowClick?: (row: ImagesDatabase) => any\n  onClickEvent?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => any\n  draggable?: boolean\n  onDrag?: (row?: ImagesDatabase[]) => any\n  onDragEnd?: (row?: ImagesDatabase) => any\n  defaultExpand?: boolean\n}\n\ntype RenderColumnProps = {\n  data: RecordDatabase | SessionsDatabase | ImagesDatabase | RecordList\n  columns: Column[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: string) => any\n  rowClick?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => any\n  draggable?: boolean\n  onDrag?: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    row?: ImagesDatabase[],\n  ) => any\n  onDragEnd?: (row?: ImagesDatabase) => any\n  recordIndex: number\n  defaultExpand?: boolean\n  dataShow?: boolean\n  beginDrag?: boolean\n  draggableProps?: boolean\n  allowMutilKey?: boolean\n  drags: ImagesDatabase[]\n  onMouseDown: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => any\n}\n\nconst renderCol = (\n  col: Column,\n  item: ImagesDatabase | RecordDatabase | RecordList,\n  index: number,\n) => {\n  const key = col.name || col.dataIndex || ''\n  let value: ImagesDatabase | RecordDatabase | RecordList | string = item\n  if (key.includes('.')) {\n    const keys = key.split('.')\n    keys.forEach((k) => {\n      value = (value as unknown as Object)?.[k] as\n        | ImagesDatabase\n        | RecordDatabase\n        | RecordList\n        | string\n    })\n  } else value = (item as unknown as Object)[key] as string\n  if (col.render) return col.render(item, value, index)\n  return typeof value === 'object' || Array.isArray(value) ? null : value\n}\n\nconst RenderColumn = (props: RenderColumnProps) => {\n  const { columns, data, recordIndex, rowClick, drags, onMouseDown } = props\n  const { draggable, onDrag } = props\n  const [openChild, setOpenChild] = useState(true)\n  const [openChildParent, setOpenChildPrent] = useState(true)\n  const [openSubjects, setOpenSubjects] = useState<number[]>(\n    (data as RecordDatabase)?.subjects?.map?.((e) => e.id) || [],\n  )\n\n  const isDrag = drags.find((drag) => {\n    return (\n      drag.id === data.id &&\n      drag.session_id === (data as ImagesDatabase).session_id &&\n      drag.datatype_index === (data as ImagesDatabase).datatype_index\n    )\n  })\n\n  const onDragEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    return onDrag?.(event, [image])\n  }\n\n  const onSetOpenSubject = (subId: number) => {\n    if (openSubjects.includes(subId)) {\n      setOpenSubjects(openSubjects.filter((o) => o !== subId))\n    } else setOpenSubjects([...openSubjects, subId])\n  }\n\n  if (\n    (data as RecordDatabase)?.subjects?.length ||\n    (data as SessionsDatabase).datatypes?.length\n  ) {\n    return (\n      <Fragment>\n        <Tr\n          style={{\n            transition: 'all 0.3s',\n            backgroundColor: 'rgb(238, 238, 238)',\n          }}\n        >\n          {columns.map((column) => {\n            const key = column.name || column.dataIndex || ''\n            return (\n              <Td\n                key={`col_${column.name || column.dataIndex}`}\n                onClick={() =>\n                  key === 'session' && setOpenChildPrent(!openChildParent)\n                }\n              >\n                {key === 'action' ? null : (\n                  <BoxCenter>\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    )}\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    ) &&\n                      key === 'session' && (\n                        <ArrowDropDownIcon\n                          style={{\n                            transform: `rotate(${\n                              !openChildParent ? -180 : 0\n                            }deg)`,\n                          }}\n                        />\n                      )}\n                  </BoxCenter>\n                )}\n              </Td>\n            )\n          })}\n        </Tr>\n        {openChildParent &&\n          (data as RecordDatabase).subjects?.map((sub, subject_index) => {\n            return (\n              <Fragment key={sub.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'subject' && onSetOpenSubject(sub.id)\n                        }\n                      >\n                        {key === 'subject' ? (\n                          <BoxCenter>\n                            {sub.label}\n                            {sub.sessions?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openSubjects.includes(sub.id) ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openSubjects.includes(sub.id) &&\n                  sub.sessions.map((session, session_index) => (\n                    <RenderColumn\n                      {...props}\n                      key={session.id}\n                      data={\n                        {\n                          ...session,\n                          session: session.label,\n                          session_index,\n                          subject_index,\n                        } as SessionsDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n        {openChildParent &&\n          (data as SessionsDatabase).datatypes?.map((type, ii) => {\n            return (\n              <Fragment key={type.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'datatype' && setOpenChild(!openChild)\n                        }\n                      >\n                        {key === 'datatype' ? (\n                          <BoxCenter>\n                            {type.label}\n                            {type.images?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openChild ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openChild &&\n                  type.images.map((image, index) => (\n                    <RenderColumn\n                      {...props}\n                      key={`row_image_${image.id}_${index}`}\n                      data={\n                        {\n                          ...image,\n                          session_index: (data as SessionsDatabase)\n                            .session_index,\n                          subject_index: (data as SessionsDatabase)\n                            .subject_index,\n                          session_id: data.id,\n                          datatype_index: ii,\n                          image_index: index,\n                          datatype_label: type.label,\n                          subject_id: (data as SessionsDatabase).parent_id,\n                          record_index: recordIndex,\n                        } as ImagesDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n      </Fragment>\n    )\n  }\n\n  return (\n    <Tr\n      onClick={(e) => rowClick?.(e, data as ImagesDatabase)}\n      draggable={draggable}\n      onDragStart={(e) => onDragEvent?.(e, data as ImagesDatabase)}\n      onMouseDown={(e) => onMouseDown(e, data as ImagesDatabase)}\n      style={{\n        transition: 'all 0.3s',\n        backgroundColor: isDrag ? 'rgba(25,118,210,0.15)' : '',\n      }}\n    >\n      {columns.map((column) => {\n        return (\n          <Td key={`col_${column.name || column.dataIndex}`}>\n            {renderCol(column, data as ImagesDatabase, recordIndex)}\n          </Td>\n        )\n      })}\n    </Tr>\n  )\n}\n\nconst DatabaseTableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    className,\n    orderKey,\n    orderBy,\n    onSort,\n    draggable,\n    rowClick,\n    onDrag,\n    onDragEnd,\n    ...p\n  } = props\n  const { data = [], columns = [] } = props\n  const [drags, setDrags] = useState<ImagesDatabase[]>([])\n  const [mouseMoveRect, setMouseMoveRect] = useState({ pageX: 0, pageY: 0 })\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n\n  const ctrRef = useRef(false)\n  const refTable = useRef<HTMLDivElement | null>(null)\n  const refTdSelect = useRef<{\n    [key: string]: {\n      dom: HTMLTableRowElement\n      tds: { id: number | string; dom: HTMLTableCellElement; html: string }[]\n    }\n  }>({})\n  const mouseStart = useRef<{ pageX: number; pageY: number } | undefined>()\n  const [beginDrag, setBeginDrag] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydownEvent)\n    window.addEventListener('keyup', onKeyupEvent)\n    window.addEventListener('mouseup', onMouseUp)\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('click', onClick)\n    return () => {\n      window.removeEventListener('keydown', onKeyupEvent)\n      window.removeEventListener('keyup', onKeyupEvent)\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('click', onClick)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onKeydownEvent = (event: KeyboardEvent) => {\n    ctrRef.current = event.ctrlKey || event.metaKey\n  }\n\n  const onKeyupEvent = () => {\n    ctrRef.current = false\n  }\n\n  const onClick = (event: MouseEvent) => {\n    if (refTable.current?.contains?.(event.target as Element)) return\n    ctrRef.current = false\n    setDrags([])\n    onDragEnd?.()\n  }\n\n  const onSortHandle = (nameCol: string) => {\n    onSort?.(nameCol, orderBy === 'ASC' ? 'DESC' : 'ASC')\n  }\n\n  const onRowClickEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    const idDom = `${image.id}_${image.datatype_index}_${image.session_id}`\n    if (!ctrRef.current) {\n      if (!timeoutClick.current) {\n        timeoutClick.current = setTimeout(() => {\n          timeoutClick.current = undefined\n        }, 300)\n        if (draggable) {\n          setDrags([image])\n          const tds = event.currentTarget.getElementsByTagName('td')\n          refTdSelect.current[idDom] = {\n            dom: event.currentTarget as unknown as HTMLTableRowElement,\n            tds: [],\n          }\n          for (let i = 0; i < tds.length; i++) {\n            refTdSelect.current[idDom].tds.push({\n              id: tds[i].id,\n              dom: tds[i],\n              html: tds[i].innerHTML,\n            })\n          }\n        }\n        return\n      }\n      return rowClick?.(image)\n    }\n    if (!draggable) return\n    if (\n      drags.find(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      setDrags(\n        drags.filter(\n          (drag: ImagesDatabase) =>\n            drag.id === image.id &&\n            drag.datatype_index === image.datatype_index &&\n            drag.session_index === image.session_index,\n        ),\n      )\n      delete refTdSelect.current[idDom]\n    } else {\n      setDrags([...drags, image])\n      const tds = event.currentTarget.getElementsByTagName('td')\n      refTdSelect.current[idDom] = {\n        dom: event.currentTarget as unknown as HTMLTableRowElement,\n        tds: [],\n      }\n      for (let i = 0; i < tds.length; i++) {\n        refTdSelect.current[idDom].tds.push({\n          id: tds[i].id,\n          dom: tds[i],\n          html: tds[i].innerHTML,\n        })\n      }\n    }\n  }\n\n  const onMouseDown = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    if (\n      !drags.length ||\n      !draggable ||\n      !drags.some(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      return\n    }\n    mouseStart.current = { pageX: event.pageX, pageY: event.pageY }\n    onDrag?.(drags)\n  }\n\n  const onMouseUp = () => {\n    mouseStart.current = undefined\n    setBeginDrag(false)\n    setTimeout(() => {\n      onDrag?.(undefined)\n    }, 100)\n  }\n\n  const onMouseMove = (event: MouseEvent) => {\n    if (!mouseStart.current || !draggable || !mouseStart.current) return\n    setBeginDrag(true)\n    setMouseMoveRect({\n      pageX: event.pageX - mouseStart.current.pageX,\n      pageY: event.pageY - mouseStart.current.pageY,\n    })\n  }\n\n  const onBeginDrag = (\n    e: MouseEventReact<HTMLTableRowElement>,\n    image?: ImagesDatabase[],\n  ) => {\n    e.preventDefault()\n    onDrag?.(image)\n  }\n\n  return (\n    <>\n      <TableWrap ref={refTable} className={className}>\n        <DataTable\n          style={{\n            width: columns.reduce((a, b) => a + (Number(b.width) || 110), 0),\n          }}\n        >\n          <Thead>\n            <Tr>\n              {columns.map((col, iCol) => {\n                const nameCol = col.name || col.dataIndex || ''\n                return (\n                  <Th\n                    onClick={() => onSortHandle(nameCol)}\n                    style={{\n                      maxWidth: col.width,\n                      width: col.width,\n                      cursor: 'pointer',\n                    }}\n                    key={col.dataIndex || col.name || iCol}\n                  >\n                    {col.title}\n                    <ArrowDownwardIconOrder\n                      style={{\n                        transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                        opacity:\n                          orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                      }}\n                    />\n                  </Th>\n                )\n              })}\n            </Tr>\n          </Thead>\n          <TBody>\n            {data.map((item, index) => (\n              <RenderColumn\n                allowMutilKey={ctrRef.current}\n                recordIndex={index}\n                columns={columns}\n                {...p}\n                data={item}\n                rowClick={(e, image) => onRowClickEvent(e, image)}\n                onMouseDown={onMouseDown}\n                beginDrag={beginDrag}\n                draggable={false}\n                draggableProps={draggable}\n                key={`row_table_${item.id}_${index}`}\n                drags={drags}\n                onDrag={onBeginDrag}\n                onDragEnd={onDragEnd}\n              />\n            ))}\n          </TBody>\n        </DataTable>\n        {!data.length ? <NoData>No Data</NoData> : null}\n      </TableWrap>\n      {beginDrag &&\n        drags.map((el) => {\n          const rowId = `${el.id}_${el.datatype_index}_${el.session_id}`\n          const trNow = refTdSelect.current[rowId]\n          const { width, height, top, left } =\n            trNow.dom?.getBoundingClientRect()\n          const style = {\n            width,\n            height,\n            top: top - window.scrollY + mouseMoveRect.pageY,\n            left: left + mouseMoveRect.pageX,\n          }\n          return (\n            <BoxDrag key={el.id} style={style}>\n              {trNow.tds.map((td, index) => {\n                const { width } = td.dom.getBoundingClientRect()\n                return (\n                  <Box\n                    key={`${rowId}_-${index}`}\n                    style={{ width, padding: 16 }}\n                  >\n                    {td.html}\n                  </Box>\n                )\n              })}\n            </BoxDrag>\n          )\n        })}\n    </>\n  )\n}\n\nconst BoxDrag = styled(Box)({\n  position: 'absolute',\n  background: '#ffffff',\n  backgroundColor: 'rgba(25,118,210,0.15)',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst TableWrap = styled(Box)({\n  overflowX: 'scroll',\n})\n\nconst DataTable = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  userSelect: 'none',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nconst BoxCenter = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport default DatabaseTableComponent\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  FC,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  TouchEvent,\n} from 'react'\n\ntype ChangeDragProps = {\n  title: string\n  value: number\n  onChange: (value: number) => void\n  className?: string\n  max?: number\n  min?: number\n  onChangeMin?: (v: number) => any\n  onChangeMax?: (v: number) => any\n  showInputMax?: boolean\n  showInputMin?: boolean\n}\n\nconst ChangeDrag: FC<ChangeDragProps> = (props) => {\n  const { title, value, onChange, className, max = 2, min = 0 } = props\n  const { onChangeMin, onChangeMax, showInputMax } = props\n  const [width, setWidth] = useState(0)\n  const mouseDown = useRef(0)\n\n  const refDrag = useRef<any>()\n  const refDot = useRef<any>()\n\n  useEffect(() => {\n    getWidth()\n    //eslint-disable-next-line\n  }, [])\n\n  const getWidth = () => {\n    if (!refDrag.current) getWidth()\n    setWidth(refDrag.current.clientWidth - 24)\n  }\n\n  const onMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n    mouseDown.current = event.pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onTouchStart = useCallback((event: TouchEvent<HTMLDivElement>) => {\n    mouseDown.current = event.touches[0].pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onMouseMove = (event: MouseEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.pageX - mouseInit - 12\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onTouchMove = (event: TouchEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.touches[0].pageX - mouseInit\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onMouseLeave = useCallback(() => {\n    mouseDown.current = 0\n    refDrag.current.style.cursor = 'default'\n    refDot.current.style.cursor = ''\n  }, [])\n\n  return (\n    <ScaleWrapper\n      className={className}\n      ref={refDrag}\n      onMouseMove={onMouseMove}\n      onTouchMove={onTouchMove}\n      onMouseLeave={onMouseLeave}\n      onMouseUp={onMouseLeave}\n    >\n      <TitleScale>{title}</TitleScale>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Input\n          value={value}\n          onChange={(e) => onChangeMin?.(Number(e.target.value))}\n        />\n        {showInputMax ? (\n          <Input\n            style={{ textAlign: 'right' }}\n            value={max}\n            onChange={(e) => onChangeMax?.(Number(e.target.value))}\n          />\n        ) : null}\n      </div>\n      <BoxWrapper>\n        <BoxLine style={{ width: ((value - min) * width) / (max - min) }} />\n        <Dot\n          ref={refDot}\n          onMouseDown={onMouseDown}\n          onTouchEnd={onMouseLeave}\n          onTouchStart={onTouchStart}\n          style={{ left: ((value - min) * width) / (max - min) }}\n        />\n      </BoxWrapper>\n    </ScaleWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 4,\n  background: 'rgba(60, 60, 67, 0.18)',\n  position: 'relative',\n  borderRadius: 2,\n  userSelect: 'none',\n}))\n\nconst Dot = styled(Box)(() => ({\n  position: 'absolute',\n  width: 24,\n  height: 24,\n  background: '#7a7a7a',\n  borderRadius: 100,\n  top: -11,\n  cursor: 'pointer',\n}))\n\nconst TitleScale = styled(Typography)(() => ({\n  fontSize: 14,\n  fontWeight: 700,\n}))\n\nconst BoxLine = styled(Box)(() => ({\n  position: 'absolute',\n  height: 4,\n  background: '#0A7AFF',\n  borderRadius: 2,\n}))\n\nconst ScaleWrapper = styled(Box)(({ theme }) => ({\n  paddingBottom: 20,\n  '@media (max-width: 809px)': {\n    paddingTop: theme.spacing(2),\n  },\n}))\n\nconst Input = styled('input')({\n  border: 'none',\n  outline: 'none',\n  width: 50,\n  marginBottom: 20,\n})\n\nexport default ChangeDrag\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { FC, useEffect, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ChangeDrag from './ChangeSize'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { Object } from 'pages/Database'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  url?: string\n  jsonData?: Object\n  disabled?: { left: boolean; right: boolean }\n}\n\nconst ImageView: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  url,\n  onNext,\n  onPrevious,\n  jsonData,\n  disabled,\n}) => {\n  const viewerRef = useRef<any>()\n  const [worldCoords, setWorldCoords] = useState({ x: 0, y: 0, z: 0 })\n  const [voxelCoords, setVoxelCoords] = useState({ i: 0, j: 0, k: 0 })\n  const [values, setValues] = useState(0)\n  const [opacity, setOpacity] = useState(0)\n  const [thresholds, setThresholds] = useState(0)\n  const [maxThres, setMaxThres] = useState(0)\n  const [contracts, setContracts] = useState(1)\n  const [brightness, setBrightness] = useState(0)\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const volumes = useRef<any>()\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    setOpacity(0)\n    setContracts(1)\n    setBrightness(0)\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n\n  const onChangeThreshold = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeContract = (num: number) => {\n    if (!volumes.current) return\n    setContracts(num)\n    volumes.current.display.setContrast(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeBrightness = (num: number) => {\n    if (!volumes.current) return\n    setBrightness(num)\n    volumes.current.display.setBrightness(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMaxThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_max = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMinThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeJson = () => {}\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n          complete: function () {},\n        },\n      ],\n    })\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', function () {\n          setOpacity(1)\n          setIsLoadFile(false)\n        })\n        viewer.addEventListener('sliceupdate', function (event: any) {\n          // const panel = event.target\n          const { volume } = event\n          volumes.current = volume\n          setThresholds(volumes.current.intensity_min)\n          setMaxThres(volumes.current.intensity_max)\n          setValues(volume.getIntensityValue())\n          if (brainbrowser.utils.isFunction(volume.getWorldCoords)) {\n            setWorldCoords(volume.getWorldCoords())\n          }\n          if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n            setVoxelCoords(volume.getVoxelCoords())\n          }\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {},\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div\n            style={{\n              display: !opacity ? 'none' : 'flex',\n              alignItems: 'stretch',\n            }}\n          >\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              {opacity ? (\n                <BoxContentData>\n                  <p style={{ margin: 0, padding: '20px 0' }}>\n                    World Coordinates:\n                  </p>\n                  <span>X: {worldCoords.x.toPrecision(4)}</span>\n                  <span style={{ marginLeft: 20 }}>\n                    Y: {worldCoords.y.toPrecision(4)}\n                  </span>\n                  <span style={{ marginLeft: 20 }}>\n                    Z: {worldCoords.z.toPrecision(4)}\n                  </span>\n                  <p>Voxel Coordinates:</p>\n                  <span>I: {voxelCoords.i}</span>\n                  <span style={{ marginLeft: 20 }}>J: {voxelCoords.j}</span>\n                  <span style={{ marginLeft: 20 }}>K: {voxelCoords.k}</span>\n                  <p>Value: {values}</p>\n                  <ChangeDrag\n                    onChangeMax={onChangeMaxThresh}\n                    onChangeMin={onChangeMinThresh}\n                    max={maxThres}\n                    min={thresholds < 0 ? thresholds : 0}\n                    title={'Threshold'}\n                    value={thresholds}\n                    showInputMax\n                    showInputMin\n                    onChange={onChangeThreshold}\n                  />\n                  <ChangeDrag\n                    title={'Contrast (0.0 to 2.0)'}\n                    value={contracts}\n                    onChange={onChangeContract}\n                  />\n                  <ChangeDrag\n                    title={'Brightness (-1 to 1):'}\n                    value={brightness}\n                    min={-1}\n                    max={1}\n                    onChange={onChangeBrightness}\n                  />\n                </BoxContentData>\n              ) : null}\n            </div>\n            <WrapperJson>\n              <TextArea\n                onChange={onChangeJson}\n                value={JSON.stringify(jsonData || '')}\n              />\n            </WrapperJson>\n            {!disabled?.right ? (\n              <ButtonNext onClick={onNext}>\n                <ArrowForwardIosIconWrapper />\n              </ButtonNext>\n            ) : null}\n            {!disabled?.left ? (\n              <ButtonPrevious onClick={onPrevious}>\n                <ArrowBackIosIconWrapper />\n              </ButtonPrevious>\n            ) : null}\n          </div>\n          {(!opacity || isLoadFile) && (\n            <BoxLoading>\n              <img\n                src=\"/lib/loading.gif\"\n                alt=\"icon loading\"\n                style={{ width: 80, height: 80 }}\n              />\n            </BoxLoading>\n          )}\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst BoxLoading = styled(Box)({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'rgba(255,255,255, 0.1)',\n  zIndex: 88,\n})\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '10%',\n  right: '10%',\n  zIndex: 9999,\n})\n\nconst ButtonNext = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  right: '10%',\n  zIndex: 1,\n})\n\nconst ButtonPrevious = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  left: '10%',\n  zIndex: 1,\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst BoxContentData = styled(Box)({\n  margin: '-5px 0 0',\n  padding: '10px',\n  background: '#ffffff',\n})\n\nconst WrapperJson = styled(Box)({\n  minWidth: 300,\n  background: '#ffffff',\n})\n\nconst TextArea = styled('textarea')({\n  height: 'calc(100% - 7px)',\n  width: '100%',\n  outline: 'none !important',\n  border: 'none',\n  borderLeft: '1px solid',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nconst ArrowBackIosIconWrapper = styled(ArrowBackIosIcon)({\n  color: '#ffffff',\n  marginLeft: 10,\n})\n\nconst ArrowForwardIosIconWrapper = styled(ArrowForwardIosIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageView\n","import {\n  DatabaseData,\n  DatabaseListData,\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n} from 'pages/Database'\n\nexport type OrderKey =\n  | keyof (RecordDatabase | RecordList)\n  | 'subject'\n  | 'session'\n  | 'datatype'\n  | 'attributes.type'\n  | 'attributes.protocol'\n  | 'attributes.size'\n\nexport const onRowClick = (\n  datas: DatabaseData | DatabaseListData,\n  row: ImagesDatabase | RecordList,\n  type: 'tree' | 'list' = 'tree',\n) => {\n  const view = {\n    open: true,\n    url: row.image_url,\n    id: row.id,\n    session_id: row.session_id,\n    parent_id: (row as ImagesDatabase).parent_id,\n    jsonData:\n      (row as ImagesDatabase).attributes ||\n      (row as RecordList).image_attributes,\n    image: row,\n  }\n  const checkNext = onGet(datas, row, false, type)\n  const checkPre = onGet(datas, row, true, type)\n  return { view, checkNext, checkPre }\n}\n\nexport const onGet = (\n  datas: DatabaseData | DatabaseListData,\n  rowClick: ImagesDatabase | RecordList,\n  isSub?: boolean,\n  type: 'tree' | 'list' = 'tree',\n): ImagesDatabase | RecordList | undefined => {\n  if (type === 'tree') {\n    const row = rowClick as ImagesDatabase\n    const dataNow = datas.records[row.record_index || 0] as RecordDatabase\n    const subjectNow = dataNow?.subjects?.[row.subject_index || 0]\n    const sessionNow = subjectNow?.sessions[row.session_index || 0]\n    const datatypeNow = sessionNow?.datatypes[row.datatype_index || 0]\n    if (!isSub) {\n      const imageNext = datatypeNow?.images[(row.image_index || 0) + 1]\n      if (imageNext) {\n        return { ...row, ...imageNext, image_index: (row.image_index || 0) + 1 }\n      }\n      const datatypeNext = sessionNow?.datatypes[(row.datatype_index || 0) + 1]\n      if (datatypeNext) {\n        const images = datatypeNext?.images\n        if (images[0])\n          return {\n            ...row,\n            ...images[0],\n            datatype_index: (row.datatype_index || 0) + 1,\n            image_index: 0,\n          }\n      }\n    } else {\n      const imagePre = datatypeNow?.images[(row.image_index || 0) - 1]\n      if (imagePre) {\n        return { ...row, ...imagePre, image_index: (row.image_index || 0) - 1 }\n      }\n      const datatypeImagePre =\n        sessionNow?.datatypes?.[(row.datatype_index || 0) - 1]\n      if (datatypeImagePre) {\n        const images = datatypeImagePre?.images\n        if (images?.[images.length - 1]) {\n          return {\n            ...row,\n            ...images?.[images.length - 1],\n            datatype_index: (row.datatype_index || 0) - 1,\n            image_index: images.length - 1,\n          }\n        }\n      }\n    }\n  } else {\n    const row = rowClick as RecordList\n    const indexImageNow = datas.records.findIndex(\n      (record) => record.id === row.id,\n    )\n    return datas.records[indexImageNow + (isSub ? -1 : 1)] as RecordList\n  }\n  return undefined\n}\n\nconst sortWithLabName = (\n  datasTable: (RecordDatabase | RecordList)[],\n  orderKey: keyof (RecordDatabase | RecordList),\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return a[orderKey] > b[orderKey] ? -1 : 1\n      }\n      return a[orderKey] < b[orderKey] ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nconst sortSubjectTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort((dataA, dataB) => {\n    const subjectsA = dataA.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    const subjectsB = dataB.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    if (typeOrder === 'DESC') {\n      return subjectsA[0]?.label > subjectsB[0]?.label ? -1 : 1\n    }\n    return subjectsA[0]?.label < subjectsB[0]?.label ? -1 : 1\n  })\n  return newDatas.map((element) => ({\n    ...element,\n    subjects: element.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    }),\n  }))\n}\n\nconst sortSessionTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          const subSessB = subB.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions.sort((ssA, ssB) => {\n            if (typeOrder === 'DESC') {\n              return ssA.label > ssB.label ? -1 : 1\n            }\n            return ssA.label < ssB.label ? -1 : 1\n          }),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortDataTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              const dataTypeB = ssB.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.label > dataTypeB[0]?.label ? -1 : 1\n              }\n              return dataTypeA[0]?.label < dataTypeB[0]?.label ? -1 : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes.sort((typeA, typeB) => {\n                if (typeOrder === 'DESC') {\n                  return typeA.label > typeB.label ? -1 : 1\n                }\n                return typeA.label < typeB.label ? -1 : 1\n              }),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortAttributesTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n  key: string = 'type',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const typeA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.attributes[key] > imageB.attributes[key]\n                        ? -1\n                        : 1\n                    }\n                    return imageA.attributes[key] < imageB.attributes[key]\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n          }\n          return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n        })\n      const typeB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.attributes[key] > imageB.attributes[key]\n                        ? -1\n                        : 1\n                    }\n                    return imageA.attributes[key] < imageB.attributes[key]\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n          }\n          return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n        })\n\n      if (typeOrder === 'DESC') {\n        return typeA[0]?.attributes[key] > typeB[0]?.attributes[key] ? -1 : 1\n      }\n      return typeA[0]?.attributes[key] < typeB[0]?.attributes[key] ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.attributes[key] > subSessB[0]?.attributes[key]\n              ? -1\n              : 1\n          }\n          return subSessA[0]?.attributes[key] < subSessB[0]?.attributes[key]\n            ? -1\n            : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n              const dataTypeB = ssB.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.attributes[key] >\n                  dataTypeB[0]?.attributes[key]\n                  ? -1\n                  : 1\n              }\n              return dataTypeA[0]?.attributes[key] <\n                dataTypeB[0]?.attributes[key]\n                ? -1\n                : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes\n                .sort((typeA, typeB) => {\n                  const imageA = typeA.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                  const imageB = typeB.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                  if (typeOrder === 'DESC') {\n                    return imageA[0]?.attributes[key] >\n                      imageB[0]?.attributes[key]\n                      ? -1\n                      : 1\n                  }\n                  return imageA[0]?.attributes[key] < imageB[0]?.attributes[key]\n                    ? -1\n                    : 1\n                })\n                .map((type) => ({\n                  ...type,\n                  images: type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  }),\n                })),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortWithKey = (\n  datasTable: RecordList[],\n  orderKey: keyof RecordList,\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  return datasTable.sort((dataA: RecordList, dataB: RecordList) => {\n    let valueA: RecordList | string = dataA\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueA !== 'string') {\n          valueA = valueA?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueA = valueA[orderKey] as string\n\n    let valueB: RecordList | string = dataB\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueB !== 'string') {\n          valueB = valueB?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueB = valueB[orderKey] as string\n    if (typeOrder === 'DESC') {\n      return valueA > valueB ? -1 : 1\n    }\n    return valueA < valueB ? -1 : 1\n  })\n}\n\nconst sortWithTime = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return new Date(a.recording_time) > new Date(b.recording_time) ? -1 : 1\n      }\n      return new Date(a.recording_time) < new Date(b.recording_time) ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nexport const onSort = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC' | '',\n  orderKey: OrderKey,\n  type: string = 'tree',\n): (RecordDatabase | RecordList)[] => {\n  if (!typeOrder) return datasTable\n  let newDatas = datasTable\n  if (type === 'tree') {\n    if (['lab_name', 'user_name'].includes(orderKey)) {\n      newDatas = sortWithLabName(\n        datasTable,\n        orderKey as 'lab_name' | 'user_name',\n        typeOrder,\n      )\n    } else if (orderKey === 'recording_time') {\n      newDatas = sortWithTime(datasTable, typeOrder)\n    } else if (orderKey === 'subject' && type === 'tree') {\n      newDatas = sortSubjectTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'session' && type === 'tree') {\n      newDatas = sortSessionTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'datatype' && type === 'tree') {\n      newDatas = sortDataTypeTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'attributes.type' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n      )\n    } else if (orderKey === 'attributes.protocol' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'protocol',\n      )\n    } else if (orderKey === 'attributes.size' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'size',\n      )\n    }\n  } else {\n    newDatas = sortWithKey(\n      datasTable as RecordList[],\n      orderKey as keyof RecordList,\n      typeOrder,\n    )\n  }\n  return newDatas\n}\n","import { Box, Button, IconButton, styled, TextField } from '@mui/material'\nimport { ChangeEvent, useEffect, useState } from 'react'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ImageView from 'components/ImageView'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { onGet, onRowClick, onSort, OrderKey } from 'utils/database'\nimport { User, useUser } from 'providers'\nimport { isAdmin, isReseacher } from 'utils/auth'\n\ntype PopupSearchProps = {\n  onClose?: () => any\n  onFilter?: (values: { [key: string]: string }) => any\n  defaultValue?: { [key: string]: string }\n}\n\nexport const PopupSearch = ({\n  onClose,\n  defaultValue = {},\n  onFilter,\n}: PopupSearchProps) => {\n  const [values, setValues] = useState(defaultValue)\n\n  const handleFilter = () => {\n    onFilter?.(values)\n    onClose?.()\n  }\n\n  const onChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    setValues({ ...values, [event.target.name]: event.target.value })\n  }\n\n  return (\n    <Popup>\n      <PopupInner>\n        <HeaderTitle>\n          <span>Filter</span>\n          <ButtonControl onClick={onClose}>\n            <CloseIcon />\n          </ButtonControl>\n        </HeaderTitle>\n        <InputSearch\n          onChange={onChange}\n          name={'session'}\n          label=\"Session\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'dataset'}\n          label=\"Dataset\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'type'}\n          label=\"Type\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'protocol'}\n          label=\"Protocol\"\n          variant=\"outlined\"\n        />\n        <Button variant=\"contained\" onClick={handleFilter}>\n          Filter\n        </Button>\n      </PopupInner>\n    </Popup>\n  )\n}\n\nexport type Object = {\n  [key: string]: Object | string | number\n}\n\nexport type Image = {\n  id: number\n  parent_id: number\n  session_id: number\n  label: string\n  image: {\n    id: number\n    parent_id: number\n    image_url: string\n    attributes: Object\n  }\n}\n\nexport type Viewer = {\n  open: boolean\n  url: string\n  jsonData?: Object\n  id?: number\n  session_id?: number\n  parent_id?: number\n  image?: ImagesDatabase | RecordList\n}\n\nexport type ImagesDatabase = {\n  id: number\n  parent_id: number\n  image_url: string\n  datatype_label?: string\n  type?: string\n  attributes: Object\n  session_id?: number\n  record_index?: number\n  subject_index?: number\n  session_index?: number\n  datatype_index?: number\n  image_index?: number\n}\n\nexport type DatatypesDatabase = {\n  id: number\n  parent_id: number\n  label: string\n  images: ImagesDatabase[]\n}\n\nexport type SessionsDatabase = {\n  id: number\n  parent_id: number\n  session_index?: number\n  label: string\n  datatypes: DatatypesDatabase[]\n  subject_index?: number\n}\n\nexport type SubjectDatabase = {\n  id: number\n  parent_id: number\n  label: string\n  sessions: SessionsDatabase[]\n  subject_index?: number\n}\n\nexport type RecordDatabase = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  created_time: string\n  updated_time: string\n  subjects: SubjectDatabase[]\n}\n\nexport type DatabaseData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordDatabase[]\n}\n\nexport type RecordList = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  subject_id: number\n  subject_label: string\n  session_id: number\n  session_label: string\n  datatypes_id: number\n  datatypes_label: string\n  image_id: number\n  image_url: string\n  image_attributes: {\n    size: string\n    type: string\n    protocol: string\n  }\n  created_time: string\n  updated_time: string\n}\n\nexport type DatabaseListData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordList[]\n}\n\nexport const defaultDatabase: DatabaseData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [\n    {\n      id: 0,\n      lab_name: 'string',\n      user_name: 'string',\n      recording_time: '2023-04-07',\n      subjects: [\n        {\n          id: 0,\n          parent_id: 0,\n          label: 'new subject',\n          sessions: [\n            {\n              id: 0,\n              parent_id: 0,\n              label: 'new session',\n              datatypes: [\n                {\n                  id: 0,\n                  parent_id: 0,\n                  label: 'anat',\n                  images: [\n                    {\n                      id: 0,\n                      parent_id: 0,\n                      image_url: '/lib/test.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                      },\n                    },\n                  ],\n                },\n                {\n                  id: 1,\n                  parent_id: 0,\n                  label: 'func',\n                  images: [\n                    {\n                      id: 1,\n                      parent_id: 0,\n                      image_url: '/lib/test0.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 1,\n          parent_id: 0,\n          label: 'project subject',\n          sessions: [\n            {\n              id: 1,\n              parent_id: 1,\n              label: 'zsession',\n              datatypes: [\n                {\n                  id: 2,\n                  parent_id: 1,\n                  label: 'anat',\n                  images: [\n                    {\n                      id: 2,\n                      parent_id: 2,\n                      image_url: '/lib/test1.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                      },\n                    },\n                  ],\n                },\n                {\n                  id: 3,\n                  parent_id: 1,\n                  label: 'zunc',\n                  images: [\n                    {\n                      id: 3,\n                      parent_id: 3,\n                      image_url: '/lib/test2.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'T2_RATE',\n                        protocol: 'X Protocol',\n                      },\n                    },\n                    {\n                      id: 4,\n                      parent_id: 3,\n                      image_url: '/lib/test3.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                      },\n                    },\n                    {\n                      id: 5,\n                      parent_id: 3,\n                      image_url: '/lib/test4.nii',\n                      attributes: {\n                        size: '20MB',\n                        type: 'T3_RATE',\n                        protocol: 'Z Protocol',\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n      created_time: '2023-04-07T04:28:09.686Z',\n      updated_time: '2023-04-07T04:28:09.686Z',\n    },\n    {\n      id: 1,\n      lab_name: 'lab name',\n      user_name: 'user name',\n      recording_time: '2023-04-06',\n      subjects: [\n        {\n          id: 3,\n          parent_id: 1,\n          label: 'subject name',\n          sessions: [],\n        },\n        {\n          id: 4,\n          parent_id: 1,\n          label: 'zubject name',\n          sessions: [],\n        },\n        {\n          id: 5,\n          parent_id: 1,\n          label: 'lubject name',\n          sessions: [],\n        },\n      ],\n      created_time: '2023-04-07T04:28:09.686Z',\n      updated_time: '2023-04-07T04:28:09.686Z',\n    },\n  ],\n}\n\nconst dataImages: DatabaseListData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [\n    {\n      id: 0,\n      lab_name: 'lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 1,\n      lab_name: 'z lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test0.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 2,\n      lab_name: 'x lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test1.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 3,\n      lab_name: 'c lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test2.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 4,\n      lab_name: '4 lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test3.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'Z Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 5,\n      lab_name: 'string',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_id: 0,\n      subject_label: 'string',\n      session_id: 0,\n      session_label: 'string',\n      datatypes_id: 0,\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test4.nii',\n      image_attributes: {\n        size: '20MB',\n        type: 'TYPE_1',\n        protocol: 'X Protocol',\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n  ],\n}\n\nexport const columns = (\n  rowClick: Function,\n  setOpenDelete: Function,\n  type: 'tree' | 'list' = 'tree',\n  user?: User,\n): Column[] => [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true },\n  {\n    title: 'Subject',\n    name: type === 'tree' ? 'subject' : 'subject_label',\n    filter: true,\n  },\n  {\n    title: 'Session',\n    name: type === 'tree' ? 'session' : 'session_label',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Dataset',\n    name: type === 'tree' ? 'datatype' : 'datatypes_label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Type',\n    name: type === 'tree' ? 'attributes.type' : 'image_attributes.type',\n    filter: true,\n  },\n  {\n    title: 'Protocol',\n    name: type === 'tree' ? 'attributes.protocol' : 'image_attributes.protocol',\n    filter: true,\n  },\n  {\n    title: 'Size',\n    name: type === 'tree' ? 'attributes.size' : 'image_attributes.size',\n    filter: true,\n  },\n  {\n    title: 'Voxel size',\n    name:\n      type === 'tree' ? 'attributes.voxel_size' : 'image_attributes.voxel_size',\n    filter: true,\n  },\n  {\n    title: '',\n    name: 'action',\n    render: (data) => {\n      if (!isAdmin(user?.role) && !isReseacher(user?.role)) return null\n      return (\n        <BoxButton>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              rowClick?.(data)\n            }}\n          >\n            <EditIcon fontSize=\"small\" color={'inherit'} />\n          </ButtonControl>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              setOpenDelete?.(true)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </ButtonControl>\n        </BoxButton>\n      )\n    },\n  },\n]\n\nconst Database = () => {\n  const [openPopup, setOpenPopup] = useState(false)\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [datasTable, setDatasTable] = useState<DatabaseData | DatabaseListData>(\n    defaultDatabase,\n  )\n  const [initDataTable, setInitDataTable] = useState<\n    DatabaseData | DatabaseListData\n  >(defaultDatabase)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [type, setType] = useState<'tree' | 'list'>('tree')\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const { user } = useUser()\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  useEffect(() => {\n    if (type === 'tree') {\n      setDatasTable(defaultDatabase)\n      setInitDataTable(defaultDatabase)\n    } else {\n      setDatasTable(dataImages)\n      setInitDataTable(dataImages)\n    }\n  }, [type])\n\n  const rowClick = (row: ImagesDatabase | RecordList) => {\n    const { view, checkNext, checkPre } = onRowClick(datasTable, row, type)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC') => {\n    let orderbyCheck: 'DESC' | 'ASC' | '' = orderByValue\n    if (orderBy === 'DESC' && orderByValue === 'ASC') {\n      orderbyCheck = ''\n    }\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDataTable.records)),\n      orderbyCheck,\n      orderKey as OrderKey,\n      type,\n    )\n    setDatasTable({ ...datasTable, records: data as any })\n    setColumnSort(orderKey)\n    setOrdeBy(orderbyCheck)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(datasTable as any, viewer.image, false, type)\n    if (imageNext) rowClick(imageNext)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(datasTable, viewer.image, true, type)\n    if (imagePre) rowClick(imagePre)\n  }\n\n  return (\n    <DatabaseWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Image\"\n        description={`Are you sure delete?\\n`}\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ProjectsTitle>\n        <span>Database</span>\n        <ButtonFilter\n          onClick={() => setOpenPopup(true)}\n          style={{ margin: '0 26px 0 0' }}\n        >\n          Filter\n        </ButtonFilter>\n      </ProjectsTitle>\n      <BoxSelectTypeView>\n        <Box\n          onClick={() => setType('tree')}\n          style={{\n            marginRight: 4,\n            fontWeight: type === 'tree' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'tree' ? '' : '#4687f4',\n          }}\n        >\n          Tree\n        </Box>\n        /\n        <Box\n          onClick={() => setType('list')}\n          style={{\n            marginLeft: 4,\n            fontWeight: type === 'list' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'list' ? '' : '#4687f4',\n          }}\n        >\n          List\n        </Box>\n      </BoxSelectTypeView>\n      {openPopup && <PopupSearch onClose={() => setOpenPopup(false)} />}\n      <DatabaseTableComponent\n        defaultExpand\n        onSort={handleSort}\n        rowClick={rowClick}\n        orderKey={columnSort}\n        orderBy={orderBy}\n        data={datasTable.records}\n        columns={columns(rowClick, setOpenDelete, type, user)}\n      />\n      <ImageView\n        disabled={disabled}\n        url={viewer.url}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n      />\n    </DatabaseWrapper>\n  )\n}\n\nconst DatabaseWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst HeaderTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst Popup = styled(Box)(() => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n  zIndex: 9999,\n}))\n\nconst PopupInner = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2, 3),\n  backgroundColor: '#fff',\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n}))\n\nconst InputSearch = styled(TextField)(() => ({\n  minWidth: 250,\n}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ButtonControl = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0, 1),\n  width: 30,\n  height: 30,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst ProjectsTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst BoxSelectTypeView = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 16,\n})\n\nexport default Database\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { getMe, login } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { saveToken } from 'utils/auth'\n\nconst Login = () => {\n  const { setUser } = useUser()\n  const navigate = useNavigate()\n\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errors.email || errors.password || errorCheck) return\n    try {\n      const { access_token } = await login(values)\n      saveToken(access_token)\n      getUser()\n    } catch (e) {\n      setErrors({ email: 'Email or password is wrong', password: '' })\n    }\n  }\n\n  const getUser = async () => {\n    const data = await getMe()\n    setUser(data)\n    navigate('/')\n  }\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">{errors.password}</TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  styled,\n  Typography,\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport DatabaseTableComponent from 'components/DatabaseTable'\nimport React, {\n  useState,\n  DragEvent,\n  Fragment,\n  useRef,\n  CSSProperties,\n} from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport {\n  DatabaseData,\n  defaultDatabase,\n  ImagesDatabase,\n  PopupSearch,\n  Viewer,\n} from '../Database'\nimport ImageView from 'components/ImageView'\nimport { onGet, onRowClick, onSort, OrderKey } from 'utils/database'\nimport { Object } from '../Database'\nimport { ChangeEvent } from 'react'\nimport { RecordDatabase } from '../Database'\n\nconst columns = [\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true, width: 100 },\n  { title: 'Subject', name: 'subject', filter: true },\n  {\n    title: 'Session',\n    name: 'session',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Dataset',\n    name: 'datatype',\n    filter: true,\n    width: 100,\n  },\n  { title: 'Size', name: 'attributes.size', filter: true },\n  { title: 'Voxel size', name: 'attributes.voxel_size', filter: true },\n]\n\ntype ProjectAdd = {\n  project_name?: string\n  project_type?: string\n  image_count: number\n  image_url: string\n  protocol: string\n  id: string\n  jsonData: Object\n}\n\ntype DataWithin = {\n  id: string\n  data: ProjectAdd[]\n  name: string\n}\n\ntype DataFactor = {\n  within: DataWithin[]\n} & DataWithin\n\nconst nameDefault = 'DEFAULT'\n\nconst ProjectFormComponent = () => {\n  const [searchParams] = useSearchParams()\n\n  const idEdit = searchParams.get('id')\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [datasTable, setDatasTable] = useState<DatabaseData>(defaultDatabase)\n\n  const routeGoback = searchParams.get('back')\n\n  const [initDataTable /*setInitDataTable */] =\n    useState<DatabaseData>(defaultDatabase)\n  const [projectName, setProjectName] = useState('Prj Name 1')\n  const [projectLevel, setProjectLevel] = useState<'factor' | 'within-factor'>(\n    'factor',\n  )\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [openFilter, setOpenFilter] = useState(false)\n  const [rowDrag, setRowDrag] = useState<ImagesDatabase | ImagesDatabase[]>()\n  const [dataFactors, setDataFactors] = useState<DataFactor[]>([\n    { name: nameDefault, within: [], id: getNanoId(), data: [] },\n  ])\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n    setProjectName(e.target.value)\n  }\n\n  const handleChangeLevel = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const type = event.target.value as 'within-factor' | 'factor'\n    setProjectLevel(type)\n    let within: DataWithin[] = []\n    if (type === 'within-factor') {\n      within = [{ name: nameDefault, id: getNanoId(), data: [] }]\n    }\n    setDataFactors([{ name: nameDefault, within, id: getNanoId(), data: [] }])\n  }\n\n  const onAddBetween = () => {\n    setDataFactors((pre) => [\n      ...pre,\n      { name: nameDefault, within: [], id: getNanoId(), data: [] },\n    ])\n  }\n\n  const onAddWithin = (idFactor: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === idFactor) {\n          return {\n            ...p,\n            within: [\n              ...p.within,\n              { name: nameDefault, within: [], id: getNanoId(), data: [] },\n            ],\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteFactor = (row: DataFactor) => {\n    setDataFactors((pre) => pre.filter((e) => e.id !== row.id))\n  }\n\n  const onDeleteWithin = (factor: DataFactor, row: DataWithin) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, within: p.within.filter((w) => w.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataWithin = (\n    factor: DataFactor,\n    within: DataWithin,\n    row: ProjectAdd,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, data: w.data.filter((d) => d.id !== row.id) }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataFactor = (factor: DataFactor, row: ProjectAdd) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, data: p.data.filter((d) => d.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDragRow = (row: ImagesDatabase[] = []) => {\n    setRowDrag(row)\n  }\n\n  const onDragEnd = () => {\n    setRowDrag(undefined)\n  }\n\n  const onMouseOver = (factor: DataFactor, within?: DataWithin) => {\n    onDropData(factor, within)\n    setRowDrag(undefined)\n  }\n\n  const onDropData = (factor: DataFactor, within?: DataWithin) => {\n    if (!Array.isArray(rowDrag) && !rowDrag?.image_url) {\n      return\n    }\n    let newData: ProjectAdd[] = []\n    if (!Array.isArray(rowDrag)) {\n      newData = [\n        {\n          id: getNanoId(),\n          project_name: rowDrag.datatype_label,\n          image_count: 1,\n          project_type: rowDrag.attributes.type as string,\n          protocol: rowDrag.attributes.protocol as string,\n          image_url: rowDrag?.image_url,\n          jsonData: rowDrag?.attributes,\n        },\n      ]\n    } else if (Array.isArray(rowDrag)) {\n      newData = rowDrag.map((row) => ({\n        id: getNanoId(),\n        project_name: row.datatype_label,\n        image_count: 1,\n        project_type: row.attributes.type as string,\n        protocol: row.attributes.protocol as string,\n        image_url: row?.image_url,\n        jsonData: row?.attributes,\n      }))\n    }\n    if (projectLevel !== 'within-factor') {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return { ...p, data: [...p.data, ...newData] }\n          }\n          return p\n        }),\n      )\n      return\n    }\n    if (within) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return {\n              ...p,\n              within: p.within.map((w) => {\n                if (w.id === within.id) {\n                  return { ...w, data: [...w.data, ...newData] }\n                }\n                return w\n              }),\n            }\n          }\n          return p\n        }),\n      )\n    }\n  }\n\n  const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onDragLeave = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onChangeNameFactor = (factor: DataFactor, value: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, name: value }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onChangeNameWithinFactor = (\n    factor: DataFactor,\n    within: DataWithin,\n    value: string,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, name: value }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const renderData = (\n    data: ProjectAdd[],\n    style?: CSSProperties,\n    onDelete?: (row: ProjectAdd) => void,\n  ) => {\n    return data.map((e, index) => (\n      <BoxItem\n        key={`${e.id}_${index}`}\n        style={style}\n        onClick={() => rowDataClick(e)}\n      >\n        <TypographyBoxItem>{e.project_name}</TypographyBoxItem>\n        <TypographyBoxItem>{e.project_type}</TypographyBoxItem>\n        <TypographyBoxItem>{e.protocol}</TypographyBoxItem>\n        <Box\n          style={{ display: 'flex', justifyContent: 'flex-end', width: '100%' }}\n        >\n          <Button\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              onDelete?.(e)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </Button>\n        </Box>\n      </BoxItem>\n    ))\n  }\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const rowClick = (row: ImagesDatabase) => {\n    const { view, checkNext, checkPre } = onRowClick(datasTable, row)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const rowDataClick = (row: ProjectAdd) => {\n    if (!row?.image_url || !timeoutClick.current) {\n      timeoutClick.current = setTimeout(() => {\n        timeoutClick.current = undefined\n      }, 300)\n      return\n    }\n    setViewer({\n      open: true,\n      url: row.image_url,\n      jsonData: row.jsonData,\n    })\n    setDisabled({ left: true, right: true })\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC') => {\n    let orderbyCheck: 'DESC' | 'ASC' | '' = orderByValue\n    if (orderBy === 'DESC' && orderByValue === 'ASC') {\n      orderbyCheck = ''\n    }\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDataTable.records)),\n      orderbyCheck,\n      orderKey as OrderKey,\n    )\n    setDatasTable({ ...datasTable, records: data as RecordDatabase[] })\n    setColumnSort(orderKey)\n    setOrdeBy(orderbyCheck)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(datasTable, viewer.image, false)\n    if (imageNext) rowClick(imageNext as ImagesDatabase)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(datasTable, viewer.image, true)\n    if (imagePre) rowClick(imagePre as ImagesDatabase)\n  }\n\n  return (\n    <ProjectsWrapper>\n      {openFilter && <PopupSearch onClose={() => setOpenFilter(false)} />}\n      <ImageView\n        disabled={disabled}\n        url={viewer.url}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n      />\n      {isEditName ? (\n        <InputName\n          autoFocus\n          onBlur={() => setIsEditName(false)}\n          value={projectName}\n          onChange={onChangeName}\n        />\n      ) : (\n        <TextName onClick={() => setIsEditName(true)}>{projectName}</TextName>\n      )}\n      <BoxOptions\n        aria-labelledby=\"demo-radio-buttons-group-label\"\n        value={projectLevel}\n        name=\"radio-buttons-group\"\n        onChange={handleChangeLevel}\n      >\n        <Box>\n          <Box>\n            <FormControlLabel\n              value=\"factor\"\n              control={<Radio />}\n              label=\"Between factor\"\n            />\n          </Box>\n          <FormControlLabel\n            value=\"within-factor\"\n            control={<Radio />}\n            label=\"Between factor-within factor\"\n          />\n        </Box>\n      </BoxOptions>\n      <DropAndDropBox>\n        <DragBox>\n          {dataFactors.map((factor, index) => {\n            return (\n              <Fragment key={factor.id}>\n                <BoxFactor>\n                  <Input\n                    onChange={(e) => onChangeNameFactor(factor, e.target.value)}\n                    style={{ width: 'calc(100% - 64px)' }}\n                    value={\n                      factor.name === nameDefault\n                        ? `Between factor name ${index}`\n                        : factor.name\n                    }\n                  />\n                  <Button onClick={() => onDeleteFactor(factor)}>\n                    <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                  </Button>\n                  {projectLevel === 'within-factor' ? (\n                    factor.within.map((within, indexWithin) => (\n                      <BoxFactor key={within.id} style={{ marginLeft: 24 }}>\n                        <Input\n                          onChange={(e) =>\n                            onChangeNameWithinFactor(\n                              factor,\n                              within,\n                              e.target.value,\n                            )\n                          }\n                          style={{ width: 'calc(100% - 64px)' }}\n                          value={\n                            within.name === nameDefault\n                              ? `Within factor name ${indexWithin}`\n                              : within.name\n                          }\n                        />\n                        <Button onClick={() => onDeleteWithin(factor, within)}>\n                          <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                        </Button>\n                        {renderData(within.data, { marginLeft: 48 }, (row) => {\n                          onDeleteDataWithin(factor, within, row)\n                        })}\n                        <BoxDrag\n                          style={{\n                            borderBottom: rowDrag ? '1px dashed red' : '',\n                          }}\n                          onDrop={() => onDropData(factor, within)}\n                          onMouseOver={() => onMouseOver(factor, within)}\n                          onDragOver={onDragOver}\n                          onDragLeave={onDragLeave}\n                        />\n                      </BoxFactor>\n                    ))\n                  ) : (\n                    <>\n                      {renderData(factor.data, { marginLeft: 24 }, (row) => {\n                        onDeleteDataFactor(factor, row)\n                      })}\n                      <BoxDrag\n                        style={{\n                          borderBottom: rowDrag ? '1px dashed red' : '',\n                        }}\n                        onDrop={() => onDropData(factor)}\n                        onDragOver={onDragOver}\n                        onDragLeave={onDragLeave}\n                        onMouseOver={() => onMouseOver(factor)}\n                      />\n                    </>\n                  )}\n                </BoxFactor>\n                {projectLevel === 'within-factor' && dataFactors.length ? (\n                  <NewRowButton\n                    onClick={() => onAddWithin(factor.id)}\n                    style={{ marginLeft: 24 }}\n                  >\n                    + Add Within Factor\n                  </NewRowButton>\n                ) : null}\n              </Fragment>\n            )\n          })}\n          <NewRowButton onClick={onAddBetween}>\n            + Add Between Factor\n          </NewRowButton>\n        </DragBox>\n        <DropBox>\n          <BoxFilter>\n            <ButtonFilter\n              onClick={() => setOpenFilter(true)}\n              style={{ margin: '0 26px 0 0' }}\n            >\n              Filter\n            </ButtonFilter>\n          </BoxFilter>\n          <DatabaseTableComponent\n            onSort={handleSort}\n            orderKey={columnSort}\n            orderBy={orderBy}\n            rowClick={rowClick}\n            defaultExpand\n            onDrag={onDragRow}\n            onDragEnd={onDragEnd}\n            draggable\n            data={datasTable.records}\n            columns={columns}\n          />\n        </DropBox>\n      </DropAndDropBox>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <ButtonFilter onClick={() => navigate('/projects')}>\n          {idEdit ? 'Ok' : 'Add'}\n        </ButtonFilter>\n        <ButtonFilter\n          onClick={() => navigate(!routeGoback ? '/projects' : routeGoback)}\n        >\n          Cancel\n        </ButtonFilter>\n      </Box>\n    </ProjectsWrapper>\n  )\n}\n\nconst TextName = styled(Typography)(({ theme }) => ({\n  textOverflow: 'ellipsis',\n  width: 'calc(40% - 16px)',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  padding: theme.spacing(1),\n  borderWidth: 1,\n  fontSize: 16,\n}))\n\nconst BoxItem = styled(Box)({\n  display: 'flex',\n  height: 40,\n  alignItems: 'center',\n  borderBottom: '1px solid rgba(0,0,0,0.8)',\n  paddingLeft: 16,\n  marginBottom: 4,\n})\n\nconst TypographyBoxItem = styled(Box)({\n  minWidth: 120,\n})\n\nconst BoxDrag = styled(Box)({\n  paddingBottom: 24,\n  width: '100%',\n  borderWidth: 1,\n})\n\nconst BoxFactor = styled(Box)({})\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n  height: 'calc(100% - 32px)',\n  marginBottom: theme.spacing(3),\n}))\n\nconst BoxOptions = styled(RadioGroup)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(1, 2),\n  display: 'flex',\n  flexDirection: 'inherit',\n}))\n\nconst InputName = styled('input')(({ theme }) => ({\n  padding: theme.spacing(1),\n  outline: 'none',\n  borderColor: 'transparent',\n  fontSize: 18,\n  width: 'calc(40% - 16px)',\n  '&:focus': {\n    borderColor: '#000',\n  },\n  display: 'block',\n  borderWidth: 1,\n}))\n\nconst DropAndDropBox = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  gap: theme.spacing(2),\n}))\n\nconst DragBox = styled(Box)(({ theme }) => ({\n  width: '40%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #000',\n  minHeight: 100,\n}))\n\nconst DropBox = styled(Box)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #dedede',\n}))\n\nconst NewRowButton = styled(Button)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  borderStyle: 'dashed',\n  borderWidth: 1,\n  margin: theme.spacing(1, 0),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 1),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  color: '#ffffff',\n  backgroundColor: '#283237 !important',\n}))\n\nconst BoxFilter = styled(Box)({\n  display: 'flex',\n  marginBottom: 10,\n  justifyContent: 'flex-end',\n})\n\nexport default ProjectFormComponent\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { ChangeEvent, FormEvent, useState } from 'react'\n\nconst regexEmail = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/\nconst ResetPassword = () => {\n\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n    }\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        if (!values.email) {\n            errors.email = 'This field is required'\n        }\n        if(!regexEmail.test(values.email)) errors.email = 'This field is validate'\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"flex-end\"\n                    >\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Project from './components/Project'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport AccountManager from 'pages/AccountManager'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Projects from './pages/Projects'\nimport Database from './pages/Database'\nimport Login from 'pages/Login'\nimport ProjectFormComponent from \"./pages/Projects/Create\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<Dashboard />} />\n            <Route path=\"/projects/workflow\" element={<Project />} />\n            <Route path=\"/account-manager\" element={<AccountManager />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            <Route path=\"/database\" element={<Database />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            <Route path=\"/account-deleted\" element={<AccountDelete />} />\n            <Route path=\"/projects/new-project\" element={<ProjectFormComponent />} />\n          </Routes>\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.timestamp,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n} from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}