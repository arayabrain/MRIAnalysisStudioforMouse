{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/selectors/run/RunSelectors.ts","const/API.ts","api/run/Run.ts","store/slice/Project/ProjectSelector.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/Snakemake.tsx","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/DialogContext.tsx","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","store/slice/DisplayData/DisplayDataSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","components/Visualize/DataContext.tsx","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","components/Visualize/Plot/CsvPlot.tsx","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/ImageAlignment/index.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","components/FlowChart/NWB.tsx","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/CollapsibleTable.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Experiment/Experiment.tsx","components/VisualizeNew/index.tsx","components/Project.tsx","store/slice/Pipeline/PipelineHook.ts","providers/index.ts","utils/auth/index.ts","components/Header.tsx","components/utils/axios.ts","api/auth/index.ts","components/Layout.tsx","pages/Dashboard/index.tsx","components/common/Input.tsx","components/common/Loading.tsx","components/ModalDeleteAccount/index.tsx","components/Table/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","components/InputPassword/index.tsx","components/ModalChangePassword/index.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","store/slice/Project/ProjectSlice.ts","store/slice/Project/ProjectType.ts","pages/Projects/index.tsx","components/DatabaseTable.tsx","components/ImageView/ChangeSize.tsx","components/ImageView/index.tsx","utils/database/index.ts","pages/Database/index.tsx","pages/Login/index.tsx","pages/Projects/Create.tsx","pages/ResetPassword/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","data","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","filter","id","label","convertToRunResult","nodeResultDto","outputPath","outputPaths","message","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectInputNodeParam","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","inputNodePosyData","isEdge","edge","HOST","process","PORT","BASE_URL","runApi","projectId","a","axios","post","response","runByUidApi","pendingNodeIdList","selectCurrentProjectId","project","currentProject","selectProjectList","projects","createAsyncThunk","thunkAPI","getState","responseData","rejectWithValue","runByCurrentUid","currentUid","pollRunResult","getExperimentsApi","get","deleteExperimentByUidApi","delete","deleteExperimentByListApi","uidList","importExperimentByUidApi","fetchExperimentApi","EXPERIMENTS_SLICE_NAME","getExperiments","_","fetchExperiment","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","convertToExperimentType","functions","function","unique_id","convertToExperimentStatus","success","hasNWB","timestamp","started_at","convertFunctionsToRunResultDTO","key","initialState","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","extraReducers","builder","addCase","fulfilled","rejected","meta","_state","_action","addMatcher","isAnyOf","pending","actions","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","position","newNode","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","style","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","config","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","find","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","max","random","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","SnakemakeButton","Button","endIcon","SnakemakeContents","paramKeyList","className","Component","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","errorMessage","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","navigate","useNavigate","float","textAlign","top","right","zIndex","textTransform","useHandleColor","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","createContext","onOpen","onOpenDialogFile","onMessageError","onOpenImageAlignment","FileSelect","multiSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","useSearchParams","searchParams","useContext","alignments","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","alpha","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","title","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","initParams","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeParamAlignment","setInputNodeHDF5Path","setHeader","setIndex","transpose","newState","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","DisplayDataContext","dataType","itemId","NaN","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectVisualizeItems","visualaizeItem","items","selectVisualizeItemById","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectRoiItemFilePath","roiItem","selectImageItemStartIndex","selectImageItemEndIndex","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","selectTimeSeriesItemFilePath","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","CsvPlot","isInitialized","isPending","isFulfilled","CsvPlotImple","selectCsvItemTranspose","selectCsvItemSetHeader","selectCsvItemSetIndex","PresentationalCsvPlot","csvData","useMemo","col","row","header","headerData","field","headerName","idx","rows","row_id","rowObj","fromEntries","columns","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","setOpen","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","p","m","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","setImageItemClikedDataId","clickedDataId","drawOrderList","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","isWorkflowDialog","imageItemInitialValue","showticklabels","showline","zsmooth","showgrid","showscale","colors","rgb","offset","activeIndex","roiAlpha","duration","timeSeriesItemInitialValue","span","zeroline","xrange","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","selectedItemId","layout","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","selectHeatMapItemShowScale","colorscale","selectHeatMapItemColors","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","selectImageItemShowticklabels","selectImageItemShowLine","selectImageItemZsmooth","selectImageItemShowGrid","selectImageItemShowScale","selectImageItemColors","selectImageItemAlpha","timeDataMaxIndex","maxIdx","selectRoiItemIndex","selectImageItemRoiAlpha","colorscaleRoi","createColormap","colormap","nshades","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","ml","PlayBack","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","text","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","selectTimeSeriesItemOffset","selectTimeSeriesItemSpan","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","selectTimeSeriesItemXrange","selectTimeSeriesItemDrawOrderList","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","selectVisualizeDataFilePath","selectVisualizeDataNodeId","selectVisualizeDataType","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allChecked","allNotChecked","indeterminate","TreeItemLabel","checkboxProps","Checkbox","disableRipple","ButtonClose","ButtonPre","backgroundColor","cursor","ButtonNext","InputImage","ImageViewWrapper","justifyContent","ContentSet","Flex","Text","ButtonSet","BoxSet","SwitchImage","flexDirection","SwitchContent","ButtonOk","ButtonCanCel","CloseIconWrapper","CloseIcon","ImageAlignment","urls","readOnly","viewerRef","url","setUrl","isLoadFile","setIsLoadFile","loadedSuccess","setLoadedSuccess","volumes","urlRef","stateParams","setStateParams","paramAligment","image_id","loadFile","loadFileIndex","paramInit","setValueToBraibrowser","valueParams","setResize","x_resize","y_resize","z_resize","setRadian","y_rotate","x_rotate","z_rotate","setVoxelCoords","y_pos","z_pos","x_pos","redrawVolumes","onChangeValue","newParams","align","onBlurRadian","valueRadian","isNaN","PI","clearVolumes","loadVolumes","nii_url","template","element_id","viewer_insert_className","overlay","complete","volumeLoaded","isLoaded","brainbrowser","window","BrainBrowser","volume","paramsNode","xspace","radian","yspace","zspace","utils","isFunction","getVoxelCoords","voxel","k","j","pre","gerenateValueNumber","color_map_config","VolumeViewer","start","viewer","addEventListener","urlColor","cursor_color","loadDefaultColorMapFromURL","setDefaultPanelSize","render","Modal","minHeight","onBlur","gap","initDialogFile","ReactFlowComponent","openPopupAlignment","setOpenPopupAlignment","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","accept","drop","monitorOffset","getClientOffset","offsetLeft","offsetTop","flag","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","preventDefault","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","Popover","anchorOrigin","vertical","horizontal","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","getNWBParamsApi","getNWBParams","nwbSlice","NWBSettingContents","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","borderRight","paddingTop","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","ExperimentStatusIcon","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","timeout","unmountOnExit","Table","Head","Body","TableHead","TableBody","TableRowOfFunction","outputs","popup","setPopup","component","scope","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","ExperimentUidContext","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListKeys","recordsIsEmpty","startTime","finishTime","page","storageKey","initialValue","parseFn","savedStr","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","valueNum","rowsPerPage","emptyRows","flexGlow","records","TableContainer","RowItem","secondary","Fragment","tableCellClasses","root","borderBottomWidth","Experiment","WrapperInput","Wrapper","VisualizeInput","Title","fontWeight","CutCoords","VisualizeInputWrapper","ButtonWrapper","VisualizeButton","ImageWrapper","Image","objectFit","VisualizeNew","Container","src","alt","StyledAppBar","drawer","TabPanel","other","hidden","a11yProps","Project","setParams","runPipeline","isCanceled","console","log","location","useLocation","isEdited","intervalId","prevStatus","setPrevStatus","useRunPipeline","set","centered","textColor","UserContext","setUser","useUser","saveToken","access_token","getToken","removeToken","removeItem","isAdmin","isReseacher","optionsRole","code","BoxDropdown","listStyleType","backgroundClip","outline","BoxWrapper","BoxMenu","userSelect","BoxInfo","BoxMenuItem","transform","BoxMenuItemLogout","TitleLogo","HeaderWrapper","Header","user","refMenu","blur","display_name","email","axiosLibrary","baseURL","interceptors","request","use","headers","Authorization","ExToken","Promise","reject","login","getMe","listUser","query","createUser","editUser","userId","put","deleteUser","resetPassword","drawerWidth","ignorePaths","MenuLeft","onResize","pathname","isClose","MenuLeftWrapper","BoxBack","ButtonBack","BoxDivider","KeyboardBackspaceIcon","LinkWrapper","to","active","TypographyMenu","Link","textDecoration","LayoutWrapper","ContentBodyWrapper","paddingRight","ChildrenWrapper","KeyboardBackspace","shouldForwardProp","listStyle","lineHeight","Layout","setWidth","checkkAuth","token","DashboardWrapper","DashboardContent","flexWrap","TitleMenu","Dashboard","Input","LoaderWrapper","bottom","rotate","keyframes","prixClipFix","Loader","animation","content","boxSizing","inset","Loading","ContentDelete","ButtonConfirm","BoxConfirm","ModalDeleteAccount","onSubmit","titleSubmit","description","textDelete","setTextDelete","whiteSpace","placeholder","MyPaginate","ReactPaginate","borderCollapse","Thead","Tr","Th","borderTopLeftRadius","borderTopRightRadius","TBody","Td","maxWidth","wordBreak","NoData","ArrowDownwardIconOrder","ArrowDownwardIcon","TableComponent","paginate","orderBy","orderKey","pageCount","page_size","renderCol","dataIndex","iCol","nameCol","disableInitialCallback","marginPagesDisplayed","pageRangeDisplayed","breakLabel","previousLabel","nextLabel","TextError","InputError","autoComplete","SelectModal","SelectError","options","initState","password","lab","confirmPassword","ModalComponent","onSubmitEdit","setIsOpenModal","dataEdit","regex","regexPassword","setFormData","isDisabled","setIsDisabled","errors","setErrors","validateEmail","validateField","test","validatePassword","isConfirm","errorLength","validateLength","datas","validateForm","errorName","errorEmail","errorLab","errorRole","onChangeData","newDatas","errorConfirm","toLowerCase","newErrors","some","alert","ModalBox","TitleModal","BoxData","LabelModal","ButtonModal","AccountManagerWrapper","BoxButton","ButtonAdd","ALink","button","AccountManager","openDelete","setOpenDelete","isOpenModal","setDataEdit","idDel","setIdDel","setData","setIsLoading","per_page","next_page_token","setPaginate","getList","nextPageToken","newData","total_page","handleCloseDelete","onDelete","onForgotPassword","onPageChange","InputPassword","setType","BoxTitle","FormInline","Label","ModalChangePassword","setValues","validate","confirm_password","validateReEnter","new_password","reEnter","AccountWrapper","BoxFlex","TitleData","ButtonSubmit","Account","isEditName","setIsEditName","openChangePw","setOpenChangePw","handleCloseChangePw","mt","AccountDelete","projectSlice","created_time","updated_time","image_count","project_type","deleteProject","ProjectsWrapper","ProjectsTitle","letterSpacing","Projects","idDelete","setIdDelete","onEdit","onWorkflow","onResults","addNewProject","RenderColumn","recordIndex","rowClick","drags","onMouseDown","draggable","onDrag","openChild","setOpenChild","openChildParent","setOpenChildPrent","subjects","openSubjects","setOpenSubjects","isDrag","drag","session_id","datatype_index","onDragEvent","datatypes","column","BoxCenter","sub","subject_index","subId","o","sessions","session","session_index","ii","images","image_index","datatype_label","subject_id","parent_id","record_index","onDragStart","BoxDrag","TableWrap","overflowX","DataTable","DatabaseTableComponent","onSort","onBeginDragProps","onBeginDrag","setDrags","pageX","pageY","mouseMoveRect","setMouseMoveRect","timeoutClick","ctrRef","refTable","refTdSelect","mouseStart","beginDrag","setBeginDrag","onKeydownEvent","onKeyupEvent","onMouseUp","onMouseMove","removeEventListener","ctrlKey","metaKey","onRowClickEvent","idDom","tds","currentTarget","getElementsByTagName","dom","innerHTML","order","onSortHandle","allowMutilKey","draggableProps","el","rowId","trNow","getBoundingClientRect","td","Dot","TitleScale","BoxLine","ScaleWrapper","ChangeDrag","onChangeMin","showInputMax","mouseDown","refDrag","refDot","getWidth","clientWidth","onTouchStart","touches","mouseInit","scale","onTouchMove","toPrecision","onTouchEnd","BoxLoading","ButtonPrevious","BoxContentData","WrapperJson","TextArea","borderLeft","ArrowBackIosIconWrapper","ArrowBackIosIcon","ArrowForwardIosIconWrapper","ArrowForwardIosIcon","ImageView","onNext","onPrevious","jsonData","worldCoords","setWorldCoords","voxelCoords","setOpacity","thresholds","setThresholds","maxThres","setMaxThres","contracts","setContracts","brightness","setBrightness","intensity_min","intensity_max","getIntensityValue","getWorldCoords","num","showInputMin","setContrast","refreshPanels","onRowClick","view","image_url","attributes","image_attributes","checkNext","onGet","checkPre","isSub","indexImageNow","record","dataNow","subjectNow","sessionNow","datatypeNow","imagePre","datatypeImagePre","imageNext","datatypeNext","sortWithLabName","datasTable","typeOrder","sort","sortSubjectTree","dataA","dataB","subjectsA","subA","subB","subjectsB","sortSessionTree","sessionsA","sA","sB","flat","sessionsB","subSessA","subSessB","ssA","ssB","sortDataTypeTree","ses","ss","dataTypeA","dataTypeB","typeA","typeB","sortAttributesTypeTree","s","imageA","imageB","sortWithKey","valueA","valueB","sortWithTime","Date","recording_time","PopupSearch","onFilter","Popup","PopupInner","HeaderTitle","ButtonControl","InputSearch","defaultDatabase","pagenation","limit","total_pages","lab_name","user_name","origin","protocol","voxel_size","dataImages","subject_label","session_label","datatypes_label","child","DatabaseWrapper","ButtonFilter","BoxSelectTypeView","Database","openPopup","setOpenPopup","setViewer","setDatasTable","initDataTable","setInitDataTable","setOrdeBy","columnSort","setColumnSort","setDisabled","DatabaseTable","defaultExpand","orderByValue","LoginWrapper","LoginContent","FormSignUp","LabelField","LableRequired","Description","LinkWrappper","ButtonLogin","Login","validateSubmit","ex_token","getUser","Stack","nameDefault","TextName","borderWidth","BoxItem","TypographyBoxItem","BoxFactor","BoxOptions","RadioGroup","InputName","DropAndDropBox","DragBox","DropBox","NewRowButton","borderStyle","BoxFilter","ProjectFormComponent","idEdit","imageIDs","setImageIDs","routeGoback","isPendingDrag","projectName","setProjectName","projectLevel","setProjectLevel","openFilter","setOpenFilter","rowDrag","setRowDrag","within","dataFactors","setDataFactors","onMouseOver","factor","onDropData","newIds","project_name","w","onDragLeave","renderData","rowDataClick","onCancle","edited","Radio","onChangeNameFactor","rowData","indexWithin","onChangeNameWithinFactor","onDeleteWithin","onDeleteDataWithin","onDrop","onDeleteDataFactor","idFactor","mouseup","regexEmail","Heading","ButtonSignIn","ResetPassword","onReset","errorCheck","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","deleteData","prevDataType","prevFilePath","roi1Ddata","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","projectReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.95825520.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else if (nodeResultDto.status === 'running') {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: nodeResultDto.name,\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type Params = {\n  image_id: number | string\n  x_pos: number\n  y_pos: number\n  z_pos: number\n  x_rotate: number\n  y_rotate: number\n  z_rotate: number\n  x_resize: number\n  y_resize: number\n  z_resize: number\n}\n\nexport type AlignmentData = {\n  alignments: {\n    path: string\n    type: string\n    value: Params[]\n  }\n}\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode\n  extends InputNodeBaseType<'image', AlignmentData> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(\n  projectId: string,\n  data: RunPostData,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${projectId}`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  projectId: string,\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${projectId}/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  projectId: string\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { projectId, uid, pendingNodeIdList } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/result/${projectId}/${uid}`,\n    {\n      pendingNodeIdList,\n    },\n  )\n  return response.data\n}\n","import { RootState } from 'store/store'\n\nexport const selectProject = (state: RootState) => state.project\nexport const selectCurrentProjectId = (state: RootState) =>\n  state.project.currentProject?.id\nexport const selectProjectList = (state: RootState) => state.project.projects\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\nimport { selectCurrentProjectId } from '../Project/ProjectSelector'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  if (projectId) {\n    try {\n      const responseData = await runApi(projectId, runPostData)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('projectId does not exist.')\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const projectId = selectCurrentProjectId(thunkAPI.getState())\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (projectId && currentUid != null) {\n      try {\n        const responseData = await runByUidApi(\n          projectId,\n          currentUid,\n          runPostData,\n        )\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('projectId or currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  if (projectId) {\n    try {\n      const responseData = await runResult({\n        projectId,\n        uid,\n        pendingNodeIdList,\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('projectId does not exist.')\n  }\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { EdgeDict, NodeDict, OutputPathsDTO, RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type FunctionsDTO = {\n  [nodeId: string]: {\n    name: string\n    success: string\n    unique_id: string\n    hasNWB: boolean\n    message?: string\n    started_at?: string\n    finished_at?: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type ExperimentDTO = {\n  function: FunctionsDTO\n  name: string\n  success?: EXPERIMENTS_STATUS\n  started_at: string\n  finished_at?: string\n  project_id: string\n  unique_id: string\n  hasNWB: boolean\n  edgeDict: EdgeDict\n  nodeDict: NodeDict\n}\n\nexport async function getExperimentsApi(\n  projectId: string,\n): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/${projectId}`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function fetchExperimentApi(\n  projectId: string,\n): Promise<ExperimentDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/fetch/${projectId}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  status?: EXPERIMENTS_STATUS\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n  ExperimentDTO,\n  fetchExperimentApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\nimport { selectCurrentProjectId } from '../Project/ProjectSelector'\nimport { ThunkApiConfig } from 'store/store'\n\nexport const getExperiments = createAsyncThunk<\n  ExperimentsDTO,\n  undefined,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/getExperiments`, async (_, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  if (projectId) {\n    try {\n      const response = await getExperimentsApi(projectId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('project id does not exist.')\n  }\n})\n\nexport const fetchExperiment = createAsyncThunk<ExperimentDTO, string>(\n  `${EXPERIMENTS_SLICE_NAME}/fetchExperiment`,\n  async (projectId, thunkAPI) => {\n    try {\n      const response = await fetchExperimentApi(projectId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import type {\n  ExperimentDTO,\n  ExperimentsDTO,\n  FunctionsDTO,\n} from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\nimport { RunResultDTO } from 'api/run/Run'\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.started_at,\n    status: dto.success,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nexport function convertFunctionsToRunResultDTO(\n  dto: FunctionsDTO,\n): RunResultDTO {\n  const result: RunResultDTO = {}\n  Object.entries(dto).forEach(([key, value]) => {\n    result[key] = {\n      status: value.success,\n      message: value.message ?? '',\n      name: value.name,\n      outputPaths: value.outputPaths,\n    }\n  })\n  return result\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\nimport { convertFunctionsToRunResultDTO } from '../Experiments/ExperimentsUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.payload.unique_id,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          uid: action.payload.unique_id,\n          status: RUN_STATUS.START_SUCCESS,\n          runResult: {\n            ...convertToRunResult(\n              convertFunctionsToRunResultDTO(action.payload.function),\n            ),\n          },\n          runPostData: {\n            name: action.payload.name,\n            nodeDict: action.payload.nodeDict,\n            edgeDict: action.payload.edgeDict,\n            snakemakeParam: {},\n            nwbParam: {},\n            forceRunList: [],\n          },\n        }\n\n        const runResultPendingList = Object.values(state.run.runResult).filter(\n          isNodeResultPending,\n        )\n        if (runResultPendingList.length === 0) {\n          state.run.status = RUN_STATUS.FINISHED\n        }\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 130,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { FlowElement, Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node as FlowElement<NodeData>)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node as FlowElement<NodeData>)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n    // editFlowElementParamsAlignmentById: (\n    //   state,\n    //   action: PayloadAction<{\n    //     nodeId: string\n    //     params: Params[]\n    //   }>,\n    // ) => {\n    //   let { nodeId, params } = action.payload\n    //   const elementIdx = state.flowElements.findIndex(\n    //     (ele) => ele.id === nodeId,\n    //   )\n    //   const targetItem = state.flowElements[elementIdx]\n    //   if (isNode(targetItem)) {\n    //     if (!targetItem.data) {\n    //       return\n    //     }\n    //     let newParams = params\n    //     if (!targetItem.data.param) {\n    //       targetItem.data.param = initParams\n    //     }\n    //     targetItem.data.param.alignments.value = newParams as Params[]\n    //   }\n    // },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n  // editFlowElementParamsAlignmentById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n      .addCase(fetchExperiment.fulfilled, (_state, _action) => initialState)\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n// import { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n      }}\n    >\n      <Button onClick={() => navigate('/projects')}>\n        <ArrowBackIosIcon />\n        Projects\n      </Button>\n      <SnakemakeButton />\n      {/*<NWBSettingButton />*/}\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n  onOpenImageAlignment: (\n    v: boolean,\n    params?: { nodeId: string; alignments: Params[] },\n  ) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n  onOpenImageAlignment: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { AlignmentData, FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { DialogContext } from '../DialogContext'\nimport { useSelector } from 'react-redux'\nimport { selectInputNodeParam } from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        nodeId={nodeId}\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n  nodeId?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({ filePath, nodeId }) => {\n    const navigate = useNavigate()\n    const [searchParams] = useSearchParams()\n    const { onOpenImageAlignment } = useContext(DialogContext)\n\n    const inputNode = useSelector(selectInputNodeParam(nodeId || '')) as AlignmentData\n\n    const id = searchParams.get('id')\n    const getNameSelectec = () => {\n      if (Array.isArray(filePath)) {\n        return `${filePath.length} images selected.`\n      }\n      return `${filePath ? 1 : 0} images selected.`\n    }\n\n    return (\n      <div style={{ padding: 16 }}>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: 'auto' }}>\n          <Button\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n            onClick={() =>\n              navigate(\n                `/projects/new-project?id=${id}&nodeId=${nodeId}&back=/projects/workflow?tab=0&id=${id}`,\n              )\n            }\n          >\n            EDIT IMAGESET\n          </Button>\n        </ButtonGroup>\n        <div style={{ marginTop: 8 }}>\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {getNameSelectec()}\n          </Typography>\n        </div>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: '8px 0' }}>\n          <Button\n            onClick={() => {\n              if (!nodeId) return\n              onOpenImageAlignment(true, {\n                nodeId,\n                alignments: inputNode.alignments.value,\n              })\n            }}\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n          >\n            ALIGNMENT\n          </Button>\n        </ButtonGroup>\n      </div>\n    )\n  },\n)\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n  Params,\n  ImageInputNode,\n  AlignmentData,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initParams: AlignmentData = {\n  alignments: {\n    path: 'alignments',\n    type: 'child',\n    value: [],\n  },\n}\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: initParams,\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeParamAlignment(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: Params[]\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId] as ImageInputNode\n      inputNode.param.alignments.value = param\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: initParams,\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: initParams,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: initParams,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const {\n  setCsvInputNodeParam,\n  setInputNodeHDF5Path,\n  setInputNodeParamAlignment,\n} = inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        label=\"dur[msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { ChangeEvent, FC, useEffect, useMemo, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { Object } from 'pages/Database'\nimport { useDispatch } from 'react-redux'\nimport { setInputNodeParamAlignment } from 'store/slice/InputNode/InputNodeSlice'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\n// import { setSaveFileName } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  urls: string[]\n  jsonData?: Object\n  disabled?: { left: boolean; right: boolean }\n  params?: { nodeId: string; alignments: Params[] }\n  readOnly?: boolean\n}\n\nconst ImageAlignment: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  urls,\n  params = { nodeId: '', alignments: [] },\n  readOnly= false\n}) => {\n  const viewerRef = useRef<any>()\n  const [url, setUrl] = useState(urls[0])\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const [loadedSuccess, setLoadedSuccess] = useState(false)\n  const volumes = useRef<any>()\n  const dispatch = useDispatch()\n\n  const urlRef = useRef(url)\n\n  const [stateParams, setStateParams] = useState<Params[]>(params.alignments)\n\n  const paramAligment = useMemo(() => {\n    return stateParams.find((param) => param.image_id === url)\n  }, [url, stateParams])\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    setStateParams(params.alignments)\n    setUrl(urls[0])\n    setIsLoadFile(false)\n    setLoadedSuccess(false)\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    urlRef.current = url\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n\n  useEffect(() => {\n    if (loadedSuccess) {\n      const paramInit = params.alignments?.find(\n        (param) => param.image_id === url,\n      )\n      setValueToBraibrowser(paramInit)\n    }\n    //eslint-disable-next-line\n  }, [loadedSuccess, url])\n\n  const onOk = () => {\n    if (params?.nodeId && stateParams) {\n      dispatch(\n        setInputNodeParamAlignment({\n          nodeId: params.nodeId,\n          param: stateParams,\n        }),\n      )\n    }\n    onClose?.()\n  }\n\n  const onPreImage = () => {\n    const index = urls.findIndex((item) => item === url)\n    if (index === 0) return\n    setUrl(urls[index - 1])\n  }\n\n  const onNextImage = () => {\n    const index = urls.findIndex((item) => item === url)\n    if (index === urls.length - 1) return\n    setUrl(urls[index + 1])\n  }\n\n  const setValueToBraibrowser = (valueParams?: Params) => {\n    if (valueParams) {\n      volumes.current.setResize({\n        x: Number(valueParams.x_resize),\n        y: Number(valueParams.y_resize),\n        z: Number(valueParams.z_resize),\n      })\n      volumes.current.setRadian(\n        Number(valueParams.y_rotate),\n        Number(valueParams.x_rotate),\n        Number(valueParams.z_rotate),\n      )\n      volumes.current.setVoxelCoords(\n        Number(valueParams.y_pos),\n        Number(valueParams.z_pos),\n        Number(valueParams.x_pos),\n      )\n      viewerRef.current.redrawVolumes()\n    }\n  }\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === url ? { ...align, [name]: value } : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const onBlurRadian = (e: any) => {\n    const { name, value } = e.target\n    let valueRadian = Number(value)\n    if (isNaN(valueRadian)) {\n      valueRadian = 0\n    } else if (valueRadian < 0) {\n      valueRadian = 0\n    } else if (valueRadian > 2 * Math.PI) {\n      valueRadian = 0\n    }\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === url ? { ...align, [name]: valueRadian } : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    setLoadedSuccess(false)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n        },\n      ],\n      complete: () => setValueToBraibrowser(paramAligment),\n    })\n  }\n\n  const volumeLoaded = (event: any, isLoaded?: boolean) => {\n    const brainbrowser = (window as any).BrainBrowser\n    const { volume } = event\n    volumes.current = volume\n    const paramsNode: Params = {\n      image_id: urlRef.current,\n      x_pos: 0,\n      y_pos: 0,\n      z_pos: 0,\n      x_rotate: volume.header.xspace.radian,\n      y_rotate: volume.header.yspace.radian,\n      z_rotate: volume.header.zspace.radian,\n      x_resize: volume.header.xspace.step,\n      y_resize: volume.header.yspace.step,\n      z_resize: volume.header.zspace.step,\n    }\n    if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n      const voxel = volume.getVoxelCoords()\n      paramsNode.x_pos = voxel.k\n      paramsNode.y_pos = voxel.i\n      paramsNode.z_pos = voxel.j\n    }\n    const newParams = (pre: Params[]) => {\n      if (pre.find((align) => align.image_id === urlRef.current)) {\n        return pre.map((align) => {\n          if (align.image_id === urlRef.current) return paramsNode\n          return align\n        })\n      }\n      return [...pre, paramsNode]\n    }\n    setStateParams(newParams)\n    setIsLoadFile(false)\n    setLoadedSuccess(true)\n  }\n\n  const gerenateValueNumber = (value?: number) => {\n    if (typeof value === 'undefined') return ''\n    return value\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    setLoadedSuccess(false)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', (e: any) =>\n          volumeLoaded(e, true),\n        )\n        viewer.addEventListener('sliceupdate', volumeLoaded)\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {},\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div style={{ alignItems: 'stretch' }}>\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              <Flex>\n                <BoxSet>\n                  <ContentSet>\n                    <Flex>\n                      <Text>right {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"x_pos\"\n                        value={gerenateValueNumber(paramAligment?.x_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>forward {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"y_pos\"\n                        value={gerenateValueNumber(paramAligment?.y_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>up {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"z_pos\"\n                        value={gerenateValueNumber(paramAligment?.z_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>roll {'{rad}'}</Text>\n                      <input\n                        name=\"x_rotate\"\n                        value={gerenateValueNumber(paramAligment?.x_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>pitch {'{rad}'}</Text>\n                      <input\n                        name=\"y_rotate\"\n                        value={gerenateValueNumber(paramAligment?.y_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>yaw {'{rad}'}</Text>\n                      <input\n                        name=\"z_rotate\"\n                        value={gerenateValueNumber(paramAligment?.z_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{x}'}</Text>\n                      <input\n                        name=\"x_resize\"\n                        value={gerenateValueNumber(paramAligment?.x_resize)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{y}'}</Text>\n                      <input\n                        value={gerenateValueNumber(paramAligment?.y_resize)}\n                        name=\"y_resize\"\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{z}'}</Text>\n                      <input\n                        value={gerenateValueNumber(paramAligment?.z_resize)}\n                        name=\"z_resize\"\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <ButtonSet\n                      onClick={() => setValueToBraibrowser(paramAligment)}\n                    >\n                      Set Origin\n                    </ButtonSet>\n                  </ContentSet>\n                </BoxSet>\n                <Flex\n                  sx={{\n                    flexDirection: 'column',\n                    position: 'relative',\n                    gap: 15,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <SwitchImage>\n                    <span>Select Image</span>\n                    <SwitchContent>\n                      <ButtonPre onClick={onPreImage}>{'<'}</ButtonPre>\n                      <InputImage value={url} readOnly />\n                      <ButtonNext onClick={onNextImage}>{'>'}</ButtonNext>\n                    </SwitchContent>\n                    <span>{`(${\n                      urls.findIndex((item: string) => item === url) + 1\n                    }/${urls.length})`}</span>\n                  </SwitchImage>\n                  <Flex sx={{ gap: 5 }}>\n                    <ButtonCanCel onClick={onClose}>CANCEL</ButtonCanCel>\n                    <ButtonOk onClick={onOk}>OK</ButtonOk>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </div>\n          </div>\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  right: '10%',\n  top: '10%',\n  zIndex: 9999,\n  background: 'rgba(0, 0, 0, 0.6)',\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.8)',\n  },\n})\n\nconst ButtonPre = styled('button')({\n  width: 50,\n  height: 50,\n  position: 'unset',\n  zIndex: 1,\n  borderRadius: '50%',\n  backgroundColor: 'unset',\n  border: 'none',\n  cursor: 'pointer',\n  fontSize: 20,\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.1)',\n  },\n})\n\nconst ButtonNext = styled(ButtonPre)({\n  right: '10%',\n})\n\nconst InputImage = styled('input')({\n  height: 'fit-content',\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: '#fff',\n})\n\nconst ContentSet = styled(Box)({\n  padding: 20,\n})\n\nconst Flex = styled(Box)({\n  display: 'flex',\n})\n\nconst Text = styled('span')({\n  display: 'block',\n  minWidth: 150,\n})\n\nconst ButtonSet = styled('button')({\n  marginTop: 20,\n  cursor: 'pointer',\n})\n\nconst BoxSet = styled(Box)({\n  border: '2px solid #000',\n  width: 'fit-content',\n  margin: '30px 50px',\n})\n\nconst SwitchImage = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n})\n\nconst SwitchContent = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst ButtonOk = styled('button')({\n  padding: '10px 20px',\n  background: '#000000c7',\n  border: '2px solid #000',\n  color: '#fff',\n  cursor: 'pointer',\n})\n\nconst ButtonCanCel = styled('button')({\n  padding: 10,\n  border: '2px solid #000',\n  cursor: 'pointer',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageAlignment\n\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\nimport ImageAlignment from '../ImageAlignment'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n    const [openPopupAlignment, setOpenPopupAlignment] = useState<{\n      open: boolean\n      params?: { nodeId: string; alignments: Params[] }\n    }>({\n      open: false,\n      params: { nodeId: '', alignments: [] },\n    })\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n            onOpenImageAlignment: (flag, params) => {\n              setOpenPopupAlignment({ open: flag, params })\n            },\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                elements={flowElements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                onLoad={onLoad}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition.x, flowPosition.y]}\n                defaultZoom={flowPosition.zoom}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          <ImageAlignment\n            open={openPopupAlignment.open}\n            onClose={() => setOpenPopupAlignment({ open: false })}\n            urls={['/lib/test.nii', '/lib/test0.nii']}\n            params={openPopupAlignment.params}\n          />\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { Box } from '@mui/material'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer>\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n  height: '100%',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n    paddingTop: theme.spacing(1.125),\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, {useState} from 'react'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nimport {MouseType} from './ExperimentTable'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport {Button} from \"@mui/material\";\nimport ImageAlignment from \"../ImageAlignment\";\n\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n  data?: MouseType[]\n}>(({ open , data}) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Table size=\"small\" aria-label=\"purchases\">\n            <Head />\n            {data && data.map((item) => {\n              return (\n                <Body key={item?.unique_id} data={item}/>\n              )\n            })}\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>Output</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo<{\n    data: MouseType\n}>(({data}) => {\n  return (\n    <TableBody>\n      <TableRowOfFunction data={data} />\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = ({ data } : {data: MouseType}) => {\n    const {name, success, outputs, unique_id} = data\n    const [popup, setPopup] = useState(false)\n  return (\n    <>\n        <TableRow >\n            <TableCell component=\"th\" scope=\"row\">\n                {name}\n            </TableCell>\n            <TableCell>{unique_id}</TableCell>\n            <TableCell>\n                <ExperimentStatusIcon status={success} />\n            </TableCell>\n            <TableCell>\n                <Button disabled={success === 'success'? false : true} onClick={() => setPopup(true)}>\n                    <OpenInNewIcon />\n                </Button>\n            </TableCell>\n        </TableRow>\n        <ImageAlignment\n            open={popup}\n            urls={outputs}\n            onClose={() => setPopup(false)}\n            readOnly={true}\n        />\n    </>\n  )\n}\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const experiment = selectExperimentList(state)[uid]\n    if (experiment.status) {\n      return experiment.status\n    } else {\n      const functions = selectExperimentList(state)[uid].functions\n      const statusList = Object.values(functions).map((f) => f.status)\n      if (statusList.findIndex((status) => status === 'error') >= 0) {\n        return 'error'\n      } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n        return 'running'\n      } else {\n        return 'success'\n      }\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableRow from '@mui/material/TableRow'\n// import TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\n// import ReplayIcon from '@mui/icons-material/Replay'\n// import DeleteIcon from '@mui/icons-material/Delete'\n// import Dialog from '@mui/material/Dialog'\n// import DialogActions from '@mui/material/DialogActions'\n// import DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  // deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { EXPERIMENTS_STATUS} from 'store/slice/Experiments/ExperimentsType'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport {useNavigate} from \"react-router-dom\";\n\nexport type MouseType = {\n    unique_id: string\n    name: string\n    success: EXPERIMENTS_STATUS\n    outputs: string[]\n}\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\ntype Data = {\n    pagenation: object\n    records: {\n        id: number\n        name: string\n        data?: MouseType[]\n    }[]\n    nodeDict: object\n    edgeDict: object\n    startTime: string\n    finishTime: string\n}\n\nconst data: Data = {\n  \"pagenation\": {\n    \"page\": 0,\n    \"limit\": 0,\n    \"total\": 0,\n    \"total_pages\": 0\n  },\n  \"records\": [{\n      \"id\": 0,\n      \"name\": \"MOUSE1\",\n      \"data\": [{\n          \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n          \"name\": \"caiman_cnmf\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"caiman_mc_2rg3nrb410\",\n          \"name\": \"caiman_mc\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"input_0\",\n          \"name\": \"mouse2p_2_donotouse.tiff\",\n          \"success\": \"success\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]}\n        ]\n      },\n      {\n          \"id\": 1,\n          \"name\": \"MOUSE2\",\n          \"data\": [{\n              \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n              \"name\": \"caiman_cnmf\",\n              \"success\": \"error\",\n              \"outputs\": [\n                  \"/lib/test.nii\",\n                  \"/lib/test0.nii\",\n                  \"/lib/test1.nii\"\n              ]},\n              {\n                  \"unique_id\": \"caiman_mc_2rg3nrb410\",\n                  \"name\": \"caiman_mc\",\n                  \"success\": \"error\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]},\n              {\n                  \"unique_id\": \"input_0\",\n                  \"name\": \"mouse2p_2_donotouse.tiff\",\n                  \"success\": \"success\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]}\n          ]\n      },\n      {\n          \"id\": 2,\n          \"name\": \"MOUSE3\"\n      }\n  ],\n      \"nodeDict\": {},\n      \"edgeDict\": {},\n      \"startTime\":\"2023/05/16 04:28\",\n      \"finishTime\":\"2023/05/16 04:28\"\n}\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'studio_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  // const dispatch = useDispatch()\n  const navigate = useNavigate()\n  // const onClickReload = () => {\n  //   dispatch(getExperiments())\n  // }\n  // const [checkedList, setCheckedList] = useState<string[]>([])\n  // const [open, setOpen] = React.useState(false)\n  const recordsIsEmpty = experimentListKeys.length === 0\n  const startTime = data.startTime.split(' ')\n  const finishTime = data.finishTime.split(' ')\n\n  // const onClickDelete = () => {\n  //   setOpen(true)\n  // }\n  // const onClickCancel = () => {\n  //   setOpen(false)\n  // }\n  // const onClickOk = () => {\n  //   dispatch(deleteExperimentByList(checkedList))\n  //   setCheckedList([])\n  //   setOpen(false)\n  // }\n\n  const onClickBack = () => {\n    navigate('/projects')\n  }\n\n  const [page,\n    // setPage\n  ] = useState(0)\n\n  // const handleChangePage = (event: unknown, newPage: number) => {\n  //   setPage(newPage)\n  // }\n\n  const [rowsPerPage,\n    // setRowsPerPage\n  ] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  // const handleChangeRowsPerPage = (\n  //   event: React.ChangeEvent<HTMLInputElement>,\n  // ) => {\n  //   const newValue = parseInt(event.target.value, 10)\n  //   setRowsPerPage(newValue)\n  //   setPage(0)\n  // }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 5 }}>\n      <Button onClick={onClickBack}\n        sx={{width: 'fit-content', textTransform: 'unset', fontSize: 20}}\n      >\n        <KeyboardBackspaceIcon /> Projects\n      </Button>\n          <Box sx={{\n            display: 'flex',\n            gap : 4,\n            width: '90%',\n            margin: 'auto',\n            alignItems: 'flex-start'\n          }}>\n              <Typography>\n                  Status:\n              </Typography>\n              <Box>\n                  <ExperimentStatusIcon status={'success'}/>\n              </Box>\n              <Box>\n                  <Typography>Start time: {startTime[0]} {startTime[1]}</Typography>\n                  <Typography>Finish time: {finishTime[0]} {finishTime[1]}</Typography>\n              </Box>\n          </Box>\n          {/*<Box*/}\n          {/*    sx={{*/}\n          {/*        display: 'flex',*/}\n          {/*        justifyContent: 'flex-end',*/}\n          {/*        alignItems: 'center',*/}\n          {/*    }}*/}\n          {/*>*/}\n              {/*<Button*/}\n              {/*  sx={{*/}\n              {/*    margin: (theme) => theme.spacing(0, 1, 1, 0),*/}\n              {/*  }}*/}\n              {/*  variant=\"outlined\"*/}\n              {/*  endIcon={<ReplayIcon />}*/}\n              {/*  onClick={onClickReload}*/}\n              {/*>*/}\n              {/*  Reload*/}\n              {/*</Button>*/}\n              {/*<Button*/}\n              {/*  sx={{*/}\n              {/*    marginBottom: (theme) => theme.spacing(1),*/}\n              {/*  }}*/}\n              {/*  variant=\"outlined\"*/}\n              {/*  color=\"error\"*/}\n              {/*  endIcon={<DeleteIcon />}*/}\n              {/*  onClick={onClickDelete}*/}\n              {/*  disabled={checkedList.length === 0}*/}\n              {/*>*/}\n              {/*  Delete*/}\n              {/*</Button>*/}\n          {/*</Box>*/}\n          {/*<Dialog open={open}>*/}\n          {/*    <DialogTitle>Are you sure you want to delete?</DialogTitle>*/}\n          {/*    <DialogActions>*/}\n          {/*        <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">*/}\n          {/*            Cancel*/}\n          {/*        </Button>*/}\n          {/*        <Button onClick={onClickOk} variant=\"outlined\" autoFocus>*/}\n          {/*            OK*/}\n          {/*        </Button>*/}\n          {/*    </DialogActions>*/}\n          {/*</Dialog>*/}\n          <Paper\n              elevation={0}\n              variant=\"outlined\"\n              sx={{\n                  flexGlow: 1,\n                  height: '100%',\n                  width: '90%',\n                  margin: 'auto'\n              }}\n          >\n              {\n                  data.records.map((item) => {\n                      const { name, id } = item\n                      return (\n                          <TableContainer key={id} component={Paper} elevation={0}>\n                              <Table aria-label=\"collapsible table\">\n                                  <TableBody>\n                                      <ExperimentUidContext.Provider\n                                          value={String(id)}\n                                          key={id}\n                                      >\n                                          <RowItem\n                                              data={item.data}\n                                              name={name}\n                                          />\n                                      </ExperimentUidContext.Provider>\n                                      {emptyRows > 0 && (\n                                          <TableRow\n                                              style={{\n                                                  height: 53 * emptyRows,\n                                              }}\n                                          >\n                                              <TableCell colSpan={10} />\n                                          </TableRow>\n                                      )}\n                                      {recordsIsEmpty && (\n                                          <TableRow>\n                                              <TableCell colSpan={10}>\n                                                  <Typography\n                                                      sx={{\n                                                          color: (theme) => theme.palette.text.secondary,\n                                                          display: 'flex',\n                                                          alignItems: 'center',\n                                                          justifyContent: 'center',\n                                                          height: '300px',\n                                                          textAlign: 'center',\n                                                      }}\n                                                      variant=\"h6\"\n                                                  >\n                                                      No Rows...\n                                                  </Typography>\n                                              </TableCell>\n                                          </TableRow>\n                                      )}\n                                  </TableBody>\n                              </Table>\n                          </TableContainer>\n                      )\n                  })\n              }\n              {/*<TablePagination*/}\n              {/*    rowsPerPageOptions={[5, 10, 25]}*/}\n              {/*    component=\"div\"*/}\n              {/*    count={experimentListKeys.length}*/}\n              {/*    rowsPerPage={rowsPerPage}*/}\n              {/*    page={page}*/}\n              {/*    onPageChange={handleChangePage}*/}\n              {/*    onRowsPerPageChange={handleChangeRowsPerPage}*/}\n              {/*/>*/}\n          </Paper>\n    </Box>\n  )\n})\n\nconst RowItem = React.memo<{\n  name: string\n  data?: MouseType[]\n}>(({ name, data }) => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <React.Fragment>\n      <TableRow\n        onClick={() => data && setOpen((prevOpen) => !prevOpen)}\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell\n          sx={{padding: '20px',\n               display: 'flex',\n               alignItems: 'center'\n          }}\n        >\n          {name} {data && (!open ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />)}\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable data={data} open={open} />\n    </React.Fragment>\n  )\n})\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex', height: 'calc(100% - 58px)' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100%',\n          padding: 16,\n        }}\n      >\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import {styled, Box, Typography, Container} from \"@mui/material\";\n\nconst WrapperInput = ({text} : {text: string}) => {\n    return (\n        <Wrapper>\n            <Typography sx={{minWidth: 100}}>{text}</Typography>\n            <VisualizeInput sx={{width: 250}}/>\n        </Wrapper>\n    )\n}\n\nconst VisualizeNew = () => {\n  return (\n      <Container>\n          <Title>\n              STAT IMAGES\n          </Title>\n          <VisualizeInputWrapper>\n            <Box>\n                <WrapperInput text={'threshold'}/>\n            </Box>\n            <CutCoords>\n                <Typography>cut_coords</Typography>\n                <Box>\n                    <WrapperInput text={'coronal'}/>\n                    <WrapperInput text={'sagittal'}/>\n                    <WrapperInput text={'horizontal'}/>\n                </Box>\n            </CutCoords>\n          </VisualizeInputWrapper>\n          <ButtonWrapper>\n              <VisualizeButton>GENERATE</VisualizeButton>\n              <VisualizeButton>DOWNLOAD</VisualizeButton>\n          </ButtonWrapper>\n          <ImageWrapper>\n              <Image src={'/Images/image-visualize.png'} alt={''} />\n          </ImageWrapper>\n      </Container>\n  )\n}\n\nconst Wrapper = styled(Box)({\n    display: 'flex'\n})\n\nconst Title = styled(Typography)({\n    fontSize: 25,\n    fontWeight: 700,\n    margin: '50px 0',\n})\n\nconst CutCoords = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeInputWrapper = styled(Box)({\n    display: 'flex',\n    justifyContent: 'space-between'\n})\n\nconst ButtonWrapper = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeButton = styled('button')({\n    border: '1px solid #006fff',\n    color: '#006fff',\n    padding: 10,\n    '&:hover': {\n        cursor: 'pointer',\n        background: '#d1d7e0'\n    }\n})\n\nconst VisualizeInput = styled('input')({\n    height: 'fit-content'\n})\n\nconst ImageWrapper = styled(Box)({\n    width: '80%',\n    margin: 'auto'\n})\n\nconst Image = styled('img')({\n    width: '100%',\n    objectFit: 'contain'\n})\n\nexport default VisualizeNew","import React from 'react'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Toolbar from '@mui/material/Toolbar'\n// import IconButton from '@mui/material/IconButton'\n// import Tooltip from '@mui/material/Tooltip'\nimport { styled } from '@mui/material/styles'\n// import GitHubIcon from '@mui/icons-material/GitHub'\n// import MenuBookIcon from '@mui/icons-material/MenuBook'\n\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport FlowChart from './FlowChart/FlowChart'\nimport Experiment from './Experiment/Experiment'\nimport { Box } from '@mui/material'\nimport { useSearchParams } from 'react-router-dom'\nimport VisualizeNew from \"./VisualizeNew\";\n\nconst Project: React.FC = () => {\n  const [searchParams, setParams] = useSearchParams()\n  const [value, setValue] = React.useState(Number(searchParams.get('tab') || 0))\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    searchParams.set('tab', String(newValue))\n    setParams(searchParams)\n    setValue(newValue)\n  }\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n  return (\n    <RootDiv>\n      <StyledAppBar color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          {/* <img src={studioLogo} alt=\"studio\" width={75} height={50} /> */}\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Result\" {...a11yProps(1)} />\n            <Tab label=\"Visualize\" {...a11yProps(2)} />\n          </Tabs>\n          {/*<Tooltip title=\"GitHub repository\">*/}\n          {/*  <IconButton*/}\n          {/*    sx={{ mr: 1 }}*/}\n          {/*    href=\"https://github.com/oist/studio\"*/}\n          {/*    target=\"_blank\"*/}\n          {/*  >*/}\n          {/*    <GitHubIcon />*/}\n          {/*  </IconButton>*/}\n          {/*</Tooltip>*/}\n          {/*<Tooltip title=\"Documentation\">*/}\n          {/*  <IconButton*/}\n          {/*    href=\"https://studio.readthedocs.io/en/latest/\"*/}\n          {/*    target=\"_blank\"*/}\n          {/*  >*/}\n          {/*    <MenuBookIcon />*/}\n          {/*  </IconButton>*/}\n          {/*</Tooltip>*/}\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <VisualizeNew />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\nconst StyledAppBar = styled(Box)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Project\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useSearchParams, useLocation } from 'react-router-dom'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\nimport {\n  fetchExperiment,\n  getExperiments,\n} from '../Experiments/ExperimentsActions'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      console.log('asdassdasass', { runPostData: { name, ...runPostData, forceRunList: [] } })\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const [searchParams] = useSearchParams()\n  const location = useLocation()\n  const [isEdited] = useState<{ edited: boolean }>(\n    location.state as { edited: boolean },\n  )\n\n  React.useEffect(() => {\n    const projectId = searchParams.get('id')\n    projectId && !isEdited && dispatch(fetchExperiment(projectId.toString()))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.START_SUCCESS) {\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n        dispatch(getExperiments())\n      }\n      setPrevStatus(status)\n    }\n  }, [dispatch, status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import { createContext, useContext } from 'react'\n\nexport type User = {\n  created_time: null | string\n  display_name: null | string\n  email: string\n  last_login_time: null | string\n  role: string\n  uid: string\n}\n\nexport const UserContext = createContext<{ user?: User; setUser: Function }>({\n  setUser: () => null,\n})\n\nexport const useUser = () => useContext(UserContext)\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\nexport const saveExToken = (ExToken: string) => {\n  localStorage.setItem('ExToken', ExToken)\n}\nexport const getExToken = () => {\n  return localStorage.getItem('ExToken')\n}\nexport const removeExToken = () => {\n  return localStorage.removeItem('ExToken')\n}\n\nexport const isAdmin = (role?: number | string) => {\n  return role === 1\n}\n\nexport const isReseacher = (role?: string | number) => {\n  return role === 20\n}\n\nexport const optionsRole = [\n  {\n    code: 1,\n    name: 'Admin',\n  },\n  {\n    code: 10,\n    name: 'Data Manager',\n  },\n  {\n    code: 20,\n    name: 'User',\n  },\n]\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useRef, useState } from 'react'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { useUser } from 'providers'\nimport { removeToken } from 'utils/auth'\nimport { useNavigate } from 'react-router-dom'\n\nconst Header: FC = () => {\n  const [open, setOpen] = useState(false)\n  const navigate = useNavigate()\n  const { user } = useUser()\n\n  const refMenu = useRef<HTMLDivElement | null>(null)\n\n  const closeMenu = () => {\n    setTimeout(() => {\n      setOpen(false)\n    }, 100)\n  }\n\n  const onClick = () => {\n    if (open) {\n      return refMenu.current?.blur?.()\n    }\n    setOpen(true)\n  }\n\n  const onLogout = () => {\n    removeToken()\n    navigate('/login')\n  }\n\n  const onNavigateAccount = () => {\n    navigate('/account')\n  }\n\n  return (\n    <HeaderWrapper>\n      <BoxWrapper>\n        <Image src=\"/static/favicon.ico\" alt=\"logo\" />\n        <TitleLogo>Studio</TitleLogo>\n      </BoxWrapper>\n      <BoxMenu ref={refMenu} tabIndex={1} onClick={onClick} onBlur={closeMenu}>\n        <AccountCircleIcon />\n        {open && (\n          <BoxDropdown>\n            <BoxInfo>\n              <AccountCircleIcon />\n              <Box>\n                <Typography>{user?.display_name}</Typography>\n                <Typography>{user?.email}</Typography>\n              </Box>\n            </BoxInfo>\n            <BoxMenuItem onClick={onNavigateAccount}>\n              <PortraitIcon /> Account Profile\n            </BoxMenuItem>\n            <BoxMenuItemLogout onClick={onLogout}>\n              SIGN OUT\n            </BoxMenuItemLogout>\n          </BoxDropdown>\n        )}\n      </BoxMenu>\n    </HeaderWrapper>\n  )\n}\n\nconst BoxDropdown = styled(Box)({\n  position: 'absolute',\n  backgroundColor: '#ffffff',\n  padding: '8px 16px 0',\n  top: 30,\n  right: 0,\n  listStyleType: 'none',\n  backgroundClip: 'padding-box',\n  borderRadius: 3,\n  outline: 'none',\n  boxShadow:\n    '0 6px 16px 0 rgb(0 0 0 / 8%), 0 3px 6px -4px rgb(0 0 0 / 12%), 0 9px 28px 8px rgb(0 0 0 / 5%)',\n  cursor: 'default',\n  zIndex: 1,\n  minWidth: 250,\n})\n\nconst Image = styled('img')({\n  height: 46,\n})\n\nconst BoxWrapper = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 8,\n})\n\nconst BoxMenu = styled(BoxWrapper)({\n  cursor: 'pointer',\n  position: 'relative',\n  userSelect: 'none',\n})\n\nconst BoxInfo = styled(BoxWrapper)({\n  borderBottom: `1px solid #e7e7e7`,\n  padding: '8px 0',\n  cursor: 'default',\n})\n\nconst BoxMenuItem = styled(BoxWrapper)({\n  padding: '8px 0',\n  cursor: 'pointer',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.05) translateX(5px)',\n  },\n})\n\nconst BoxMenuItemLogout = styled(BoxMenuItem)({\n  color: '#1a73e8',\n  fontWeight: 600,\n  marginTop: 30,\n  justifyContent: 'flex-end',\n  '&:hover': {\n    transform: 'scale(1.02)',\n  },\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nconst HeaderWrapper = styled(Box)({\n  height: 48,\n  backgroundColor: '#E1DEDB',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  color: 'rgba(0, 0, 0, 0.87)',\n  boxShadow:\n    '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n  position: 'fixed',\n  width: 'calc(100% - 32px)',\n  padding: '0 16px',\n  zIndex: 9999,\n})\n\nexport default Header\n","import axiosLibrary from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { getExToken, getToken } from 'utils/auth'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    config.headers.ExToken = getExToken()\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\n\nexport default axios","import axios from 'components/utils/axios'\n\nexport const login = async (data: { email: string; password: string }) => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const getMe = async () => {\n  const response = await axios.get('/auth/me')\n  return response.data\n}\n\nexport const listUser = async (query?: object) => {\n  const response = await axios.get('/admin/user', { params: query })\n  return response.data\n}\n\nexport const createUser = async (data: object) => {\n  const response = await axios.post(`/admin/user`, data)\n  return response.data\n}\n\nexport const editUser = async (userId: string | number, data: object) => {\n  const response = await axios.put(`/admin/user/${userId}`, data)\n  return response.data\n}\n\nexport const deleteUser = async (userId: string | number) => {\n  const response = await axios.delete(`/admin/user/${userId}`)\n  return response.data\n}\n\nexport const resetPassword = async (email: string) => {\n  const response = await axios.post(`/admin/user/send_reset_password?email=${email}`, email)\n  return response.data\n}\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useEffect, useState } from 'react'\nimport Header from './Header'\nimport { KeyboardBackspace } from '@mui/icons-material'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { User, UserContext, useUser } from 'providers'\nimport {\n  getToken,\n  isAdmin,\n  removeExToken,\n  removeToken,\n} from 'utils/auth'\nimport { getMe } from 'api/auth'\n\nexport const drawerWidth = 240\n\nconst ignorePaths = ['/login', '/account-delete', '/reset-password']\n\nconst Layout: FC = ({ children }) => {\n  const [user, setUser] = useState()\n  const location = useLocation()\n  const [width, setWidth] = useState(drawerWidth)\n  const navigate = useNavigate()\n  const onResize = () => {\n    setWidth(width === drawerWidth ? 54 : drawerWidth)\n  }\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname])\n\n  const checkkAuth = async () => {\n    if (user) return\n    const token = getToken()\n    try {\n      if (token) {\n        const data = await getMe()\n        setUser(data)\n        if (['/login', '/reset-password'].includes(window.location.pathname)) {\n          navigate('/')\n        }\n        return\n      }\n      if (\n        // !auth.currentUser &&\n        !['/login', '/reset-password'].includes(window.location.pathname)\n      ) {\n        navigate('/login')\n      }\n    } catch {\n      removeToken()\n      removeExToken()\n      navigate('/login')\n    }\n  }\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <LayoutWrapper>\n        {ignorePaths.includes(location.pathname) ? null : <Header />}\n        <ContentBodyWrapper>\n          {ignorePaths.includes(location.pathname) ? null : (\n            <MenuLeft onResize={onResize} width={width} />\n          )}\n          <ChildrenWrapper\n            style={{\n              width: `calc(100% - ${\n                ignorePaths.includes(location.pathname) ? 0 : width + 10\n              }px)`,\n              height: '100%',\n              overflow: 'auto',\n            }}\n          >\n            {children}\n          </ChildrenWrapper>\n        </ContentBodyWrapper>\n      </LayoutWrapper>\n    </UserContext.Provider>\n  )\n}\n\nconst MenuLeft: FC<{ onResize: () => void; width: number }> = ({\n  onResize,\n  width,\n}) => {\n  const { user } = useUser()\n  const { pathname } = useLocation()\n  const isClose = width !== drawerWidth\n  return (\n    <MenuLeftWrapper style={{ width, minWidth: width }}>\n      <BoxBack>\n        <ButtonBack\n          onClick={onResize}\n          style={{ transform: `rotate(${width === drawerWidth ? 0 : 180}deg)` }}\n        >\n          <BoxDivider />\n          <KeyboardBackspaceIcon />\n        </ButtonBack>\n      </BoxBack>\n      <MenuList>\n        <LinkWrapper to=\"/\">\n          <MenuItem isClose={isClose} active={pathname === '/'}>\n            <HomeIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Dashboard\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/database\">\n          <MenuItem isClose={isClose} active={pathname === '/database'}>\n            <StorageIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Database\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/projects\">\n          <MenuItem isClose={isClose} active={pathname.includes('/projects')}>\n            <SourceIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Projects\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        {isAdmin(user?.role) ? (\n          <LinkWrapper to=\"/account-manager\">\n            <MenuItem\n              isClose={isClose}\n              active={pathname === '/account-manager'}\n            >\n              <GroupIcon />\n              <TypographyMenu\n                style={{ opacity: Number(width === drawerWidth) }}\n              >\n                Account Manager\n              </TypographyMenu>\n            </MenuItem>\n          </LinkWrapper>\n        ) : null}\n      </MenuList>\n    </MenuLeftWrapper>\n  )\n}\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: 48,\n  height: 'calc(100% - 48px)',\n  paddingRight: 10,\n  overflow: 'hidden',\n}))\n\nconst ChildrenWrapper = styled(Box)(() => ({\n  height: 'calc(100% - 10px)',\n  display: 'flex',\n  paddingTop: 10,\n  paddingLeft: 10,\n}))\n\nconst MenuLeftWrapper = styled(Box)({\n  height: '100%',\n  backgroundColor: '#283237',\n  overflow: 'auto',\n  transition: 'all 0.3s',\n})\n\nconst BoxBack = styled(Box)({\n  width: '100%',\n  height: 54,\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonBack = styled(Box)({\n  height: 54,\n  width: 54,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n})\n\nconst BoxDivider = styled(Box)({\n  height: 15,\n  width: 1,\n  backgroundColor: '#ffffff',\n  marginRight: -2,\n})\n\nconst KeyboardBackspaceIcon = styled(KeyboardBackspace)({\n  color: '#ffffff',\n  fontSize: 20,\n})\n\nconst MenuList = styled('ul')({\n  margin: 0,\n  padding: 0,\n})\n\nconst MenuItem = styled('li', {\n  shouldForwardProp: (props) => props !== 'isClose' && props !== 'active',\n})<{ isClose: boolean; active: boolean }>(({ isClose, active }) => ({\n  padding: '0 15px',\n  color: '#ffffff',\n  listStyle: 'none',\n  height: 38,\n  minHeight: 38,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  width: 'calc(100% - 30px)',\n  minWidth: 'max-content',\n  transition: 'all 0.3s',\n  cursor: 'pointer',\n  backgroundColor: active ? 'rgba(255,255,255,0.4) !important' : 'transparent',\n  '&:hover': {\n    transform: isClose\n      ? 'scale(1.05) translateX(2px)'\n      : 'scale(1.05) translateX(10px)',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n  },\n}))\n\nconst TypographyMenu = styled(Typography)({\n  lineHeight: '20px',\n  marginTop: 4,\n  fontWeight: 500,\n  transition: 'opacity 0.3s',\n})\n\nexport default Layout\n","import { Box, styled, Typography } from '@mui/material'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Link } from 'react-router-dom'\nimport { useUser } from 'providers'\nimport { isAdmin } from 'utils/auth'\n\nconst Dashboard = () => {\n  const { user } = useUser()\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/database\">\n            <BoxMenu>\n              <Box>\n                <SourceIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/projects\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Projects</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/account\">\n            <BoxMenu>\n              <Box>\n                <AccountCircleIcon fontSize=\"large\" />\n                <TitleMenu>Account</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {isAdmin(user?.role) ? (\n            <LinkWrapper to=\"/account-manager\">\n              <BoxMenu>\n                <Box>\n                  <GroupIcon fontSize=\"large\" />\n                  <TitleMenu>Account Manager</TitleMenu>\n                </Box>\n              </BoxMenu>\n            </LinkWrapper>\n          ) : null}\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { styled } from '@mui/material'\n\nexport const Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n","import {Box, keyframes, styled} from \"@mui/material\";\n\nconst Loading = () => {\n    return (\n        <LoaderWrapper>\n            <Loader />\n        </LoaderWrapper>\n    )\n}\n\nconst LoaderWrapper = styled(Box)(({theme}) => ({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    position: 'fixed',\n    backgroundColor: 'rgba(255,255,255,0.6)',\n    zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme })=> ({\n    display: 'block',\n    width: 48,\n    height: 48,\n    borderRadius: '50%',\n    position: 'relative',\n    zIndex: 100,\n    top: 'calc(50% - 24px)',\n    left: 'calc(50% - 24px)',\n    animation: `${rotate} 1s linear infinite`,\n    '&:before': {\n        content: \"''\",\n        boxSizing: 'border-box',\n        position: 'absolute',\n        inset: 0,\n        borderRadius: '50%',\n        border: '3px solid rgba(0,0,0,0.8)',\n        animation: `${prixClipFix} 2s linear infinite`\n    }\n}))\n\nexport default Loading\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\nimport Loading from \"../common/Loading\";\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description?: string\n  isLoading?: boolean\n}\nconst ModalDeleteAccount: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description || 'Delete account will erase all of your data.'}This\n            operation cannot be undone. To continue, type \"\n            <span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <ButtonConfirm onClick={onConfirm}>{titleSubmit}</ButtonConfirm>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default ModalDeleteAccount\n","import { Box, styled, Typography } from '@mui/material'\nimport { FC, useCallback } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport { ProjectType } from 'store/slice/Project/ProjectType'\n\nexport type Column = {\n  width?: number | string\n  title: string\n  dataIndex?: string\n  name?: string\n  align?: string\n  filter?: boolean\n  render?: (\n    item: ProjectType,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined\n}\n\ntype TableComponentProps = {\n  data?: ProjectType[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  className?: string\n  columns?: Column[]\n  paginate?: {\n    page: number\n    total: number\n    page_size: number\n    breakLabel?: string\n    nextLabel?: string\n    previousLabel?: string\n    pageRangeDisplayed?: number\n    renderOnZeroPageCount?: string\n    onPageChange?: (selectedItem: { selected: number }) => any\n  }\n}\n\nconst TableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    data = [],\n    columns = [],\n    paginate,\n    className,\n    orderBy,\n    orderKey,\n  } = props\n  const pageCount = (paginate?.total || 0) / (paginate?.page_size || 1)\n\n  const renderCol = useCallback(\n    (col: Column, item: ProjectType, index: number) => {\n      const value = item[(col.name || col.dataIndex || '') as keyof ProjectType]\n      if (col.render) return col.render(item, value, index)\n      return value || null\n    },\n    [],\n  )\n\n  return (\n    <Box className={className}>\n      <Table>\n        <Thead>\n          <Tr>\n            {columns.map((col, iCol) => {\n              const nameCol = col.name || col.dataIndex || ''\n              return (\n                <Th\n                  style={{ width: col.width, textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {col.title}\n                  <ArrowDownwardIconOrder\n                    style={{\n                      transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                      opacity:\n                        orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                  />\n                </Th>\n              )\n            })}\n          </Tr>\n        </Thead>\n        <TBody>\n          {data.map((item, index) => (\n            <Tr key={item.id || index}>\n              {columns.map((col, iCol) => (\n                <Td\n                  style={{ textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {renderCol(col, item, index)}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n        </TBody>\n      </Table>\n      {!data.length ? <NoData>No Data</NoData> : null}\n      {pageCount ? (\n        <MyPaginate\n          disableInitialCallback\n          marginPagesDisplayed={3}\n          pageRangeDisplayed={3}\n          breakLabel={'...'}\n          pageCount={pageCount}\n          previousLabel={<KeyboardArrowLeftIcon />}\n          nextLabel={<ChevronRightIcon />}\n          {...paginate}\n        />\n      ) : null}\n    </Box>\n  )\n}\n\nconst MyPaginate = styled(ReactPaginate)<any>`\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  list-style-type: none;\n  padding: 1rem 0;\n  li a {\n    padding: 0.6rem 1rem;\n    cursor: pointer;\n  }\n  li.previous,\n  li.next {\n    margin-top: -2px;\n  }\n  li.previous.disabled,\n  li.next.disabled {\n    opacity: 0.4;\n  }\n  li.previous a,\n  li.next a,\n  li.break a {\n    border-color: transparent;\n  }\n  li.active a {\n    background-color: #0366d6;\n    border-color: transparent;\n    color: white;\n    min-width: 32px;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n  li.selected {\n    color: #1677ff;\n    font-weight: 600;\n  }\n`\n\nconst Table = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  maxWidth: 155,\n  wordBreak: 'break-word',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nexport default TableComponent\n","import { InputProps, styled, Typography } from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n  errorMessage: string\n  value?: string\n}\n\nconst InputError = ({\n  errorMessage,\n  onChange,\n  value,\n  type,\n  onBlur,\n  name,\n}: InputErrorProps) => {\n  return (\n    <>\n      <Input\n        autoComplete=\"Off\"\n        error={!!errorMessage}\n        onChange={onChange}\n        value={value}\n        type={type}\n        name={name}\n        onBlur={onBlur}\n      />\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\n\nexport default InputError\n","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  name?: string\n  options: {\n    code: number\n    name: string\n  }[]\n}\n\nconst SelectError: FC<SelectErrorProps> = ({\n  value,\n  onChange,\n  onBlur,\n  errorMessage,\n  options,\n  name,\n}) => {\n  return (\n    <>\n      <SelectModal\n        name={name}\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: { code: number, name: string }) => {\n          return (\n            <MenuItem key={item.code} value={item.code}>\n              {item.name}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import { Box, Button, SelectChangeEvent, styled } from '@mui/material'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport TableComponent, { Column } from 'components/Table'\nimport {\n  ChangeEvent,\n  FC,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InputError from '../../components/common/InputError'\nimport SelectError from '../../components/common/SelectError'\nimport { createUser, deleteUser, editUser, listUser } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ProjectType } from 'store/slice/Project/ProjectType'\nimport { isAdmin, optionsRole } from 'utils/auth'\nimport Loading from '../../components/common/Loading'\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setIsOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role: '',\n  lab: '',\n  display_name: '',\n  confirmPassword: '',\n}\n\nconst ModalComponent: FC<ModalComponentProps> = ({\n  onSubmitEdit,\n  setIsOpenModal,\n  dataEdit,\n}) => {\n  const regex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  const regexPassword =\n    /^(?=.*\\d)(?=.*[!#$%&()*+,-./@_|])(?=.*[a-zA-Z]).{6,255}$/\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n    dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255, value)\n    if (error) return error\n    if (!regex.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (\n    value: string,\n    isConfirm: boolean = false,\n    values?: { [key: string]: string },\n  ): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255, value)\n    if (errorLength) {\n      return errorLength\n    }\n    let datas = values || formData\n    if (!regexPassword.test(value) && value) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if (isConfirm && datas.password !== value && value) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number, value?: string) => {\n    if (!value) return 'This field is required'\n    return validateLength(name, length, value)\n  }\n\n  const validateLength = (name: string, length: number, value?: string) => {\n    if (value && value.length > length)\n      return `The text may not be longer than ${length} characters`\n    if (formData[name]?.length && value && value.length > length) {\n      return `The text may not be longer than ${length} characters`\n    }\n    return ''\n  }\n\n  const validateForm = (): { [key: string]: string } => {\n    const errorName = validateField('display_name', 100, formData.display_name)\n    const errorEmail = validateEmail(formData.email)\n    const errorLab = validateField('lab', 100, formData.lab)\n    const errorRole = validateField('role', 50, formData.role)\n    const errorPassword = validatePassword(formData.password)\n    const errorConfirmPassword = validatePassword(\n      formData.confirmPassword,\n      true,\n    )\n    return {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      display_name: errorName,\n      lab: errorLab,\n      role: errorRole,\n    }\n  }\n\n  const onChangeData = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | SelectChangeEvent,\n    length: number,\n  ) => {\n    const { value, name } = e.target\n    const newDatas = { ...formData, [name]: value }\n    setFormData(newDatas)\n    let error: string =\n      name === 'email'\n        ? validateEmail(value)\n        : validateField(name, length, value)\n    let errorConfirm = errors.confirmPassword\n    if (name.toLowerCase().includes('password')) {\n      error = validatePassword(value, name === 'confirmPassword', newDatas)\n      if (name !== 'confirmPassword' && formData.confirmPassword) {\n        errorConfirm = validatePassword(\n          newDatas.confirmPassword,\n          true,\n          newDatas,\n        )\n      }\n    }\n    setErrors({ ...errors, confirmPassword: errorConfirm, [name]: error })\n  }\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const newErrors = validateForm()\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.uid, formData)\n      setTimeout(() => {\n        if (!dataEdit?.uid) {\n          alert('Your account has been created successfully!')\n        } else {\n          alert('Your account has been successfully updated!')\n        }\n      }, 1)\n      setIsOpenModal(false)\n    } catch {\n      if (!dataEdit?.uid) {\n        setTimeout(() => {\n          alert('This email already exists!')\n        }, 300)\n      }\n    } finally {\n      setIsDisabled(false)\n    }\n  }\n  const onCancel = () => {\n    setIsOpenModal(false)\n  }\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.uid ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Lab: </LabelModal>\n          <InputError\n            name=\"lab\"\n            value={formData?.lab || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.lab}\n          />\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            name=\"display_name\"\n            value={formData?.display_name || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.display_name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role || ''}\n            options={optionsRole}\n            name=\"role\"\n            onChange={(e) => onChangeData(e, 50)}\n            onBlur={(e) => onChangeData(e, 50)}\n            errorMessage={errors.role}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            name=\"email\"\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 255)}\n            onBlur={(e) => onChangeData(e, 255)}\n            errorMessage={errors.email}\n          />\n          {!dataEdit?.uid ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                name=\"password\"\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                name=\"confirmPassword\"\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n        </ButtonModal>\n      </ModalBox>\n      {isDisabled ? <Loading /> : null}\n    </Modal>\n  )\n}\nconst AccountManager = () => {\n  const [openDelete, setOpenDelete] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [dataEdit, setDataEdit] = useState({})\n  const [idDel, setIdDel] = useState<string | undefined>()\n  const [data, setData] = useState<any[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [paginate, setPaginate] = useState({\n    total: 0,\n    per_page: 10,\n    page: -1,\n    next_page_token: [],\n  })\n  const { user } = useUser()\n\n  useEffect(() => {\n    getList()\n    //eslint-disable-next-line\n  }, [])\n\n  const getList = async (page: number = 0) => {\n    const query: { [key: string]: string | number } = {\n      offset: paginate.per_page * page,\n    }\n    if (paginate.next_page_token[page - 1]) {\n      query.next_page_token = paginate.next_page_token[page - 1]\n    }\n    const data = await listUser(query)\n    const nextPageToken: string[] = paginate.next_page_token\n    if (page > paginate.page) {\n      nextPageToken.push(data.next_page_token)\n    }\n    const newData = data.data.map((item: any) => {\n      const name = optionsRole.find((role) => item.role === role.code)?.name\n      return { ...item, role: name }\n    })\n    setData(newData)\n    setPaginate((pre) => ({\n      ...pre,\n      total: data.total_page * paginate.per_page,\n      next_page_token: nextPageToken as any,\n      page,\n    }))\n  }\n\n  const onOpenModal = () => {\n    setIsOpenModal(true)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = (id?: string | number) => {\n    setIdDel(String(id))\n    setOpenDelete(true)\n  }\n\n  const onForgotPassword = (data: ProjectType) => {\n    const code = optionsRole.find(\n      (role) => String(role.name) === String(data.role),\n    )?.code\n    //todo call api\n    setDataEdit({ ...data, role: code })\n    setIsOpenModal(true)\n  }\n\n  const onDelete = async () => {\n    if (idDel === undefined) return\n    setIsLoading(true)\n    try {\n      await deleteUser(idDel)\n      setIsLoading(false)\n      setTimeout(() => {\n        alert('Your account has been successfully deleted!')\n      }, 100)\n      handleCloseDelete()\n      setIdDel(undefined)\n      setOpenDelete(false)\n      getList()\n      clearTimeout()\n    } catch {\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    if (id !== undefined) {\n      await editUser(id, data)\n      setIsOpenModal(false)\n    } else {\n      await createUser(data)\n    }\n    await getList(id !== undefined ? paginate.page : 0)\n    return undefined\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'UID', name: 'uid' },\n      { title: 'Lab', name: 'lab' },\n      { title: 'Name', name: 'display_name' },\n      { title: 'Role', name: 'role' },\n      { title: 'Mail', name: 'email' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data) => {\n          if (data?.uid === user?.uid) return null\n          return (\n            <>\n              <ALink\n                sx={{ color: 'red' }}\n                onClick={() => onForgotPassword(data)}\n              >\n                <EditIcon sx={{ color: 'black' }} />\n              </ALink>\n              <ALink\n                sx={{ ml: 1.25 }}\n                onClick={() => onConfirmDelete(data?.uid)}\n              >\n                <DeleteIcon sx={{ color: 'red' }} />\n              </ALink>\n            </>\n          )\n        },\n      },\n    ],\n    [user?.uid],\n  )\n\n  if (!isAdmin(user?.role)) {\n    return null\n  }\n\n  return (\n    <AccountManagerWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Account Manager</h1>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        isLoading={isLoading}\n        onSubmit={onDelete}\n      />\n      <BoxButton>\n        <ButtonAdd onClick={() => onOpenModal()} variant=\"contained\">\n          Add\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{\n          total: paginate.total,\n          page: paginate.page,\n          page_size: paginate.per_page,\n          onPageChange: ({ selected }) => {\n            getList(selected)\n          },\n        }}\n        data={data}\n        columns={columns}\n      />\n      {isOpenModal ? (\n        <ModalComponent\n          onSubmitEdit={onSubmitEdit}\n          setIsOpenModal={(flag) => {\n            setIsOpenModal(flag)\n            if (!flag) {\n              setDataEdit({})\n            }\n          }}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst BoxButton = styled(Box)({\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  width: 100,\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  height: 550,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport InputPassword from 'components/InputPassword'\nimport { ChangeEvent, FC, useState } from 'react'\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n}\n\nconst regexPassword = /^(?=.*\\d)(?=.*[!#$%&()*+,-./@_|])(?=.*[a-zA-Z]).{6,255}$/\n\nconst ModalChangePassword: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    if(name === 'new_password' && values.confirm_password) {\n      if(!validate?.(value)) {\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: value !== values.confirm_password ? 'Passwords do not match' : ''})\n        return\n      }\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: ''})\n        return\n    }\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.new_password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, new_password } = values\n    if (!new_password) setErrors((pre) => ({ ...pre, new_password: 'This field is required' }))\n    if (reEnter && reEnter !== new_password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              onBlur={(e) => onChangeValue(e, validatePassword)}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n              onBlur={(e) => onChangeValue(e, validateReEnter)}\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={onSubmit}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onClose}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ModalChangePassword\n","import { Box, Button, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport ModalChangePassword from 'components/ModalChangePassword'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { useUser } from 'providers'\nimport { useState } from 'react'\nimport {optionsRole} from \"../../utils/auth\";\n\nconst Account = () => {\n  const { user } = useUser()\n  const [isEditName, setIsEditName] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [openChangePw, setOpenChangePw] = useState(false)\n\n  const onEditName = () => {\n    setIsEditName(false)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = () => {\n    setOpenDelete(true)\n  }\n\n  const onDelete = () => {\n    //todo call api\n    handleCloseDelete()\n  }\n\n  const handleCloseChangePw = () => {\n    setOpenChangePw(false)\n  }\n\n  const onConfirmChangePw = () => {\n    setOpenChangePw(true)\n  }\n\n  const onChangePw = () => {\n    //todo call api\n    handleCloseChangePw()\n  }\n\n  return (\n    <AccountWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ModalChangePassword\n        onSubmit={onChangePw}\n        open={openChangePw}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData sx={{ marginTop: isEditName ? -2 : 0 }}>Full name</TitleData>\n        <BoxData>\n          {isEditName ? (\n            <Input\n              autoFocus\n              defaultValue={user?.display_name || ''}\n              onBlur={onEditName}\n              placeholder=\"Full name\"\n            />\n          ) : (\n            <>\n              {user?.display_name || \"--\"}\n              <Button sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n                Edit\n              </Button>\n            </>\n          )}\n        </BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{optionsRole.find(role => String(role.code) === String(user?.role))?.name}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10 }}>\n        <ButtonSubmit onClick={onConfirmChangePw}>Change Password</ButtonSubmit>\n        <ButtonSubmit onClick={onConfirmDelete}>Delete Account</ButtonSubmit>\n      </BoxFlex>\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n})\n\nconst ButtonSubmit = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Project } from './ProjectType'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\n\nconst initialState: Project = {\n  projects: [\n    {\n      id: '1',\n      name: 'prj name 1',\n      created_time: '2023-03-10 09:19:38',\n      updated_time: '2023-03-10 09:19:38',\n      image_count: 3,\n      project_type: 0,\n    },\n    {\n      id: '2',\n      name: 'prj name 2',\n      created_time: '2023-03-10 09:19:38',\n      updated_time: '2023-03-10 09:19:38',\n      image_count: 3,\n      project_type: 1,\n    },\n  ],\n  currentProject: {\n    id: '1',\n  },\n}\n\nexport const projectSlice = createSlice({\n  name: PROJECT_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteProject: (\n      state,\n      action: PayloadAction<string | number | undefined>,\n    ) => {\n      state.projects = state.projects.filter(\n        (project) => project.id !== action.payload,\n      )\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchExperiment.pending, (state, action) => {\n      state.currentProject = {\n        id: action.meta.arg,\n      }\n    })\n  },\n})\n\nexport const { deleteProject } = projectSlice.actions\nexport default projectSlice.reducer\n","export const PROJECT_SLICE_NAME = 'project'\n\nexport type Project = {\n  projects: ProjectType[]\n  currentProject?: {\n    id: string\n  }\n}\n\nexport type ProjectType = {\n  id: number | string\n  uid?: number | string\n  name: string\n  project_type: number\n  image_count: number\n  created_time: string\n  updated_time: string\n  role?: string | number\n}\n","import { Box, Button, styled } from '@mui/material'\nimport { useCallback, useMemo, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TableComponent, { Column } from '../../components/Table'\nimport { useNavigate } from 'react-router-dom'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { selectProjectList } from 'store/slice/Project/ProjectSelector'\nimport { deleteProject } from 'store/slice/Project/ProjectSlice'\n\nconst Projects = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const projects = useSelector(selectProjectList)\n  const [idDelete, setIdDelete] = useState<number | string | undefined>()\n\n  const onEdit = useCallback((id: number | string) => {\n    navigate(`/projects/new-project?id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onWorkflow = useCallback((id: number | string) => {\n    console.log('Workflow: ', id)\n    navigate(`/projects/workflow?tab=0&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onResults = useCallback((id: number | string) => {\n    console.log('Result: ', id)\n    navigate(`/projects/workflow?tab=1&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addNewProject = useCallback(() => {\n    navigate('/projects/new-project')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onDelete = (id: number | string) => {\n    setIdDelete(id)\n  }\n\n  const onDeleteSubmit = () => {\n    const id = idDelete\n    setIdDelete(undefined)\n    dispatch(deleteProject(id))\n  }\n\n  const handleCloseDelete = () => {\n    setIdDelete(undefined)\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'Project Name', name: 'name' },\n      { title: 'Created', name: 'created_time' },\n      { title: 'Updated', name: 'updated_time' },\n      { title: 'Images', name: 'image_count', align: 'center' },\n      {\n        title: '',\n        name: 'action',\n        width: 400,\n        render: (data) => {\n          return (\n            <BoxButton>\n              <ButtonAdd variant=\"contained\" onClick={() => onEdit(data.id)}>\n                Edit\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onWorkflow(data.id)}\n              >\n                Workflow\n              </ButtonAdd>\n              <ButtonAdd variant=\"contained\" onClick={() => onResults(data.id)}>\n                Result\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onDelete(data.id)}\n                sx={{ backgroundColor: 'red !important' }}\n              >\n                Del\n              </ButtonAdd>\n            </BoxButton>\n          )\n        },\n      },\n    ],\n    [onWorkflow, onResults, onEdit],\n  )\n  return (\n    <ProjectsWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Project\"\n        description=\"Delete My Project\"\n        onClose={handleCloseDelete}\n        open={!!idDelete}\n        onSubmit={onDeleteSubmit}\n      />\n      <ProjectsTitle>Projects</ProjectsTitle>\n      <BoxButton>\n        <ButtonAdd\n          variant=\"contained\"\n          onClick={addNewProject}\n          sx={{ marginBottom: 2 }}\n        >\n          Add Project\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{ total: 100, page: 1, page_size: 10 }}\n        data={projects}\n        columns={columns}\n      />\n    </ProjectsWrapper>\n  )\n}\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst ProjectsTitle = styled('h1')(({ theme }) => ({}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  minWidth: 80,\n  letterSpacing: 'unset',\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nexport default Projects\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  MouseEvent as MouseEventReact,\n  FC,\n  Fragment,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport {\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n} from 'pages/Database'\n\ntype Object = {\n  [key: string]: Object | string\n}\n\nexport type Column = {\n  width?: number\n  title: string\n  dataIndex?: string\n  name?: string\n  child?: string\n  filter?: boolean\n  render?: (\n    item?: RecordDatabase | RecordList | ImagesDatabase,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined | string | number\n}\n\ntype TableComponentProps = {\n  data?: (RecordDatabase | RecordList)[]\n  className?: string\n  columns?: Column[]\n  orderBy?: 'ASC' | 'DESC' | ''\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: 'ASC' | 'DESC' | '') => void\n  rowClick?: (row: ImagesDatabase) => void\n  onClickEvent?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (row?: ImagesDatabase[]) => void\n  onBeginDrag?: () => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  defaultExpand?: boolean\n}\n\ntype RenderColumnProps = {\n  data: RecordDatabase | SessionsDatabase | ImagesDatabase | RecordList\n  columns: Column[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: string) => void\n  rowClick?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    row?: ImagesDatabase[],\n  ) => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  recordIndex: number\n  defaultExpand?: boolean\n  dataShow?: boolean\n  beginDrag?: boolean\n  draggableProps?: boolean\n  allowMutilKey?: boolean\n  drags: ImagesDatabase[]\n  onMouseDown: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => void\n}\n\nconst renderCol = (\n  col: Column,\n  item: ImagesDatabase | RecordDatabase | RecordList,\n  index: number,\n) => {\n  const key = col.name || col.dataIndex || ''\n  let value: ImagesDatabase | RecordDatabase | RecordList | string = item\n  if (key.includes('.')) {\n    const keys = key.split('.')\n    keys.forEach((k) => {\n      if (k === 'voxel_size' || k === 'size') {\n        value = JSON.stringify((value as unknown as Object)?.[k])\n      } else {\n        value = (value as unknown as Object)?.[k] as\n          | ImagesDatabase\n          | RecordDatabase\n          | RecordList\n          | string\n      }\n    })\n  } else value = (item as unknown as Object)[key] as string\n  if (col.render) return col.render(item, value, index)\n  return typeof value === 'object' || Array.isArray(value) ? null : value\n}\n\nconst RenderColumn = (props: RenderColumnProps) => {\n  const { columns, data, recordIndex, rowClick, drags, onMouseDown } = props\n  const { draggable, onDrag } = props\n  const [openChild, setOpenChild] = useState(true)\n  const [openChildParent, setOpenChildPrent] = useState(true)\n  const [openSubjects, setOpenSubjects] = useState<string[]>(\n    (data as RecordDatabase)?.subjects?.map?.((e) => e.id) || [],\n  )\n\n  const isDrag = drags.find((drag) => {\n    return (\n      drag.id === data.id &&\n      drag.session_id === (data as ImagesDatabase).session_id &&\n      drag.datatype_index === (data as ImagesDatabase).datatype_index\n    )\n  })\n\n  const onDragEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    return onDrag?.(event, [image])\n  }\n\n  const onSetOpenSubject = (subId: string) => {\n    if (openSubjects.includes(subId)) {\n      setOpenSubjects(openSubjects.filter((o) => o !== subId))\n    } else setOpenSubjects([...openSubjects, subId])\n  }\n\n  if (\n    (data as RecordDatabase)?.subjects?.length ||\n    (data as SessionsDatabase).datatypes?.length\n  ) {\n    return (\n      <Fragment>\n        <Tr\n          style={{\n            transition: 'all 0.3s',\n            backgroundColor: 'rgb(238, 238, 238)',\n          }}\n        >\n          {columns.map((column) => {\n            const key = column.name || column.dataIndex || ''\n            return (\n              <Td\n                key={`col_${column.name || column.dataIndex}`}\n                onClick={() =>\n                  key === 'session' && setOpenChildPrent(!openChildParent)\n                }\n              >\n                {key === 'action' ? null : (\n                  <BoxCenter>\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    )}\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    ) &&\n                      key === 'session' && (\n                        <ArrowDropDownIcon\n                          style={{\n                            transform: `rotate(${\n                              !openChildParent ? -180 : 0\n                            }deg)`,\n                          }}\n                        />\n                      )}\n                  </BoxCenter>\n                )}\n              </Td>\n            )\n          })}\n        </Tr>\n        {openChildParent &&\n          (data as RecordDatabase).subjects?.map((sub, subject_index) => {\n            return (\n              <Fragment key={sub.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'subject' && onSetOpenSubject(sub.id)\n                        }\n                      >\n                        {key === 'subject' ? (\n                          <BoxCenter>\n                            {sub.label}\n                            {sub.sessions?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openSubjects.includes(sub.id) ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openSubjects.includes(sub.id) &&\n                  sub.sessions.map((session, session_index) => (\n                    <RenderColumn\n                      {...props}\n                      key={session.id}\n                      data={\n                        {\n                          ...session,\n                          session: session.label,\n                          session_index,\n                          subject_index,\n                        } as SessionsDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n        {openChildParent &&\n          (data as SessionsDatabase).datatypes?.map((type, ii) => {\n            return (\n              <Fragment key={type.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'datatype' && setOpenChild(!openChild)\n                        }\n                      >\n                        {key === 'datatype' ? (\n                          <BoxCenter>\n                            {type.label}\n                            {type.images?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openChild ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openChild &&\n                  type.images.map((image, index) => (\n                    <RenderColumn\n                      {...props}\n                      key={`row_image_${image.id}_${index}`}\n                      data={\n                        {\n                          ...image,\n                          session_index: (data as SessionsDatabase)\n                            .session_index,\n                          subject_index: (data as SessionsDatabase)\n                            .subject_index,\n                          session_id: data.id,\n                          datatype_index: ii,\n                          image_index: index,\n                          datatype_label: type.label,\n                          subject_id: (data as SessionsDatabase).parent_id,\n                          record_index: recordIndex,\n                        } as ImagesDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n      </Fragment>\n    )\n  }\n\n  return (\n    <Tr\n      onClick={(e) => rowClick?.(e, data as ImagesDatabase)}\n      draggable={draggable}\n      onDragStart={(e) => onDragEvent?.(e, data as ImagesDatabase)}\n      onMouseDown={(e) => onMouseDown(e, data as ImagesDatabase)}\n      style={{\n        transition: 'all 0.3s',\n        backgroundColor: isDrag ? 'rgba(25,118,210,0.15)' : '',\n      }}\n    >\n      {columns.map((column) => {\n        return (\n          <Td key={`col_${column.name || column.dataIndex}`}>\n            {renderCol(column, data as ImagesDatabase, recordIndex)}\n          </Td>\n        )\n      })}\n    </Tr>\n  )\n}\n\nconst DatabaseTableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    className,\n    orderKey,\n    orderBy,\n    onSort,\n    draggable,\n    rowClick,\n    onDrag,\n    onDragEnd,\n    onBeginDrag: onBeginDragProps,\n    ...p\n  } = props\n  const { data = [], columns = [] } = props\n  const [drags, setDrags] = useState<ImagesDatabase[]>([])\n  const [mouseMoveRect, setMouseMoveRect] = useState({ pageX: 0, pageY: 0 })\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n\n  const ctrRef = useRef(false)\n  const refTable = useRef<HTMLDivElement | null>(null)\n  const refTdSelect = useRef<{\n    [key: string]: {\n      dom: HTMLTableRowElement\n      tds: { id: number | string; dom: HTMLTableCellElement; html: string }[]\n    }\n  }>({})\n  const mouseStart = useRef<{ pageX: number; pageY: number } | undefined>()\n  const [beginDrag, setBeginDrag] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydownEvent)\n    window.addEventListener('keyup', onKeyupEvent)\n    window.addEventListener('mouseup', onMouseUp)\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('click', onClick)\n    return () => {\n      window.removeEventListener('keydown', onKeyupEvent)\n      window.removeEventListener('keyup', onKeyupEvent)\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('click', onClick)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onKeydownEvent = (event: KeyboardEvent) => {\n    ctrRef.current = event.ctrlKey || event.metaKey\n  }\n\n  const onKeyupEvent = () => {\n    ctrRef.current = false\n  }\n\n  const onClick = (event: MouseEvent) => {\n    if (refTable.current?.contains?.(event.target as Element)) return\n    ctrRef.current = false\n    setDrags([])\n    onDragEnd?.()\n  }\n\n  const onSortHandle = (nameCol: string) => {\n    if (orderKey === nameCol) {\n      let order: 'ASC' | 'DESC' | '' = ''\n      if (orderBy === 'ASC') {\n        order = 'DESC'\n      } else if (!orderBy) {\n        order = 'ASC'\n      }\n      onSort?.(nameCol, order)\n    } else onSort?.(nameCol, 'ASC')\n  }\n\n  const onRowClickEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    const idDom = `${image.id}_${image.datatype_index}_${image.session_id}`\n    if (!ctrRef.current) {\n      if (!timeoutClick.current) {\n        timeoutClick.current = setTimeout(() => {\n          timeoutClick.current = undefined\n        }, 300)\n        if (draggable) {\n          setDrags([image])\n          const tds = event.currentTarget.getElementsByTagName('td')\n          refTdSelect.current[idDom] = {\n            dom: event.currentTarget as unknown as HTMLTableRowElement,\n            tds: [],\n          }\n          for (let i = 0; i < tds.length; i++) {\n            refTdSelect.current[idDom].tds.push({\n              id: tds[i].id,\n              dom: tds[i],\n              html: tds[i].innerHTML,\n            })\n          }\n        }\n        return\n      }\n      return rowClick?.(image)\n    }\n    if (!draggable) return\n    if (\n      drags.find(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      setDrags(\n        drags.filter(\n          (drag: ImagesDatabase) =>\n            drag.id === image.id &&\n            drag.datatype_index === image.datatype_index &&\n            drag.session_index === image.session_index,\n        ),\n      )\n      delete refTdSelect.current[idDom]\n    } else {\n      setDrags([...drags, image])\n      const tds = event.currentTarget.getElementsByTagName('td')\n      refTdSelect.current[idDom] = {\n        dom: event.currentTarget as unknown as HTMLTableRowElement,\n        tds: [],\n      }\n      for (let i = 0; i < tds.length; i++) {\n        refTdSelect.current[idDom].tds.push({\n          id: tds[i].id,\n          dom: tds[i],\n          html: tds[i].innerHTML,\n        })\n      }\n    }\n  }\n\n  const onMouseDown = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    if (\n      !drags.length ||\n      !draggable ||\n      !drags.some(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      return\n    }\n    mouseStart.current = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n    }\n    onBeginDragProps?.()\n    setMouseMoveRect({ pageX: 0, pageY: 0 })\n    onDrag?.(drags)\n  }\n\n  const onMouseUp = () => {\n    mouseStart.current = undefined\n    setBeginDrag(false)\n    setTimeout(() => {\n      onDrag?.(undefined)\n    }, 100)\n  }\n\n  const onMouseMove = (event: MouseEvent) => {\n    if (!mouseStart.current || !draggable || !mouseStart.current) return\n    setBeginDrag(true)\n    setMouseMoveRect({\n      pageX: event.pageX - mouseStart.current.pageX,\n      pageY: event.pageY - mouseStart.current.pageY,\n    })\n  }\n\n  const onBeginDrag = (\n    e: MouseEventReact<HTMLTableRowElement>,\n    image?: ImagesDatabase[],\n  ) => {\n    e.preventDefault()\n    onDrag?.(image)\n  }\n\n  return (\n    <>\n      <TableWrap ref={refTable} className={className}>\n        <DataTable\n          style={{\n            width: columns.reduce((a, b) => a + (Number(b.width) || 110), 0),\n          }}\n        >\n          <Thead>\n            <Tr>\n              {columns.map((col, iCol) => {\n                const nameCol = col.name || col.dataIndex || ''\n                return (\n                  <Th\n                    onClick={() => onSortHandle(nameCol)}\n                    style={{\n                      maxWidth: col.width,\n                      width: col.width,\n                      cursor: 'pointer',\n                    }}\n                    key={col.dataIndex || col.name || iCol}\n                  >\n                    {col.title}\n                    <ArrowDownwardIconOrder\n                      style={{\n                        transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                        opacity:\n                          orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                      }}\n                    />\n                  </Th>\n                )\n              })}\n            </Tr>\n          </Thead>\n          <TBody>\n            {data.map((item, index) => (\n              <RenderColumn\n                allowMutilKey={ctrRef.current}\n                recordIndex={index}\n                columns={columns}\n                {...p}\n                data={item}\n                rowClick={(e, image) => onRowClickEvent(e, image)}\n                onMouseDown={onMouseDown}\n                beginDrag={beginDrag}\n                draggable={false}\n                draggableProps={draggable}\n                key={`row_table_${item.id}_${index}`}\n                drags={drags}\n                onDrag={onBeginDrag}\n                onDragEnd={onDragEnd}\n              />\n            ))}\n          </TBody>\n        </DataTable>\n        {!data.length ? <NoData>No Data</NoData> : null}\n      </TableWrap>\n      {beginDrag &&\n        drags.map((el) => {\n          const rowId = `${el.id}_${el.datatype_index}_${el.session_id}`\n          const trNow = refTdSelect.current[rowId]\n          const { width, height, top, left } =\n            trNow.dom?.getBoundingClientRect()\n          const style = {\n            width,\n            height,\n            top: top + mouseMoveRect.pageY,\n            left: left + mouseMoveRect.pageX,\n          }\n          return (\n            <BoxDrag key={el.id} style={style}>\n              {trNow.tds.map((td, index) => {\n                const { width } = td.dom.getBoundingClientRect()\n                return (\n                  <Box\n                    key={`${rowId}_-${index}`}\n                    style={{ width, padding: 16 }}\n                  >\n                    {td.html}\n                  </Box>\n                )\n              })}\n            </BoxDrag>\n          )\n        })}\n    </>\n  )\n}\n\nconst BoxDrag = styled(Box)({\n  position: 'absolute',\n  background: '#ffffff',\n  backgroundColor: 'rgba(25,118,210,0.15)',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst TableWrap = styled(Box)({\n  overflowX: 'scroll',\n})\n\nconst DataTable = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  userSelect: 'none',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nconst BoxCenter = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport default DatabaseTableComponent\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  FC,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  TouchEvent,\n} from 'react'\n\ntype ChangeDragProps = {\n  title: string\n  value: number\n  onChange: (value: number) => void\n  className?: string\n  max?: number\n  min?: number\n  onChangeMin?: (v: number) => any\n  showInputMax?: boolean\n  showInputMin?: boolean\n}\n\nconst ChangeDrag: FC<ChangeDragProps> = (props) => {\n  const { title, value, onChange, className, max = 2, min = 0 } = props\n  const { onChangeMin, showInputMax } = props\n  const [width, setWidth] = useState(0)\n  const mouseDown = useRef(0)\n\n  const refDrag = useRef<any>()\n  const refDot = useRef<any>()\n\n  useEffect(() => {\n    getWidth()\n    //eslint-disable-next-line\n  }, [])\n\n  const getWidth = () => {\n    if (!refDrag.current) getWidth()\n    setWidth(refDrag.current.clientWidth - 24)\n  }\n\n  const onMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n    mouseDown.current = event.pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onTouchStart = useCallback((event: TouchEvent<HTMLDivElement>) => {\n    mouseDown.current = event.touches[0].pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onMouseMove = (event: MouseEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.pageX - mouseInit - 12\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(scale)\n  }\n\n  const onTouchMove = (event: TouchEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.touches[0].pageX - mouseInit\n    let scale = (mouseMove / width) * (max - min)\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onMouseLeave = useCallback(() => {\n    mouseDown.current = 0\n    refDrag.current.style.cursor = 'default'\n    refDot.current.style.cursor = ''\n  }, [])\n\n  return (\n    <ScaleWrapper\n      className={className}\n      ref={refDrag}\n      onMouseMove={onMouseMove}\n      onTouchMove={onTouchMove}\n      onMouseLeave={onMouseLeave}\n      onMouseUp={onMouseLeave}\n    >\n      <TitleScale>{title}</TitleScale>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Input\n          value={Number(value.toPrecision(2))}\n          onChange={(e) => onChangeMin?.(Number(e.target.value))}\n        />\n        {showInputMax ? (\n          <Input\n            style={{ textAlign: 'right' }}\n            value={Number(max.toPrecision(2))}\n            readOnly\n          />\n        ) : null}\n      </div>\n      <BoxWrapper>\n        <BoxLine style={{ width: ((value - min) * width) / (max - min) }} />\n        <Dot\n          ref={refDot}\n          onMouseDown={onMouseDown}\n          onTouchEnd={onMouseLeave}\n          onTouchStart={onTouchStart}\n          style={{ left: ((value - min) * width) / (max - min) }}\n        />\n      </BoxWrapper>\n    </ScaleWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 4,\n  background: 'rgba(60, 60, 67, 0.18)',\n  position: 'relative',\n  borderRadius: 2,\n  userSelect: 'none',\n}))\n\nconst Dot = styled(Box)(() => ({\n  position: 'absolute',\n  width: 24,\n  height: 24,\n  background: '#7a7a7a',\n  borderRadius: 100,\n  top: -11,\n  cursor: 'pointer',\n}))\n\nconst TitleScale = styled(Typography)(() => ({\n  fontSize: 14,\n  fontWeight: 700,\n}))\n\nconst BoxLine = styled(Box)(() => ({\n  position: 'absolute',\n  height: 4,\n  background: '#0A7AFF',\n  borderRadius: 2,\n}))\n\nconst ScaleWrapper = styled(Box)(({ theme }) => ({\n  paddingBottom: 20,\n  '@media (max-width: 809px)': {\n    paddingTop: theme.spacing(2),\n  },\n}))\n\nconst Input = styled('input')({\n  border: 'none',\n  outline: 'none',\n  width: 50,\n  marginBottom: 20,\n})\n\nexport default ChangeDrag\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { FC, useEffect, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ChangeDrag from './ChangeSize'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { Object } from 'pages/Database'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  url?: string\n  jsonData?: Object\n  disabled?: { left: boolean; right: boolean }\n}\n\nconst ImageView: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  url,\n  onNext,\n  onPrevious,\n  jsonData,\n  disabled,\n}) => {\n  const viewerRef = useRef<any>()\n  const [worldCoords, setWorldCoords] = useState({ x: 0, y: 0, z: 0 })\n  const [voxelCoords, setVoxelCoords] = useState({ i: 0, j: 0, k: 0 })\n  const [values, setValues] = useState(0)\n  const [opacity, setOpacity] = useState(0)\n  const [thresholds, setThresholds] = useState(0)\n  const [maxThres, setMaxThres] = useState(0)\n  const [contracts, setContracts] = useState(1)\n  const [brightness, setBrightness] = useState(0)\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const volumes = useRef<any>()\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    setOpacity(0)\n    setContracts(1)\n    setBrightness(0)\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n\n  const onChangeThreshold = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeContract = (num: number) => {\n    if (!volumes.current) return\n    setContracts(num)\n    volumes.current.display.setContrast(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeBrightness = (num: number) => {\n    if (!volumes.current) return\n    setBrightness(num)\n    volumes.current.display.setBrightness(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMinThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeJson = () => {}\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n          complete: function () {},\n        },\n      ],\n    })\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', function () {\n          setOpacity(1)\n          setIsLoadFile(false)\n        })\n        viewer.addEventListener('sliceupdate', function (event: any) {\n          // const panel = event.target\n          const { volume } = event\n          volumes.current = volume\n          setThresholds(volumes.current.intensity_min)\n          setMaxThres(volumes.current.intensity_max)\n          setValues(volume.getIntensityValue())\n          if (brainbrowser.utils.isFunction(volume.getWorldCoords)) {\n            setWorldCoords(volume.getWorldCoords())\n          }\n          if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n            setVoxelCoords(volume.getVoxelCoords())\n          }\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {},\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div\n            style={{\n              display: !opacity ? 'none' : 'flex',\n              alignItems: 'stretch',\n            }}\n          >\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              {opacity ? (\n                <BoxContentData>\n                  <p style={{ margin: 0, padding: '20px 0' }}>\n                    World Coordinates:\n                  </p>\n                  <span>X: {worldCoords.x.toPrecision(4)}</span>\n                  <span style={{ marginLeft: 20 }}>\n                    Y: {worldCoords.y.toPrecision(4)}\n                  </span>\n                  <span style={{ marginLeft: 20 }}>\n                    Z: {worldCoords.z.toPrecision(4)}\n                  </span>\n                  <p>Voxel Coordinates:</p>\n                  <span>I: {voxelCoords.i}</span>\n                  <span style={{ marginLeft: 20 }}>J: {voxelCoords.j}</span>\n                  <span style={{ marginLeft: 20 }}>K: {voxelCoords.k}</span>\n                  <p>Value: {values}</p>\n                  <ChangeDrag\n                    onChangeMin={onChangeMinThresh}\n                    max={maxThres}\n                    min={-maxThres}\n                    title={'Threshold'}\n                    value={thresholds}\n                    showInputMax\n                    showInputMin\n                    onChange={onChangeThreshold}\n                  />\n                  <ChangeDrag\n                    title={'Contrast (0.0 to 2.0)'}\n                    value={contracts}\n                    onChange={onChangeContract}\n                  />\n                  <ChangeDrag\n                    title={'Brightness (-1 to 1):'}\n                    value={brightness}\n                    min={-1}\n                    max={1}\n                    onChange={onChangeBrightness}\n                  />\n                </BoxContentData>\n              ) : null}\n            </div>\n            <WrapperJson>\n              <TextArea\n                onChange={onChangeJson}\n                value={JSON.stringify(jsonData || '')}\n              />\n            </WrapperJson>\n            {!disabled?.right ? (\n              <ButtonNext onClick={onNext}>\n                <ArrowForwardIosIconWrapper />\n              </ButtonNext>\n            ) : null}\n            {!disabled?.left ? (\n              <ButtonPrevious onClick={onPrevious}>\n                <ArrowBackIosIconWrapper />\n              </ButtonPrevious>\n            ) : null}\n          </div>\n          {(!opacity || isLoadFile) && (\n            <BoxLoading>\n              <img\n                src=\"/lib/loading.gif\"\n                alt=\"icon loading\"\n                style={{ width: 80, height: 80 }}\n              />\n            </BoxLoading>\n          )}\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst BoxLoading = styled(Box)({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'rgba(255,255,255, 0.1)',\n  zIndex: 88,\n})\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '10%',\n  right: '10%',\n  zIndex: 9999,\n  background: 'rgba(255,255,255,0.4)',\n})\n\nconst ButtonNext = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  right: '10%',\n  zIndex: 1,\n})\n\nconst ButtonPrevious = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  left: '10%',\n  zIndex: 1,\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst BoxContentData = styled(Box)({\n  margin: '-5px 0 0',\n  padding: '10px',\n  background: '#ffffff',\n})\n\nconst WrapperJson = styled(Box)({\n  minWidth: 300,\n  background: '#ffffff',\n})\n\nconst TextArea = styled('textarea')({\n  height: 'calc(100% - 7px)',\n  width: '100%',\n  outline: 'none !important',\n  border: 'none',\n  borderLeft: '1px solid',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nconst ArrowBackIosIconWrapper = styled(ArrowBackIosIcon)({\n  color: '#ffffff',\n  marginLeft: 10,\n})\n\nconst ArrowForwardIosIconWrapper = styled(ArrowForwardIosIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageView\n","import {\n  DatabaseData,\n  DatabaseListData,\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n} from 'pages/Database'\n\nexport type OrderKey =\n  | keyof (RecordDatabase | RecordList)\n  | 'subject'\n  | 'session'\n  | 'datatype'\n  | 'attributes.type'\n  | 'attributes.protocol'\n  | 'attributes.size'\n\nexport const onRowClick = (\n  datas: DatabaseData | DatabaseListData,\n  row: ImagesDatabase | RecordList,\n  type: 'tree' | 'list' = 'tree',\n) => {\n  const view = {\n    open: true,\n    url: row.image_url,\n    id: row.id,\n    session_id: (row as ImagesDatabase).session_id,\n    parent_id: (row as ImagesDatabase).parent_id,\n    jsonData:\n      (row as ImagesDatabase).attributes ||\n      (row as RecordList).image_attributes,\n    image: row,\n  }\n  const checkNext = onGet(datas, row, false, type)\n  const checkPre = onGet(datas, row, true, type)\n  return { view, checkNext, checkPre }\n}\n\nexport const onGet = (\n  datas: DatabaseData | DatabaseListData,\n  rowClick: ImagesDatabase | RecordList,\n  isSub?: boolean,\n  type: 'tree' | 'list' = 'tree',\n): ImagesDatabase | RecordList | undefined => {\n  if (type === 'tree') {\n    const row = rowClick as ImagesDatabase\n    const dataNow = datas.records[row.record_index || 0] as RecordDatabase\n    const subjectNow = dataNow?.subjects?.[row.subject_index || 0]\n    const sessionNow = subjectNow?.sessions[row.session_index || 0]\n    const datatypeNow = sessionNow?.datatypes[row.datatype_index || 0]\n    if (!isSub) {\n      const imageNext = datatypeNow?.images[(row.image_index || 0) + 1]\n      if (imageNext) {\n        return { ...row, ...imageNext, image_index: (row.image_index || 0) + 1 }\n      }\n      const datatypeNext = sessionNow?.datatypes[(row.datatype_index || 0) + 1]\n      if (datatypeNext) {\n        const images = datatypeNext?.images\n        if (images[0])\n          return {\n            ...row,\n            ...images[0],\n            datatype_index: (row.datatype_index || 0) + 1,\n            image_index: 0,\n          }\n      }\n    } else {\n      const imagePre = datatypeNow?.images[(row.image_index || 0) - 1]\n      if (imagePre) {\n        return { ...row, ...imagePre, image_index: (row.image_index || 0) - 1 }\n      }\n      const datatypeImagePre =\n        sessionNow?.datatypes?.[(row.datatype_index || 0) - 1]\n      if (datatypeImagePre) {\n        const images = datatypeImagePre?.images\n        if (images?.[images.length - 1]) {\n          return {\n            ...row,\n            ...images?.[images.length - 1],\n            datatype_index: (row.datatype_index || 0) - 1,\n            image_index: images.length - 1,\n          }\n        }\n      }\n    }\n  } else {\n    const row = rowClick as RecordList\n    const indexImageNow = datas.records.findIndex(\n      (record) => record.id === row.id,\n    )\n    return datas.records[indexImageNow + (isSub ? -1 : 1)] as RecordList\n  }\n  return undefined\n}\n\nconst sortWithLabName = (\n  datasTable: (RecordDatabase | RecordList)[],\n  orderKey: keyof (RecordDatabase | RecordList),\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return a[orderKey] > b[orderKey] ? -1 : 1\n      }\n      return a[orderKey] < b[orderKey] ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nconst sortSubjectTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort((dataA, dataB) => {\n    const subjectsA = dataA.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    const subjectsB = dataB.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    if (typeOrder === 'DESC') {\n      return subjectsA[0]?.label > subjectsB[0]?.label ? -1 : 1\n    }\n    return subjectsA[0]?.label < subjectsB[0]?.label ? -1 : 1\n  })\n  return newDatas.map((element) => ({\n    ...element,\n    subjects: element.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    }),\n  }))\n}\n\nconst sortSessionTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          const subSessB = subB.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions.sort((ssA, ssB) => {\n            if (typeOrder === 'DESC') {\n              return ssA.label > ssB.label ? -1 : 1\n            }\n            return ssA.label < ssB.label ? -1 : 1\n          }),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortDataTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              const dataTypeB = ssB.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.label > dataTypeB[0]?.label ? -1 : 1\n              }\n              return dataTypeA[0]?.label < dataTypeB[0]?.label ? -1 : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes.sort((typeA, typeB) => {\n                if (typeOrder === 'DESC') {\n                  return typeA.label > typeB.label ? -1 : 1\n                }\n                return typeA.label < typeB.label ? -1 : 1\n              }),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortAttributesTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n  key: string = 'type',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const typeA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.attributes[key] > imageB.attributes[key]\n                        ? -1\n                        : 1\n                    }\n                    return imageA.attributes[key] < imageB.attributes[key]\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n          }\n          return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n        })\n      const typeB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.attributes[key] > imageB.attributes[key]\n                        ? -1\n                        : 1\n                    }\n                    return imageA.attributes[key] < imageB.attributes[key]\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n          }\n          return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n        })\n\n      if (typeOrder === 'DESC') {\n        return typeA[0]?.attributes[key] > typeB[0]?.attributes[key] ? -1 : 1\n      }\n      return typeA[0]?.attributes[key] < typeB[0]?.attributes[key] ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.attributes[key] > dataB.attributes[key] ? -1 : 1\n              }\n              return dataA.attributes[key] < dataB.attributes[key] ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.attributes[key] > subSessB[0]?.attributes[key]\n              ? -1\n              : 1\n          }\n          return subSessA[0]?.attributes[key] < subSessB[0]?.attributes[key]\n            ? -1\n            : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n              const dataTypeB = ssB.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                })\n                .flat()\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.attributes[key] >\n                  dataTypeB[0]?.attributes[key]\n                  ? -1\n                  : 1\n              }\n              return dataTypeA[0]?.attributes[key] <\n                dataTypeB[0]?.attributes[key]\n                ? -1\n                : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes\n                .sort((typeA, typeB) => {\n                  const imageA = typeA.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                  const imageB = typeB.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  })\n                  if (typeOrder === 'DESC') {\n                    return imageA[0]?.attributes[key] >\n                      imageB[0]?.attributes[key]\n                      ? -1\n                      : 1\n                  }\n                  return imageA[0]?.attributes[key] < imageB[0]?.attributes[key]\n                    ? -1\n                    : 1\n                })\n                .map((type) => ({\n                  ...type,\n                  images: type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.attributes[key] > sB.attributes[key] ? -1 : 1\n                    }\n                    return sA.attributes[key] < sB.attributes[key] ? -1 : 1\n                  }),\n                })),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortWithKey = (\n  datasTable: RecordList[],\n  orderKey: keyof RecordList,\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  return datasTable.sort((dataA: RecordList, dataB: RecordList) => {\n    let valueA: RecordList | string = dataA\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueA !== 'string') {\n          valueA = valueA?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueA = valueA[orderKey] as string\n\n    let valueB: RecordList | string = dataB\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueB !== 'string') {\n          valueB = valueB?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueB = valueB[orderKey] as string\n    if (typeOrder === 'DESC') {\n      return valueA > valueB ? -1 : 1\n    }\n    return valueA < valueB ? -1 : 1\n  })\n}\n\nconst sortWithTime = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return new Date(a.recording_time) > new Date(b.recording_time) ? -1 : 1\n      }\n      return new Date(a.recording_time) < new Date(b.recording_time) ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nexport const onSort = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC' | '',\n  orderKey: OrderKey,\n  type: string = 'tree',\n): (RecordDatabase | RecordList)[] => {\n  if (!typeOrder) return datasTable\n  let newDatas = datasTable\n  if (type === 'tree') {\n    if (['lab_name', 'user_name'].includes(orderKey)) {\n      newDatas = sortWithLabName(\n        datasTable,\n        orderKey as 'lab_name' | 'user_name',\n        typeOrder,\n      )\n    } else if (orderKey === 'recording_time') {\n      newDatas = sortWithTime(datasTable, typeOrder)\n    } else if (orderKey === 'subject' && type === 'tree') {\n      newDatas = sortSubjectTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'session' && type === 'tree') {\n      newDatas = sortSessionTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'datatype' && type === 'tree') {\n      newDatas = sortDataTypeTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'attributes.type' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n      )\n    } else if (orderKey === 'attributes.protocol' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'protocol',\n      )\n    } else if (orderKey === 'attributes.size' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'size',\n      )\n    }\n  } else {\n    newDatas = sortWithKey(\n      datasTable as RecordList[],\n      orderKey as keyof RecordList,\n      typeOrder,\n    )\n  }\n  return newDatas\n}\n","import { Box, Button, IconButton, styled, TextField } from '@mui/material'\nimport { ChangeEvent, useEffect, useState } from 'react'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ImageView from 'components/ImageView'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { onGet, onRowClick, onSort, OrderKey } from 'utils/database'\nimport { User, useUser } from 'providers'\nimport { isAdmin, isReseacher } from 'utils/auth'\n\ntype PopupSearchProps = {\n  onClose?: () => any\n  onFilter?: (values: { [key: string]: string }) => any\n  defaultValue?: { [key: string]: string }\n}\n\nexport const PopupSearch = ({\n  onClose,\n  defaultValue = {},\n  onFilter,\n}: PopupSearchProps) => {\n  const [values, setValues] = useState(defaultValue)\n\n  const handleFilter = () => {\n    onFilter?.(values)\n    onClose?.()\n  }\n\n  const onChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    setValues({ ...values, [event.target.name]: event.target.value })\n  }\n\n  return (\n    <Popup>\n      <PopupInner>\n        <HeaderTitle>\n          <span>Filter</span>\n          <ButtonControl onClick={onClose}>\n            <CloseIcon />\n          </ButtonControl>\n        </HeaderTitle>\n        <InputSearch\n          onChange={onChange}\n          name={'session'}\n          label=\"Session\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'dataset'}\n          label=\"Dataset\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'type'}\n          label=\"Type\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'protocol'}\n          label=\"Protocol\"\n          variant=\"outlined\"\n        />\n        <Button variant=\"contained\" onClick={handleFilter}>\n          Filter\n        </Button>\n      </PopupInner>\n    </Popup>\n  )\n}\n\nexport type Object = {\n  [key: string]: Object | string | number | number[]\n}\n\nexport type Image = {\n  id: number\n  parent_id: number\n  session_id: number\n  label: string\n  image: {\n    id: number\n    parent_id: number\n    image_url: string\n    attributes: Object\n  }\n}\n\nexport type Viewer = {\n  open: boolean\n  url: string\n  jsonData?: Object\n  id?: number | string\n  session_id?: number\n  parent_id?: string\n  image?: ImagesDatabase | RecordList\n}\n\nexport type ImagesDatabase = {\n  id: number\n  parent_id: string\n  image_url: string\n  datatype_label?: string\n  type?: string\n  attributes: Object\n  session_id?: number\n  record_index?: number\n  subject_index?: number\n  session_index?: number\n  datatype_index?: number\n  image_index?: number\n}\n\nexport type DatatypesDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  images: ImagesDatabase[]\n}\n\nexport type SessionsDatabase = {\n  id: string\n  parent_id: string\n  session_index?: number\n  label: string\n  datatypes: DatatypesDatabase[]\n  subject_index?: number\n}\n\nexport type SubjectDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  sessions: SessionsDatabase[]\n  subject_index?: number\n}\n\nexport type RecordDatabase = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  created_time: string\n  updated_time: string\n  subjects: SubjectDatabase[]\n}\n\nexport type DatabaseData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordDatabase[]\n}\n\nexport type RecordList = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  subject_label: string\n  session_label: string\n  datatypes_label: string\n  image_id: number\n  image_url: string\n  image_attributes: {\n    size: number[]\n    type: string\n    protocol: string\n    voxel_size: number[]\n  }\n  created_time: string\n  updated_time: string\n}\n\nexport type DatabaseListData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordList[]\n}\n\nexport const defaultDatabase: DatabaseData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [\n    {\n      id: 0,\n      lab_name: 'string',\n      user_name: 'string',\n      recording_time: '2023-04-07',\n      subjects: [\n        {\n          id: '0',\n          parent_id: '0',\n          label: 'new subject',\n          sessions: [\n            {\n              id: '0',\n              parent_id: '0',\n              label: 'new session',\n              datatypes: [\n                {\n                  id: '0',\n                  parent_id: '0',\n                  label: 'anat',\n                  images: [\n                    {\n                      id: 0,\n                      parent_id: '0',\n                      image_url: window.location.origin + '/lib/test.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                        voxel_size: [100, 100, 100],\n                      },\n                    },\n                  ],\n                },\n                {\n                  id: '1',\n                  parent_id: '0',\n                  label: 'func',\n                  images: [\n                    {\n                      id: 1,\n                      parent_id: '0',\n                      image_url: window.location.origin + '/lib/test0.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                        voxel_size: [100, 100, 100],\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: '1',\n          parent_id: '0',\n          label: 'project subject',\n          sessions: [\n            {\n              id: '1',\n              parent_id: '1',\n              label: 'zsession',\n              datatypes: [\n                {\n                  id: '2',\n                  parent_id: '1',\n                  label: 'anat',\n                  images: [\n                    {\n                      id: 2,\n                      parent_id: '2',\n                      image_url: window.location.origin + '/lib/test1.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                        voxel_size: [100, 100, 100],\n                      },\n                    },\n                  ],\n                },\n                {\n                  id: '3',\n                  parent_id: '1',\n                  label: 'zunc',\n                  images: [\n                    {\n                      id: 3,\n                      parent_id: '3',\n                      image_url: window.location.origin + '/lib/test2.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'T2_RATE',\n                        protocol: 'X Protocol',\n                        voxel_size: [100, 100, 100],\n                      },\n                    },\n                    {\n                      id: 4,\n                      parent_id: '3',\n                      image_url: window.location.origin + '/lib/test3.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'TYPE_1',\n                        protocol: 'Protocol',\n                        voxel_size: [100, 100, 100],\n                      },\n                    },\n                    {\n                      id: 5,\n                      parent_id: '3',\n                      image_url: window.location.origin + '/lib/test4.nii',\n                      attributes: {\n                        size: [15.0, 15.0, 15.0],\n                        type: 'T3_RATE',\n                        protocol: 'Z Protocol',\n                        voxel_size: [100, 100, 100],\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n      created_time: '2023-04-07T04:28:09.686Z',\n      updated_time: '2023-04-07T04:28:09.686Z',\n    },\n    {\n      id: 1,\n      lab_name: 'lab name',\n      user_name: 'user name',\n      recording_time: '2023-04-06',\n      subjects: [\n        {\n          id: '3',\n          parent_id: '1',\n          label: 'subject name',\n          sessions: [],\n        },\n        {\n          id: '4',\n          parent_id: '1',\n          label: 'zubject name',\n          sessions: [],\n        },\n        {\n          id: '5',\n          parent_id: '1',\n          label: 'lubject name',\n          sessions: [],\n        },\n      ],\n      created_time: '2023-04-07T04:28:09.686Z',\n      updated_time: '2023-04-07T04:28:09.686Z',\n    },\n  ],\n}\n\nconst dataImages: DatabaseListData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [\n    {\n      id: 0,\n      lab_name: 'lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test.nii',\n      image_attributes: {\n        size: [15.3, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n        voxel_size: [100, 100, 100],\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 1,\n      lab_name: 'z lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test0.nii',\n      image_attributes: {\n        size: [15.0, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n        voxel_size: [100, 100, 100],\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 2,\n      lab_name: 'x lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test1.nii',\n      image_attributes: {\n        size: [15.0, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n        voxel_size: [100, 100, 100],\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 3,\n      lab_name: 'c lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test2.nii',\n      image_attributes: {\n        size: [15.0, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'Protocol',\n        voxel_size: [100, 100, 100],\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 4,\n      lab_name: '4 lab name',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test3.nii',\n      image_attributes: {\n        size: [15.0, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'Z Protocol',\n        voxel_size: [100, 100, 100],\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n    {\n      id: 5,\n      lab_name: 'string',\n      user_name: 'string',\n      recording_time: '2023-04-13',\n      subject_label: 'string',\n      session_label: 'string',\n      datatypes_label: 'string',\n      image_id: 0,\n      image_url: '/lib/test4.nii',\n      image_attributes: {\n        size: [15.0, 15.0, 15.0],\n        type: 'TYPE_1',\n        protocol: 'X Protocol',\n        voxel_size: [100, 100, 100],\n      },\n      created_time: '2023-04-13T04:48:01.063Z',\n      updated_time: '2023-04-13T04:48:01.063Z',\n    },\n  ],\n}\n\nexport const columns = (\n  rowClick: Function,\n  setOpenDelete: Function,\n  type: 'tree' | 'list' = 'tree',\n  user?: User,\n): Column[] => [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true },\n  {\n    title: 'Subject',\n    name: type === 'tree' ? 'subject' : 'subject_label',\n    filter: true,\n  },\n  {\n    title: 'Session',\n    name: type === 'tree' ? 'session' : 'session_label',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Datatype',\n    name: type === 'tree' ? 'datatype' : 'datatypes_label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Type',\n    name: type === 'tree' ? 'attributes.type' : 'image_attributes.type',\n    filter: true,\n  },\n  {\n    title: 'Protocol',\n    name: type === 'tree' ? 'attributes.protocol' : 'image_attributes.protocol',\n    filter: true,\n  },\n  {\n    title: 'Size',\n    name: type === 'tree' ? 'attributes.size' : 'image_attributes.size',\n    filter: true,\n  },\n  {\n    title: 'Voxel size',\n    name:\n      type === 'tree' ? 'attributes.voxel_size' : 'image_attributes.voxel_size',\n    filter: true,\n  },\n  {\n    title: '',\n    name: 'action',\n    render: (data) => {\n      if (!isAdmin(user?.role) && !isReseacher(user?.role)) return null\n      return (\n        <BoxButton>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              rowClick?.(data)\n            }}\n          >\n            <EditIcon fontSize=\"small\" color={'inherit'} />\n          </ButtonControl>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              setOpenDelete?.(true)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </ButtonControl>\n        </BoxButton>\n      )\n    },\n  },\n]\n\nconst Database = () => {\n  const [openPopup, setOpenPopup] = useState(false)\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [datasTable, setDatasTable] = useState<DatabaseData | DatabaseListData>(\n    defaultDatabase,\n  )\n  const [initDataTable, setInitDataTable] = useState<\n    DatabaseData | DatabaseListData\n  >(defaultDatabase)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [type, setType] = useState<'tree' | 'list'>('tree')\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const { user } = useUser()\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  useEffect(() => {\n    if (type === 'tree') {\n      setDatasTable(defaultDatabase)\n      setInitDataTable(defaultDatabase)\n    } else {\n      setDatasTable(dataImages)\n      setInitDataTable(dataImages)\n    }\n  }, [type])\n\n  const rowClick = (row: ImagesDatabase | RecordList) => {\n    const { view, checkNext, checkPre } = onRowClick(datasTable, row, type)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDataTable.records)),\n      orderByValue,\n      orderKey as OrderKey,\n      type,\n    )\n    setDatasTable({ ...datasTable, records: data as any })\n    setColumnSort(orderKey)\n    setOrdeBy(orderByValue)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(datasTable as any, viewer.image, false, type)\n    if (imageNext) rowClick(imageNext)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(datasTable, viewer.image, true, type)\n    if (imagePre) rowClick(imagePre)\n  }\n\n  return (\n    <DatabaseWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Image\"\n        description={`Are you sure delete?\\n`}\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ProjectsTitle>\n        <span>Database</span>\n        <ButtonFilter\n          onClick={() => setOpenPopup(true)}\n          style={{ margin: '0 26px 0 0' }}\n        >\n          Filter\n        </ButtonFilter>\n      </ProjectsTitle>\n      <BoxSelectTypeView>\n        <Box\n          onClick={() => setType('tree')}\n          style={{\n            marginRight: 4,\n            fontWeight: type === 'tree' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'tree' ? '' : '#4687f4',\n          }}\n        >\n          Tree\n        </Box>\n        /\n        <Box\n          onClick={() => setType('list')}\n          style={{\n            marginLeft: 4,\n            fontWeight: type === 'list' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'list' ? '' : '#4687f4',\n          }}\n        >\n          List\n        </Box>\n      </BoxSelectTypeView>\n      {openPopup && <PopupSearch onClose={() => setOpenPopup(false)} />}\n      <DatabaseTableComponent\n        defaultExpand\n        onSort={handleSort}\n        rowClick={rowClick}\n        orderKey={columnSort}\n        orderBy={orderBy}\n        data={datasTable.records}\n        columns={columns(rowClick, setOpenDelete, type, user)}\n      />\n      <ImageView\n        disabled={disabled}\n        url={viewer.url}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n      />\n    </DatabaseWrapper>\n  )\n}\n\nconst DatabaseWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst HeaderTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst Popup = styled(Box)(() => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n  zIndex: 9999,\n}))\n\nconst PopupInner = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2, 3),\n  backgroundColor: '#fff',\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n}))\n\nconst InputSearch = styled(TextField)(() => ({\n  minWidth: 250,\n}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ButtonControl = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0, 1),\n  width: 30,\n  height: 30,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst ProjectsTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst BoxSelectTypeView = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 16,\n})\n\nexport default Database\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { getMe, login } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { saveExToken, saveToken } from 'utils/auth'\nimport Loading from '../../components/common/Loading'\n\nconst Login = () => {\n  const { setUser } = useUser()\n  const navigate = useNavigate()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n    try {\n      const { access_token, ex_token } = await login(values)\n      saveToken(access_token)\n      saveExToken(ex_token)\n      getUser()\n    } catch (e) {\n      setErrors({ email: 'Email or password is wrong', password: '' })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const getUser = async () => {\n    const data = await getMe()\n    setUser(data)\n    navigate('/')\n  }\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">\n              {errors.password}\n            </TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {isLoading && <Loading />}\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  styled,\n  Typography,\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport DatabaseTableComponent from 'components/DatabaseTable'\nimport React, {\n  useState,\n  DragEvent,\n  Fragment,\n  useRef,\n  CSSProperties,\n} from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport {\n  DatabaseData,\n  defaultDatabase,\n  ImagesDatabase,\n  PopupSearch,\n  Viewer,\n} from '../Database'\nimport ImageView from 'components/ImageView'\nimport { onGet, onRowClick, onSort, OrderKey } from 'utils/database'\nimport { Object } from '../Database'\nimport { ChangeEvent } from 'react'\nimport { RecordDatabase } from '../Database'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { useDispatch } from 'react-redux'\n\nconst columns = [\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true, width: 100 },\n  { title: 'Subject', name: 'subject', filter: true },\n  {\n    title: 'Session',\n    name: 'session',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Datatype',\n    name: 'datatype',\n    filter: true,\n    width: 100,\n  },\n  { title: 'Size', name: 'attributes.size', filter: true },\n  { title: 'Voxel size', name: 'attributes.voxel_size', filter: true },\n]\n\ntype ProjectAdd = {\n  project_name?: string\n  project_type?: string\n  image_count: number\n  image_url: string\n  protocol: string\n  id: string\n  image_id: number\n  jsonData: Object\n}\n\ntype DataWithin = {\n  id: string\n  data: ProjectAdd[]\n  name: string\n}\n\ntype DataFactor = {\n  within: DataWithin[]\n} & DataWithin\n\nconst nameDefault = 'DEFAULT'\n\nconst ProjectFormComponent = () => {\n  const [searchParams] = useSearchParams()\n\n  const idEdit = searchParams.get('id')\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [datasTable, setDatasTable] = useState<DatabaseData>(defaultDatabase)\n  const [imageIDs, setImageIDs] = useState<number[]>([])\n  const routeGoback = searchParams.get('back')\n  const nodeId = searchParams.get('nodeId')\n  const isPendingDrag = useRef(false)\n  const dispatch = useDispatch()\n\n  const [initDataTable /*setInitDataTable */] =\n    useState<DatabaseData>(defaultDatabase)\n  const [projectName, setProjectName] = useState('Prj Name 1')\n  const [projectLevel, setProjectLevel] = useState<'factor' | 'within-factor'>(\n    'factor',\n  )\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [openFilter, setOpenFilter] = useState(false)\n  const [rowDrag, setRowDrag] = useState<ImagesDatabase | ImagesDatabase[]>()\n  const [dataFactors, setDataFactors] = useState<DataFactor[]>([\n    { name: nameDefault, within: [], id: getNanoId(), data: [] },\n  ])\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n    setProjectName(e.target.value)\n  }\n\n  const handleChangeLevel = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const type = event.target.value as 'within-factor' | 'factor'\n    setProjectLevel(type)\n    let within: DataWithin[] = []\n    if (type === 'within-factor') {\n      within = [{ name: nameDefault, id: getNanoId(), data: [] }]\n    }\n    setImageIDs([])\n    setDataFactors([{ name: nameDefault, within, id: getNanoId(), data: [] }])\n  }\n\n  const onAddBetween = () => {\n    setDataFactors((pre) => [\n      ...pre,\n      { name: nameDefault, within: [], id: getNanoId(), data: [] },\n    ])\n  }\n\n  const onAddWithin = (idFactor: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === idFactor) {\n          return {\n            ...p,\n            within: [\n              ...p.within,\n              { name: nameDefault, within: [], id: getNanoId(), data: [] },\n            ],\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteFactor = (row: DataFactor) => {\n    setImageIDs((pre) =>\n      pre.filter((id) => {\n        if (projectLevel === 'factor') {\n          return !row.data.find((rowData) => rowData.image_id === id)\n        }\n        return !row.within.find((w) => w.data.find((d) => d.image_id === id))\n      }),\n    )\n    setDataFactors((pre) => pre.filter((e) => e.id !== row.id))\n  }\n\n  const onDeleteWithin = (factor: DataFactor, row: DataWithin) => {\n    setImageIDs((pre) =>\n      pre.filter((id) => !row.data.find((rowData) => rowData.image_id === id)),\n    )\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, within: p.within.filter((w) => w.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataWithin = (\n    factor: DataFactor,\n    within: DataWithin,\n    row: ProjectAdd,\n  ) => {\n    setImageIDs((pre) => pre.filter((id) => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, data: w.data.filter((d) => d.id !== row.id) }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataFactor = (factor: DataFactor, row: ProjectAdd) => {\n    setImageIDs((pre) => pre.filter((id) => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, data: p.data.filter((d) => d.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDragRow = (row: ImagesDatabase[] = []) => {\n    setRowDrag(row)\n  }\n\n  const onBeginDrag = () => {\n    isPendingDrag.current = true\n    const mouseup = () => {\n      isPendingDrag.current = false\n      window.removeEventListener('mouseup', mouseup)\n    }\n    window.addEventListener('mouseup', mouseup)\n  }\n\n  const onDragEnd = () => {\n    setRowDrag(undefined)\n  }\n\n  const onMouseOver = (factor: DataFactor, within?: DataWithin) => {\n    if (isPendingDrag.current) return\n    onDropData(factor, within)\n    setRowDrag(undefined)\n  }\n\n  const onDropData = (factor: DataFactor, within?: DataWithin) => {\n    if (!Array.isArray(rowDrag) && !rowDrag?.image_url) {\n      return\n    }\n    let newData: ProjectAdd[] = []\n    const checkExistIdImage =\n      imageIDs.length &&\n      imageIDs.some((id) => {\n        if (!Array.isArray(rowDrag)) return rowDrag.id === id\n        return rowDrag.some((row) => row.id === id)\n      })\n    if (checkExistIdImage) {\n      return alert('Duplicate images cannot be registered.')\n    }\n    const newIds = Array.isArray(rowDrag)\n      ? rowDrag.map((row) => row.id)\n      : [rowDrag.id]\n    setImageIDs([...imageIDs, ...newIds])\n    if (!Array.isArray(rowDrag)) {\n      newData = [\n        {\n          id: getNanoId(),\n          project_name: rowDrag.datatype_label,\n          image_count: 1,\n          image_id: rowDrag.id,\n          project_type: rowDrag.attributes.type as string,\n          protocol: rowDrag.attributes.protocol as string,\n          image_url: rowDrag?.image_url,\n          jsonData: rowDrag?.attributes,\n        },\n      ]\n    } else if (Array.isArray(rowDrag)) {\n      newData = rowDrag.map((row) => ({\n        id: getNanoId(),\n        project_name: row.datatype_label,\n        image_count: 1,\n        image_id: row.id,\n        project_type: row.attributes.type as string,\n        protocol: row.attributes.protocol as string,\n        image_url: row?.image_url,\n        jsonData: row?.attributes,\n      }))\n    }\n    if (projectLevel !== 'within-factor') {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return { ...p, data: [...p.data, ...newData] }\n          }\n          return p\n        }),\n      )\n      return\n    }\n    if (within) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return {\n              ...p,\n              within: p.within.map((w) => {\n                if (w.id === within.id) {\n                  return { ...w, data: [...w.data, ...newData] }\n                }\n                return w\n              }),\n            }\n          }\n          return p\n        }),\n      )\n    }\n  }\n\n  const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onDragLeave = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onChangeNameFactor = (factor: DataFactor, value: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, name: value }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onChangeNameWithinFactor = (\n    factor: DataFactor,\n    within: DataWithin,\n    value: string,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, name: value }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const renderData = (\n    data: ProjectAdd[],\n    style?: CSSProperties,\n    onDelete?: (row: ProjectAdd) => void,\n  ) => {\n    return data.map((e, index) => (\n      <BoxItem\n        key={`${e.id}_${index}`}\n        style={style}\n        onClick={() => rowDataClick(e)}\n      >\n        <TypographyBoxItem>{e.project_name}</TypographyBoxItem>\n        <TypographyBoxItem>{e.project_type}</TypographyBoxItem>\n        <TypographyBoxItem>{e.protocol}</TypographyBoxItem>\n        <Box\n          style={{ display: 'flex', justifyContent: 'flex-end', width: '100%' }}\n        >\n          <Button\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              onDelete?.(e)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </Button>\n        </Box>\n      </BoxItem>\n    ))\n  }\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const rowClick = (row: ImagesDatabase) => {\n    const { view, checkNext, checkPre } = onRowClick(datasTable, row)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const rowDataClick = (row: ProjectAdd) => {\n    if (!row?.image_url || !timeoutClick.current) {\n      timeoutClick.current = setTimeout(() => {\n        timeoutClick.current = undefined\n      }, 300)\n      return\n    }\n    setViewer({\n      open: true,\n      url: row.image_url,\n      jsonData: row.jsonData,\n    })\n    setDisabled({ left: true, right: true })\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDataTable.records)),\n      orderByValue,\n      orderKey as OrderKey,\n    )\n    setDatasTable({ ...datasTable, records: data as RecordDatabase[] })\n    setColumnSort(orderKey)\n    setOrdeBy(orderByValue)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(datasTable, viewer.image, false)\n    if (imageNext) rowClick(imageNext as ImagesDatabase)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(datasTable, viewer.image, true)\n    if (imagePre) rowClick(imagePre as ImagesDatabase)\n  }\n\n  const onCancle = () => {\n    !routeGoback\n      ? navigate('/projects')\n      : navigate(`${routeGoback}&id=${idEdit}`, { state: { edited: true } })\n  }\n\n  const onOk = () => {\n    if (nodeId) {\n      const urls = dataFactors\n        .map((el) => {\n          if (el.data.length) return el.data\n          return el.within.map((w) => w.data).flat()\n        })\n        .flat()\n        .map((image) => image.image_url)\n      dispatch(setInputNodeFilePath({ nodeId, filePath: urls }))\n    }\n    onCancle()\n  }\n\n  return (\n    <ProjectsWrapper>\n      {openFilter && <PopupSearch onClose={() => setOpenFilter(false)} />}\n      <ImageView\n        disabled={disabled}\n        url={viewer.url}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n      />\n      {isEditName ? (\n        <InputName\n          autoFocus\n          onBlur={() => setIsEditName(false)}\n          value={projectName}\n          onChange={onChangeName}\n        />\n      ) : (\n        <TextName onClick={() => setIsEditName(true)}>{projectName}</TextName>\n      )}\n      <BoxOptions\n        aria-labelledby=\"demo-radio-buttons-group-label\"\n        value={projectLevel}\n        name=\"radio-buttons-group\"\n        onChange={handleChangeLevel}\n      >\n        <Box>\n          <Box>\n            <FormControlLabel\n              value=\"factor\"\n              control={<Radio />}\n              label=\"Between factor\"\n            />\n          </Box>\n          <FormControlLabel\n            value=\"within-factor\"\n            control={<Radio />}\n            label=\"Between factor-within factor\"\n          />\n        </Box>\n      </BoxOptions>\n      <DropAndDropBox>\n        <DragBox>\n          {dataFactors.map((factor, index) => {\n            return (\n              <Fragment key={factor.id}>\n                <BoxFactor>\n                  <Input\n                    onChange={(e) => onChangeNameFactor(factor, e.target.value)}\n                    style={{ width: 'calc(100% - 64px)' }}\n                    value={\n                      factor.name === nameDefault\n                        ? `Between factor name ${index}`\n                        : factor.name\n                    }\n                  />\n                  <Button onClick={() => onDeleteFactor(factor)}>\n                    <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                  </Button>\n                  {projectLevel === 'within-factor' ? (\n                    factor.within.map((within, indexWithin) => (\n                      <BoxFactor key={within.id} style={{ marginLeft: 24 }}>\n                        <Input\n                          onChange={(e) =>\n                            onChangeNameWithinFactor(\n                              factor,\n                              within,\n                              e.target.value,\n                            )\n                          }\n                          style={{ width: 'calc(100% - 64px)' }}\n                          value={\n                            within.name === nameDefault\n                              ? `Within factor name ${indexWithin}`\n                              : within.name\n                          }\n                        />\n                        <Button onClick={() => onDeleteWithin(factor, within)}>\n                          <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                        </Button>\n                        {renderData(within.data, { marginLeft: 48 }, (row) => {\n                          onDeleteDataWithin(factor, within, row)\n                        })}\n                        <BoxDrag\n                          style={{\n                            borderBottom:\n                              (Array.isArray(rowDrag) && rowDrag.length) ||\n                              (!Array.isArray(rowDrag) && !!rowDrag)\n                                ? '1px dashed red'\n                                : '',\n                          }}\n                          onDrop={() => onDropData(factor, within)}\n                          onMouseOver={() => onMouseOver(factor, within)}\n                          onDragOver={onDragOver}\n                          onDragLeave={onDragLeave}\n                        />\n                      </BoxFactor>\n                    ))\n                  ) : (\n                    <>\n                      {renderData(factor.data, { marginLeft: 24 }, (row) => {\n                        onDeleteDataFactor(factor, row)\n                      })}\n                      <BoxDrag\n                        style={{\n                          borderBottom:\n                            (Array.isArray(rowDrag) && rowDrag.length) ||\n                            (!Array.isArray(rowDrag) && !!rowDrag)\n                              ? '1px dashed red'\n                              : '',\n                        }}\n                        onDrop={() => onDropData(factor)}\n                        onDragOver={onDragOver}\n                        onDragLeave={onDragLeave}\n                        onMouseOver={() => onMouseOver(factor)}\n                      />\n                    </>\n                  )}\n                </BoxFactor>\n                {projectLevel === 'within-factor' && dataFactors.length ? (\n                  <NewRowButton\n                    onClick={() => onAddWithin(factor.id)}\n                    style={{ marginLeft: 24 }}\n                  >\n                    + Add Within Factor\n                  </NewRowButton>\n                ) : null}\n              </Fragment>\n            )\n          })}\n          <NewRowButton onClick={onAddBetween}>\n            + Add Between Factor\n          </NewRowButton>\n        </DragBox>\n        <DropBox>\n          <BoxFilter>\n            <ButtonFilter\n              onClick={() => setOpenFilter(true)}\n              style={{ margin: '0 26px 0 0' }}\n            >\n              Filter\n            </ButtonFilter>\n          </BoxFilter>\n          <DatabaseTableComponent\n            onSort={handleSort}\n            orderKey={columnSort}\n            orderBy={orderBy}\n            rowClick={rowClick}\n            defaultExpand\n            onBeginDrag={onBeginDrag}\n            onDrag={onDragRow}\n            onDragEnd={onDragEnd}\n            draggable\n            data={datasTable.records}\n            columns={columns}\n          />\n        </DropBox>\n      </DropAndDropBox>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <ButtonFilter onClick={onOk}>{idEdit ? 'Ok' : 'Add'}</ButtonFilter>\n        <ButtonFilter onClick={onCancle}>Cancel</ButtonFilter>\n      </Box>\n    </ProjectsWrapper>\n  )\n}\n\nconst TextName = styled(Typography)(({ theme }) => ({\n  textOverflow: 'ellipsis',\n  width: 'calc(40% - 16px)',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  padding: theme.spacing(1),\n  borderWidth: 1,\n  fontSize: 16,\n}))\n\nconst BoxItem = styled(Box)({\n  display: 'flex',\n  height: 40,\n  alignItems: 'center',\n  borderBottom: '1px solid rgba(0,0,0,0.8)',\n  paddingLeft: 16,\n  marginBottom: 4,\n})\n\nconst TypographyBoxItem = styled(Box)({\n  minWidth: 120,\n})\n\nconst BoxDrag = styled(Box)({\n  paddingBottom: 24,\n  width: '100%',\n  borderWidth: 1,\n})\n\nconst BoxFactor = styled(Box)({})\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(3),\n  userSelect: 'none',\n}))\n\nconst BoxOptions = styled(RadioGroup)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(1, 2),\n  display: 'flex',\n  flexDirection: 'inherit',\n}))\n\nconst InputName = styled('input')(({ theme }) => ({\n  padding: theme.spacing(1),\n  outline: 'none',\n  borderColor: 'transparent',\n  fontSize: 18,\n  width: 'calc(40% - 16px)',\n  '&:focus': {\n    borderColor: '#000',\n  },\n  display: 'block',\n  borderWidth: 1,\n}))\n\nconst DropAndDropBox = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  gap: theme.spacing(2),\n  height: 'calc(100% - 177px)',\n  overflow: 'hidden',\n}))\n\nconst DragBox = styled(Box)(({ theme }) => ({\n  width: '40%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #000',\n  minHeight: 100,\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst DropBox = styled(Box)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #dedede',\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst NewRowButton = styled(Button)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  borderStyle: 'dashed',\n  borderWidth: 1,\n  margin: theme.spacing(1, 0),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 1),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  color: '#ffffff',\n  backgroundColor: '#283237 !important',\n}))\n\nconst BoxFilter = styled(Box)({\n  display: 'flex',\n  marginBottom: 10,\n  justifyContent: 'flex-end',\n})\n\nexport default ProjectFormComponent\n","import { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport {resetPassword} from \"../../api/auth\";\nimport Loading from \"../../components/common/Loading\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await resetPassword(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Pls check your mail!`)\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'This field is validate'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Project from './components/Project'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport AccountManager from 'pages/AccountManager'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Projects from './pages/Projects'\nimport Database from './pages/Database'\nimport Login from 'pages/Login'\nimport ProjectFormComponent from \"./pages/Projects/Create\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<Dashboard />} />\n            <Route path=\"/projects/workflow\" element={<Project />} />\n            <Route path=\"/account-manager\" element={<AccountManager />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            <Route path=\"/database\" element={<Database />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            <Route path=\"/account-deleted\" element={<AccountDelete />} />\n            <Route path=\"/projects/new-project\" element={<ProjectFormComponent />} />\n          </Routes>\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n  fetchExperiment,\n} from './ExperimentsActions'\nimport {\n  convertToExperimentListType,\n  convertToExperimentType,\n} from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          state.experimentList[action.payload.unique_id] =\n            convertToExperimentType(action.payload)\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n  projectReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n  project: projectReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}