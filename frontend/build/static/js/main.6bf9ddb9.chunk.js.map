{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/selectors/run/RunSelectors.ts","const/API.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/FlowChart/Snakemake.tsx","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/Visualize/DialogContext.tsx","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","store/slice/DisplayData/DisplayDataSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","components/Visualize/DataContext.tsx","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","components/Visualize/Plot/CsvPlot.tsx","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Visualize/VisualizeItemAddButton.tsx","components/utils/MouseDragUtil.ts","components/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Visualize/FilePathSelect.tsx","components/Visualize/VisualizeItem.tsx","components/Visualize/FlexItemList.tsx","components/Visualize/Editor/GradientColorPicker.tsx","components/Visualize/Editor/SaveFig.tsx","components/Visualize/Editor/ImageItemEditor.tsx","components/Visualize/Editor/CsvItemEditor.tsx","components/Visualize/Editor/HeatmapItemEditor.tsx","components/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Visualize/Editor/RoiItemEditor.tsx","components/Visualize/Editor/ScatterItemEditor.tsx","components/Visualize/Editor/BarItemEditor.tsx","components/Visualize/VisualizeItemEditor.tsx","components/Visualize/Visualize.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/Button/DownloadButton.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/Button/DeleteButton.tsx","components/Experiment/Button/ImportButton.tsx","components/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Experiment/Experiment.tsx","components/Project.tsx","store/slice/Pipeline/PipelineHook.ts","providers/index.ts","utils/auth/index.ts","components/Header.tsx","components/utils/axios.ts","api/auth/index.ts","components/Layout.tsx","pages/Dashboard/index.tsx","components/common/Input.tsx","components/ModalDeleteAccount/index.tsx","components/Table/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","components/InputPassword/index.tsx","components/ModalChangePassword/index.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","pages/Projects/index.tsx","components/DatabaseTable.tsx","components/ImageView/ChangeSize.tsx","components/ImageView/index.tsx","utils/database/index.ts","pages/Database/index.tsx","pages/Login/index.tsx","components/SignUp/index.tsx","pages/Signup/index.tsx","pages/Projects/Create.tsx","pages/ResetPassword/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","data","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNodeById","filter","find","id","selectNodeLabelById","label","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","outputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","isEdge","edge","HOST","process","PORT","BASE_URL","runApi","a","axios","post","response","runByUidApi","pendingNodeIdList","createAsyncThunk","thunkAPI","responseData","rejectWithValue","runByCurrentUid","currentUid","getState","pollRunResult","getExperimentsApi","get","deleteExperimentByUidApi","delete","deleteExperimentByListApi","uidList","importExperimentByUidApi","downloadExperimentNwbApi","responseType","downloadExperimentConfigApi","EXPERIMENTS_SLICE_NAME","getExperiments","_","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","initialState","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","extraReducers","builder","addCase","fulfilled","nodeResultDto","outputPath","message","convertToRunResult","rejected","meta","addMatcher","isAnyOf","pending","actions","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","position","newNode","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","style","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","config","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","max","random","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","Button","endIcon","NWBSettingContents","paramKeyList","className","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","errorMessage","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","float","textAlign","top","right","zIndex","textTransform","useHandleColor","key","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","createContext","onOpen","onOpenDialogFile","onMessageError","FileSelect","multiSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","useContext","inputRef","accept","getFileInputAccept","click","preventDefault","files","file","FormData","append","visibility","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","alpha","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","title","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","setHeader","setIndex","transpose","newState","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","DisplayDataContext","dataType","itemId","NaN","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","items","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","selectImageItemEndIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","offset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","selectCsvItemSetHeader","selectCsvItemSetIndex","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","CsvPlot","isInitialized","isPending","isFulfilled","CsvPlotImple","PresentationalCsvPlot","csvData","useMemo","col","row","header","headerData","field","headerName","idx","rows","row_id","rowObj","fromEntries","columns","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","setOpen","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","p","m","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","colorscale","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","timeDataMaxIndex","maxIdx","selectRoiItemIndex","colorscaleRoi","createColormap","colormap","nshades","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","ml","PlayBack","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","text","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allChecked","allNotChecked","indeterminate","TreeItemLabel","checkboxProps","Checkbox","disableRipple","initDialogFile","ReactFlowComponent","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","Popover","anchorOrigin","vertical","horizontal","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","drawerWidth","backgroundColor","borderRight","paddingTop","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","justifyContent","StyledButton","borderWidth","useMouseDragHandler","onMouseDown","dependencies","onMouseMove","onMouseUp","document","addEventListener","removeEventListener","once","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","maxWidth","VisualizeItem","isSelected","movingSize","setMovingSize","onCommitSize","onMouseDownX","downEvent","movingX","screenX","movingWidth","moveEvent","newWidth","MIN_WIDTH","onMouseDownY","movingY","screenY","movingHeight","newHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","flexDirection","ItemHeader","cursor","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","isNaN","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","flexWrap","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","SaveFig","SelectedItemIdContext","ImageItemEditor","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newLeft","newRight","LegendSelect","handleChange","drawIndexMap","mt","unmountOnExit","RoiItemEditor","ScatterItemEditor","BarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","selectExperiment","selectExperimentName","selectExperimentFunction","functions","ExperimentStatusIcon","NWBDownloadButton","hasNWB","ExperimentUidContext","url","setFileUrl","URL","createObjectURL","Blob","revokeObjectURL","href","download","ConfigDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","timeout","gutterBottom","component","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","selectExperimentFunctionHasNWB","scope","DeleteButton","isRunning","ImportButton","unwrap","then","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListValues","experimentListKeys","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","recordsIsEmpty","page","setPage","storageKey","initialValue","parseFn","savedStr","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","valueNum","rowsPerPage","setRowsPerPage","emptyRows","flexGlow","TableContainer","HeadItem","sortHandler","property","allCheckIndeterminate","onChangeAllCheck","experiment","checkboxVisible","sort","getComparator","slice","expData","RowItem","secondary","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","TableSortLabel","active","direction","timestamp","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","selectExperimentHasNWB","Fragment","tableCellClasses","root","borderBottomWidth","orderBy","descendingComparator","Experiment","StyledAppBar","drawer","TabPanel","other","hidden","a11yProps","Project","useSearchParams","searchParams","runPipeline","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","centered","textColor","UserContext","setUser","useUser","saveToken","access_token","getToken","BoxDropdown","listStyleType","backgroundClip","outline","Image","BoxWrapper","gap","BoxMenu","userSelect","BoxInfo","BoxMenuItem","transform","BoxMenuItemLogout","fontWeight","TitleLogo","HeaderWrapper","Header","navigate","useNavigate","user","refMenu","src","alt","blur","onBlur","display_name","email","removeItem","axiosLibrary","baseURL","interceptors","request","use","headers","Authorization","Promise","reject","login","getMe","ignorePaths","MenuLeft","onResize","pathname","useLocation","isClose","MenuLeftWrapper","BoxBack","ButtonBack","BoxDivider","KeyboardBackspaceIcon","LinkWrapper","to","TypographyMenu","Link","textDecoration","LayoutWrapper","ContentBodyWrapper","paddingRight","ChildrenWrapper","KeyboardBackspace","shouldForwardProp","listStyle","minHeight","lineHeight","Layout","location","setWidth","checkkAuth","token","window","DashboardWrapper","DashboardContent","TitleMenu","Dashboard","Input","ContentDelete","ButtonConfirm","BoxConfirm","ModalDeleteAccount","onSubmit","titleSubmit","description","textDelete","setTextDelete","Modal","whiteSpace","placeholder","MyPaginate","ReactPaginate","boxSizing","borderCollapse","Thead","Tr","Th","borderTopLeftRadius","borderTopRightRadius","TBody","Td","NoData","ArrowDownwardIconOrder","ArrowDownwardIcon","TableComponent","paginate","orderKey","pageCount","page_size","renderCol","dataIndex","render","iCol","nameCol","align","disableInitialCallback","marginPagesDisplayed","pageRangeDisplayed","breakLabel","previousLabel","nextLabel","TextError","wordBreak","InputError","autoComplete","SelectModal","SelectError","options","ModalComponent","setData","setIsOpenModal","dataEdit","regex","regexPassword","setFormData","password","lab","confirmPassword","errors","setErrors","setValues","validateEmail","test","validatePassword","onChangeData","pre","onBlurData","validate","ModalBox","TitleModal","BoxData","LabelModal","ButtonModal","errorEmail","errorPassword","errorConfirmPassword","errorNotMatch","AccountManagerWrapper","BoxButton","ButtonAdd","ALink","button","AccountManager","openDelete","setOpenDelete","isOpenModal","setType","setDateEdit","idDel","setIdDel","getList","handleCloseDelete","onForgotPassword","onOpenModal","InputPassword","BoxTitle","FormInline","Label","ModalChangePassword","onChangeValue","validateReEnter","new_password","reEnter","confirm_password","AccountWrapper","BoxFlex","Title","TitleData","ButtonSubmit","Account","isEditName","setIsEditName","openChangePw","setOpenChangePw","handleCloseChangePw","AccountDelete","ProjectsWrapper","ProjectsTitle","Projects","idDelete","setIdDelete","created_time","updated_time","image_count","project_type","onEdit","onWorkflow","console","log","onResults","addNewProject","child","ChildCol","rowClick","defaultExpand","isData","show","setShow","onClickCol","column","ElementFlex","ArrowDropDownIconWrap","draggable","draggableProps","dataShow","RenderColumn","previewImage","drags","beginDrag","onDrag","onDragEvent","sessions","datatypes","images","itemData","drag","onDragStart","BoxDrag","ArrowDropDownIcon","TableWrap","overflowX","DataTable","DatabaseTableComponent","onSort","setDrags","pageX","pageY","mouseMoveRect","setMouseMoveRect","ctrRef","refTdSelect","mouseStart","setBeginDrag","onKeydownEvent","onKeyupEvent","ctrlKey","metaKey","onRowClickEvent","currentTarget","tds","getElementsByTagName","dom","innerHTML","onSortHandle","allowMutilKey","el","trNow","getBoundingClientRect","scrollY","td","Dot","TitleScale","BoxLine","ScaleWrapper","ChangeDrag","onChangeMin","onChangeMax","showInputMax","mouseDown","refDrag","refDot","getWidth","clientWidth","onTouchStart","touches","mouseInit","scale","onTouchMove","onTouchEnd","BoxLoading","ButtonClose","ButtonNext","ButtonPrevious","ImageViewWrapper","BoxContentData","WrapperJson","TextArea","borderLeft","CloseIconWrapper","CloseIcon","ArrowBackIosIconWrapper","ArrowBackIosIcon","ArrowForwardIosIconWrapper","ArrowForwardIosIcon","ImageView","onNext","onPrevious","jsonData","viewerRef","worldCoords","setWorldCoords","j","k","voxelCoords","setVoxelCoords","setOpacity","thresholds","setThresholds","maxThres","setMaxThres","contracts","setContracts","brightness","setBrightness","isLoadFile","setIsLoadFile","volumes","loadFile","loadFileIndex","clearVolumes","loadVolumes","nii_url","template","element_id","viewer_insert_className","overlay","complete","brainbrowser","BrainBrowser","color_map_config","VolumeViewer","start","viewer","volume","intensity_min","intensity_max","getIntensityValue","utils","isFunction","getWorldCoords","getVoxelCoords","urlColor","cursor_color","loadDefaultColorMapFromURL","setDefaultPanelSize","toPrecision","num","redrawVolumes","showInputMin","setContrast","refreshPanels","onGet","datas","record","isSub","parent_id","sessionIndex","session_id","session","findImageIndex","img","imageNow","sortWithLabName","datasTable","typeOrder","sortWithSession","sortSubject","dA","dB","subject","sortDatatypes","sortImages","newDatas","PopupSearch","onFilter","Popup","PopupInner","HeaderTitle","ButtonControl","InputSearch","dataImages","lab_name","user_name","sample_name","recording_time","protocol","voxel_size","image_url","attributes","file_name","defaultDatabase","DatabaseWrapper","ButtonFilter","BoxSelectTypeView","Database","openPopup","setOpenPopup","setViewer","setDatasTable","setOrdeBy","columnSort","setColumnSort","setDisabled","view","checkNext","checkPre","DatabaseTable","imageNext","LoginWrapper","LoginContent","FormSignUp","LabelField","LableRequired","Description","LinkWrappper","ButtonLogin","bottom","Login","errorCheck","validateSubmit","getUser","Stack","SelectWrapper","SignUp","isLogin","errorReEnter","Signup","nameDefault","BoxItem","TypographyBoxItem","BoxFactor","BoxOptions","RadioGroup","InputName","DropAndDropBox","DragBox","DropBox","NewRowButton","borderStyle","BoxFilter","ProjectFormComponent","idEdit","projectName","setProjectName","projectLevel","setProjectLevel","openFilter","setOpenFilter","rowDrag","setRowDrag","within","dataFactors","setDataFactors","onMouseOver","factor","onDropData","newData","project_name","w","onDragLeave","renderData","onDelete","rowDataClick","Radio","onChangeNameFactor","indexWithin","onChangeNameWithinFactor","onDeleteWithin","onDeleteDataWithin","onDrop","onDeleteDataFactor","idFactor","regexEmail","Heading","ResetPassword","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","flat","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","function","unique_id","convertToExperimentStatus","success","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.6bf9ddb9.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(data: RunPostData): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { uid, pendingNodeIdList } = data\n  const response = await axios.post(`${BASE_URL}/run/result/${uid}`, {\n    pendingNodeIdList,\n  })\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  try {\n    const responseData = await runApi(runPostData)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (currentUid != null) {\n      try {\n        const responseData = await runByUidApi(currentUid, runPostData)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  try {\n    const responseData = await runResult({ uid, pendingNodeIdList })\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { RunPostData } from 'api/run/Run'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type ExperimentDTO = {\n  function: {\n    [uid: string]: {\n      name: string\n      success: string\n      unique_id: string\n      hasNWB: boolean\n    }\n  }\n  name: string\n  success: string\n  timestamp: string\n  unique_id: string\n  hasNWB: boolean\n}\n\nexport async function getExperimentsApi(): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\n\nexport const getExperiments = createAsyncThunk<ExperimentsDTO, undefined>(\n  `${EXPERIMENTS_SLICE_NAME}/getExperiments`,\n  async (_, thunkAPI) => {\n    try {\n      const response = await getExperimentsApi()\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      }),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => (\n  <Box\n    style={{\n      position: 'absolute',\n      float: 'right',\n      textAlign: 'right',\n      top: -7,\n      right: 10,\n      zIndex: 4,\n      textTransform: 'none',\n    }}\n  >\n    <SnakemakeButton />\n    <NWBSettingButton />\n    <RunButtons {...props} />\n  </Box>\n))\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { createContext } from 'react'\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => any\n  onOpenDialogFile: (value: {\n    filePath: string | string[]\n    open: boolean\n    fileTreeType?: string\n    multiSelect: boolean\n    onSelectFile: (v: any) => any\n  }) => any\n  onMessageError: (v: { anchorElRef: { current: Element | null }; message: string }) => any\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\nimport { DialogContext } from 'components/Visualize/DialogContext'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const { onOpenDialogFile } = useContext(DialogContext)\n\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              onOpenDialogFile({\n                open: true,\n                multiSelect,\n                filePath,\n                fileTreeType: fileTreeType as any,\n                onSelectFile,\n              })\n            }}\n          >\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'Load'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif,.tiff'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  FormHelperText,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/Visualize/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        label=\"dur[msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport { DialogContext } from 'components/Visualize/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: '',\n  multiSelect: false,\n  onSelectFile: (_: any) => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] = useState(initDialogFile)\n    const [messageError, setMessageError] = useState({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile as any,\n            onMessageError: setMessageError as any\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                elements={flowElements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                onLoad={onLoad}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition.x, flowPosition.y]}\n                defaultZoom={flowPosition.zoom}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType as any}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { Box } from '@mui/material'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer>\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n  height: '100%',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n    paddingTop: theme.spacing(1.125),\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n  backgroundColor: '#283237 !important',\n  color: '#ffffff'\n})\n","import React from 'react'\n\nexport function useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n  ) => {\n    onSelect(nodeId, filePath, dataType)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { RootState } from 'store/store'\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { useMouseDragHandler } from 'components/utils/MouseDragUtil'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            height: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: dataType,\n              prevFilePath: selectedFilePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\n\nimport {\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setSaveFileName,\n  setSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\n\nexport const SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSaveFileName({ itemId, saveFileName: event.target.value }))\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { SaveFig } from './SaveFig'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (filePath !== null) {\n        dispatch(\n          getImageData({\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { SaveFig } from './SaveFig'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <SaveFig />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/common/Accordion'\n\nimport { SaveFig } from './SaveFig'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            label=\"left\"\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          <TextField\n            label=\"right\"\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const BarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { drawerWidth } from 'components/FlowChart/FlowChart'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\nimport { Box } from '@mui/material'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <StyledDrawer>\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </StyledDrawer>\n      <MainContents>\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')(({ theme }) => ({\n  height: '100%',\n  width: '100%',\n}))\n\nexport default Visualize\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n  nodeId?: string\n  hasNWB: boolean\n}>(({ name, nodeId, hasNWB }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentNwbApi(uid, nodeId)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick} color=\"primary\" disabled={!hasNWB}>\n        <GetAppIcon />\n      </IconButton>\n      <a href={url} download={`${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const ConfigDownloadButton = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`config.yaml`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionHasNWB,\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  const hasNWB = useSelector(selectExperimentFunctionHasNWB(uid, nodeId))\n\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} nodeId={nodeId} hasNWB={hasNWB} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineIsStartedSuccess,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const isRunning = useSelector((state: RootState) => {\n    const currentUid = selectPipelineLatestUid(state)\n    const isPending = selectPipelineIsStartedSuccess(state)\n    return uid === currentUid && isPending\n  })\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen} disabled={isRunning} color=\"error\">\n        <DeleteOutlineIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { importExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\n\nexport const ImportButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    dispatch(importExperimentByUid(uid))\n      .unwrap()\n      .then(() =>\n        enqueueSnackbar('Successfully imported.', { variant: 'success' }),\n      )\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Checkbox from '@mui/material/Checkbox'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n  selectExperimentHasNWB,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  ConfigDownloadButton,\n} from './Button/DownloadButton'\nimport { ImportButton } from './Button/ImportButton'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'studio_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListValues = Object.values(experimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n\n  const onChangeAllCheck = (checked: boolean) => {\n    if (checked) {\n      setCheckedList(experimentListValues.map((experiment) => experiment.uid))\n    } else {\n      setCheckedList([])\n    }\n  }\n\n  const recordsIsEmpty = experimentListKeys.length === 0\n\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  const [page, setPage] = React.useState(0)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const [rowsPerPage, setRowsPerPage] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const newValue = parseInt(event.target.value, 10)\n    setRowsPerPage(newValue)\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        {!recordsIsEmpty && (\n          <Typography sx={{ flexGrow: 1, m: 1 }}>\n            {checkedList.length} selected\n          </Typography>\n        )}\n        <Button\n          sx={{\n            margin: (theme) => theme.spacing(0, 1, 1, 0),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          color=\"error\"\n          endIcon={<DeleteIcon />}\n          onClick={onClickDelete}\n          disabled={checkedList.length === 0}\n        >\n          Delete\n        </Button>\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Paper\n        elevation={0}\n        variant=\"outlined\"\n        sx={{\n          flexGlow: 1,\n          height: '100%',\n        }}\n      >\n        <TableContainer component={Paper} elevation={0}>\n          <Table aria-label=\"collapsible table\">\n            <HeadItem\n              order={order}\n              sortHandler={sortHandler}\n              allCheckIndeterminate={\n                checkedList.length !== 0 &&\n                checkedList.length !== Object.keys(experimentList).length\n              }\n              allChecked={\n                checkedList.length === Object.keys(experimentList).length\n              }\n              onChangeAllCheck={onChangeAllCheck}\n              checkboxVisible={!recordsIsEmpty}\n            />\n            <TableBody>\n              {experimentListValues\n                .sort(getComparator(order, sortTarget))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((expData) => (\n                  <ExperimentUidContext.Provider\n                    value={expData.uid}\n                    key={expData.uid}\n                  >\n                    <RowItem\n                      onCheckBoxClick={onCheckBoxClick}\n                      checked={checkedList.includes(expData.uid)}\n                    />\n                  </ExperimentUidContext.Provider>\n                ))}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={10} />\n                </TableRow>\n              )}\n              {recordsIsEmpty && (\n                <TableRow>\n                  <TableCell colSpan={10}>\n                    <Typography\n                      sx={{\n                        color: (theme) => theme.palette.text.secondary,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '300px',\n                        textAlign: 'center',\n                      }}\n                      variant=\"h6\"\n                    >\n                      No Rows...\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={experimentListKeys.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n  allChecked: boolean\n  onChangeAllCheck: (checked: boolean) => void\n  allCheckIndeterminate: boolean\n  checkboxVisible: boolean\n}>(\n  ({\n    order,\n    sortHandler,\n    allChecked,\n    onChangeAllCheck,\n    allCheckIndeterminate,\n    checkboxVisible,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              sx={{ visibility: checkboxVisible ? 'visible' : 'hidden' }}\n              checked={allChecked}\n              indeterminate={allCheckIndeterminate}\n              onChange={(e) => onChangeAllCheck(e.target.checked)}\n            />\n          </TableCell>\n          <TableCell />\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('timestamp')}\n            >\n              Timestamp\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('uid')}\n            >\n              ID\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('name')}\n            >\n              Name\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>Success</TableCell>\n          <TableCell>Reproduce</TableCell>\n          <TableCell>SnakeFile</TableCell>\n          <TableCell>NWB</TableCell>\n          <TableCell>Delete</TableCell>\n        </TableRow>\n      </TableHead>\n    )\n  },\n)\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n  checked: boolean\n}>(({ onCheckBoxClick, checked }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const hasNWB = useSelector(selectExperimentHasNWB(uid))\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox onChange={() => onCheckBoxClick(uid)} checked={checked} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell>{name}</TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportButton />\n        </TableCell>\n        <TableCell>\n          <ConfigDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} hasNWB={hasNWB} />\n        </TableCell>\n        <TableCell>\n          <DeleteButton />\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex', height: 'calc(100% - 58px)' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100%',\n          padding: 16,\n        }}\n      >\n        <MuiToolbar />\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import React from 'react'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport Tooltip from '@mui/material/Tooltip'\nimport { styled } from '@mui/material/styles'\nimport GitHubIcon from '@mui/icons-material/GitHub'\nimport MenuBookIcon from '@mui/icons-material/MenuBook'\n\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport FlowChart from './FlowChart/FlowChart'\nimport Visualize from './Visualize/Visualize'\nimport Experiment from './Experiment/Experiment'\nimport { Box } from '@mui/material'\nimport { useSearchParams } from 'react-router-dom'\n// import studioLogo from './studio.png'\n\nconst Project: React.FC = () => {\n  const [searchParams] = useSearchParams()\n  const [value, setValue] = React.useState(Number(searchParams.get('tab') || 0))\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n\n  return (\n    <RootDiv>\n      <StyledAppBar color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          {/* <img src={studioLogo} alt=\"studio\" width={75} height={50} /> */}\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Visualize\" {...a11yProps(1)} />\n            <Tab label=\"Record\" {...a11yProps(2)} />\n          </Tabs>\n          <Tooltip title=\"GitHub repository\">\n            <IconButton\n              sx={{ mr: 1 }}\n              href=\"https://github.com/oist/studio\"\n              target=\"_blank\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Documentation\">\n            <IconButton\n              href=\"https://studio.readthedocs.io/en/latest/\"\n              target=\"_blank\"\n            >\n              <MenuBookIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\nconst StyledAppBar = styled(Box)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Project\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n      }\n      setPrevStatus(status)\n    }\n  }, [status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import { createContext, useContext } from 'react'\n\nexport type User = {\n  created_time: null | string\n  display_name: null | string\n  email: string\n  last_login_time: null | string\n  role: string\n  uid: string\n}\n\nexport const UserContext = createContext<{\n  user?: User\n  setUser: Function\n}>({ setUser: () => null })\n\nexport const useUser = () => useContext(UserContext)\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useRef, useState } from 'react'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { useUser } from 'providers'\nimport { removeToken } from 'utils/auth'\nimport { useNavigate } from 'react-router-dom'\n\nconst Header: FC = () => {\n  const [open, setOpen] = useState(false)\n  const navigate = useNavigate()\n  const { user } = useUser()\n\n  const refMenu = useRef<HTMLDivElement | null>(null)\n\n  const closeMenu = () => {\n    setTimeout(() => {\n      setOpen(false)\n    }, 100)\n  }\n\n  const onClick = () => {\n    if (open) {\n      return refMenu.current?.blur?.()\n    }\n    setOpen(true)\n  }\n\n  const onLogout = () => {\n    removeToken()\n    navigate('/login')\n  }\n\n  const onNavigateAccount = () => {\n    navigate('/account')\n  }\n\n  return (\n    <HeaderWrapper>\n      <BoxWrapper>\n        <Image src=\"/static/favicon.ico\" alt=\"logo\" />\n        <TitleLogo>Studio</TitleLogo>\n      </BoxWrapper>\n      <BoxMenu ref={refMenu} tabIndex={1} onClick={onClick} onBlur={closeMenu}>\n        <AccountCircleIcon />\n        {open && (\n          <BoxDropdown>\n            <BoxInfo>\n              <AccountCircleIcon />\n              <Box>\n                <Typography>{user?.display_name}</Typography>\n                <Typography>{user?.email}</Typography>\n              </Box>\n            </BoxInfo>\n            <BoxMenuItem onClick={onNavigateAccount}>\n              <PortraitIcon /> Account Profile\n            </BoxMenuItem>\n            <BoxMenuItemLogout onClick={onLogout}>\n              SIGN OUT\n            </BoxMenuItemLogout>\n          </BoxDropdown>\n        )}\n      </BoxMenu>\n    </HeaderWrapper>\n  )\n}\n\nconst BoxDropdown = styled(Box)({\n  position: 'absolute',\n  backgroundColor: '#ffffff',\n  padding: '8px 16px 0',\n  top: 30,\n  right: 0,\n  listStyleType: 'none',\n  backgroundClip: 'padding-box',\n  borderRadius: 3,\n  outline: 'none',\n  boxShadow:\n    '0 6px 16px 0 rgb(0 0 0 / 8%), 0 3px 6px -4px rgb(0 0 0 / 12%), 0 9px 28px 8px rgb(0 0 0 / 5%)',\n  cursor: 'default',\n  zIndex: 1,\n  minWidth: 250,\n})\n\nconst Image = styled('img')({\n  height: 46,\n})\n\nconst BoxWrapper = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 8,\n})\n\nconst BoxMenu = styled(BoxWrapper)({\n  cursor: 'pointer',\n  position: 'relative',\n  userSelect: 'none',\n})\n\nconst BoxInfo = styled(BoxWrapper)({\n  borderBottom: `1px solid #e7e7e7`,\n  padding: '8px 0',\n  cursor: 'default',\n})\n\nconst BoxMenuItem = styled(BoxWrapper)({\n  padding: '8px 0',\n  cursor: 'pointer',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.05) translateX(5px)',\n  },\n})\n\nconst BoxMenuItemLogout = styled(BoxMenuItem)({\n  color: '#1a73e8',\n  fontWeight: 600,\n  marginTop: 30,\n  justifyContent: 'flex-end',\n  '&:hover': {\n    transform: 'scale(1.02)',\n  },\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nconst HeaderWrapper = styled(Box)({\n  height: 48,\n  backgroundColor: '#E1DEDB',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  color: 'rgba(0, 0, 0, 0.87)',\n  boxShadow:\n    '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n  position: 'fixed',\n  width: 'calc(100% - 32px)',\n  padding: '0 16px',\n  zIndex: 9999,\n})\n\nexport default Header\n","import axiosLibrary from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { getToken } from 'utils/auth'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\n\nexport default axios","import axios from 'components/utils/axios'\n\nexport const login = async (data: { email: string; password: string }) => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const getMe = async () => {\n  const response = await axios.get('/auth/me')\n  return response.data\n}\n\nexport const listUser = async () => {\n  const response = await axios.get('/admin/user')\n  return response.data\n}\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useEffect, useState } from 'react'\nimport { drawerWidth } from './FlowChart/FlowChart'\nimport Header from './Header'\nimport { KeyboardBackspace } from '@mui/icons-material'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { UserContext, useUser } from 'providers'\nimport { getToken } from 'utils/auth'\nimport { getMe } from 'api/auth'\n\nconst ignorePaths = ['/login', '/account-delete','/reset-password']\n\nconst Layout: FC = ({ children }) => {\n  const [user, setUser] = useState()\n  const location = useLocation()\n  const [width, setWidth] = useState(drawerWidth)\n  const navigate = useNavigate()\n\n  const onResize = () => {\n    setWidth(width === drawerWidth ? 54 : drawerWidth)\n  }\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname])\n\n  const checkkAuth = async () => {\n    if (user) return\n    const token = getToken()\n    try {\n      if (token) {\n        const data = await getMe()\n        return setUser(data)\n      }\n      if (\n        // !auth.currentUser &&\n        !['/login', '/signup', '/reset-password'].includes(window.location.pathname)\n      ) {\n        navigate('/login')\n      }\n    } catch {\n      navigate('/login')\n    }\n  }\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <LayoutWrapper>\n        {ignorePaths.includes(location.pathname) ? null : <Header />}\n        <ContentBodyWrapper>\n          {ignorePaths.includes(location.pathname) ? null : (\n            <MenuLeft onResize={onResize} width={width} />\n          )}\n          <ChildrenWrapper\n            style={{\n              width: `calc(100% - ${\n                ignorePaths.includes(location.pathname) ? 0 : width + 10\n              }px)`,\n            }}\n          >\n            {children}\n          </ChildrenWrapper>\n        </ContentBodyWrapper>\n      </LayoutWrapper>\n    </UserContext.Provider>\n  )\n}\n\nconst MenuLeft: FC<{ onResize: any; width: number }> = ({\n  onResize,\n  width,\n}) => {\n  const { user } = useUser()\n  const { pathname } = useLocation()\n  const isClose = width !== drawerWidth\n  return (\n    <MenuLeftWrapper style={{ width, minWidth: width }}>\n      <BoxBack>\n        <ButtonBack\n          onClick={onResize}\n          style={{ transform: `rotate(${width === drawerWidth ? 0 : 180}deg)` }}\n        >\n          <BoxDivider />\n          <KeyboardBackspaceIcon />\n        </ButtonBack>\n      </BoxBack>\n      <MenuList>\n        <LinkWrapper to=\"/\">\n          <MenuItem isClose={isClose} active={pathname === '/'}>\n            <HomeIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Dashboard\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/database\">\n          <MenuItem isClose={isClose} active={pathname === '/database'}>\n            <StorageIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Database\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/projects\">\n          <MenuItem isClose={isClose} active={pathname === '/projects'}>\n            <SourceIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Projects\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        {user?.role === 'ADMIN' ? (\n          <LinkWrapper to=\"/account-manager\">\n            <MenuItem\n              isClose={isClose}\n              active={pathname === '/account-manager'}\n            >\n              <GroupIcon />\n              <TypographyMenu\n                style={{ opacity: Number(width === drawerWidth) }}\n              >\n                Account Manager\n              </TypographyMenu>\n            </MenuItem>\n          </LinkWrapper>\n        ) : null}\n      </MenuList>\n    </MenuLeftWrapper>\n  )\n}\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: 48,\n  height: 'calc(100% - 48px)',\n  paddingRight: 10,\n  overflow: 'hidden',\n}))\n\nconst ChildrenWrapper = styled(Box)(() => ({\n  height: 'calc(100% - 10px)',\n  display: 'flex',\n  paddingTop: 10,\n  paddingLeft: 10,\n}))\n\nconst MenuLeftWrapper = styled(Box)({\n  height: '100%',\n  backgroundColor: '#283237',\n  overflow: 'auto',\n  transition: 'all 0.3s',\n})\n\nconst BoxBack = styled(Box)({\n  width: '100%',\n  height: 54,\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonBack = styled(Box)({\n  height: 54,\n  width: 54,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n})\n\nconst BoxDivider = styled(Box)({\n  height: 15,\n  width: 1,\n  backgroundColor: '#ffffff',\n  marginRight: -2,\n})\n\nconst KeyboardBackspaceIcon = styled(KeyboardBackspace)({\n  color: '#ffffff',\n  fontSize: 20,\n})\n\nconst MenuList = styled('ul')({\n  margin: 0,\n  padding: 0,\n})\n\nconst MenuItem = styled('li', {\n  shouldForwardProp: (props) => props !== 'isClose' && props !== 'active',\n})<{ isClose: boolean; active: boolean }>(({ isClose, active }) => ({\n  padding: '0 15px',\n  color: '#ffffff',\n  listStyle: 'none',\n  height: 38,\n  minHeight: 38,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  width: 'calc(100% - 30px)',\n  minWidth: 'max-content',\n  transition: 'all 0.3s',\n  cursor: 'pointer',\n  backgroundColor: active ? 'rgba(255,255,255,0.4) !important' : 'transparent',\n  '&:hover': {\n    transform: isClose\n      ? 'scale(1.05) translateX(2px)'\n      : 'scale(1.05) translateX(10px)',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n  },\n}))\n\nconst TypographyMenu = styled(Typography)({\n  lineHeight: '20px',\n  marginTop: 4,\n  fontWeight: 500,\n  transition: 'opacity 0.3s',\n})\n\nexport default Layout\n","import { Box, styled, Typography } from '@mui/material'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { Link } from 'react-router-dom'\nimport { useUser } from 'providers'\n\nconst Dashboard = () => {\n  const { user } = useUser()\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/database\">\n            <BoxMenu>\n              <Box>\n                <SourceIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/projects\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Projects</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/account\">\n            <BoxMenu>\n              <Box>\n                <AccountCircleIcon fontSize=\"large\" />\n                <TitleMenu>Account</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {user?.role === 'ADMIN' ? (\n            <LinkWrapper to=\"/account-manager\">\n              <BoxMenu>\n                <Box>\n                  <GroupIcon fontSize=\"large\" />\n                  <TitleMenu>Account Manager</TitleMenu>\n                </Box>\n              </BoxMenu>\n            </LinkWrapper>\n          ) : null}\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { styled } from '@mui/material'\n\nexport const Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description?: string\n}\nconst ModalDeleteAccount: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <Typography style={{ whiteSpace: 'pre-wrap' }}>\n          {description || 'Delete account will erase all of your data.'}This\n          operation cannot be undone. To continue, type \"\n          <span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n        </Typography>\n        <BoxConfirm>\n          <Input\n            placeholder=\"DELETE\"\n            value={textDelete}\n            onChange={(e) => setTextDelete(e.target.value)}\n          />\n          <ButtonConfirm onClick={onConfirm}>{titleSubmit}</ButtonConfirm>\n        </BoxConfirm>\n        <Button onClick={onClose}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default ModalDeleteAccount\n","import { Box, styled, Typography } from '@mui/material'\nimport { FC, useCallback } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\n\ntype Column = {\n  width?: number | string\n  title: string\n  dataIndex?: string\n  name?: string\n  align?: string\n  filter?: boolean\n  render?: (\n    item?: any,\n    value?: any,\n    index?: number,\n  ) => JSX.Element | null | undefined\n}\n\ntype TableComponentProps = {\n  data?: any[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  className?: string\n  columns?: Column[]\n  paginate?: {\n    page: number\n    total: number\n    page_size: number\n    breakLabel?: string\n    nextLabel?: string\n    previousLabel?: string\n    pageRangeDisplayed?: number\n    renderOnZeroPageCount?: string\n    onPageChange?: (selectedItem: { selected: number }) => any\n  }\n}\n\nconst TableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    data = [],\n    columns = [],\n    paginate,\n    className,\n    orderBy,\n    orderKey,\n  } = props\n  const pageCount = (paginate?.total || 0) / (paginate?.page_size || 1)\n\n  const renderCol = useCallback((col: Column, item: any, index: number) => {\n    const value = item[col.name || col.dataIndex || '']\n    if (col.render) return col.render(item, value, index)\n    return value || null\n  }, [])\n\n  return (\n    <Box className={className}>\n      <Table>\n        <Thead>\n          <Tr>\n            {columns.map((col, iCol) => {\n              const nameCol = col.name || col.dataIndex || ''\n              return (\n                <Th\n                  style={{ width: col.width, textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {col.title}\n                  <ArrowDownwardIconOrder\n                    style={{\n                      transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                      opacity:\n                        orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                  />\n                </Th>\n              )\n            })}\n          </Tr>\n        </Thead>\n        <TBody>\n          {data.map((item, index) => (\n            <Tr key={item.id || index}>\n              {columns.map((col, iCol) => (\n                <Td\n                  style={{ textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {renderCol(col, item, index)}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n        </TBody>\n      </Table>\n      {!data.length ? <NoData>No Data</NoData> : null}\n      {pageCount ? (\n        <MyPaginate\n          disableInitialCallback\n          marginPagesDisplayed={3}\n          pageRangeDisplayed={3}\n          breakLabel={'...'}\n          pageCount={pageCount}\n          previousLabel={<KeyboardArrowLeftIcon />}\n          nextLabel={<ChevronRightIcon />}\n          {...paginate}\n        />\n      ) : null}\n    </Box>\n  )\n}\n\nconst MyPaginate = styled(ReactPaginate)<any>`\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  list-style-type: none;\n  padding: 1rem 0;\n  li a {\n    padding: 0.6rem 1rem;\n    cursor: pointer;\n  }\n  li.previous,\n  li.next {\n    margin-top: -2px;\n  }\n  li.previous.disabled,\n  li.next.disabled {\n    opacity: 0.4;\n  }\n  li.previous a,\n  li.next a,\n  li.break a {\n    border-color: transparent;\n  }\n  li.active a {\n    background-color: #0366d6;\n    border-color: transparent;\n    color: white;\n    min-width: 32px;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n  li.selected {\n    color: #1677ff;\n    font-weight: 600;\n  }\n`\n\nconst Table = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  width: 118,\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nexport default TableComponent\n","import {InputProps, styled, Typography} from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n    errorMessage: string,\n    value?: string\n}\n\nconst InputError = ({ errorMessage, onChange, value, type, onBlur} :InputErrorProps) => {\n    return (\n        <>\n            <Input\n                autoComplete= \"Off\"\n                error={!!errorMessage}\n                onChange={onChange}\n                value={value}\n                type={type}\n                onBlur={onBlur}\n            />\n            <TextError>{errorMessage}</TextError>\n        </>\n    )\n}\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 15,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    minHeight: 18,\n    color: 'red',\n    lineHeight: '14px',\n    margin: \"-14px 0px 0px 305px\",\n    wordBreak: 'break-word',\n})\n\nexport default InputError;","import {MenuItem, Select, styled, Typography} from \"@mui/material\";\nimport React from \"react\";\n\nconst SelectError = ({value, onChange, onBlur, errorMessage, options }: any) => {\n    return (\n        <>\n            <SelectModal\n                value={value}\n                onChange = {onChange}\n                onBlur = {onBlur}\n                error={!!errorMessage}\n            >\n                {\n                    options.map((item: string) => {\n                        return (\n                            <MenuItem key={item} value={item}>{item}</MenuItem>\n                        )\n                    })\n                }\n            </SelectModal>\n            <TextError>{errorMessage}</TextError>\n        </>\n    )\n}\n\nconst SelectModal = styled(Select, {\n    shouldForwardProp : (props) => props !== 'error',\n})<{error: boolean}>(({theme,error })=>({\n    width : 272,\n    marginBottom : '15px',\n    border : '1px solid #d9d9d9',\n    borderColor: error ? 'red' : '#d9d9d9',\n    borderRadius : 4\n}))\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    minHeight: 18,\n    color: 'red',\n    lineHeight: '14px',\n    margin: \"-14px 0px 0px 305px\",\n    wordBreak: 'break-word',\n})\nexport default SelectError;","import { Box, Button, styled } from '@mui/material'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport TableComponent from 'components/Table'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InputError from '../../components/common/InputError'\nimport SelectError from '../../components/common/SelectError'\n// import { listUser } from 'api/auth'\n\nconst ModalComponent = ({\n  data,\n  setData,\n  setIsOpenModal,\n  type,\n  dataEdit,\n}: any) => {\n  const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/\n  const regexPassword = /^(?=.*\\d)(?=.*[@$!%*#?&])(?=.*[a-zA-Z]).{6,100}$/\n  const [formData, setFormData] = useState(type !== 'Add' ? dataEdit : {})\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n    role: '',\n    lab: '',\n    name: '',\n    confirmPassword: '',\n  })\n  const [values, setValues] = useState<{ [key: string]: string }>(\n    dataEdit || {\n      email: '',\n      password: '',\n      role: '',\n      lab: '',\n      name: '',\n      confirmPassword: '',\n    },\n  )\n  const validateEmail = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regex.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    return ''\n  }\n\n  const onChangeData = useCallback(\n    (e: any, type: string) => {\n      setFormData({ ...formData, [type]: e.target.value })\n      const { value } = e.target\n      setValues((pre) => ({ ...pre, [type]: value }))\n    },\n    [formData],\n  )\n  const onBlurData = useCallback(\n    (e: any, type: string, validate?: Function) => {\n      const { value } = e.target\n      setValues((pre) => ({ ...pre, [type]: value }))\n      setErrors((pre) => ({\n        ...pre,\n        [type]: value === '' ? 'This field is required' : validate?.(value),\n      }))\n    },\n    [],\n  )\n\n  const onSubmit = (e: any) => {\n    e.preventDefault()\n    const errorEmail = validateEmail(values.email)\n    const errorPassword = validatePassword(values.password)\n    const errorConfirmPassword = validatePassword(values.confirmPassword)\n    const errorNotMatch =\n      formData.password === formData.confirmPassword\n        ? ''\n        : 'password is not match'\n    if (errorEmail || errorPassword || errorConfirmPassword || errorNotMatch) {\n      setErrors({\n        email: errorEmail,\n        password: errorPassword,\n        confirmPassword:\n          errorConfirmPassword === '' ? errorNotMatch : errorConfirmPassword,\n        name:\n          values.name === '' || !formData.hasOwnProperty('name')\n            ? 'This field is required'\n            : '',\n        lab:\n          values.lab === '' || !formData.hasOwnProperty('lab')\n            ? 'This field is required'\n            : '',\n        role:\n          values.role === '' || !formData.hasOwnProperty('role')\n            ? 'This field is required'\n            : '',\n      })\n      return\n    }\n    if (type === 'Add') {\n      setData([...data, { ...formData, id: String(Math.random() * 100) }])\n    } else {\n      setData((pre: any) => {\n        pre.splice(data.indexOf(dataEdit), 1, formData)\n        return pre\n      })\n    }\n    setIsOpenModal(false)\n  }\n  const onCancel = () => {\n    setIsOpenModal(false)\n  }\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{type} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Lab: </LabelModal>\n          <InputError\n            value={formData?.lab || ''}\n            onChange={(e: any) => onChangeData(e, 'lab')}\n            onBlur={(e: any) => onBlurData(e, 'lab')}\n            errorMessage={errors.lab}\n          />\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            value={formData?.name || ''}\n            onChange={(e: any) => onChangeData(e, 'name')}\n            onBlur={(e: any) => onBlurData(e, 'name')}\n            errorMessage={errors.name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role || ''}\n            options={['Admin', 'Researcher', 'Manager']}\n            onChange={(e: any) => onChangeData(e, 'role')}\n            onBlur={(e: any) => onBlurData(e, 'role')}\n            errorMessage={errors.role}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            value={formData?.email || ''}\n            onChange={(e: any) => onChangeData(e, 'email')}\n            onBlur={(e: any) => onBlurData(e, 'email', validateEmail)}\n            errorMessage={errors.email}\n          />\n          <LabelModal>Password: </LabelModal>\n          <InputError\n            value={formData?.password || ''}\n            onChange={(e: any) => onChangeData(e, 'password')}\n            onBlur={(e: any) => onBlurData(e, 'password', validatePassword)}\n            type={'password'}\n            errorMessage={errors.password}\n          />\n          <LabelModal>Confirm Password: </LabelModal>\n          <InputError\n            value={formData?.confirmPassword || ''}\n            onChange={(e: any) => onChangeData(e, 'confirmPassword')}\n            onBlur={(e: any) =>\n              onBlurData(e, 'confirmPassword', validatePassword)\n            }\n            type={'password'}\n            errorMessage={errors.confirmPassword}\n          />\n        </BoxData>\n        <ButtonModal>\n          <Button onClick={(e) => onSubmit(e)}>Ok</Button>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n        </ButtonModal>\n      </ModalBox>\n    </Modal>\n  )\n}\nconst AccountManager = () => {\n  const [openDelete, setOpenDelete] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [type, setType] = useState<string>('')\n  const [dataEdit, setDateEdit] = useState({})\n  const [idDel, setIdDel] = useState<string | undefined>()\n  const [data, setData] = useState([\n    {\n      id: '1',\n      lab: 'Lab1',\n      name: 'Mail Address',\n      role: 'Admin',\n      email: 'sfdsf@gmail.com',\n      password: 'abcxyz',\n      confirmPassword: 'abcxyz',\n    },\n  ])\n\n  useEffect(() => {\n    getList()\n  }, [])\n\n  const getList = async () => {\n    // const data = await listUser()\n  }\n\n  const onOpenModal = (type: string) => {\n    setIsOpenModal(true)\n    setType(type)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = (id: string) => {\n    setIdDel(id)\n    setOpenDelete(true)\n  }\n\n  const onForgotPassword = (data: any) => {\n    //todo call api\n    setDateEdit(data)\n    setIsOpenModal(true)\n    setType('Edit')\n  }\n\n  const onDelete = () => {\n    const index = data.findIndex((item) => item.id === idDel)\n    data.splice(index, 1)\n    //todo call api\n    handleCloseDelete()\n  }\n\n  const columns = useMemo(\n    () => [\n      { title: 'Lab', name: 'lab' },\n      { title: 'Name', name: 'name' },\n      { title: 'Role', name: 'role' },\n      { title: 'Mail', name: 'email' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data: any) => (\n          <>\n            <ALink sx={{ color: 'red' }} onClick={() => onForgotPassword(data)}>\n              <EditIcon sx={{ color: 'black' }} />\n            </ALink>\n            <ALink sx={{ ml: 1.25 }} onClick={() => onConfirmDelete(data.id)}>\n              <DeleteIcon sx={{ color: 'red' }} />\n            </ALink>\n          </>\n        ),\n      },\n    ],\n    [],\n  )\n\n  return (\n    <AccountManagerWrapper>\n       <h1 style={{ paddingLeft: 16 }}>Account Manager</h1>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <BoxButton>\n        <ButtonAdd onClick={() => onOpenModal('Add')} variant=\"contained\">\n          Add\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{ total: 100, page: 1, page_size: 10 }}\n        data={data}\n        columns={columns}\n      />\n      {isOpenModal ? (\n        <ModalComponent\n          data={data}\n          setData={setData}\n          type={type}\n          setIsOpenModal={setIsOpenModal}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst BoxButton = styled(Box)({\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  width: 100,\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  height: 550,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\nconst InputPassword: FC<any> = (props) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...props} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{props.error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport InputPassword from 'components/InputPassword'\nimport { ChangeEvent, FC, useState } from 'react'\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n}\n\nconst regexPassword = /^(?=.*\\d)(?=.*[@$!%*#?&])(?=.*[a-zA-Z]).{6,100}$/\n\nconst ModalChangePassword: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, password } = values\n    if (reEnter && reEnter !== password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e: any) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e: any) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e: any) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={onSubmit}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onClose}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ModalChangePassword\n","import { Box, Button, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport ModalChangePassword from 'components/ModalChangePassword'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { useUser } from 'providers'\nimport { useState } from 'react'\n\nconst Account = () => {\n  const { user } = useUser()\n  const [isEditName, setIsEditName] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [openChangePw, setOpenChangePw] = useState(false)\n\n  const onEditName = () => {\n    setIsEditName(false)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = () => {\n    setOpenDelete(true)\n  }\n\n  const onDelete = () => {\n    //todo call api\n    handleCloseDelete()\n  }\n\n  const handleCloseChangePw = () => {\n    setOpenChangePw(false)\n  }\n\n  const onConfirmChangePw = () => {\n    setOpenChangePw(true)\n  }\n\n  const onChangePw = () => {\n    //todo call api\n    handleCloseChangePw()\n  }\n\n  return (\n    <AccountWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ModalChangePassword\n        onSubmit={onChangePw}\n        open={openChangePw}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData sx={{ marginTop: isEditName ? -2 : 0 }}>Full name</TitleData>\n        <BoxData>\n          {isEditName ? (\n            <Input\n              autoFocus\n              defaultValue={user?.display_name || ''}\n              onBlur={onEditName}\n              placeholder=\"Full name\"\n            />\n          ) : (\n            <>\n              {user?.display_name || \"--\"}\n              <Button sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n                Edit\n              </Button>\n            </>\n          )}\n        </BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{user?.role}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10 }}>\n        <ButtonSubmit onClick={onConfirmChangePw}>Change Password</ButtonSubmit>\n        <ButtonSubmit onClick={onConfirmDelete}>Delete Account</ButtonSubmit>\n      </BoxFlex>\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n})\n\nconst ButtonSubmit = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import { Box, Button, styled } from '@mui/material'\nimport { useCallback, useMemo, useState } from 'react'\nimport TableComponent from '../../components/Table'\nimport { useNavigate } from 'react-router-dom'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\n\ntype DataProject = {\n  id: number | string\n  name: string\n  project_type: number\n  image_count: number\n  created_time: string\n  updated_time: string\n}\n\nconst Projects = () => {\n  const navigate = useNavigate()\n  const [idDelete, setIdDelete] = useState<string | undefined>()\n  const [data, setData] = useState<DataProject[]>([\n    {\n      id: '1',\n      name: 'prj name 1',\n      created_time: '2023-03-10 09:19:38',\n      updated_time: '2023-03-10 09:19:38',\n      image_count: 3,\n      project_type: 0,\n    },\n    {\n      id: '2',\n      name: 'prj name 2',\n      created_time: '2023-03-10 09:19:38',\n      updated_time: '2023-03-10 09:19:38',\n      image_count: 3,\n      project_type: 1,\n    },\n  ])\n\n  const onEdit = useCallback((id: any) => {\n    navigate(`/project/new-project?id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onWorkflow = useCallback((id: any) => {\n    console.log('Workflow: ', id)\n    navigate('/workflow')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onResults = useCallback((id: any) => {\n    console.log('Results: ', id)\n    navigate('/workflow?tab=2')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addNewProject = useCallback(() => {\n    navigate('/project/new-project')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onDelete = (id: string) => {\n    setIdDelete(id)\n  }\n\n  const onDeleteSubmit = () => {\n    const id = idDelete\n    setIdDelete(undefined)\n    setData(data.filter((e) => e.id !== id))\n  }\n\n  const handleCloseDelete = () => {\n    setIdDelete(undefined)\n  }\n\n  const columns = useMemo(\n    () => [\n      { title: 'Project Name', name: 'name' },\n      { title: 'Created', name: 'created_time' },\n      { title: 'Updated', name: 'updated_time' },\n      { title: 'Images', name: 'image_count', align: 'center' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data: any) => (\n          <BoxButton>\n            <ButtonAdd variant=\"contained\" onClick={() => onEdit(data.id)}>\n              Edit\n            </ButtonAdd>\n            <ButtonAdd variant=\"contained\" onClick={() => onWorkflow(data.id)}>\n              Workflow\n            </ButtonAdd>\n            <ButtonAdd variant=\"contained\" onClick={() => onResults(data.id)}>\n              Results\n            </ButtonAdd>\n            <ButtonAdd\n              variant=\"contained\"\n              onClick={() => onDelete(data.id)}\n              sx={{ backgroundColor: 'red !important' }}\n            >\n              Del\n            </ButtonAdd>\n          </BoxButton>\n        ),\n      },\n    ],\n    [onWorkflow, onResults, onEdit],\n  )\n  return (\n    <ProjectsWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Project\"\n        description=\"Delete My Project\"\n        onClose={handleCloseDelete}\n        open={!!idDelete}\n        onSubmit={onDeleteSubmit}\n      />\n      <ProjectsTitle>Projects</ProjectsTitle>\n      <BoxButton>\n        <ButtonAdd\n          variant=\"contained\"\n          onClick={addNewProject}\n          sx={{ marginBottom: 2 }}\n        >\n          Add Project\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{ total: 100, page: 1, page_size: 10 }}\n        data={data}\n        columns={columns}\n      />\n    </ProjectsWrapper>\n  )\n}\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst ProjectsTitle = styled('h1')(({ theme }) => ({}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nexport default Projects\n","import { Box, styled, Typography } from '@mui/material'\nimport { MouseEvent, FC, Fragment, useState, useRef, useEffect } from 'react'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\n\ntype Column = {\n  width?: number\n  title: string\n  dataIndex?: string\n  name?: string\n  child?: string\n  filter?: boolean\n  render?: (\n    item?: any,\n    value?: any,\n    index?: number,\n  ) => JSX.Element | null | undefined | string | number\n}\n\ntype TableComponentProps = {\n  data?: any[]\n  className?: string\n  columns?: Column[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: string) => any\n  rowClick?: (row: any) => any\n  onClickEvent?: (e: any, row: any) => any\n  draggable?: boolean\n  onDrag?: (row?: any) => any\n  onDragEnd?: (row?: any) => any\n  defaultExpand?: boolean\n  previewImage?: boolean\n}\n\ntype RenderColumnProps = {\n  item: any\n  columns: Column[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: string) => any\n  rowClick?: (e: any, row: any) => any\n  draggable?: boolean\n  onDrag?: (event: any, row?: any) => any\n  onDragEnd?: (row?: any) => any\n  index: number\n  isData?: boolean\n  defaultExpand?: boolean\n  dataShow?: boolean\n  beginDrag?: boolean\n  draggableProps?: boolean\n  previewImage?: boolean\n  allowMutilKey?: boolean\n  drags: any[]\n  onMouseDown: (event: MouseEvent<HTMLTableRowElement>) => any\n}\n\nconst renderCol = (col: Column, item: any, index: number, child?: boolean) => {\n  const key = col.name || col.dataIndex || ''\n  const value = item[child ? col.child || key : key]\n  if (col.render) return col.render(item, value, index)\n  return typeof value === 'object' || Array.isArray(value) ? null : value\n}\n\nconst ChildCol = (props: RenderColumnProps) => {\n  const { columns, item, index, rowClick, defaultExpand, isData } = props\n  const [show, setShow] = useState<boolean>(!!defaultExpand)\n\n  const onClickCol = (event: MouseEvent<HTMLTableDataCellElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n    setShow(!show)\n  }\n\n  return (\n    <Fragment>\n      <Tr\n        onClick={(e) => rowClick?.(e, item)}\n        style={{ backgroundColor: 'rgb(238, 238, 238)' }}\n      >\n        {columns.map((column) => {\n          const key = column.name || column.dataIndex || ''\n          const value =\n            isData && key === 'datatypes'\n              ? item.title\n              : renderCol(column, item, index)\n          return (\n            <Td\n              key={`row_child_${column.name || column.dataIndex}`}\n              onClick={onClickCol}\n              style={{ cursor: 'pointer' }}\n            >\n              <ElementFlex>\n                {['datatypes', 'sessions'].includes(key) && value ? (\n                  <ArrowDropDownIconWrap\n                    style={{ transform: `rotate(${show ? 180 : 0}deg)` }}\n                  />\n                ) : null}\n                {['datatypes', 'sessions', 'subject'].includes(key)\n                  ? value\n                  : null}\n              </ElementFlex>\n            </Td>\n          )\n        })}\n      </Tr>\n      {show && (\n        <RenderColumn\n          {...props}\n          draggable={props.draggableProps}\n          item={item}\n          dataShow\n          isData={isData}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nconst RenderColumn = (props: RenderColumnProps) => {\n  const {\n    columns,\n    item,\n    index,\n    rowClick,\n    dataShow,\n    previewImage,\n    isData,\n    drags,\n    onMouseDown,\n    beginDrag,\n  } = props\n  const { draggable, onDrag, onDragEnd } = props\n\n  const onDragEvent = (_: any, image: any) => {\n    return onDrag?.([image])\n  }\n\n  if (Array.isArray(item.sessions) && item.sessions?.length && !isData) {\n    const itemData = item.sessions\n    return itemData.map((i: any, index: number) => (\n      <ChildCol key={`col_${i.id}_${index}`} {...props} item={i} />\n    ))\n  }\n\n  if (\n    Array.isArray(item.datatypes?.images) &&\n    item.datatypes?.images?.length &&\n    !isData\n  ) {\n    const itemData = item.datatypes\n    return <ChildCol {...props} item={itemData} isData />\n  }\n\n  if (isData) {\n    return item.images.map((image: any, index: number) => {\n      const isDragging = drags.find((drag: any) => drag.id === image.id)\n      return (\n        <Tr\n          onMouseDown={onMouseDown}\n          id={image.id}\n          key={`data_show_image_${image.id}_${index}`}\n          onClick={(e) => rowClick?.(e, image)}\n          draggable={draggable}\n          onDragStart={(e) => onDragEvent?.(e, image)}\n          onDragEnd={onDragEnd}\n          style={{\n            border: `${\n              isDragging && draggable && !beginDrag ? 2 : 0\n            }px dashed #1976d2`,\n            transition: 'all 0.3s',\n            opacity: isDragging && draggable && beginDrag ? 0.3 : 1,\n            backgroundColor:\n              dataShow || previewImage ? 'transparent' : 'rgb(238, 238, 238)',\n          }}\n        >\n          {columns.map((column) => {\n            const key = column.name || column.dataIndex || ''\n            return (\n              <Td key={`col_${column.name || column.dataIndex}`}>\n                {dataShow && ['datatypes', 'sessions'].includes(key)\n                  ? null\n                  : renderCol(column, image, index)}\n              </Td>\n            )\n          })}\n        </Tr>\n      )\n    })\n  }\n\n  return (\n    <Tr\n      onClick={(e) => rowClick?.(e, item)}\n      draggable={draggable}\n      onDragStart={(e) => onDragEvent?.(e, item)}\n      onDragEnd={onDragEnd}\n      style={{\n        transition: 'all 0.3s',\n        backgroundColor:\n          dataShow || previewImage ? 'transparent' : 'rgb(238, 238, 238)',\n      }}\n    >\n      {columns.map((column) => {\n        const key = column.name || column.dataIndex || ''\n        return (\n          <Td key={`col_${column.name || column.dataIndex}`}>\n            {dataShow && ['datatypes', 'sessions'].includes(key)\n              ? null\n              : renderCol(column, item, index)}\n          </Td>\n        )\n      })}\n    </Tr>\n  )\n}\n\nconst DatabaseTableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    className,\n    orderKey,\n    orderBy,\n    onSort,\n    draggable,\n    rowClick,\n    onDrag,\n    onDragEnd,\n    ...p\n  } = props\n  const { data = [], columns = [] } = props\n  const [drags, setDrags] = useState<any[]>([])\n  const [mouseMoveRect, setMouseMoveRect] = useState({ pageX: 0, pageY: 0 })\n\n  const ctrRef = useRef(false)\n  const refTdSelect = useRef<{\n    [key: string]: {\n      dom: HTMLTableRowElement\n      tds: { id: number | string; dom: HTMLTableCellElement; html: string }[]\n    }\n  }>({})\n  const mouseStart = useRef<{ pageX: number; pageY: number } | undefined>()\n  const [beginDrag, setBeginDrag] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydownEvent)\n    window.addEventListener('keyup', onKeyupEvent)\n    window.addEventListener('mouseup', onMouseUp)\n    window.addEventListener('mousemove', onMouseMove)\n    return () => {\n      window.removeEventListener('keydown', onKeyupEvent)\n      window.removeEventListener('keyup', onKeyupEvent)\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('mousemove', onMouseMove)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onKeydownEvent = (event: KeyboardEvent) => {\n    ctrRef.current = event.ctrlKey || event.metaKey\n  }\n\n  const onKeyupEvent = (event: KeyboardEvent) => {\n    if (event.ctrlKey || event.metaKey) return\n    ctrRef.current = false\n    setDrags([])\n    onDragEnd?.()\n  }\n\n  const onSortHandle = (nameCol: string) => {\n    onSort?.(nameCol, orderBy === 'ASC' ? 'DESC' : 'ASC')\n  }\n\n  const onRowClickEvent = (\n    event: MouseEvent<HTMLTableColElement>,\n    image: any,\n  ) => {\n    if (!ctrRef.current || !draggable) {\n      return rowClick?.(image)\n    }\n    if (drags.find((drag: any) => drag.id === image.id)) {\n      setDrags(drags.filter((drag: any) => drag.id !== image.id))\n      delete refTdSelect.current[event.currentTarget.id]\n    } else {\n      setDrags([...drags, image])\n      const tds = event.currentTarget.getElementsByTagName('td')\n      refTdSelect.current[event.currentTarget.id] = {\n        dom: event.currentTarget as unknown as HTMLTableRowElement,\n        tds: [],\n      }\n      for (let i = 0; i < tds.length; i++) {\n        refTdSelect.current[event.currentTarget.id].tds.push({\n          id: tds[i].id,\n          dom: tds[i],\n          html: tds[i].innerHTML,\n        })\n      }\n    }\n  }\n\n  const onMouseDown = (event: MouseEvent<HTMLTableRowElement>) => {\n    if (!drags.length || !draggable) return\n    mouseStart.current = { pageX: event.pageX, pageY: event.pageY }\n    onDrag?.(drags)\n  }\n\n  const onMouseUp = () => {\n    mouseStart.current = undefined\n    setBeginDrag(false)\n  }\n\n  const onMouseMove = (event: any) => {\n    if (!mouseStart.current || !draggable || !mouseStart.current) return\n    setBeginDrag(true)\n    setMouseMoveRect({\n      pageX: event.pageX - mouseStart.current.pageX,\n      pageY: event.pageY - mouseStart.current.pageY,\n    })\n  }\n\n  return (\n    <>\n      <TableWrap className={className}>\n        <DataTable\n          style={{\n            width: columns.reduce((a, b) => a + (Number(b.width) || 110), 0),\n          }}\n        >\n          <Thead>\n            <Tr>\n              {columns.map((col, iCol) => {\n                const nameCol = col.name || col.dataIndex || ''\n                return (\n                  <Th\n                    onClick={() => onSortHandle(nameCol)}\n                    style={{\n                      maxWidth: col.width,\n                      width: col.width,\n                      cursor: 'pointer',\n                    }}\n                    key={col.dataIndex || col.name || iCol}\n                  >\n                    {col.title}\n                    <ArrowDownwardIconOrder\n                      style={{\n                        transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                        opacity:\n                          orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                      }}\n                    />\n                  </Th>\n                )\n              })}\n            </Tr>\n          </Thead>\n          <TBody>\n            {data.map((item, index) => (\n              <RenderColumn\n                allowMutilKey={ctrRef.current}\n                item={item}\n                index={index}\n                columns={columns}\n                {...p}\n                rowClick={(e, image) => onRowClickEvent(e, image)}\n                onMouseDown={onMouseDown}\n                beginDrag={beginDrag}\n                draggable={false}\n                draggableProps={draggable}\n                key={`row_table_${item.id}_${index}`}\n                drags={drags}\n                onDrag={onDrag}\n                onDragEnd={onDragEnd}\n              />\n            ))}\n          </TBody>\n        </DataTable>\n        {!data.length ? <NoData>No Data</NoData> : null}\n      </TableWrap>\n      {beginDrag &&\n        drags.map((el) => {\n          const trNow = refTdSelect.current[el.id]\n          const { width, height, top, left } = trNow.dom.getBoundingClientRect()\n          const style = {\n            width,\n            height,\n            top: top - window.scrollY + mouseMoveRect.pageY,\n            left: left + mouseMoveRect.pageX,\n          }\n          return (\n            <BoxDrag key={el.id} style={style}>\n              {trNow.tds.map((td, index) => {\n                const { width } = td.dom.getBoundingClientRect()\n                return (\n                  <Box key={`${td.id}_${index}`} style={{ width, padding: 16 }}>\n                    {td.html}\n                  </Box>\n                )\n              })}\n            </BoxDrag>\n          )\n        })}\n    </>\n  )\n}\n\nconst BoxDrag = styled(Box)({\n  position: 'absolute',\n  background: '#ffffff',\n  border: '1px dashed #1976d2',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst ArrowDropDownIconWrap = styled(ArrowDropDownIcon)({\n  transition: 'transform 0.3s',\n})\n\nconst ElementFlex = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst TableWrap = styled(Box)({\n  overflowX: 'scroll',\n})\n\nconst DataTable = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  userSelect: 'none',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nexport default DatabaseTableComponent\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  FC,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  TouchEvent,\n} from 'react'\n\ntype ChangeDragProps = {\n  title: string\n  value: number\n  onChange: (value: number) => void\n  className?: string\n  max?: number\n  min?: number\n  onChangeMin?: (v: number) => any\n  onChangeMax?: (v: number) => any\n  showInputMax?: boolean\n  showInputMin?: boolean\n}\n\nconst ChangeDrag: FC<ChangeDragProps> = (props) => {\n  const { title, value, onChange, className, max = 2, min = 0 } = props\n  const { onChangeMin, onChangeMax, showInputMax } = props\n  const [width, setWidth] = useState(0)\n  const mouseDown = useRef(0)\n\n  const refDrag = useRef<any>()\n  const refDot = useRef<any>()\n\n  useEffect(() => {\n    getWidth()\n    //eslint-disable-next-line\n  }, [])\n\n  const getWidth = () => {\n    if (!refDrag.current) getWidth()\n    setWidth(refDrag.current.clientWidth - 24)\n  }\n\n  const onMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n    mouseDown.current = event.pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onTouchStart = useCallback((event: TouchEvent<HTMLDivElement>) => {\n    mouseDown.current = event.touches[0].pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onMouseMove = (event: MouseEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.pageX - mouseInit - 12\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onTouchMove = (event: TouchEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.touches[0].pageX - mouseInit\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onMouseLeave = useCallback(() => {\n    mouseDown.current = 0\n    refDrag.current.style.cursor = 'default'\n    refDot.current.style.cursor = ''\n  }, [])\n\n  return (\n    <ScaleWrapper\n      className={className}\n      ref={refDrag}\n      onMouseMove={onMouseMove}\n      onTouchMove={onTouchMove}\n      onMouseLeave={onMouseLeave}\n      onMouseUp={onMouseLeave}\n    >\n      <TitleScale>{title}</TitleScale>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Input\n          value={value}\n          onChange={(e) => onChangeMin?.(Number(e.target.value))}\n        />\n        {showInputMax ? (\n          <Input\n            style={{ textAlign: 'right' }}\n            value={max}\n            onChange={(e) => onChangeMax?.(Number(e.target.value))}\n          />\n        ) : null}\n      </div>\n      <BoxWrapper>\n        <BoxLine style={{ width: ((value - min) * width) / (max - min) }} />\n        <Dot\n          ref={refDot}\n          onMouseDown={onMouseDown}\n          onTouchEnd={onMouseLeave}\n          onTouchStart={onTouchStart}\n          style={{ left: ((value - min) * width) / (max - min) }}\n        />\n      </BoxWrapper>\n    </ScaleWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 4,\n  background: 'rgba(60, 60, 67, 0.18)',\n  position: 'relative',\n  borderRadius: 2,\n  userSelect: 'none',\n}))\n\nconst Dot = styled(Box)(() => ({\n  position: 'absolute',\n  width: 24,\n  height: 24,\n  background: '#7a7a7a',\n  borderRadius: 100,\n  top: -11,\n  cursor: 'pointer',\n}))\n\nconst TitleScale = styled(Typography)(() => ({\n  fontSize: 14,\n  fontWeight: 700,\n}))\n\nconst BoxLine = styled(Box)(() => ({\n  position: 'absolute',\n  height: 4,\n  background: '#0A7AFF',\n  borderRadius: 2,\n}))\n\nconst ScaleWrapper = styled(Box)(({ theme }) => ({\n  paddingBottom: 20,\n  '@media (max-width: 809px)': {\n    paddingTop: theme.spacing(2),\n  },\n}))\n\nconst Input = styled('input')({\n  border: 'none',\n  outline: 'none',\n  width: 50,\n  marginBottom: 20,\n})\n\nexport default ChangeDrag\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { FC, useEffect, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ChangeDrag from './ChangeSize'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  url?: string\n  jsonData?: { [key: string]: any }\n  disabled?: { left: boolean; right: boolean }\n}\n\nconst ImageView: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  url,\n  onNext,\n  onPrevious,\n  jsonData,\n  disabled,\n}) => {\n  const viewerRef = useRef<any>()\n  const [worldCoords, setWorldCoords] = useState({ x: 0, y: 0, z: 0 })\n  const [voxelCoords, setVoxelCoords] = useState({ i: 0, j: 0, k: 0 })\n  const [values, setValues] = useState(0)\n  const [opacity, setOpacity] = useState(0)\n  const [thresholds, setThresholds] = useState(0)\n  const [maxThres, setMaxThres] = useState(0)\n  const [contracts, setContracts] = useState(1)\n  const [brightness, setBrightness] = useState(0)\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const volumes = useRef<any>()\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    setOpacity(0)\n    setContracts(1)\n    setBrightness(0)\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n\n  const onChangeThreshold = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeContract = (num: number) => {\n    if (!volumes.current) return\n    setContracts(num)\n    volumes.current.display.setContrast(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeBrightness = (num: number) => {\n    if (!volumes.current) return\n    setBrightness(num)\n    volumes.current.display.setBrightness(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMaxThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_max = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMinThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeJson = () => {}\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n          complete: function () {},\n        },\n      ],\n    })\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', function () {\n          setOpacity(1)\n          setIsLoadFile(false)\n        })\n        viewer.addEventListener('sliceupdate', function (event: any) {\n          // const panel = event.target\n          const { volume } = event\n          volumes.current = volume\n          setThresholds(volumes.current.intensity_min)\n          setMaxThres(volumes.current.intensity_max)\n          setValues(volume.getIntensityValue())\n          if (brainbrowser.utils.isFunction(volume.getWorldCoords)) {\n            setWorldCoords(volume.getWorldCoords())\n          }\n          if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n            setVoxelCoords(volume.getVoxelCoords())\n          }\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {},\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div\n            style={{\n              display: !opacity ? 'none' : 'flex',\n              alignItems: 'stretch',\n            }}\n          >\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              {opacity ? (\n                <BoxContentData>\n                  <p style={{ margin: 0, padding: '20px 0' }}>\n                    World Coordinates:\n                  </p>\n                  <span>X: {worldCoords.x.toPrecision(4)}</span>\n                  <span style={{ marginLeft: 20 }}>\n                    Y: {worldCoords.y.toPrecision(4)}\n                  </span>\n                  <span style={{ marginLeft: 20 }}>\n                    Z: {worldCoords.z.toPrecision(4)}\n                  </span>\n                  <p>Voxel Coordinates:</p>\n                  <span>I: {voxelCoords.i}</span>\n                  <span style={{ marginLeft: 20 }}>J: {voxelCoords.j}</span>\n                  <span style={{ marginLeft: 20 }}>K: {voxelCoords.k}</span>\n                  <p>Value: {values}</p>\n                  <ChangeDrag\n                    onChangeMax={onChangeMaxThresh}\n                    onChangeMin={onChangeMinThresh}\n                    max={maxThres}\n                    min={thresholds < 0 ? thresholds : 0}\n                    title={'Threshold'}\n                    value={thresholds}\n                    showInputMax\n                    showInputMin\n                    onChange={onChangeThreshold}\n                  />\n                  <ChangeDrag\n                    title={'Contrast (0.0 to 2.0)'}\n                    value={contracts}\n                    onChange={onChangeContract}\n                  />\n                  <ChangeDrag\n                    title={'Brightness (-1 to 1):'}\n                    value={brightness}\n                    min={-1}\n                    max={1}\n                    onChange={onChangeBrightness}\n                  />\n                </BoxContentData>\n              ) : null}\n            </div>\n            <WrapperJson>\n              <TextArea\n                onChange={onChangeJson}\n                value={JSON.stringify(jsonData || '')}\n              />\n            </WrapperJson>\n            {!disabled?.right ? (\n              <ButtonNext onClick={onNext}>\n                <ArrowForwardIosIconWrapper />\n              </ButtonNext>\n            ) : null}\n            {!disabled?.left ? (\n              <ButtonPrevious onClick={onPrevious}>\n                <ArrowBackIosIconWrapper />\n              </ButtonPrevious>\n            ) : null}\n          </div>\n          {(!opacity || isLoadFile) && (\n            <BoxLoading>\n              <img\n                src=\"/lib/loading.gif\"\n                alt=\"icon loading\"\n                style={{ width: 80, height: 80 }}\n              />\n            </BoxLoading>\n          )}\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst BoxLoading = styled(Box)({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'rgba(255,255,255, 0.1)',\n  zIndex: 88,\n})\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '10%',\n  right: '10%',\n  zIndex: 9999,\n})\n\nconst ButtonNext = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  right: '10%',\n  zIndex: 1,\n})\n\nconst ButtonPrevious = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  left: '10%',\n  zIndex: 1,\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst BoxContentData = styled(Box)({\n  margin: '-5px 0 0',\n  padding: '10px',\n  background: '#ffffff',\n})\n\nconst WrapperJson = styled(Box)({\n  minWidth: 300,\n  background: '#ffffff',\n})\n\nconst TextArea = styled('textarea')({\n  height: 'calc(100% - 7px)',\n  width: '100%',\n  outline: 'none !important',\n  border: 'none',\n  borderLeft: '1px solid',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nconst ArrowBackIosIconWrapper = styled(ArrowBackIosIcon)({\n  color: '#ffffff',\n  marginLeft: 10,\n})\n\nconst ArrowForwardIosIconWrapper = styled(ArrowForwardIosIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageView\n","import { DataDatabase, Image, Viewer } from 'pages/Database'\n\nexport const onGet = (\n  datas: DataDatabase[],\n  record: Viewer,\n  isSub?: boolean,\n): Image | undefined => {\n  const imageNext = datas.reduce((pre: any, current, index) => {\n    if (current.id === record.parent_id) {\n      const sessionIndex = current.sessions?.findIndex(\n        (e) => e.id === record.session_id,\n      )\n      if (typeof sessionIndex === 'number' && sessionIndex >= 0) {\n        const session = current.sessions?.[sessionIndex]\n        if (session) {\n          const findImageIndex = session.datatypes.images.findIndex(\n            (img) => img.id === record.id,\n          )\n          const imageNow =\n            session.datatypes.images[findImageIndex + (isSub ? -1 : 1)]\n          if (imageNow) {\n            pre = imageNow\n          }\n        }\n      }\n    }\n    return pre\n  }, undefined)\n  return imageNext\n}\n\nconst sortWithLabName = (\n  datasTable: DataDatabase[],\n  orderKey: string,\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = JSON.parse(JSON.stringify(datasTable)).sort(\n    (a: any, b: any) => {\n      if (typeOrder === 'DESC') {\n        return a[orderKey] > b[orderKey] ? -1 : 1\n      }\n      return a[orderKey] < b[orderKey] ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nconst sortWithSession = (\n  datasTable: DataDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = JSON.parse(JSON.stringify(datasTable)).sort(\n    (a: any, b: any) => {\n      if (typeOrder !== 'DESC') {\n        if (!b.sessions) return 1\n        return (\n          a.sessions?.sort((a: any, b: any) => a.id - b.id)[0].id -\n          b.sessions?.sort((a: any, b: any) => a.id - b.id)[0].id\n        )\n      }\n      if (!b.sessions) return -1\n      return (\n        b.sessions?.sort((a: any, b: any) => b.id - a.id)[0].id -\n        a.sessions?.sort((a: any, b: any) => b.id - a.id)[0].id\n      )\n    },\n  )\n  return newDatas\n}\n\nconst sortSubject = (\n  datasTable: DataDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = JSON.parse(JSON.stringify(datasTable))\n    .sort((dA: any, dB: any) => {\n      if (typeOrder === 'DESC') {\n        if (!dB.sessions) return 1\n        return dA.sessions?.sort((a: any, b: any) =>\n          a.subject > b.subject ? -1 : 1,\n        )[0].subject >\n          dB.sessions?.sort((a: any, b: any) =>\n            a.subject > b.subject ? -1 : 1,\n          )[0].subject\n          ? -1\n          : 1\n      }\n      if (!dB.sessions) return -1\n      return dB.sessions?.sort((a: any, b: any) =>\n        b.subject > a.subject ? -1 : 1,\n      )[0].subject >\n        dA.sessions?.sort((a: any, b: any) =>\n          b.subject > a.subject ? -1 : 1,\n        )[0].subject\n        ? -1\n        : 1\n    })\n    .map((el: any) => ({\n      ...el,\n      sessions: el.sessions?.sort((a: any, b: any) => {\n        if (typeOrder === 'ASC') {\n          return a.subject > b.subject ? 1 : -1\n        }\n        return b.subject > a.subject ? -1 : 1\n      }),\n    }))\n  return newDatas\n}\n\nconst sortDatatypes = (\n  datasTable: DataDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = JSON.parse(JSON.stringify(datasTable)).sort(\n    (dA: any, dB: any) => {\n      if (typeOrder !== 'DESC') {\n        if (!dB.sessions) return 1\n        return (\n          dA.sessions?.sort(\n            (a: any, b: any) => a.datatypes?.title - b.datatypes?.title,\n          )[0].title -\n          dB.sessions?.sort(\n            (a: any, b: any) => a.datatypes?.title - b.datatypes?.title,\n          )[0].title\n        )\n      }\n      if (!dB.sessions) return -1\n      return (\n        dB.sessions?.sort(\n          (a: any, b: any) => b.datatypes?.title - a.datatypes?.title,\n        )[0].datatypes?.title -\n        dA.sessions?.sort(\n          (a: any, b: any) => b.datatypes?.title - a.datatypes?.title,\n        )[0].datatypes?.title\n      )\n    },\n  )\n  return newDatas\n}\n\nconst sortImages = (datasTable: DataDatabase[], typeOrder?: 'ASC' | 'DESC') => {\n  if (typeOrder === 'ASC') return datasTable\n  return JSON.parse(JSON.stringify(datasTable)).reverse()\n}\n\nexport const onSort = (\n  datasTable: any[],\n  typeOrder: 'ASC' | 'DESC',\n  orderKey: string,\n  type: string = 'tree',\n) => {\n  let newDatas = datasTable\n  if (type === 'tree') {\n    if (['lab_name', 'user_name', 'recording_time'].includes(orderKey)) {\n      newDatas = sortWithLabName(datasTable, orderKey, typeOrder)\n    } else if (orderKey === 'sessions') {\n      newDatas = sortWithSession(datasTable, typeOrder)\n    } else if (orderKey === 'subject') {\n      newDatas = sortSubject(datasTable, typeOrder)\n    } else if (orderKey === 'datatypes') {\n      newDatas = sortDatatypes(datasTable, typeOrder)\n    } else {\n      newDatas = sortImages(datasTable, typeOrder)\n    }\n  } else {\n    newDatas = datasTable.sort((a: any, b: any) => {\n      if (typeOrder === 'DESC') {\n        return a[orderKey] > b[orderKey] ? -1 : 1\n      }\n      return a[orderKey] > b[orderKey] ? 1 : -1\n    })\n  }\n  return {\n    typeOrder,\n    data: newDatas,\n  }\n}\n","import { Box, Button, IconButton, styled, TextField } from '@mui/material'\nimport { ChangeEvent, useEffect, useState } from 'react'\nimport DatabaseTableComponent from 'components/DatabaseTable'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ImageView from 'components/ImageView'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { onGet, onSort } from 'utils/database'\n\ntype PopupSearchProps = {\n  onClose?: () => any\n  onFilter?: (values: { [key: string]: string }) => any\n  defaultValue?: { [key: string]: string }\n}\n\nexport const PopupSearch = ({\n  onClose,\n  defaultValue = {},\n  onFilter,\n}: PopupSearchProps) => {\n  const [values, setValues] = useState(defaultValue)\n\n  const handleFilter = () => {\n    onFilter?.(values)\n    onClose?.()\n  }\n\n  const onChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    setValues({ ...values, [event.target.name]: event.target.value })\n  }\n\n  return (\n    <Popup>\n      <PopupInner>\n        <HeaderTitle>\n          <span>Filter</span>\n          <ButtonControl onClick={onClose}>\n            <CloseIcon />\n          </ButtonControl>\n        </HeaderTitle>\n        <InputSearch\n          onChange={onChange}\n          name={'session'}\n          label=\"Session\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'dataset'}\n          label=\"Dataset\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'type'}\n          label=\"Type\"\n          variant=\"outlined\"\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'protocol'}\n          label=\"Protocol\"\n          variant=\"outlined\"\n        />\n        <Button variant=\"contained\" onClick={handleFilter}>\n          Filter\n        </Button>\n      </PopupInner>\n    </Popup>\n  )\n}\n\nexport type Image = {\n  id: number\n  parent_id: number\n  session_id: number\n  label: string\n  image: {\n    id: number\n    parent_id: number\n    image_url: string\n    attributes: { [key: string]: any }\n  }\n}\n\nexport type Viewer = {\n  open: boolean\n  url: string\n  jsonData?: { [key: string]: any }\n  id?: number\n  session_id?: number\n  parent_id?: number\n}\n\nexport type DataDatabase = {\n  id: number\n  lab_name: string\n  user_name: string\n  sample_name: string\n  subject: string\n  recording_time: string\n  sessions: {\n    id: number\n    parent_id: number\n    label: string\n    datatypes: {\n      title: string\n      images: Image[]\n    }\n  }[]\n}\n\nconst dataImages = [\n  {\n    id: 1,\n    lab_name: 'lab 1',\n    user_name: 'hoge',\n    sample_name: 'hoge',\n    recording_time: '2018-03-10',\n    type: 'TYPE_RATE',\n    datatypes: 'anat',\n    protocol: 'protocol 3',\n    size: '6MB',\n    sessions: 'sess 1',\n    subject: 'sub 1',\n    voxel_size: '8MB',\n    image: {\n      id: 0,\n      parent_id: 0,\n      image_url: '/lib/test0.nii',\n      attributes: { file_name: 'image 0' },\n    },\n  },\n  {\n    id: 2,\n    lab_name: 'lab 2',\n    user_name: 'hoge 2',\n    sessions: 'sess 2',\n    subject: 'sub 2',\n    datatypes: 'anat',\n    sample_name: 'hoge 2',\n    recording_time: '2019-03-10',\n    type: 'TYPE_2',\n    protocol: 'protocol 3',\n    size: '7MB',\n    voxel_size: '8MB',\n    image: {\n      id: 1,\n      parent_id: 0,\n      image_url: '/lib/test.nii',\n      attributes: { file_name: 'image 1' },\n    },\n  },\n  {\n    id: 3,\n    parent_id: 0,\n    lab_name: 'lab 3',\n    user_name: 'hoge 3',\n    sample_name: 'hoge 3',\n    recording_time: '2020-04-10',\n    sessions: 'sess 3',\n    subject: 'sub 3',\n    datatypes: 'anat',\n    protocol: 'protocol',\n    size: '8MB',\n    voxel_size: 'voxel_size',\n    type: 'TYPE_RATE',\n    image: {\n      id: 1,\n      parent_id: 0,\n      image_url: '/lib/test1.nii',\n      attributes: { file_name: 'image 2' },\n    },\n  },\n  {\n    id: 4,\n    parent_id: 2,\n    lab_name: 'lab 4',\n    user_name: 'hoge 4',\n    sample_name: 'hoge 4',\n    recording_time: '2021-04-11',\n    protocol: 'protocol',\n    size: '9MB',\n    sessions: 'sess 4',\n    subject: 'sub 4',\n    voxel_size: 'voxel_size',\n    datatypes: 'anat',\n    type: 'TYPE_RATE',\n    image: {\n      id: 0,\n      parent_id: 0,\n      image_url: '/lib/test2.nii',\n      attributes: { file_name: 'image 3' },\n    },\n  },\n  {\n    id: 5,\n    parent_id: 4,\n    lab_name: 'lab 5',\n    user_name: 'hoge 5',\n    sample_name: 'hoge 5',\n    recording_time: '2022-04-15',\n    protocol: 'protocol',\n    size: '1MB',\n    sessions: 'sess 5',\n    datatypes: 'anat',\n    subject: 'sub 5',\n    voxel_size: 'voxel_size',\n    type: 'TYPE_RATE',\n    image: {\n      id: 1,\n      parent_id: 0,\n      image_url: '/lib/test3.nii',\n      attributes: { file_name: 'image 4' },\n    },\n  },\n]\n\nexport const defaultDatabase = [\n  {\n    id: 0,\n    lab_name: 'lab 1',\n    user_name: 'hoge',\n    sample_name: 'hoge',\n    recording_time: '2017-03-10',\n  },\n  {\n    id: 1,\n    lab_name: 'lab 4',\n    user_name: 'hoge 4',\n    sample_name: 'hoge 4',\n    recording_time: '2018-03-10',\n  },\n  {\n    id: 2,\n    lab_name: 'lab 5',\n    user_name: 'hoge 5',\n    sample_name: 'hoge 5',\n    recording_time: '2019-03-10',\n  },\n  {\n    id: 3,\n    lab_name: 'lab 2',\n    user_name: 'hoge 2',\n    sample_name: 'hoge 2',\n    recording_time: '2020-03-10',\n    sessions: [\n      {\n        id: 0,\n        parent_id: 3,\n        sessions: 'session 1',\n        subject: '1 subject 6',\n        datatypes: {\n          title: 'anat',\n          images: [\n            {\n              id: 0,\n              parent_id: 3,\n              session_id: 0,\n              protocol: 'protocol',\n              size: '5MB',\n              voxel_size: 'voxel_size',\n              type: 'TYPE_RATE',\n              image: {\n                id: 0,\n                image_url: '/lib/test0.nii',\n                attributes: {\n                  file_name: 'image 0',\n                },\n              },\n            },\n            {\n              id: 1,\n              parent_id: 3,\n              session_id: 0,\n              protocol: 'protocol',\n              size: '5MB',\n              voxel_size: 'voxel_size',\n              type: 'TYPE_RATE',\n              image: {\n                id: 1,\n                image_url: '/lib/test.nii',\n                attributes: {\n                  file_name: 'image 1',\n                },\n              },\n            },\n          ],\n        },\n      },\n      {\n        id: 1,\n        parent_id: 3,\n        sessions: 'session 3',\n        subject: '2 subject 5',\n        datatypes: {\n          title: 'anat',\n          images: [\n            {\n              id: 2,\n              parent_id: 3,\n              session_id: 1,\n              protocol: 'protocol',\n              size: '5MB',\n              voxel_size: 'voxel_size',\n              type: 'TYPE_RATE',\n              image: {\n                id: 2,\n                image_url: '/lib/test1.nii',\n                attributes: {\n                  file_name: 'image 2',\n                },\n              },\n            },\n            {\n              id: 3,\n              parent_id: 3,\n              session_id: 1,\n              protocol: 'protocol',\n              size: '5MB',\n              voxel_size: 'voxel_size',\n              type: '3_TYPE_RATE',\n              image: {\n                id: 3,\n                image_url: '/lib/test2.nii',\n                attributes: {\n                  file_name: 'image 3',\n                },\n              },\n            },\n            {\n              id: 4,\n              parent_id: 3,\n              session_id: 1,\n              protocol: 'protocol',\n              size: '5MB',\n              voxel_size: 'voxel_size',\n              type: 'TYPE_RATE',\n              image: {\n                id: 4,\n                image_url: '/lib/test3.nii',\n                attributes: {\n                  file_name: 'image 4',\n                },\n              },\n            },\n          ],\n        },\n      },\n    ],\n  },\n  {\n    id: 4,\n    lab_name: 'lab 2',\n    user_name: 'hoge 2',\n    sample_name: 'hoge 2',\n    recording_time: '2021-03-10',\n    sessions: [\n      {\n        id: 2,\n        parent_id: 4,\n        sessions: 'session 4',\n        subject: '3 subject 2',\n        datatypes: {\n          title: 'anat',\n          images: [\n            {\n              id: 5,\n              parent_id: 4,\n              session_id: 2,\n              protocol: 'protocol',\n              size: '5MB',\n              voxel_size: 'voxel_size',\n              type: 'TYPE_RATE',\n              image: {\n                id: 0,\n                image_url: '/lib/test4.nii',\n                attributes: {\n                  file_name: 'image 5',\n                },\n              },\n            },\n          ],\n        },\n      },\n    ],\n  },\n]\n\nexport const columns = (rowClick: Function, setOpenDelete: Function) => [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true },\n  { title: 'Subject', name: 'subject', filter: true },\n  {\n    title: 'Session',\n    name: 'sessions',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Dataset',\n    name: 'datatypes',\n    filter: true,\n    width: 100,\n  },\n  { title: 'Type', name: 'type', filter: true },\n  { title: 'Protocol', name: 'protocol', filter: true },\n  { title: 'Size', name: 'size', filter: true },\n  { title: 'Voxel size', name: 'voxel_size', filter: true },\n  {\n    title: '',\n    name: 'action',\n    render: (data: any) => {\n      if (!data?.image) return null\n      return (\n        <BoxButton>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              rowClick?.(data)\n            }}\n          >\n            <EditIcon fontSize=\"small\" color={'inherit'} />\n          </ButtonControl>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              setOpenDelete?.(true)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </ButtonControl>\n        </BoxButton>\n      )\n    },\n  },\n]\n\nconst Database = () => {\n  const [openPopup, setOpenPopup] = useState(false)\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [datasTable, setDatasTable] = useState<any[]>(defaultDatabase)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | undefined>()\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [type, setType] = useState<'tree' | 'list'>('tree')\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  useEffect(() => {\n    if (type === 'tree') {\n      setDatasTable(defaultDatabase)\n    } else setDatasTable(dataImages)\n  }, [type])\n\n  const rowClick = (row: any) => {\n    if (!row?.image?.image_url) return\n    let datas: any[] = dataImages\n    const view = {\n      open: true,\n      url: row.image.image_url,\n      id: row.id,\n      session_id: row.session_id,\n      parent_id: row.parent_id,\n      jsonData: row.image.attributes,\n    }\n    if (type === 'tree') {\n      datas = defaultDatabase\n      const checkNext = onGet(datas as any, view)\n      const checkPre = onGet(\n        JSON.parse(JSON.stringify(datas)).reverse() as any,\n        view,\n        true,\n      )\n      setDisabled({ left: !checkPre, right: !checkNext })\n    } else {\n      setDisabled({\n        left: row.id === datas?.[0]?.id,\n        right: row.id === datas?.[datas.length - 1]?.id,\n      })\n    }\n    setViewer(view)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const handleSort = (orderKey: string) => {\n    setColumnSort(orderKey)\n    let typeOrder: 'ASC' | 'DESC' | undefined = undefined\n    if (!orderBy || orderKey !== columnSort) {\n      typeOrder = 'ASC'\n    } else if (orderBy === 'ASC') {\n      typeOrder = 'DESC'\n    }\n    setOrdeBy(typeOrder)\n    if (!typeOrder) {\n      if (type === 'tree') {\n        setDatasTable(defaultDatabase)\n      } else {\n        setDatasTable(dataImages)\n      }\n      return\n    }\n    const { data } = onSort(\n      type === 'tree' ? defaultDatabase : dataImages,\n      typeOrder,\n      type,\n    )\n    setDatasTable(data)\n  }\n\n  const onNext = () => {\n    if (type === 'tree') {\n      const imageNext = onGet(datasTable as any, viewer)\n      rowClick(imageNext)\n    } else {\n      const findIndex = datasTable.findIndex((e) => e.id === viewer.id)\n      rowClick(dataImages[findIndex + 1])\n    }\n  }\n\n  const onPrevious = () => {\n    if (type === 'tree') {\n      const datas = JSON.parse(JSON.stringify(datasTable))\n      const imageNext = onGet(datas.reverse() as any, viewer, true)\n      rowClick(imageNext)\n    } else {\n      const findIndex = datasTable.findIndex((e) => e.id === viewer.id)\n      rowClick(dataImages[findIndex - 1])\n    }\n  }\n\n  return (\n    <DatabaseWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Image\"\n        description={`Are you sure delete?\\n`}\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ProjectsTitle>\n        <span>Database</span>\n        <ButtonFilter\n          onClick={() => setOpenPopup(true)}\n          style={{ margin: '0 26px 0 0' }}\n        >\n          Filter\n        </ButtonFilter>\n      </ProjectsTitle>\n      <BoxSelectTypeView>\n        <Box\n          onClick={() => setType('tree')}\n          style={{\n            marginRight: 4,\n            fontWeight: type === 'tree' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'tree' ? '' : '#4687f4',\n          }}\n        >\n          Tree\n        </Box>\n        /\n        <Box\n          onClick={() => setType('list')}\n          style={{\n            marginLeft: 4,\n            fontWeight: type === 'list' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'list' ? '' : '#4687f4',\n          }}\n        >\n          List\n        </Box>\n      </BoxSelectTypeView>\n      {openPopup && <PopupSearch onClose={() => setOpenPopup(false)} />}\n      <DatabaseTableComponent\n        defaultExpand\n        previewImage={type === 'list'}\n        onSort={handleSort}\n        rowClick={rowClick}\n        orderKey={columnSort}\n        orderBy={orderBy}\n        data={datasTable}\n        columns={columns(rowClick, setOpenDelete)}\n      />\n      <ImageView\n        disabled={disabled}\n        url={viewer.url}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n      />\n    </DatabaseWrapper>\n  )\n}\n\nconst DatabaseWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst HeaderTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst Popup = styled(Box)(() => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n  zIndex: 9999,\n}))\n\nconst PopupInner = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2, 3),\n  backgroundColor: '#fff',\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n}))\n\nconst InputSearch = styled(TextField)(() => ({\n  minWidth: 250,\n}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ButtonControl = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0, 1),\n  width: 30,\n  height: 30,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst ProjectsTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst BoxSelectTypeView = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 16,\n})\n\nexport default Database\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { getMe, login } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { saveToken } from 'utils/auth'\n\nconst Login = () => {\n  const { setUser } = useUser()\n  const navigate = useNavigate()\n\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errors.email || errors.password || errorCheck) return\n    try {\n      const { access_token } = await login(values)\n      saveToken(access_token)\n      getUser()\n    } catch (e) {\n      setErrors({ email: 'Email or password is wrong', password: '' })\n    }\n  }\n\n  const getUser = async () => {\n    const data = await getMe()\n    setUser(data)\n    navigate('/')\n  }\n\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title>Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError>{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError>{errors.password}</TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\" >Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin type=\"submit\">SIGN IN</ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { ChangeEvent, FC, FormEvent, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Select from 'react-select'\n\ntype SignUpProps = {\n  isLogin?: boolean\n}\n\nconst options = [\n  { value: 'admin', label: 'Admin' },\n  { value: 'normal', label: 'Normal' },\n]\n\nconst SignUp: FC<SignUpProps> = ({ isLogin }) => {\n  const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/\n  const regexPassword = /^(?=.*\\d)(?=.*[@$!%*#?&])(?=.*[a-zA-Z]).{6,100}$/\n\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n    reEnter: '',\n    role: '',\n  })\n  const [values, setValues] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n    reEnter: '',\n    role: 'admin',\n  })\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorEmail = validateEmail(values.email)\n    const errorPassword = validatePassword(values.password)\n    const errorReEnter = validateReEnter(values.reEnter)\n    if (errorEmail || errorPassword || errorReEnter) {\n      setErrors({\n        email: errorEmail,\n        password: errorPassword,\n        reEnter: errorReEnter,\n      })\n      return\n    }\n    //todo call api.\n  }\n\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validateEmail = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regex.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, password } = values\n    if (reEnter && reEnter !== password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  return (\n    <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n      <Box sx={{ position: 'relative' }}>\n        <LabelField>\n          Email<LableRequired>*</LableRequired>\n        </LabelField>\n        <Input\n          autoComplete=\"off\"\n          error={!!errors.email}\n          name=\"email\"\n          onChange={(e) => onChangeValue(e, validateEmail)}\n          value={values.email}\n          placeholder=\"Enter your email\"\n        />\n        <TextError>{errors.email}</TextError>\n      </Box>\n      <Box sx={{ position: 'relative' }}>\n        <LabelField>\n          Password<LableRequired>*</LableRequired>\n        </LabelField>\n        <Input\n          autoComplete=\"off\"\n          error={!!errors.password}\n          onChange={(e) => onChangeValue(e, validatePassword)}\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          placeholder=\"Enter your password\"\n          onBlur={validateReEnterWhenInputPassword}\n        />\n        <TextError>{errors.password}</TextError>\n      </Box>\n      <Box sx={{ position: 'relative' }}>\n        <LabelField>\n          Re-enter password<LableRequired>*</LableRequired>\n        </LabelField>\n        <Input\n          error={!!errors.reEnter}\n          onChange={(e) => onChangeValue(e, validateReEnter)}\n          name=\"reEnter\"\n          type=\"password\"\n          value={values.reEnter}\n          placeholder=\"Re-enter password\"\n        />\n        <TextError>{errors.reEnter}</TextError>\n      </Box>\n      <Box sx={{ position: 'relative' }}>\n        <LabelField>\n          Role<LableRequired>*</LableRequired>\n        </LabelField>\n        <SelectWrapper defaultValue={values.role} options={options} />\n        <TextError sx={{ marginTop: -2.6 }}>{errors.role}</TextError>\n      </Box>\n      <Stack\n        flexDirection=\"row\"\n        gap={2}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        mt={2}\n      >\n        <Description sx={{ mt: 0 }}>\n          {isLogin ? <LinkWrappper to=\"/login\">Login</LinkWrappper> : null}\n        </Description>\n        <ButtonLogin type=\"submit\">Sign up</ButtonLogin>\n      </Stack>\n    </FormSignUp>\n  )\n}\n\nconst FormSignUp = styled('form')({\n  maxWidth: 273,\n})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 18,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 10,\n  color: '#1677ff',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nconst SelectWrapper = styled(Select)({\n  width: '100%',\n  marginBottom: 24,\n  '.MuiInput-root:after': {\n    border: 'none',\n  },\n})\n\nexport default SignUp\n","import { Box, styled, Typography } from '@mui/material'\nimport SignUp from 'components/SignUp'\n\nconst Signup = () => {\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title>Create new your account</Title>\n        <SignUp isLogin />\n      </LoginContent>\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '0 0 1px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nexport default Signup\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  styled,\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport DatabaseTableComponent from 'components/DatabaseTable'\nimport React, { useState, DragEvent, Fragment } from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { defaultDatabase, PopupSearch, Viewer } from '../Database'\nimport ImageView from 'components/ImageView'\nimport { onGet, onSort } from 'utils/database'\n\nconst columns = [\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true },\n  { title: 'Session', name: 'sessions', child: 'label', filter: true },\n  { title: 'Dataset', name: 'datatypes', child: 'label', filter: true },\n  { title: 'Type', name: 'type', filter: true },\n  { title: 'Protocol', name: 'protocol', filter: true },\n]\n\ntype ProjectAdd = {\n  project_name: string\n  project_type: number\n  image_count: number\n  protocol: string\n  id: string\n}\n\ntype DataWithin = {\n  id: string\n  data: ProjectAdd[]\n  name: string\n}\n\ntype DataFactor = {\n  within: DataWithin[]\n} & DataWithin\n\ntype RowDrag = {\n  label: string\n  protocol: string\n  type: string\n  image?: {\n    image_url: string\n    attributes: { [key: string]: any }\n  }\n}\n\nconst nameDefault = 'DEFAULT'\n\nconst ProjectFormComponent = () => {\n  const [searchParams] = useSearchParams()\n\n  const idEdit = searchParams.get('id')\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | undefined>()\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [datasTable, setDatasTable] = useState<any[]>(defaultDatabase)\n  const [projectName, setProjectName] = useState('Prj Name 1')\n  const [projectLevel, setProjectLevel] = useState<'factor' | 'within-factor'>(\n    'factor',\n  )\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [openFilter, setOpenFilter] = useState(false)\n  const [rowDrag, setRowDrag] = useState<(RowDrag | undefined) | RowDrag[]>()\n  const [dataFactors, setDataFactors] = useState<DataFactor[]>([\n    { name: nameDefault, within: [], id: getNanoId(), data: [] },\n  ])\n  const navigate = useNavigate()\n\n  const onChangeName = (e: any) => {\n    setProjectName(e.target.value)\n  }\n\n  const handleChangeLevel = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const type = event.target.value as 'within-factor' | 'factor'\n    setProjectLevel(type)\n    let within: DataWithin[] = []\n    if (type === 'within-factor') {\n      within = [{ name: nameDefault, id: getNanoId(), data: [] }]\n    }\n    setDataFactors([{ name: nameDefault, within, id: getNanoId(), data: [] }])\n  }\n\n  const onAddBetween = () => {\n    setDataFactors((pre) => [\n      ...pre,\n      { name: nameDefault, within: [], id: getNanoId(), data: [] },\n    ])\n  }\n\n  const onAddWithin = (idFactor: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === idFactor) {\n          return {\n            ...p,\n            within: [\n              ...p.within,\n              { name: nameDefault, within: [], id: getNanoId(), data: [] },\n            ],\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteFactor = (row: DataFactor) => {\n    setDataFactors((pre) => pre.filter((e) => e.id !== row.id))\n  }\n\n  const onDeleteWithin = (factor: DataFactor, row: DataWithin) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, within: p.within.filter((w) => w.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataWithin = (\n    factor: DataFactor,\n    within: DataWithin,\n    row: ProjectAdd,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, data: w.data.filter((d) => d.id !== row.id) }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataFactor = (factor: DataFactor, row: ProjectAdd) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, data: p.data.filter((d) => d.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDragRow = (row: any) => {\n    setRowDrag(row)\n  }\n\n  const onDragEnd = (row: any) => {\n    setRowDrag(undefined)\n  }\n\n  const onMouseOver = (factor: DataFactor, within?: DataWithin) => {\n    onDropData(factor, within)\n    setRowDrag(undefined)\n  }\n\n  const onDropData = (factor: DataFactor, within?: DataWithin) => {\n    if (!Array.isArray(rowDrag) && !rowDrag?.image) {\n      return\n    }\n    let newData: any[] = []\n    if (!Array.isArray(rowDrag)) {\n      newData = [\n        {\n          id: getNanoId(),\n          project_name: rowDrag.label,\n          image_count: 1,\n          project_type: rowDrag.type,\n          protocol: rowDrag.protocol,\n          image_url: rowDrag.image?.image_url,\n          jsonData: rowDrag.image?.attributes,\n        },\n      ]\n    } else if (Array.isArray(rowDrag)) {\n      newData = rowDrag.map((row) => ({\n        id: getNanoId(),\n        project_name: row.label,\n        image_count: 1,\n        project_type: row.type,\n        protocol: row.protocol,\n        image_url: row.image?.image_url,\n        jsonData: row.image?.attributes,\n      }))\n    }\n    if (projectLevel !== 'within-factor') {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return { ...p, data: [...p.data, ...newData] }\n          }\n          return p\n        }),\n      )\n      return\n    }\n    if (within) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return {\n              ...p,\n              within: p.within.map((w) => {\n                if (w.id === within.id) {\n                  return { ...w, data: [...w.data, ...newData] }\n                }\n                return w\n              }),\n            }\n          }\n          return p\n        }),\n      )\n    }\n  }\n\n  const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onDragLeave = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onChangeNameFactor = (factor: DataFactor, value: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, name: value }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onChangeNameWithinFactor = (\n    factor: DataFactor,\n    within: DataWithin,\n    value: string,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, name: value }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const renderData = (\n    data: ProjectAdd[],\n    style: any,\n    onDelete?: (row: ProjectAdd) => any,\n  ) => {\n    return data.map((e, index) => (\n      <BoxItem\n        key={`${e.id}_${index}`}\n        style={style}\n        onClick={() => rowDataClick(e)}\n      >\n        <TypographyBoxItem>{e.project_name}</TypographyBoxItem>\n        <TypographyBoxItem>{e.project_type}</TypographyBoxItem>\n        <TypographyBoxItem>{e.protocol}</TypographyBoxItem>\n        <Box\n          style={{ display: 'flex', justifyContent: 'flex-end', width: '100%' }}\n        >\n          <Button\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              onDelete?.(e)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </Button>\n        </Box>\n      </BoxItem>\n    ))\n  }\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const rowClick = (row: any) => {\n    if (!row?.image?.image_url) return\n    const view = {\n      open: true,\n      url: row.image.image_url,\n      id: row.id,\n      session_id: row.session_id,\n      parent_id: row.parent_id,\n      jsonData: row.image.attributes,\n    }\n    const checkNext = onGet(defaultDatabase as any, view)\n    const checkPre = onGet(\n      JSON.parse(JSON.stringify(defaultDatabase)).reverse() as any,\n      view,\n      true,\n    )\n    setDisabled({ left: !checkPre, right: !checkNext })\n    setViewer(view)\n  }\n\n  const rowDataClick = (row: any) => {\n    if (!row?.image_url) return\n    setViewer({\n      open: true,\n      url: row.image_url,\n      jsonData: row.jsonData,\n    })\n    setDisabled({ left: true, right: true })\n  }\n\n  const handleSort = (orderKey: string) => {\n    setColumnSort(orderKey)\n    let typeOrder: 'ASC' | 'DESC' | undefined = undefined\n    if (!orderBy || orderKey !== columnSort) {\n      typeOrder = 'ASC'\n    } else if (orderBy === 'ASC') {\n      typeOrder = 'DESC'\n    }\n    setOrdeBy(typeOrder)\n    if (!typeOrder) {\n      setDatasTable(defaultDatabase)\n      return\n    }\n    const { data } = onSort(datasTable, typeOrder, orderKey, 'tree')\n    setDatasTable(data)\n  }\n\n  const onNext = () => {\n    const imageNext = onGet(defaultDatabase as any, viewer)\n    rowClick(imageNext)\n  }\n\n  const onPrevious = () => {\n    const datas = JSON.parse(JSON.stringify(defaultDatabase))\n    const imageNext = onGet(datas.reverse() as any, viewer, true)\n    rowClick(imageNext)\n  }\n\n  return (\n    <ProjectsWrapper>\n      {openFilter && <PopupSearch onClose={() => setOpenFilter(false)} />}\n      <ImageView\n        disabled={disabled}\n        url={viewer.url}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n      />\n      <InputName value={projectName} onChange={onChangeName} />\n      <BoxOptions\n        aria-labelledby=\"demo-radio-buttons-group-label\"\n        value={projectLevel}\n        name=\"radio-buttons-group\"\n        onChange={handleChangeLevel}\n      >\n        <FormControlLabel\n          value=\"factor\"\n          control={<Radio />}\n          label=\"Between factor\"\n        />\n        <FormControlLabel\n          value=\"within-factor\"\n          control={<Radio />}\n          label=\"Between factor-within factor\"\n        />\n      </BoxOptions>\n      <DropAndDropBox>\n        <DragBox>\n          {dataFactors.map((factor, index) => {\n            return (\n              <Fragment key={factor.id}>\n                <BoxFactor>\n                  <Input\n                    onChange={(e) => onChangeNameFactor(factor, e.target.value)}\n                    style={{ width: 'calc(100% - 64px)' }}\n                    value={\n                      factor.name === nameDefault\n                        ? `Between factor name ${index}`\n                        : factor.name\n                    }\n                  />\n                  <Button onClick={() => onDeleteFactor(factor)}>\n                    <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                  </Button>\n                  {projectLevel === 'within-factor' ? (\n                    factor.within.map((within, indexWithin) => (\n                      <BoxFactor key={within.id} style={{ marginLeft: 24 }}>\n                        <Input\n                          onChange={(e) =>\n                            onChangeNameWithinFactor(\n                              factor,\n                              within,\n                              e.target.value,\n                            )\n                          }\n                          style={{ width: 'calc(100% - 64px)' }}\n                          value={\n                            within.name === nameDefault\n                              ? `Within factor name ${indexWithin}`\n                              : within.name\n                          }\n                        />\n                        <Button onClick={() => onDeleteWithin(factor, within)}>\n                          <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                        </Button>\n                        {renderData(within.data, { marginLeft: 48 }, (row) => {\n                          onDeleteDataWithin(factor, within, row)\n                        })}\n                        <BoxDrag\n                          style={{\n                            borderBottom: rowDrag ? '1px dashed red' : '',\n                          }}\n                          onDrop={() => onDropData(factor, within)}\n                          onMouseOver={() => onMouseOver(factor, within)}\n                          onDragOver={onDragOver}\n                          onDragLeave={onDragLeave}\n                        />\n                      </BoxFactor>\n                    ))\n                  ) : (\n                    <>\n                      {renderData(factor.data, { marginLeft: 24 }, (row) => {\n                        onDeleteDataFactor(factor, row)\n                      })}\n                      <BoxDrag\n                        style={{\n                          borderBottom: rowDrag ? '1px dashed red' : '',\n                        }}\n                        onDrop={() => onDropData(factor)}\n                        onDragOver={onDragOver}\n                        onDragLeave={onDragLeave}\n                        onMouseOver={() => onMouseOver(factor)}\n                      />\n                    </>\n                  )}\n                </BoxFactor>\n                {projectLevel === 'within-factor' && dataFactors.length ? (\n                  <NewRowButton\n                    onClick={() => onAddWithin(factor.id)}\n                    style={{ marginLeft: 24 }}\n                  >\n                    + Add Within Factor\n                  </NewRowButton>\n                ) : null}\n              </Fragment>\n            )\n          })}\n          <NewRowButton onClick={onAddBetween}>\n            + Add Between Factor\n          </NewRowButton>\n        </DragBox>\n        <DropBox>\n          <BoxFilter>\n            <ButtonFilter\n              onClick={() => setOpenFilter(true)}\n              style={{ margin: '0 26px 0 0' }}\n            >\n              Filter\n            </ButtonFilter>\n          </BoxFilter>\n          <DatabaseTableComponent\n            onSort={handleSort}\n            orderKey={columnSort}\n            orderBy={orderBy}\n            rowClick={rowClick}\n            defaultExpand\n            onDrag={onDragRow}\n            onDragEnd={onDragEnd}\n            draggable\n            data={datasTable}\n            columns={columns}\n          />\n        </DropBox>\n      </DropAndDropBox>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <ButtonFilter onClick={() => navigate('/projects')}>\n          {idEdit ? 'Ok' : 'Add'}\n        </ButtonFilter>\n        <ButtonFilter onClick={() => navigate('/projects')}>\n          Cancel\n        </ButtonFilter>\n      </Box>\n    </ProjectsWrapper>\n  )\n}\n\nconst BoxItem = styled(Box)({\n  display: 'flex',\n  height: 40,\n  alignItems: 'center',\n  borderBottom: '1px solid rgba(0,0,0,0.8)',\n  paddingLeft: 16,\n  marginBottom: 4,\n})\n\nconst TypographyBoxItem = styled(Box)({\n  minWidth: 120,\n})\n\nconst BoxDrag = styled(Box)({\n  paddingBottom: 24,\n  width: '100%',\n  borderWidth: 1,\n})\n\nconst BoxFactor = styled(Box)({})\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n  height: 'calc(100% - 32px)',\n  marginBottom: theme.spacing(3),\n}))\n\nconst BoxOptions = styled(RadioGroup)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(1, 2),\n}))\n\nconst InputName = styled('input')(({ theme }) => ({\n  padding: theme.spacing(1),\n  outline: 'none',\n  borderColor: 'transparent',\n  fontSize: 18,\n  width: 'calc(100% - 32px)',\n  '&:focus': {\n    borderColor: '#000',\n  },\n  display: 'block',\n  borderWidth: 1,\n}))\n\nconst DropAndDropBox = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  gap: theme.spacing(2),\n}))\n\nconst DragBox = styled(Box)(({ theme }) => ({\n  width: '40%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #000',\n  minHeight: 100,\n}))\n\nconst DropBox = styled(Box)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #dedede',\n}))\n\nconst NewRowButton = styled(Button)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  borderStyle: 'dashed',\n  borderWidth: 1,\n  margin: theme.spacing(1, 0),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 1),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  color: '#ffffff',\n  backgroundColor: '#283237 !important',\n}))\n\nconst BoxFilter = styled(Box)({\n  display: 'flex',\n  marginBottom: 10,\n  justifyContent: 'flex-end',\n})\n\nexport default ProjectFormComponent\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { ChangeEvent, FormEvent, useState } from 'react'\n\nconst regexEmail = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/\nconst ResetPassword = () => {\n\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n    }\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        if (!values.email) {\n            errors.email = 'This field is required'\n        }\n        if(!regexEmail.test(values.email)) errors.email = 'This field is validate'\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"flex-end\"\n                    >\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Project from './components/Project'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport AccountManager from 'pages/AccountManager'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Projects from './pages/Projects'\nimport Database from './pages/Database'\nimport Login from 'pages/Login'\nimport Signup from 'pages/Signup'\nimport ProjectFormComponent from \"./pages/Projects/Create\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<Dashboard />} />\n            <Route path=\"/workflow\" element={<Project />} />\n            <Route path=\"/account-manager\" element={<AccountManager />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            <Route path=\"/database\" element={<Database />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            <Route path=\"/signup\" element={<Signup />} />\n            <Route path=\"/account-deleted\" element={<AccountDelete />} />\n            <Route path=\"/project/new-project\" element={<ProjectFormComponent />} />\n          </Routes>\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.timestamp,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n} from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}