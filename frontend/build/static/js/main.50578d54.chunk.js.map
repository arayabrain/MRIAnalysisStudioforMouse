{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/selectors/run/RunSelectors.ts","const/API.ts","api/run/Run.ts","store/slice/Dataset/DatasetSelector.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Project/ProjectSelector.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/Snakemake.tsx","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/DialogContext.tsx","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","store/slice/DisplayData/DisplayDataSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","components/Visualize/DataContext.tsx","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","components/Visualize/Plot/CsvPlot.tsx","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/ImageAlignment/index.tsx","store/slice/Dataset/DatasetType.ts","utils/auth/index.ts","api/auth/index.ts","utils/axios.ts","api/dataset/index.ts","store/slice/Dataset/DatasetAction.ts","store/slice/Dataset/DatasetSlice.ts","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","components/FlowChart/NWB.tsx","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/CollapsibleTable.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Experiment/Experiment.tsx","components/common/Loading.tsx","components/VisualizeNew/index.tsx","components/Project.tsx","store/slice/Project/ProjectType.ts","store/slice/Pipeline/PipelineHook.ts","providers/index.ts","components/Header.tsx","components/Layout.tsx","pages/Dashboard/index.tsx","components/common/Input.tsx","components/ModalDeleteAccount/index.tsx","components/Table/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","components/InputPassword/index.tsx","components/ModalChangePassword/index.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","api/project/index.ts","store/slice/Project/ProjectAction.ts","pages/Projects/index.tsx","components/DatabaseTable.tsx","components/ImageView/ChangeSize.tsx","api/rawdb/index.tsx","components/ImageView/index.tsx","utils/database/index.ts","pages/Database/index.tsx","pages/Login/index.tsx","store/slice/Project/ProjectSlice.ts","pages/Projects/Create.tsx","pages/ResetPassword/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","data","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","filter","id","label","convertToRunResult","nodeResultDto","outputPath","outputPaths","message","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectInputNodeParam","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","inputNodePosyData","isEdge","edge","HOST","process","PORT","BASE_URL","DATABASE_URL_HOST","runApi","projectId","a","axios","post","response","runByUidApi","pendingNodeIdList","selectDataset","dataset","selectCurrentProjectId","project_id","getUrlFromSubfolder","subfolders","urls","sub","sub_folders","images","urlsImage","image","image_url","selectListImageUrl","createAsyncThunk","thunkAPI","getState","responseData","rejectWithValue","runByCurrentUid","currentUid","pollRunResult","getExperimentsApi","get","deleteExperimentByUidApi","delete","deleteExperimentByListApi","uidList","importExperimentByUidApi","fetchExperimentApi","EXPERIMENTS_SLICE_NAME","project","currentProject","selectProjectList","projects","selectCurrentProject","getExperiments","_","fetchExperiment","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","convertToExperimentType","functions","function","unique_id","convertToExperimentStatus","success","hasNWB","timestamp","started_at","convertFunctionsToRunResultDTO","key","initialState","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","extraReducers","builder","addCase","fulfilled","rejected","meta","_state","_action","addMatcher","isAnyOf","pending","actions","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","ImageFileNode","CsvFileNode","HDF5FileNode","FluoFileNode","AlgorithmNode","BehaviorFileNode","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","position","newNode","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","style","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","config","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","find","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","max","random","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","SnakemakeButton","Button","endIcon","SnakemakeContents","paramKeyList","className","Component","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","errorMessage","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","navigate","useNavigate","float","textAlign","top","right","zIndex","textTransform","useHandleColor","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","createContext","onOpen","onOpenDialogFile","onMessageError","onOpenImageAlignment","FileSelect","multiSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","useSearchParams","searchParams","useContext","alignments","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","alpha","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","title","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","initParams","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeParamAlignment","setInputNodeHDF5Path","setHeader","setIndex","transpose","newState","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","DisplayDataContext","dataType","itemId","NaN","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectVisualizeItems","visualaizeItem","items","selectVisualizeItemById","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectRoiItemFilePath","roiItem","selectImageItemStartIndex","selectImageItemEndIndex","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","selectTimeSeriesItemFilePath","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","CsvPlot","isInitialized","isPending","isFulfilled","CsvPlotImple","selectCsvItemTranspose","selectCsvItemSetHeader","selectCsvItemSetIndex","PresentationalCsvPlot","csvData","useMemo","col","row","header","headerData","field","headerName","idx","rows","row_id","rowObj","fromEntries","columns","CsvFileNodeImple","ParamSettingDialog","setOpen","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","p","m","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","shape","nbytes","FluoFileNodeImple","fluoColor","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","setImageItemClikedDataId","clickedDataId","drawOrderList","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","isWorkflowDialog","imageItemInitialValue","showticklabels","showline","zsmooth","showgrid","showscale","colors","rgb","offset","activeIndex","roiAlpha","duration","timeSeriesItemInitialValue","span","zeroline","xrange","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","selectedItemId","layout","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","selectHeatMapItemShowScale","colorscale","selectHeatMapItemColors","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","selectImageItemShowticklabels","selectImageItemShowLine","selectImageItemZsmooth","selectImageItemShowGrid","selectImageItemShowScale","selectImageItemColors","selectImageItemAlpha","timeDataMaxIndex","maxIdx","selectRoiItemIndex","selectImageItemRoiAlpha","colorscaleRoi","createColormap","colormap","nshades","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","ml","PlayBack","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","text","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","selectTimeSeriesItemOffset","selectTimeSeriesItemSpan","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","selectTimeSeriesItemXrange","selectTimeSeriesItemDrawOrderList","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","selectVisualizeDataFilePath","selectVisualizeDataNodeId","selectVisualizeDataType","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allChecked","allNotChecked","indeterminate","TreeItemLabel","checkboxProps","Checkbox","disableRipple","ButtonClose","ButtonPre","backgroundColor","cursor","ButtonNext","InputImage","ImageViewWrapper","justifyContent","ContentSet","Flex","Text","ButtonSet","BoxSet","SwitchImage","flexDirection","SwitchContent","ButtonOk","ButtonCanCel","CloseIconWrapper","CloseIcon","ImageAlignment","readOnly","viewerRef","url","setUrl","isLoadFile","setIsLoadFile","loadedSuccess","setLoadedSuccess","volumes","urlRef","stateParams","setStateParams","paramAligment","image_id","loadFile","loadFileIndex","paramInit","setValueToBraibrowser","valueParams","setResize","x_resize","y_resize","z_resize","setRadian","y_rotate","x_rotate","z_rotate","setVoxelCoords","y_pos","z_pos","x_pos","redrawVolumes","onChangeValue","newParams","align","onBlurRadian","valueRadian","isNaN","PI","clearVolumes","loadVolumes","nii_url","template","element_id","viewer_insert_className","overlay","complete","volumeLoaded","isLoaded","brainbrowser","window","BrainBrowser","volume","paramsNode","xspace","radian","yspace","zspace","utils","isFunction","getVoxelCoords","voxel","k","j","pre","gerenateValueNumber","color_map_config","VolumeViewer","start","viewer","addEventListener","urlColor","cursor_color","loadDefaultColorMapFromURL","setDefaultPanelSize","render","Modal","minHeight","onBlur","gap","PROJECT_SLICE_NAME","saveToken","access_token","localStorage","setItem","getToken","getItem","saveRefreshToken","refresh_token","removeToken","removeItem","isAdmin","isReseacher","optionsRole","code","login","refreshToken","getMe","listUser","query","createUser","editUser","userId","put","deleteUser","deleteAccountProfile","editNameProfile","editPassProfile","saveParams","loadParams","resetPassword","email","axiosLibrary","create","baseURL","timeout","interceptors","request","use","headers","Authorization","ExToken","Promise","reject","res","getDatasetListApi","createDatasetApi","getDatasetList","createDataset","datasetSlice","reset","initDialogFile","ReactFlowComponent","projectID","openPopupAlignment","setOpenPopupAlignment","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","flowElementInput","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","accept","drop","monitorOffset","getClientOffset","offsetLeft","offsetTop","flag","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","preventDefault","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","Popover","anchorOrigin","vertical","horizontal","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","getNWBParamsApi","getNWBParams","nwbSlice","NWBSettingContents","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","borderRight","paddingTop","transitions","easing","sharp","leavingScreen","easeOut","enteringScreen","ExperimentStatusIcon","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","unmountOnExit","Table","Head","Body","TableHead","TableBody","TableRowOfFunction","outputs","popup","setPopup","component","scope","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","ExperimentUidContext","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListKeys","recordsIsEmpty","startTime","finishTime","page","storageKey","initialValue","parseFn","savedStr","JSON","parse","setValue","stringify","useLocalStorage","valueNum","rowsPerPage","emptyRows","flexGlow","records","TableContainer","RowItem","secondary","Fragment","tableCellClasses","root","borderBottomWidth","Experiment","LoaderWrapper","bottom","rotate","keyframes","prixClipFix","Loader","animation","content","boxSizing","inset","Loading","regexThreshold","regexCutCoords","AlertDialog","onSaveParams","DialogContentText","WrapperInput","VisualizeInput","SpanError","Title","fontWeight","CutCoords","VisualizeInputWrapper","ParamsButton","ButtonWrapper","VisualizeButton","ImageWrapper","Image","objectFit","VisualizeNew","setIsLoading","cut_coords","coronal","sagittal","threshold","dataParams","setDataParams","errors","setErrors","onLoadParams","newCutCoords","toNumberArr","validateParams","newArr","checkArr","some","onChangeParams","test","checkChar","Container","src","alt","StyledAppBar","drawer","TabPanel","other","hidden","a11yProps","Project","ProjectTypeValue","setParams","runPipeline","isCanceled","location","useLocation","isEdited","intervalId","prevStatus","setPrevStatus","useRunPipeline","set","centered","textColor","UserContext","setUser","useUser","BoxDropdown","listStyleType","backgroundClip","outline","BoxWrapper","BoxMenu","userSelect","BoxInfo","BoxMenuItem","transform","BoxMenuItemLogout","TitleLogo","HeaderWrapper","Header","user","refMenu","blur","display_name","drawerWidth","ignorePaths","MenuLeft","onResize","pathname","isClose","MenuLeftWrapper","BoxBack","ButtonBack","BoxDivider","KeyboardBackspaceIcon","LinkWrapper","to","active","TypographyMenu","Link","textDecoration","LayoutWrapper","ContentBodyWrapper","paddingRight","ChildrenWrapper","KeyboardBackspace","shouldForwardProp","listStyle","lineHeight","Layout","setWidth","checkkAuth","token","isPageLogin","DashboardWrapper","DashboardContent","flexWrap","TitleMenu","Dashboard","Input","ContentDelete","ButtonConfirm","BoxConfirm","ModalDeleteAccount","onSubmit","titleSubmit","description","textDelete","setTextDelete","whiteSpace","placeholder","MyPaginate","ReactPaginate","borderCollapse","Thead","Tr","Th","borderTopLeftRadius","borderTopRightRadius","TBody","Td","maxWidth","wordBreak","NoData","ArrowDownwardIconOrder","ArrowDownwardIcon","TableComponent","paginate","orderBy","orderKey","pageCount","page_size","renderCol","dayjs","dataIndex","iCol","nameCol","disableInitialCallback","marginPagesDisplayed","pageRangeDisplayed","breakLabel","previousLabel","nextLabel","TextError","InputError","autoComplete","SelectModal","SelectError","options","initState","password","lab","confirmPassword","regexPassword","regexEmail","regexIgnoreS","ModalComponent","onSubmitEdit","setIsOpenModal","dataEdit","setFormData","isDisabled","setIsDisabled","validateEmail","validateField","validatePassword","isConfirm","errorLength","validateLength","datas","validateForm","errorName","errorEmail","errorLab","errorRole","onChangeData","newDatas","errorConfirm","toLowerCase","newErrors","alert","ModalBox","TitleModal","BoxData","LabelModal","ButtonModal","AccountManagerWrapper","BoxButton","ButtonAdd","ALink","button","AccountManager","openDelete","setOpenDelete","isOpenModal","setDataEdit","idDel","setIdDel","setData","per_page","next_page_token","setPaginate","getList","nextPageToken","newData","total_page","handleCloseDelete","onDelete","onForgotPassword","onPageChange","InputPassword","setType","BoxTitle","FormInline","Label","ModalChangePassword","setValues","validate","confirm_password","validateReEnter","new_password","onChangePass","onCloseModal","reEnter","AccountWrapper","BoxFlex","TitleData","ButtonSubmit","Account","isEditName","setIsEditName","openChangePw","setOpenChangePw","onEditName","handleCloseChangePw","onChangePw","oldPass","newPass","old_password","mt","AccountDelete","getProjectListApi","createProjectApi","deleteProjectApi","getProjectList","getProjectId","createProject","editProject","deleteProject","ProjectsWrapper","ProjectsTitle","BoxAction","letterSpacing","Projects","idDelete","setIdDelete","setPage","onEdit","onWorkflow","onResults","addNewProject","RenderColumn","recordIndex","rowClick","drags","onMouseDown","draggable","onDrag","openChild","setOpenChild","openChildParent","setOpenChildPrent","subjects","openSubjects","setOpenSubjects","isDrag","drag","session_id","datatype_index","onDragEvent","datatypes","column","BoxCenter","subject_index","subId","o","sessions","session","session_index","ii","image_index","datatype_label","subject_id","parent_id","record_index","onDragStart","BoxDrag","TableWrap","overflowX","DataTable","DatabaseTableComponent","onSort","onBeginDragProps","onBeginDrag","setDrags","pageX","pageY","mouseMoveRect","setMouseMoveRect","timeoutClick","ctrRef","refTable","refTdSelect","mouseStart","beginDrag","setBeginDrag","onKeydownEvent","onKeyupEvent","onMouseUp","onMouseMove","removeEventListener","ctrlKey","metaKey","onRowClickEvent","idDom","tds","currentTarget","getElementsByTagName","dom","innerHTML","order","onSortHandle","allowMutilKey","draggableProps","el","rowId","trNow","getBoundingClientRect","td","Dot","TitleScale","BoxLine","ScaleWrapper","ChangeDrag","onChangeMin","showInputMax","mouseDown","refDrag","refDot","getWidth","clientWidth","onTouchStart","touches","mouseInit","scale","onTouchMove","toPrecision","onTouchEnd","getDataBaseTree","getDataBaseList","getRawdb","editAttributes","handleSaveAttributes","BoxLoading","ButtonPrevious","BoxContentData","WrapperJson","WrapArea","borderLeft","TextArea","ArrowBackIosIconWrapper","ArrowBackIosIcon","ArrowForwardIosIconWrapper","ArrowForwardIosIcon","WrapperButton","ImageView","editAttribute","onNext","onPrevious","jsonData","worldCoords","setWorldCoords","voxelCoords","setOpacity","thresholds","setThresholds","maxThres","setMaxThres","contracts","setContracts","brightness","setBrightness","openSave","setOpenSave","textAttribute","setTextAttribute","errorAttribute","setErrorAttribute","refTextArea","intensity_min","intensity_max","getIntensityValue","getWorldCoords","handleCloseSave","num","showInputMin","setContrast","refreshPanels","focus","onChangeJson","onRowClick","view","checkNext","onGet","checkPre","isSub","indexImageNow","record","dataNow","subjectNow","sessionNow","datatypeNow","imagePre","datatypeImagePre","imageNext","datatypeNext","sortWithLabName","datasTable","typeOrder","sort","sortSubjectTree","dataA","dataB","subjectsA","subA","subB","subjectsB","sortSessionTree","sessionsA","sA","sB","flat","sessionsB","subSessA","subSessB","ssA","ssB","sortDataTypeTree","ses","ss","dataTypeA","dataTypeB","typeA","typeB","sortAttributesTypeTree","s","imageA","imageB","image_attributes","sortWithKey","valueA","valueB","sortWithTime","Date","recording_time","onFilterValue","setDatabases","initDataTable","pagenation","limit","total_pages","arrRecord","arrSub","subject","arrSess","session_label","arrDt","dt","datatypes_label","image_type","protocol","PopupSearch","onFilter","Popup","PopupInner","HeaderTitle","ButtonControl","InputSearch","defaultDatabase","child","DatabaseWrapper","ButtonFilter","BoxSelectTypeView","Database","openPopup","setOpenPopup","setViewer","databases","setOrdeBy","columnSort","setColumnSort","setInitDataTable","setDisabled","fetchData","DatabaseTable","defaultExpand","orderByValue","LoginWrapper","LoginContent","FormSignUp","LabelField","LableRequired","Description","LinkWrappper","ButtonLogin","Login","validateSubmit","ex_token","getUser","Stack","projectSlice","resetCurrentProject","nameDefault","defaultFactor","within","remapDatasetToDataFactor","folder_name","sub_within","project_name","attributes","datatype","project_type","image_count","TextName","borderWidth","BoxItem","TypographyBoxItem","BoxFactor","BoxOptions","RadioGroup","InputName","DropAndDropBox","DragBox","DropBox","NewRowButton","borderStyle","BoxFilter","ProjectFormComponent","idEdit","loading","setLoading","imageIDs","setImageIDs","routeGoback","isPendingDrag","databasese","initDatabase","setInitDatabase","projectName","setProjectName","FACTOR","projectType","setProjectType","openFilter","setOpenFilter","rowDrag","setRowDrag","dataFactors","setDataFactors","getDataTree","then","onMouseOver","factor","onDropData","newIds","w","onDragLeave","renderData","rowDataClick","onCancle","edited","generateName","getBorderDrag","onOk","source_image_ids","iWithin","isSuccess","WITHIN_FACTOR","Radio","onChangeNameFactor","rowData","onChangeNameWithinFactor","onDeleteWithin","onDeleteDataWithin","onDrop","onDeleteDataFactor","idFactor","mouseup","Heading","ButtonSignIn","ResetPassword","onReset","errorCheck","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","deleteData","prevDataType","prevFilePath","roi1Ddata","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","projectReducer","datasetReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.50578d54.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else if (nodeResultDto.status === 'running') {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: nodeResultDto.name,\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type Params = {\n  image_id: number | string\n  x_pos: number\n  y_pos: number\n  z_pos: number\n  x_rotate: number\n  y_rotate: number\n  z_rotate: number\n  x_resize: number\n  y_resize: number\n  z_resize: number\n}\n\nexport type AlignmentData = {\n  alignments: {\n    path: string\n    type: string\n    value: Params[]\n  }\n}\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode\n  extends InputNodeBaseType<'image', AlignmentData> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\nconst HOST_DATABASE = process.env.REACT_APP_SERVER_DATABASE_HOST\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\nexport const DATABASE_URL_HOST = `${HOST_DATABASE}`\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(\n  projectId: string,\n  data: RunPostData,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${projectId}`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  projectId: string,\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${projectId}/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  projectId: string\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { projectId, uid, pendingNodeIdList } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/result/${projectId}/${uid}`,\n    {\n      pendingNodeIdList,\n    },\n  )\n  return response.data\n}\n","import { RootState } from 'store/store'\nimport { SubFolder } from './DatasetType'\n\nexport const selectDataset = (state: RootState) => state.dataset\n\nexport const selectCurrentProjectId = (state: RootState) =>\n  state.dataset.project_id\n\nconst getUrlFromSubfolder = (subfolders: SubFolder[], urls: string[]) => {\n  subfolders.forEach((sub) => {\n    if (sub.sub_folders) {\n      getUrlFromSubfolder(sub.sub_folders, urls)\n    } else if (sub.images?.length) {\n      const urlsImage = sub.images.map((image) => image.image_url)\n      urls.push(...urlsImage)\n    }\n  })\n  return urls\n}\n\nexport const selectListImageUrl = (state: RootState): string[] => {\n  if (!state.dataset.dataset) return []\n  let urls: string[] = []\n  urls = getUrlFromSubfolder(state.dataset.dataset.sub_folders, urls)\n  return urls\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\nimport { selectCurrentProjectId } from '../Dataset/DatasetSelector'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  if (projectId) {\n    try {\n      const responseData = await runApi(projectId, runPostData)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('projectId does not exist.')\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const projectId = selectCurrentProjectId(thunkAPI.getState())\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (projectId && currentUid != null) {\n      try {\n        const responseData = await runByUidApi(\n          projectId,\n          currentUid,\n          runPostData,\n        )\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('projectId or currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  if (projectId) {\n    try {\n      const responseData = await runResult({\n        projectId,\n        uid,\n        pendingNodeIdList,\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('projectId does not exist.')\n  }\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { EdgeDict, NodeDict, OutputPathsDTO, RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type FunctionsDTO = {\n  [nodeId: string]: {\n    name: string\n    success: string\n    unique_id: string\n    hasNWB: boolean\n    message?: string\n    started_at?: string\n    finished_at?: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type ExperimentDTO = {\n  function: FunctionsDTO\n  name: string\n  success?: EXPERIMENTS_STATUS\n  started_at: string\n  finished_at?: string\n  project_id: string\n  unique_id: string\n  hasNWB: boolean\n  edgeDict: EdgeDict\n  nodeDict: NodeDict\n}\n\nexport async function getExperimentsApi(\n  projectId: string,\n): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/${projectId}`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function fetchExperimentApi(\n  projectId: string,\n): Promise<ExperimentDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/fetch/${projectId}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  status?: EXPERIMENTS_STATUS\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { RootState } from 'store/store'\n\nexport const selectProject = (state: RootState) => state.project\nexport const selectCurrentProjectId = (state: RootState) =>\n  state.project.currentProject?.id\n  \nexport const selectProjectList = (state: RootState) => state.project.projects\n\nexport const selectCurrentProject = (state: RootState) => state.project.currentProject\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n  ExperimentDTO,\n  fetchExperimentApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\nimport { selectCurrentProjectId } from '../Project/ProjectSelector'\nimport { ThunkApiConfig } from 'store/store'\n\nexport const getExperiments = createAsyncThunk<\n  ExperimentsDTO,\n  undefined,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/getExperiments`, async (_, thunkAPI) => {\n  const projectId = selectCurrentProjectId(thunkAPI.getState())\n  if (projectId) {\n    try {\n      const response = await getExperimentsApi(projectId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('project id does not exist.')\n  }\n})\n\nexport const fetchExperiment = createAsyncThunk<ExperimentDTO, string>(\n  `${EXPERIMENTS_SLICE_NAME}/fetchExperiment`,\n  async (projectId, thunkAPI) => {\n    try {\n      const response = await fetchExperimentApi(projectId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import type {\n  ExperimentDTO,\n  ExperimentsDTO,\n  FunctionsDTO,\n} from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\nimport { RunResultDTO } from 'api/run/Run'\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.started_at,\n    status: dto.success,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nexport function convertFunctionsToRunResultDTO(\n  dto: FunctionsDTO,\n): RunResultDTO {\n  const result: RunResultDTO = {}\n  Object.entries(dto).forEach(([key, value]) => {\n    result[key] = {\n      status: value.success,\n      message: value.message ?? '',\n      name: value.name,\n      outputPaths: value.outputPaths,\n    }\n  })\n  return result\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\nimport { convertFunctionsToRunResultDTO } from '../Experiments/ExperimentsUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.payload.unique_id,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          uid: action.payload.unique_id,\n          status: RUN_STATUS.START_SUCCESS,\n          runResult: {\n            ...convertToRunResult(\n              convertFunctionsToRunResultDTO(action.payload.function),\n            ),\n          },\n          runPostData: {\n            name: action.payload.name,\n            nodeDict: action.payload.nodeDict,\n            edgeDict: action.payload.edgeDict,\n            snakemakeParam: {},\n            nwbParam: {},\n            forceRunList: [],\n          },\n        }\n\n        const runResultPendingList = Object.values(state.run.runResult).filter(\n          isNodeResultPending,\n        )\n        if (runResultPendingList.length === 0) {\n          state.run.status = RUN_STATUS.FINISHED\n        }\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 130,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { FlowElement, Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node as FlowElement<NodeData>)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node as FlowElement<NodeData>)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n    // editFlowElementParamsAlignmentById: (\n    //   state,\n    //   action: PayloadAction<{\n    //     nodeId: string\n    //     params: Params[]\n    //   }>,\n    // ) => {\n    //   let { nodeId, params } = action.payload\n    //   const elementIdx = state.flowElements.findIndex(\n    //     (ele) => ele.id === nodeId,\n    //   )\n    //   const targetItem = state.flowElements[elementIdx]\n    //   if (isNode(targetItem)) {\n    //     if (!targetItem.data) {\n    //       return\n    //     }\n    //     let newParams = params\n    //     if (!targetItem.data.param) {\n    //       targetItem.data.param = initParams\n    //     }\n    //     targetItem.data.param.alignments.value = newParams as Params[]\n    //   }\n    // },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n  // editFlowElementParamsAlignmentById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n      .addCase(fetchExperiment.fulfilled, (_state, _action) => initialState)\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n// import { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n      }}\n    >\n      <Button onClick={() => navigate('/projects')}>\n        <ArrowBackIosIcon />\n        Projects\n      </Button>\n      <SnakemakeButton />\n      {/*<NWBSettingButton />*/}\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n  onOpenImageAlignment: (\n    v: boolean,\n    params?: { nodeId: string; alignments: Params[] },\n  ) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n  onOpenImageAlignment: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { AlignmentData, FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { DialogContext } from '../DialogContext'\nimport { useSelector } from 'react-redux'\nimport { selectInputNodeParam } from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        nodeId={nodeId}\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n  nodeId?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({ filePath, nodeId }) => {\n    const navigate = useNavigate()\n    const [searchParams] = useSearchParams()\n    const { onOpenImageAlignment } = useContext(DialogContext)\n\n    const inputNode = useSelector(selectInputNodeParam(nodeId || '')) as AlignmentData\n\n    const id = searchParams.get('id')\n    const getNameSelectec = () => {\n      if (Array.isArray(filePath)) {\n        return `${filePath.length} images selected.`\n      }\n      return `${filePath ? 1 : 0} images selected.`\n    }\n\n    return (\n      <div style={{ padding: 16 }}>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: 'auto' }}>\n          <Button\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n            onClick={() =>\n              navigate(\n                `/projects/new-project?id=${id}&nodeId=${nodeId}&back=/projects/workflow?tab=0&id=${id}`,\n              )\n            }\n          >\n            EDIT IMAGESET\n          </Button>\n        </ButtonGroup>\n        <div style={{ marginTop: 8 }}>\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {getNameSelectec()}\n          </Typography>\n        </div>\n        <ButtonGroup size=\"small\" style={{ width: '90%', margin: '8px 0' }}>\n          <Button\n            onClick={() => {\n              if (!nodeId) return\n              onOpenImageAlignment(true, {\n                nodeId,\n                alignments: inputNode.alignments.value,\n              })\n            }}\n            style={{ width: '80%' }}\n            variant=\"outlined\"\n          >\n            ALIGNMENT\n          </Button>\n        </ButtonGroup>\n      </div>\n    )\n  },\n)\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n  Params,\n  ImageInputNode,\n  AlignmentData,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initParams: AlignmentData = {\n  alignments: {\n    path: 'alignments',\n    type: 'child',\n    value: [],\n  },\n}\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: initParams,\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeParamAlignment(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: Params[]\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId] as ImageInputNode\n      inputNode.param.alignments.value = param\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: initParams,\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: initParams,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: initParams,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const {\n  setCsvInputNodeParam,\n  setInputNodeHDF5Path,\n  setInputNodeParamAlignment,\n} = inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        label=\"dur[msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import { Box, IconButton, Modal, styled } from '@mui/material'\nimport { ChangeEvent, FC, useEffect, useMemo, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { ObjectType } from 'pages/Database'\nimport { useDispatch } from 'react-redux'\nimport { setInputNodeParamAlignment } from 'store/slice/InputNode/InputNodeSlice'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\n// import { setSaveFileName } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  urls: string[]\n  jsonData?: ObjectType\n  disabled?: { left: boolean; right: boolean }\n  params?: { nodeId: string; alignments: Params[] }\n  readOnly?: boolean\n}\n\nconst ImageAlignment: FC<ImageViewProps> = ({\n  open,\n  onClose,\n  urls,\n  params = { nodeId: '', alignments: [] },\n  readOnly= false\n}) => {\n  const viewerRef = useRef<any>()\n  const [url, setUrl] = useState(urls[0])\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const [loadedSuccess, setLoadedSuccess] = useState(false)\n  const volumes = useRef<any>()\n  const dispatch = useDispatch()\n\n  const urlRef = useRef(url)\n\n  const [stateParams, setStateParams] = useState<Params[]>(params.alignments)\n\n  const paramAligment = useMemo(() => {\n    return stateParams.find((param) => param.image_id === url)\n  }, [url, stateParams])\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    setStateParams(params.alignments)\n    setUrl(urls[0])\n    setIsLoadFile(false)\n    setLoadedSuccess(false)\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    urlRef.current = url\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n\n  useEffect(() => {\n    if (loadedSuccess) {\n      const paramInit = params.alignments?.find(\n        (param) => param.image_id === url,\n      )\n      setValueToBraibrowser(paramInit)\n    }\n    //eslint-disable-next-line\n  }, [loadedSuccess, url])\n\n  const onOk = () => {\n    if (params?.nodeId && stateParams) {\n      dispatch(\n        setInputNodeParamAlignment({\n          nodeId: params.nodeId,\n          param: stateParams,\n        }),\n      )\n    }\n    onClose?.()\n  }\n\n  const onPreImage = () => {\n    const index = urls.findIndex((item) => item === url)\n    if (index === 0) return\n    setUrl(urls[index - 1])\n  }\n\n  const onNextImage = () => {\n    const index = urls.findIndex((item) => item === url)\n    if (index === urls.length - 1) return\n    setUrl(urls[index + 1])\n  }\n\n  const setValueToBraibrowser = (valueParams?: Params) => {\n    if (valueParams) {\n      volumes.current.setResize({\n        x: Number(valueParams.x_resize),\n        y: Number(valueParams.y_resize),\n        z: Number(valueParams.z_resize),\n      })\n      volumes.current.setRadian(\n        Number(valueParams.y_rotate),\n        Number(valueParams.x_rotate),\n        Number(valueParams.z_rotate),\n      )\n      volumes.current.setVoxelCoords(\n        Number(valueParams.y_pos),\n        Number(valueParams.z_pos),\n        Number(valueParams.x_pos),\n      )\n      viewerRef.current.redrawVolumes()\n    }\n  }\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === url ? { ...align, [name]: value } : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const onBlurRadian = (e: any) => {\n    const { name, value } = e.target\n    let valueRadian = Number(value)\n    if (isNaN(valueRadian)) {\n      valueRadian = 0\n    } else if (valueRadian < 0) {\n      valueRadian = 0\n    } else if (valueRadian > 2 * Math.PI) {\n      valueRadian = 0\n    }\n    if (params?.nodeId && stateParams) {\n      const newParams = stateParams.map((align) =>\n        align.image_id === url ? { ...align, [name]: valueRadian } : align,\n      )\n      setStateParams(newParams)\n    }\n  }\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    setLoadedSuccess(false)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n        },\n      ],\n      complete: () => setValueToBraibrowser(paramAligment),\n    })\n  }\n\n  const volumeLoaded = (event: any, isLoaded?: boolean) => {\n    const brainbrowser = (window as any).BrainBrowser\n    const { volume } = event\n    volumes.current = volume\n    const paramsNode: Params = {\n      image_id: urlRef.current,\n      x_pos: 0,\n      y_pos: 0,\n      z_pos: 0,\n      x_rotate: volume.header.xspace.radian,\n      y_rotate: volume.header.yspace.radian,\n      z_rotate: volume.header.zspace.radian,\n      x_resize: volume.header.xspace.step,\n      y_resize: volume.header.yspace.step,\n      z_resize: volume.header.zspace.step,\n    }\n    if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n      const voxel = volume.getVoxelCoords()\n      paramsNode.x_pos = voxel.k\n      paramsNode.y_pos = voxel.i\n      paramsNode.z_pos = voxel.j\n    }\n    const newParams = (pre: Params[]) => {\n      if (pre.find((align) => align.image_id === urlRef.current)) {\n        return pre.map((align) => {\n          if (align.image_id === urlRef.current) return paramsNode\n          return align\n        })\n      }\n      return [...pre, paramsNode]\n    }\n    setStateParams(newParams)\n    setIsLoadFile(false)\n    setLoadedSuccess(true)\n  }\n\n  const gerenateValueNumber = (value?: number) => {\n    if (typeof value === 'undefined') return ''\n    return value\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    setLoadedSuccess(false)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', (e: any) =>\n          volumeLoaded(e, true),\n        )\n        viewer.addEventListener('sliceupdate', volumeLoaded)\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {\n                setIsLoadFile(false)\n              },\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div style={{ alignItems: 'stretch' }}>\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              <Flex>\n                <BoxSet>\n                  <ContentSet>\n                    <Flex>\n                      <Text>right {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"x_pos\"\n                        value={gerenateValueNumber(paramAligment?.x_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>forward {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"y_pos\"\n                        value={gerenateValueNumber(paramAligment?.y_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>up {'{mm}'}</Text>\n                      <input\n                        type={'number'}\n                        name=\"z_pos\"\n                        value={gerenateValueNumber(paramAligment?.z_pos)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>roll {'{rad}'}</Text>\n                      <input\n                        name=\"x_rotate\"\n                        value={gerenateValueNumber(paramAligment?.x_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>pitch {'{rad}'}</Text>\n                      <input\n                        name=\"y_rotate\"\n                        value={gerenateValueNumber(paramAligment?.y_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>yaw {'{rad}'}</Text>\n                      <input\n                        name=\"z_rotate\"\n                        value={gerenateValueNumber(paramAligment?.z_rotate)}\n                        onChange={onChangeValue}\n                        onBlur={onBlurRadian}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{x}'}</Text>\n                      <input\n                        name=\"x_resize\"\n                        value={gerenateValueNumber(paramAligment?.x_resize)}\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{y}'}</Text>\n                      <input\n                        value={gerenateValueNumber(paramAligment?.y_resize)}\n                        name=\"y_resize\"\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <Flex>\n                      <Text>resize {'{z}'}</Text>\n                      <input\n                        value={gerenateValueNumber(paramAligment?.z_resize)}\n                        name=\"z_resize\"\n                        onChange={onChangeValue}\n                        readOnly={readOnly}\n                      />\n                    </Flex>\n                    <ButtonSet\n                      onClick={() => setValueToBraibrowser(paramAligment)}\n                    >\n                      Set Origin\n                    </ButtonSet>\n                  </ContentSet>\n                </BoxSet>\n                <Flex\n                  sx={{\n                    flexDirection: 'column',\n                    position: 'relative',\n                    gap: 15,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <SwitchImage>\n                    <span>Select Image</span>\n                    <SwitchContent>\n                      <ButtonPre onClick={onPreImage}>{'<'}</ButtonPre>\n                      <InputImage value={url} readOnly />\n                      <ButtonNext onClick={onNextImage}>{'>'}</ButtonNext>\n                    </SwitchContent>\n                    <span>{`(${\n                      urls.findIndex((item: string) => item === url) + 1\n                    }/${urls.length})`}</span>\n                  </SwitchImage>\n                  <Flex sx={{ gap: 5 }}>\n                    <ButtonCanCel onClick={onClose}>CANCEL</ButtonCanCel>\n                    <ButtonOk onClick={onOk}>OK</ButtonOk>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </div>\n          </div>\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n      </div>\n    </Modal>\n  )\n}\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  right: '10%',\n  top: '10%',\n  zIndex: 9999,\n  background: 'rgba(0, 0, 0, 0.6)',\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.8)',\n  },\n})\n\nconst ButtonPre = styled('button')({\n  width: 50,\n  height: 50,\n  position: 'unset',\n  zIndex: 1,\n  borderRadius: '50%',\n  backgroundColor: 'unset',\n  border: 'none',\n  cursor: 'pointer',\n  fontSize: 20,\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.1)',\n  },\n})\n\nconst ButtonNext = styled(ButtonPre)({\n  right: '10%',\n})\n\nconst InputImage = styled('input')({\n  height: 'fit-content',\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  overflow: 'auto',\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: '#fff',\n})\n\nconst ContentSet = styled(Box)({\n  padding: 20,\n})\n\nconst Flex = styled(Box)({\n  display: 'flex',\n})\n\nconst Text = styled('span')({\n  display: 'block',\n  minWidth: 150,\n})\n\nconst ButtonSet = styled('button')({\n  marginTop: 20,\n  cursor: 'pointer',\n})\n\nconst BoxSet = styled(Box)({\n  border: '2px solid #000',\n  width: 'fit-content',\n  margin: '30px 50px',\n})\n\nconst SwitchImage = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n})\n\nconst SwitchContent = styled(Box)({\n  height: 'max-content',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst ButtonOk = styled('button')({\n  padding: '10px 20px',\n  background: '#000000c7',\n  border: '2px solid #000',\n  color: '#fff',\n  cursor: 'pointer',\n})\n\nconst ButtonCanCel = styled('button')({\n  padding: 10,\n  border: '2px solid #000',\n  cursor: 'pointer',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nexport default ImageAlignment\n\n","import { ObjectType } from 'pages/Database'\n\nexport const PROJECT_SLICE_NAME = 'project'\n\nexport type DatasetPostType = {\n  folder_name: string\n  sub_folders: { folder_name: string; source_image_ids: number[] }[]\n  source_image_ids: number[]\n}\n\nexport type DatasetType = {\n  folder_name: string\n  sub_folders: { folder_name: string; images: number[] }[]\n  images: number[]\n}\n\nexport type SubFolder = {\n  folder_name: string\n  id: string\n  images?: {\n    attributes: ObjectType\n    id: number\n    image_url: string\n    parent_id: string\n  }[]\n  parent_id: string\n  sub_folders: SubFolder[]\n}\n\nexport type Dataset = {\n  dataset?: {\n    id: string\n    project_id: number\n    sub_folders: SubFolder[]\n  }\n  project_id: string | null\n}\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\nexport const saveRefreshToken = (refresh_token: string) => {\n  localStorage.setItem('refresh_token', refresh_token)\n}\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refresh_token')\n}\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\nexport const saveExToken = (ExToken: string) => {\n  localStorage.setItem('ExToken', ExToken)\n}\nexport const getExToken = () => {\n  return localStorage.getItem('ExToken')\n}\nexport const removeExToken = () => {\n  return localStorage.removeItem('ExToken')\n}\n\nexport const isAdmin = (role?: number | string) => {\n  return role === 1\n}\n\nexport const isReseacher = (role?: string | number) => {\n  return role === 20\n}\n\nexport const optionsRole = [\n  {\n    code: 1,\n    name: 'Admin',\n  },\n  {\n    code: 10,\n    name: 'Data Manager',\n  },\n  {\n    code: 20,\n    name: 'User',\n  },\n]\n","import { getRefreshToken } from 'utils/auth'\nimport axios from 'utils/axios'\n\nexport const login = async (data: { email: string; password: string }) => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const refreshToken = async () => {\n  const response = await axios.post('/auth/refresh', {\n    refresh_token: getRefreshToken(),\n  })\n  return response.data\n}\n\nexport const getMe = async () => {\n  const response = await axios.get('/auth/me')\n  return response.data\n}\n\nexport const listUser = async (query?: object) => {\n  const response = await axios.get('/admin/user', { params: query })\n  return response.data\n}\n\nexport const createUser = async (data: object) => {\n  const response = await axios.post(`/admin/user`, data)\n  return response.data\n}\n\nexport const editUser = async (userId: string | number, data: object) => {\n  const response = await axios.put(`/admin/user/${userId}`, data)\n  return response.data\n}\n\nexport const deleteUser = async (userId: string | number) => {\n  const response = await axios.delete(`/admin/user/${userId}`)\n  return response.data\n}\n\nexport const deleteAccountProfile = async () => {\n  const response = await axios.delete(`/auth/me`)\n  return response.data\n}\n\nexport const editNameProfile = async (data: object) => {\n  const response = await axios.put(`/auth/me`, data)\n  return response.data\n}\n\nexport const editPassProfile = async (data: object) => {\n  const response = await axios.put(`/auth/change-password`, data)\n  return response.data\n}\n\nexport const saveParams = async (data: object) => {\n  const response = await axios.post(`/image_stat/param`, data)\n  return response.data\n}\n\nexport const loadParams = async () => {\n  const response = await axios.get(`/image_stat/param`)\n  return response.data\n}\n\nexport const resetPassword = async (email: string) => {\n  const response = await axios.post(\n    `/admin/user/send_reset_password?email=${email}`,\n    email,\n  )\n  return response.data\n}\n","import { refreshToken } from 'api/auth'\nimport axiosLibrary from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { getExToken, getToken, saveToken } from 'utils/auth'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    config.headers.ExToken = getExToken()\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\naxios.interceptors.response.use(\n  async (res) => res,\n  async (error) => {\n    if (error?.response?.status === 401) {\n      const { access_token } = await refreshToken()\n      saveToken(access_token)\n      error.config.headers.Authorization = `Bearer ${access_token}`\n      return axiosLibrary(error.config)\n    }\n    return Promise.reject(error)\n  },\n)\n\nexport default axios\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from '../../const/API'\nimport { DatasetPostType } from 'store/slice/Dataset/DatasetType'\n\nexport const getDatasetListApi = async (project_id: string) => {\n  const response = await axios.get(\n    `${DATABASE_URL_HOST}/workdb/dataset/search?project_id=${project_id}`,\n  )\n  return response.data\n}\n\nexport const createDatasetApi = async (\n  data: DatasetPostType[],\n  project_id: number,\n) => {\n  const response = await axios.post(\n    `${DATABASE_URL_HOST}/workdb/dataset/${project_id}`,\n    data,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Dataset, DatasetPostType } from './DatasetType'\nimport { createDatasetApi, getDatasetListApi } from 'api/dataset'\n\nexport const getDatasetList = createAsyncThunk<Dataset, { project_id: string }>(\n  `${PROJECT_SLICE_NAME}/getDatasets`,\n  async (param, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getDatasetListApi(param.project_id)\n      return { dataset: response?.[0], project_id: param.project_id }\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const createDataset = createAsyncThunk<\n  Dataset,\n  {\n    dataset: DatasetPostType[]\n    project_id: number\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/createDataset`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await createDatasetApi(param.dataset, param.project_id)\n    param.callback?.(true)\n    return response\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n","import { createSlice } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Dataset } from './DatasetType'\nimport { getDatasetList } from './DatasetAction'\n\nconst initialState: Dataset = {\n  dataset: undefined,\n  project_id: null,\n}\n\nexport const datasetSlice = createSlice({\n  name: PROJECT_SLICE_NAME,\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.project_id = null\n      state.dataset = undefined\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getDatasetList.fulfilled, (state, action) => {\n      state.dataset = action.payload.dataset\n      state.project_id = action.payload.project_id\n    })\n  },\n})\n\nexport const { reset } = datasetSlice.actions\nexport default datasetSlice.reducer\n","import React, { DragEvent, MouseEvent, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\nimport ImageAlignment from '../ImageAlignment'\nimport { Params } from 'store/slice/InputNode/InputNodeType'\nimport { getDatasetList } from 'store/slice/Dataset/DatasetAction'\nimport { selectListImageUrl } from 'store/slice/Dataset/DatasetSelector'\nimport { useSearchParams } from 'react-router-dom'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport { reset } from 'store/slice/Dataset/DatasetSlice'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n    const [searchParams] = useSearchParams()\n    const projectID = searchParams.get('id')\n    const urls = useSelector(selectListImageUrl)\n\n    const [openPopupAlignment, setOpenPopupAlignment] = useState<{\n      open: boolean\n      params?: { nodeId: string; alignments: Params[] }\n    }>({\n      open: false,\n      params: { nodeId: '', alignments: [] },\n    })\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    useEffect(() => {\n      if (!projectID) return\n      dispatch(getDatasetList({ project_id: projectID }))\n      return () => {\n        dispatch(reset())\n      }\n      //eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n      const flowElementInput = flowElements[0]\n      if (\n        flowElementInput?.type &&\n        Object.keys(REACT_FLOW_NODE_TYPE_KEY).includes(flowElementInput.type)\n      ) {\n        dispatch(\n          setInputNodeFilePath({ nodeId: flowElementInput.id, filePath: urls }),\n        )\n      }\n      //eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n      const flowElementInput = flowElements[0]\n      if (\n        flowElementInput?.type &&\n        Object.keys(REACT_FLOW_NODE_TYPE_KEY).includes(flowElementInput.type)\n      ) {\n        dispatch(\n          setInputNodeFilePath({ nodeId: flowElementInput.id, filePath: urls }),\n        )\n      }\n      //eslint-disable-next-line\n    }, [flowElements[0]])\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n            onOpenImageAlignment: (flag, params) => {\n              setOpenPopupAlignment({ open: flag, params })\n            },\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                elements={flowElements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                onLoad={onLoad}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition.x, flowPosition.y]}\n                defaultZoom={flowPosition.zoom}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          <ImageAlignment\n            open={openPopupAlignment.open}\n            onClose={() => setOpenPopupAlignment({ open: false })}\n            urls={['/lib/test.nii', '/lib/test0.nii']}\n            params={openPopupAlignment.params}\n          />\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(fetchExperiment.rejected, (_state, _action) => initialState)\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { drawerClasses } from '@mui/material/Drawer'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { Box } from '@mui/material'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer>\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'stretch',\n  height: '100%',\n})\n\nconst StyledDrawer = styled(Box)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  backgroundColor: '#fff',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n  paddingTop: theme.spacing(1.125),\n  overflow: 'auto',\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n}))\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n  height: '100%',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n    paddingTop: theme.spacing(1.125),\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, {useState} from 'react'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nimport {MouseType} from './ExperimentTable'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport {Button} from \"@mui/material\";\nimport ImageAlignment from \"../ImageAlignment\";\n\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n  data?: MouseType[]\n}>(({ open , data}) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Table size=\"small\" aria-label=\"purchases\">\n            <Head />\n            {data && data.map((item) => {\n              return (\n                <Body key={item?.unique_id} data={item}/>\n              )\n            })}\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>Output</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo<{\n    data: MouseType\n}>(({data}) => {\n  return (\n    <TableBody>\n      <TableRowOfFunction data={data} />\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = ({ data } : {data: MouseType}) => {\n    const {name, success, outputs, unique_id} = data\n    const [popup, setPopup] = useState(false)\n  return (\n    <>\n        <TableRow >\n            <TableCell component=\"th\" scope=\"row\">\n                {name}\n            </TableCell>\n            <TableCell>{unique_id}</TableCell>\n            <TableCell>\n                <ExperimentStatusIcon status={success} />\n            </TableCell>\n            <TableCell>\n                <Button disabled={success === 'success'? false : true} onClick={() => setPopup(true)}>\n                    <OpenInNewIcon />\n                </Button>\n            </TableCell>\n        </TableRow>\n        <ImageAlignment\n            open={popup}\n            urls={outputs}\n            onClose={() => setPopup(false)}\n            readOnly={true}\n        />\n    </>\n  )\n}\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const experiment = selectExperimentList(state)[uid]\n    if (experiment.status) {\n      return experiment.status\n    } else {\n      const functions = selectExperimentList(state)[uid].functions\n      const statusList = Object.values(functions).map((f) => f.status)\n      if (statusList.findIndex((status) => status === 'error') >= 0) {\n        return 'error'\n      } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n        return 'running'\n      } else {\n        return 'success'\n      }\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableRow from '@mui/material/TableRow'\n// import TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\n// import ReplayIcon from '@mui/icons-material/Replay'\n// import DeleteIcon from '@mui/icons-material/Delete'\n// import Dialog from '@mui/material/Dialog'\n// import DialogActions from '@mui/material/DialogActions'\n// import DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  // deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { EXPERIMENTS_STATUS} from 'store/slice/Experiments/ExperimentsType'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport {useNavigate} from \"react-router-dom\";\n\nexport type MouseType = {\n    unique_id: string\n    name: string\n    success: EXPERIMENTS_STATUS\n    outputs: string[]\n}\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\ntype Data = {\n    pagenation: object\n    records: {\n        id: number\n        name: string\n        data?: MouseType[]\n    }[]\n    nodeDict: object\n    edgeDict: object\n    startTime: string\n    finishTime: string\n}\n\nconst data: Data = {\n  \"pagenation\": {\n    \"page\": 0,\n    \"limit\": 0,\n    \"total\": 0,\n    \"total_pages\": 0\n  },\n  \"records\": [{\n      \"id\": 0,\n      \"name\": \"MOUSE1\",\n      \"data\": [{\n          \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n          \"name\": \"caiman_cnmf\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"caiman_mc_2rg3nrb410\",\n          \"name\": \"caiman_mc\",\n          \"success\": \"error\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]},\n          {\n          \"unique_id\": \"input_0\",\n          \"name\": \"mouse2p_2_donotouse.tiff\",\n          \"success\": \"success\",\n          \"outputs\": [\n              \"/lib/test.nii\",\n              \"/lib/test0.nii\",\n              \"/lib/test1.nii\"\n          ]}\n        ]\n      },\n      {\n          \"id\": 1,\n          \"name\": \"MOUSE2\",\n          \"data\": [{\n              \"unique_id\": \"caiman_cnmf_fq0042h2uj\",\n              \"name\": \"caiman_cnmf\",\n              \"success\": \"error\",\n              \"outputs\": [\n                  \"/lib/test.nii\",\n                  \"/lib/test0.nii\",\n                  \"/lib/test1.nii\"\n              ]},\n              {\n                  \"unique_id\": \"caiman_mc_2rg3nrb410\",\n                  \"name\": \"caiman_mc\",\n                  \"success\": \"error\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]},\n              {\n                  \"unique_id\": \"input_0\",\n                  \"name\": \"mouse2p_2_donotouse.tiff\",\n                  \"success\": \"success\",\n                  \"outputs\": [\n                      \"/lib/test.nii\",\n                      \"/lib/test0.nii\",\n                      \"/lib/test1.nii\"\n                  ]}\n          ]\n      },\n      {\n          \"id\": 2,\n          \"name\": \"MOUSE3\"\n      }\n  ],\n      \"nodeDict\": {},\n      \"edgeDict\": {},\n      \"startTime\":\"2023/05/16 04:28\",\n      \"finishTime\":\"2023/05/16 04:28\"\n}\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'studio_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  // const dispatch = useDispatch()\n  const navigate = useNavigate()\n  // const onClickReload = () => {\n  //   dispatch(getExperiments())\n  // }\n  // const [checkedList, setCheckedList] = useState<string[]>([])\n  // const [open, setOpen] = React.useState(false)\n  const recordsIsEmpty = experimentListKeys.length === 0\n  const startTime = data.startTime.split(' ')\n  const finishTime = data.finishTime.split(' ')\n\n  // const onClickDelete = () => {\n  //   setOpen(true)\n  // }\n  // const onClickCancel = () => {\n  //   setOpen(false)\n  // }\n  // const onClickOk = () => {\n  //   dispatch(deleteExperimentByList(checkedList))\n  //   setCheckedList([])\n  //   setOpen(false)\n  // }\n\n  const onClickBack = () => {\n    navigate('/projects')\n  }\n\n  const [page,\n    // setPage\n  ] = useState(0)\n\n  // const handleChangePage = (event: unknown, newPage: number) => {\n  //   setPage(newPage)\n  // }\n\n  const [rowsPerPage,\n    // setRowsPerPage\n  ] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  // const handleChangeRowsPerPage = (\n  //   event: React.ChangeEvent<HTMLInputElement>,\n  // ) => {\n  //   const newValue = parseInt(event.target.value, 10)\n  //   setRowsPerPage(newValue)\n  //   setPage(0)\n  // }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 5 }}>\n      <Button onClick={onClickBack}\n        sx={{width: 'fit-content', textTransform: 'unset', fontSize: 20}}\n      >\n        <KeyboardBackspaceIcon /> Projects\n      </Button>\n          <Box sx={{\n            display: 'flex',\n            gap : 4,\n            width: '90%',\n            margin: 'auto',\n            alignItems: 'flex-start'\n          }}>\n              <Typography>\n                  Status:\n              </Typography>\n              <Box>\n                  <ExperimentStatusIcon status={'success'}/>\n              </Box>\n              <Box>\n                  <Typography>Start time: {startTime[0]} {startTime[1]}</Typography>\n                  <Typography>Finish time: {finishTime[0]} {finishTime[1]}</Typography>\n              </Box>\n          </Box>\n          {/*<Box*/}\n          {/*    sx={{*/}\n          {/*        display: 'flex',*/}\n          {/*        justifyContent: 'flex-end',*/}\n          {/*        alignItems: 'center',*/}\n          {/*    }}*/}\n          {/*>*/}\n              {/*<Button*/}\n              {/*  sx={{*/}\n              {/*    margin: (theme) => theme.spacing(0, 1, 1, 0),*/}\n              {/*  }}*/}\n              {/*  variant=\"outlined\"*/}\n              {/*  endIcon={<ReplayIcon />}*/}\n              {/*  onClick={onClickReload}*/}\n              {/*>*/}\n              {/*  Reload*/}\n              {/*</Button>*/}\n              {/*<Button*/}\n              {/*  sx={{*/}\n              {/*    marginBottom: (theme) => theme.spacing(1),*/}\n              {/*  }}*/}\n              {/*  variant=\"outlined\"*/}\n              {/*  color=\"error\"*/}\n              {/*  endIcon={<DeleteIcon />}*/}\n              {/*  onClick={onClickDelete}*/}\n              {/*  disabled={checkedList.length === 0}*/}\n              {/*>*/}\n              {/*  Delete*/}\n              {/*</Button>*/}\n          {/*</Box>*/}\n          {/*<Dialog open={open}>*/}\n          {/*    <DialogTitle>Are you sure you want to delete?</DialogTitle>*/}\n          {/*    <DialogActions>*/}\n          {/*        <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">*/}\n          {/*            Cancel*/}\n          {/*        </Button>*/}\n          {/*        <Button onClick={onClickOk} variant=\"outlined\" autoFocus>*/}\n          {/*            OK*/}\n          {/*        </Button>*/}\n          {/*    </DialogActions>*/}\n          {/*</Dialog>*/}\n          <Paper\n              elevation={0}\n              variant=\"outlined\"\n              sx={{\n                  flexGlow: 1,\n                  height: '100%',\n                  width: '90%',\n                  margin: 'auto'\n              }}\n          >\n              {\n                  data.records.map((item) => {\n                      const { name, id } = item\n                      return (\n                          <TableContainer key={id} component={Paper} elevation={0}>\n                              <Table aria-label=\"collapsible table\">\n                                  <TableBody>\n                                      <ExperimentUidContext.Provider\n                                          value={String(id)}\n                                          key={id}\n                                      >\n                                          <RowItem\n                                              data={item.data}\n                                              name={name}\n                                          />\n                                      </ExperimentUidContext.Provider>\n                                      {emptyRows > 0 && (\n                                          <TableRow\n                                              style={{\n                                                  height: 53 * emptyRows,\n                                              }}\n                                          >\n                                              <TableCell colSpan={10} />\n                                          </TableRow>\n                                      )}\n                                      {recordsIsEmpty && (\n                                          <TableRow>\n                                              <TableCell colSpan={10}>\n                                                  <Typography\n                                                      sx={{\n                                                          color: (theme) => theme.palette.text.secondary,\n                                                          display: 'flex',\n                                                          alignItems: 'center',\n                                                          justifyContent: 'center',\n                                                          height: '300px',\n                                                          textAlign: 'center',\n                                                      }}\n                                                      variant=\"h6\"\n                                                  >\n                                                      No Rows...\n                                                  </Typography>\n                                              </TableCell>\n                                          </TableRow>\n                                      )}\n                                  </TableBody>\n                              </Table>\n                          </TableContainer>\n                      )\n                  })\n              }\n              {/*<TablePagination*/}\n              {/*    rowsPerPageOptions={[5, 10, 25]}*/}\n              {/*    component=\"div\"*/}\n              {/*    count={experimentListKeys.length}*/}\n              {/*    rowsPerPage={rowsPerPage}*/}\n              {/*    page={page}*/}\n              {/*    onPageChange={handleChangePage}*/}\n              {/*    onRowsPerPageChange={handleChangeRowsPerPage}*/}\n              {/*/>*/}\n          </Paper>\n    </Box>\n  )\n})\n\nconst RowItem = React.memo<{\n  name: string\n  data?: MouseType[]\n}>(({ name, data }) => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <React.Fragment>\n      <TableRow\n        onClick={() => data && setOpen((prevOpen) => !prevOpen)}\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell\n          sx={{padding: '20px',\n               display: 'flex',\n               alignItems: 'center'\n          }}\n        >\n          {name} {data && (!open ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />)}\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable data={data} open={open} />\n    </React.Fragment>\n  )\n})\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex', height: 'calc(100% - 58px)' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100%',\n          padding: 16,\n        }}\n      >\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import {Box, keyframes, styled} from \"@mui/material\";\n\nconst Loading = () => {\n    return (\n        <LoaderWrapper>\n            <Loader />\n        </LoaderWrapper>\n    )\n}\n\nconst LoaderWrapper = styled(Box)(({theme}) => ({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    position: 'fixed',\n    backgroundColor: 'rgba(255,255,255,0.6)',\n    zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme })=> ({\n    display: 'block',\n    width: 48,\n    height: 48,\n    borderRadius: '50%',\n    position: 'relative',\n    zIndex: 100,\n    top: 'calc(50% - 24px)',\n    left: 'calc(50% - 24px)',\n    animation: `${rotate} 1s linear infinite`,\n    '&:before': {\n        content: \"''\",\n        boxSizing: 'border-box',\n        position: 'absolute',\n        inset: 0,\n        borderRadius: '50%',\n        border: '3px solid rgba(0,0,0,0.8)',\n        animation: `${prixClipFix} 2s linear infinite`\n    }\n}))\n\nexport default Loading\n","import {\n  styled,\n  Box,\n  Typography,\n  Container,\n  Button,\n  DialogContent,\n  Dialog,\n  DialogActions,\n  DialogContentText\n} from \"@mui/material\";\nimport { useCallback, useState } from \"react\";\nimport { loadParams, saveParams } from \"api/auth\";\nimport Loading from \"../common/Loading\";\n\ntype InputType = {\n  text: string\n  value?: string\n  onChange: (e: any) => void\n  error: string\n}\n\ntype ParamsType = {\n  cut_coords: any\n  threshold: string\n}\n\ntype AlertDialogProps = {\n  open: boolean\n  handleClose: () => void\n  onSaveParams: () => void\n}\n\nconst regexThreshold = /[^0-9,.-]/\nconst regexCutCoords = /[^0-9,-]/\n\nconst  AlertDialog = ({open, handleClose, onSaveParams}: AlertDialogProps) => {\n  return (\n      <div>\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogContent>\n            <DialogContentText>\n              Save parameters OK?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={onSaveParams} autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  );\n}\n\nconst WrapperInput = ({text, value, onChange, error} : InputType) => {\n    return (\n        <Box sx={{display: 'flex'}}>\n              <Typography sx={{minWidth: 100}}>{text}</Typography>\n              <Box sx={{display: 'flex', flexDirection: 'column'}}>\n                <VisualizeInput\n                    name={text}\n                    sx={{width: 250}}\n                    value={value}\n                    onChange={(event: any) => onChange(event)}\n                    onBlur={(event: any) => onChange(event)}\n                />\n                <SpanError>{error}</SpanError>\n              </Box>\n        </Box>\n    )\n}\n\nconst VisualizeNew = () => {\n  const [open, setOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false)\n  const [dataParams, setDataParams] = useState<ParamsType>({\n    cut_coords: {\n      coronal: '',\n      sagittal: '',\n      horizontal: '',\n    },\n    threshold: ''\n  })\n  const [errors, setErrors] = useState<ParamsType>({\n    cut_coords: {\n      coronal: '',\n      sagittal: '',\n      horizontal: '',\n    },\n    threshold: ''\n  })\n\n  const onLoadParams = async () => {\n    setIsLoading(true)\n    try {\n      const res = await loadParams()\n      const { coronal, sagittal, horizontal} = res.cut_coords\n      const newCutCoords = {\n        coronal: coronal.join(','),\n        sagittal: sagittal.join(','),\n        horizontal: horizontal.join(',')\n      }\n      setDataParams({cut_coords: newCutCoords, threshold: res.threshold.join(',')})\n    }\n    finally {\n      setIsLoading(false)\n      setErrors({\n        cut_coords: {\n          coronal: '',\n          sagittal: '',\n          horizontal: '',\n        },\n        threshold: ''\n      }\n      )}\n  }\n\n  const toNumberArr = useCallback((value: string) => {\n    return value.split(',').map((item: string) => Number(item))\n  },[])\n\n  const onSaveParams = async () => {\n    const { coronal, sagittal, horizontal} = dataParams.cut_coords\n    const newParams = {\n      threshold: toNumberArr(dataParams.threshold),\n      cut_coords: {\n        coronal: toNumberArr(coronal),\n        sagittal: toNumberArr(sagittal),\n        horizontal: toNumberArr(horizontal)\n      }\n    }\n    setIsLoading(true)\n    try {\n      await saveParams(newParams)\n    }\n    finally {\n      setIsLoading(false)\n      setOpen(false)\n    }\n  }\n\n  const validateParams = (value: string, name: string) => {\n    if (!value) return 'This field is required'\n    const newArr = value.split(',')\n    const checkArr = newArr.some((item: string) => !Number(item) && item !== '0')\n    if (name === 'threshold') {\n      if (checkArr || newArr.length !== 2) {\n        return 'wrong format [float, float]'\n      }\n      return ''\n    }\n    if(checkArr || newArr.length !== 5) {\n      return 'wrong format [int, int, int, int, int]'\n    }\n    return ''\n  }\n\n  const onChangeParams = (event: any) => {\n    let { value, name } = event.target\n    if(name === 'threshold') setErrors({...errors, threshold: validateParams(value, name)})\n    if(name !== 'threshold') setErrors({...errors, cut_coords: {...errors.cut_coords, [name]: validateParams(value, name)}})\n    if((name === 'threshold' && regexThreshold.test(value)) || (name !== 'threshold' && regexCutCoords.test(value))) {\n      const checkChar = (checkChar: any, value: string) => {\n        const arrValue = value.split('')\n        const index = arrValue.findIndex((item: string) => {\n          if(name === 'threshold') {\n            return regexThreshold.test(item)\n          }\n          return regexCutCoords.test(item)\n        })\n        if(index !== -1) {\n          value = value.replace(value[index], '')\n          return checkChar(checkChar, value)\n        }\n        return value\n      }\n      value = checkChar(checkChar, value)\n    }\n    if(name === 'threshold') {\n       setDataParams({...dataParams, threshold: value})\n      return\n    }\n    const newCutCoords = {...dataParams.cut_coords, [name]: value}\n    setDataParams({...dataParams, cut_coords: newCutCoords})\n  }\n  \n  const handleClickOpen = () => {\n    const { coronal, sagittal, horizontal} = dataParams.cut_coords\n    const { cut_coords } = errors\n    setErrors({\n      cut_coords: {\n        coronal: validateParams(coronal, 'coronal'),\n        sagittal: validateParams(sagittal, 'sagittal'),\n        horizontal: validateParams(horizontal, 'horizontal'),\n      },\n      threshold: validateParams(dataParams.threshold, 'threshold')\n    })\n    if( !coronal || ! sagittal || !horizontal || !dataParams.threshold ) return\n    if(Object.keys(cut_coords).some(item => !!cut_coords[item]) || errors.threshold) return\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n      <Container>\n          <AlertDialog\n            open={open}\n            handleClose={handleClose}\n            onSaveParams={onSaveParams}\n          />\n          <Title>STAT IMAGES</Title>\n          <VisualizeInputWrapper>\n            <Box>\n                <WrapperInput\n                    text={'threshold'}\n                    value={dataParams?.threshold || ''}\n                    onChange={onChangeParams}\n                    error={errors.threshold}\n                />\n            </Box>\n            <CutCoords>\n                <Typography>cut_coords</Typography>\n                <Box>\n                    <WrapperInput\n                        text={'coronal'}\n                        value={dataParams?.cut_coords.coronal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.coronal}\n                    />\n                    <WrapperInput\n                        text={'sagittal'}\n                        value={dataParams?.cut_coords.sagittal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.sagittal}\n                    />\n                    <WrapperInput\n                        text={'horizontal'}\n                        value={dataParams?.cut_coords.horizontal || ''}\n                        onChange={onChangeParams}\n                        error={errors.cut_coords.horizontal}\n                    />\n                </Box>\n            </CutCoords>\n            <Box sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 2\n            }}>\n              <ParamsButton onClick={handleClickOpen}>Save Params</ParamsButton>\n              <ParamsButton onClick={onLoadParams}>Load Params</ParamsButton>\n            </Box>\n          </VisualizeInputWrapper>\n          <ButtonWrapper>\n              <VisualizeButton>GENERATE</VisualizeButton>\n              <VisualizeButton>DOWNLOAD</VisualizeButton>\n          </ButtonWrapper>\n          <ImageWrapper>\n              <Image src={'/Images/image-visualize.png'} alt={''} />\n          </ImageWrapper>\n        {\n          isLoading &&\n          <Loading />\n        }\n      </Container>\n  )\n}\n\nconst Title = styled(Typography)({\n    fontSize: 25,\n    fontWeight: 700,\n    margin: '50px 0',\n})\n\nconst CutCoords = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeInputWrapper = styled(Box)({\n    display: 'flex',\n    justifyContent: 'space-between'\n})\n\nconst ParamsButton = styled('button')({\n  height: 'fit-content',\n  padding: 5,\n  '&:hover': {\n    cursor: 'pointer',\n    background: '#d1d7e0',\n  }\n})\n\nconst ButtonWrapper = styled(Box)({\n    display: 'flex',\n    gap: 10,\n    marginBottom: 50\n})\n\nconst VisualizeButton = styled('button')({\n    border: '1px solid #006fff',\n    color: '#006fff',\n    padding: 10,\n    '&:hover': {\n        cursor: 'pointer',\n        background: '#d1d7e0'\n    }\n})\n\nconst VisualizeInput = styled('input')({\n    height: 'fit-content',\n})\n\nconst SpanError = styled('span')({\n  color: 'red'\n})\n\nconst ImageWrapper = styled(Box)({\n    width: '80%',\n    margin: 'auto'\n})\n\nconst Image = styled('img')({\n    width: '100%',\n    objectFit: 'contain',\n})\n\nexport default VisualizeNew\n","import React from 'react'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Toolbar from '@mui/material/Toolbar'\n// import IconButton from '@mui/material/IconButton'\n// import Tooltip from '@mui/material/Tooltip'\nimport { styled } from '@mui/material/styles'\n// import GitHubIcon from '@mui/icons-material/GitHub'\n// import MenuBookIcon from '@mui/icons-material/MenuBook'\n\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport FlowChart from './FlowChart/FlowChart'\nimport Experiment from './Experiment/Experiment'\nimport { Box } from '@mui/material'\nimport { useSearchParams } from 'react-router-dom'\nimport VisualizeNew from \"./VisualizeNew\";\n\nconst Project: React.FC = () => {\n  const [searchParams, setParams] = useSearchParams()\n  const [value, setValue] = React.useState(Number(searchParams.get('tab') || 0))\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    searchParams.set('tab', String(newValue))\n    setParams(searchParams)\n    setValue(newValue)\n  }\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n  return (\n    <RootDiv>\n      <StyledAppBar color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          {/* <img src={studioLogo} alt=\"studio\" width={75} height={50} /> */}\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Result\" {...a11yProps(1)} />\n            <Tab label=\"Visualize\" {...a11yProps(2)} />\n          </Tabs>\n          {/*<Tooltip title=\"GitHub repository\">*/}\n          {/*  <IconButton*/}\n          {/*    sx={{ mr: 1 }}*/}\n          {/*    href=\"https://github.com/oist/studio\"*/}\n          {/*    target=\"_blank\"*/}\n          {/*  >*/}\n          {/*    <GitHubIcon />*/}\n          {/*  </IconButton>*/}\n          {/*</Tooltip>*/}\n          {/*<Tooltip title=\"Documentation\">*/}\n          {/*  <IconButton*/}\n          {/*    href=\"https://studio.readthedocs.io/en/latest/\"*/}\n          {/*    target=\"_blank\"*/}\n          {/*  >*/}\n          {/*    <MenuBookIcon />*/}\n          {/*  </IconButton>*/}\n          {/*</Tooltip>*/}\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <VisualizeNew />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\nconst StyledAppBar = styled(Box)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Project\n","export const PROJECT_SLICE_NAME = 'project'\n\nexport enum ProjectTypeValue {\n  FACTOR = 0,\n  WITHIN_FACTOR = 1,\n}\n\nexport type CurrentProject = {\n  id: string\n  created_time: string\n  image_count: number\n  project_name: string\n  project_type: ProjectTypeValue\n  updated_time: string\n}\n\nexport type Project = {\n  projects: ProjectType[]\n  currentProject?: CurrentProject\n}\n\nexport type ProjectCreate = {\n  project_name: string\n  project_type: ProjectTypeValue\n  image_count: number\n}\n\nexport type ProjectType = {\n  id: number | string\n  uid?: number | string\n  created_time: string\n  updated_time: string\n  role?: string | number\n} & ProjectCreate\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useSearchParams, useLocation } from 'react-router-dom'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\nimport {\n  fetchExperiment,\n  getExperiments,\n} from '../Experiments/ExperimentsActions'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const [searchParams] = useSearchParams()\n  const location = useLocation()\n  const [isEdited] = useState<{ edited: boolean }>(\n    location.state as { edited: boolean },\n  )\n\n  React.useEffect(() => {\n    const projectId = searchParams.get('id')\n    projectId && !isEdited && dispatch(fetchExperiment(projectId.toString()))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.START_SUCCESS) {\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n        dispatch(getExperiments())\n      }\n      setPrevStatus(status)\n    }\n  }, [dispatch, status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import { createContext, useContext } from 'react'\n\nexport type User = {\n  created_time: null | string\n  display_name: null | string\n  email: string\n  last_login_time: null | string\n  role: string\n  uid: string\n}\n\nexport const UserContext = createContext<{ user?: User; setUser: Function }>({\n  setUser: () => null,\n})\n\nexport const useUser = () => useContext(UserContext)\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useRef, useState } from 'react'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { useUser } from 'providers'\nimport { removeToken } from 'utils/auth'\nimport { useNavigate } from 'react-router-dom'\n\nconst Header: FC = () => {\n  const [open, setOpen] = useState(false)\n  const navigate = useNavigate()\n  const { user } = useUser()\n\n  const refMenu = useRef<HTMLDivElement | null>(null)\n\n  const closeMenu = () => {\n    setTimeout(() => {\n      setOpen(false)\n    }, 100)\n  }\n\n  const onClick = () => {\n    if (open) {\n      return refMenu.current?.blur?.()\n    }\n    setOpen(true)\n  }\n\n  const onLogout = () => {\n    removeToken()\n    navigate('/login')\n  }\n\n  const onNavigateAccount = () => {\n    navigate('/account')\n  }\n\n  return (\n    <HeaderWrapper>\n      <BoxWrapper>\n        <Image src=\"/static/favicon.ico\" alt=\"logo\" />\n        <TitleLogo>Studio</TitleLogo>\n      </BoxWrapper>\n      <BoxMenu ref={refMenu} tabIndex={1} onClick={onClick} onBlur={closeMenu}>\n        <AccountCircleIcon />\n        {open && (\n          <BoxDropdown>\n            <BoxInfo>\n              <AccountCircleIcon />\n              <Box>\n                <Typography>{user?.display_name}</Typography>\n                <Typography>{user?.email}</Typography>\n              </Box>\n            </BoxInfo>\n            <BoxMenuItem onClick={onNavigateAccount}>\n              <PortraitIcon /> Account Profile\n            </BoxMenuItem>\n            <BoxMenuItemLogout onClick={onLogout}>\n              SIGN OUT\n            </BoxMenuItemLogout>\n          </BoxDropdown>\n        )}\n      </BoxMenu>\n    </HeaderWrapper>\n  )\n}\n\nconst BoxDropdown = styled(Box)({\n  position: 'absolute',\n  backgroundColor: '#ffffff',\n  padding: '8px 16px 0',\n  top: 30,\n  right: 0,\n  listStyleType: 'none',\n  backgroundClip: 'padding-box',\n  borderRadius: 3,\n  outline: 'none',\n  boxShadow:\n    '0 6px 16px 0 rgb(0 0 0 / 8%), 0 3px 6px -4px rgb(0 0 0 / 12%), 0 9px 28px 8px rgb(0 0 0 / 5%)',\n  cursor: 'default',\n  zIndex: 1,\n  minWidth: 250,\n})\n\nconst Image = styled('img')({\n  height: 46,\n})\n\nconst BoxWrapper = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 8,\n})\n\nconst BoxMenu = styled(BoxWrapper)({\n  cursor: 'pointer',\n  position: 'relative',\n  userSelect: 'none',\n})\n\nconst BoxInfo = styled(BoxWrapper)({\n  borderBottom: `1px solid #e7e7e7`,\n  padding: '8px 0',\n  cursor: 'default',\n})\n\nconst BoxMenuItem = styled(BoxWrapper)({\n  padding: '8px 0',\n  cursor: 'pointer',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.05) translateX(5px)',\n  },\n})\n\nconst BoxMenuItemLogout = styled(BoxMenuItem)({\n  color: '#1a73e8',\n  fontWeight: 600,\n  marginTop: 30,\n  justifyContent: 'flex-end',\n  '&:hover': {\n    transform: 'scale(1.02)',\n  },\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nconst HeaderWrapper = styled(Box)({\n  height: 48,\n  backgroundColor: '#E1DEDB',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  color: 'rgba(0, 0, 0, 0.87)',\n  boxShadow:\n    '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n  position: 'fixed',\n  width: 'calc(100% - 32px)',\n  padding: '0 16px',\n  zIndex: 9999,\n})\n\nexport default Header\n","import { Box, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { FC, useEffect, useState } from 'react'\nimport Header from './Header'\nimport { KeyboardBackspace } from '@mui/icons-material'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { User, UserContext, useUser } from 'providers'\nimport {\n  getToken,\n  isAdmin,\n  removeExToken,\n  removeToken,\n} from 'utils/auth'\nimport { getMe } from 'api/auth'\n\nexport const drawerWidth = 240\n\nconst ignorePaths = ['/login', '/account-delete', '/reset-password']\n\nconst Layout: FC = ({ children }) => {\n  const [user, setUser] = useState<User | undefined>()\n  const location = useLocation()\n  const [width, setWidth] = useState(drawerWidth)\n  const navigate = useNavigate()\n  const onResize = () => {\n    setWidth(width === drawerWidth ? 54 : drawerWidth)\n  }\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    checkkAuth()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname])\n\n  const checkkAuth = async () => {\n    if (user) return\n    const token = getToken()\n    const isPageLogin = ['/login', '/reset-password'].includes(\n      window.location.pathname,\n    )\n    try {\n      if (token) {\n        const data = await getMe()\n        setUser(data)\n        if (isPageLogin) navigate('/')\n      } else if (!isPageLogin) throw new Error('fail auth')\n    } catch {\n      removeToken()\n      removeExToken()\n      navigate('/login')\n    }\n  }\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <LayoutWrapper>\n        {ignorePaths.includes(location.pathname) ? null : <Header />}\n        <ContentBodyWrapper>\n          {ignorePaths.includes(location.pathname) ? null : (\n            <MenuLeft onResize={onResize} width={width} />\n          )}\n          <ChildrenWrapper\n            style={{\n              width: `calc(100% - ${\n                ignorePaths.includes(location.pathname) ? 0 : width + 10\n              }px)`,\n              height: '100%',\n              overflow: 'auto',\n            }}\n          >\n            {children}\n          </ChildrenWrapper>\n        </ContentBodyWrapper>\n      </LayoutWrapper>\n    </UserContext.Provider>\n  )\n}\n\nconst MenuLeft: FC<{ onResize: () => void; width: number }> = ({\n  onResize,\n  width,\n}) => {\n  const { user } = useUser()\n  const { pathname } = useLocation()\n  const isClose = width !== drawerWidth\n  return (\n    <MenuLeftWrapper style={{ width, minWidth: width }}>\n      <BoxBack>\n        <ButtonBack\n          onClick={onResize}\n          style={{ transform: `rotate(${width === drawerWidth ? 0 : 180}deg)` }}\n        >\n          <BoxDivider />\n          <KeyboardBackspaceIcon />\n        </ButtonBack>\n      </BoxBack>\n      <MenuList>\n        <LinkWrapper to=\"/\">\n          <MenuItem isClose={isClose} active={pathname === '/'}>\n            <HomeIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Dashboard\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/database\">\n          <MenuItem isClose={isClose} active={pathname === '/database'}>\n            <StorageIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Database\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        <LinkWrapper to=\"/projects\">\n          <MenuItem isClose={isClose} active={pathname.includes('/projects')}>\n            <SourceIcon />\n            <TypographyMenu style={{ opacity: Number(width === drawerWidth) }}>\n              Projects\n            </TypographyMenu>\n          </MenuItem>\n        </LinkWrapper>\n        {isAdmin(user?.role) ? (\n          <LinkWrapper to=\"/account-manager\">\n            <MenuItem\n              isClose={isClose}\n              active={pathname === '/account-manager'}\n            >\n              <GroupIcon />\n              <TypographyMenu\n                style={{ opacity: Number(width === drawerWidth) }}\n              >\n                Account Manager\n              </TypographyMenu>\n            </MenuItem>\n          </LinkWrapper>\n        ) : null}\n      </MenuList>\n    </MenuLeftWrapper>\n  )\n}\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: 48,\n  height: 'calc(100% - 48px)',\n  paddingRight: 10,\n  overflow: 'hidden',\n}))\n\nconst ChildrenWrapper = styled(Box)(() => ({\n  height: 'calc(100% - 10px)',\n  display: 'flex',\n  paddingTop: 10,\n  paddingLeft: 10,\n}))\n\nconst MenuLeftWrapper = styled(Box)({\n  height: '100%',\n  backgroundColor: '#283237',\n  overflow: 'auto',\n  transition: 'all 0.3s',\n})\n\nconst BoxBack = styled(Box)({\n  width: '100%',\n  height: 54,\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonBack = styled(Box)({\n  height: 54,\n  width: 54,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n})\n\nconst BoxDivider = styled(Box)({\n  height: 15,\n  width: 1,\n  backgroundColor: '#ffffff',\n  marginRight: -2,\n})\n\nconst KeyboardBackspaceIcon = styled(KeyboardBackspace)({\n  color: '#ffffff',\n  fontSize: 20,\n})\n\nconst MenuList = styled('ul')({\n  margin: 0,\n  padding: 0,\n})\n\nconst MenuItem = styled('li', {\n  shouldForwardProp: (props) => props !== 'isClose' && props !== 'active',\n})<{ isClose: boolean; active: boolean }>(({ isClose, active }) => ({\n  padding: '0 15px',\n  color: '#ffffff',\n  listStyle: 'none',\n  height: 38,\n  minHeight: 38,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  width: 'calc(100% - 30px)',\n  minWidth: 'max-content',\n  transition: 'all 0.3s',\n  cursor: 'pointer',\n  backgroundColor: active ? 'rgba(255,255,255,0.4) !important' : 'transparent',\n  '&:hover': {\n    transform: isClose\n      ? 'scale(1.05) translateX(2px)'\n      : 'scale(1.05) translateX(10px)',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n  },\n}))\n\nconst TypographyMenu = styled(Typography)({\n  lineHeight: '20px',\n  marginTop: 4,\n  fontWeight: 500,\n  transition: 'opacity 0.3s',\n})\n\nexport default Layout\n","import { Box, styled, Typography } from '@mui/material'\nimport SourceIcon from '@mui/icons-material/Source'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport GroupIcon from '@mui/icons-material/Group'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Link } from 'react-router-dom'\nimport { useUser } from 'providers'\nimport { isAdmin } from 'utils/auth'\n\nconst Dashboard = () => {\n  const { user } = useUser()\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/database\">\n            <BoxMenu>\n              <Box>\n                <SourceIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/projects\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Projects</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/account\">\n            <BoxMenu>\n              <Box>\n                <AccountCircleIcon fontSize=\"large\" />\n                <TitleMenu>Account</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {isAdmin(user?.role) ? (\n            <LinkWrapper to=\"/account-manager\">\n              <BoxMenu>\n                <Box>\n                  <GroupIcon fontSize=\"large\" />\n                  <TitleMenu>Account Manager</TitleMenu>\n                </Box>\n              </BoxMenu>\n            </LinkWrapper>\n          ) : null}\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { styled } from '@mui/material'\n\nexport const Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { FC, useState } from 'react'\nimport Loading from \"../common/Loading\";\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description?: string\n  isLoading?: boolean\n}\nconst ModalDeleteAccount: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description || 'Delete account will erase all of your data.'}This\n            operation cannot be undone. To continue, type \"\n            <span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <ButtonConfirm onClick={onConfirm}>{titleSubmit}</ButtonConfirm>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default ModalDeleteAccount\n","import { Box, styled, Typography } from '@mui/material'\nimport { FC, useCallback } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport { ProjectType } from 'store/slice/Project/ProjectType'\nimport dayjs from \"dayjs\";\n\nexport type Column = {\n  width?: number | string\n  title: string\n  dataIndex?: string\n  name?: string\n  align?: string\n  filter?: boolean\n  render?: (\n    item: ProjectType,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined\n}\n\ntype TableComponentProps = {\n  data?: ProjectType[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  className?: string\n  columns?: Column[]\n  paginate?: {\n    page: number\n    total: number\n    page_size: number\n    breakLabel?: string\n    nextLabel?: string\n    previousLabel?: string\n    pageRangeDisplayed?: number\n    renderOnZeroPageCount?: string\n    onPageChange?: (selectedItem: { selected: number }) => any\n  }\n}\n\nconst TableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    data = [],\n    columns = [],\n    paginate,\n    className,\n    orderBy,\n    orderKey,\n  } = props\n  const pageCount = (paginate?.total || 0) / (paginate?.page_size || 1)\n\n  const renderCol = useCallback(\n    (col: Column, item: ProjectType, index: number) => {\n      if(col.name === 'created_time' || col.name === 'updated_time') {\n        return dayjs(item[col.name]).format('YYYY-MM-DD HH:mm')\n      }\n      const value = item[(col.name || col.dataIndex || '') as keyof ProjectType]\n      if (col.render) return col.render(item, value, index)\n      return value || null\n    },\n    [],\n  )\n\n  return (\n    <Box className={className}>\n      <Table>\n        <Thead>\n          <Tr>\n            {columns.map((col, iCol) => {\n              const nameCol = col.name || col.dataIndex || ''\n              return (\n                <Th\n                  style={{ width: col.width, textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {col.title}\n                  <ArrowDownwardIconOrder\n                    style={{\n                      transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                      opacity:\n                        orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                  />\n                </Th>\n              )\n            })}\n          </Tr>\n        </Thead>\n        <TBody>\n          {data.map((item, index) => (\n            <Tr key={item.id || index}>\n              {columns.map((col, iCol) => (\n                <Td\n                  style={{ textAlign: col.align as any }}\n                  key={col.dataIndex || col.name || iCol}\n                >\n                  {renderCol(col, item, index)}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n        </TBody>\n      </Table>\n      {!data.length ? <NoData>No Data</NoData> : null}\n      {pageCount ? (\n        <MyPaginate\n          disableInitialCallback\n          marginPagesDisplayed={3}\n          pageRangeDisplayed={3}\n          breakLabel={'...'}\n          pageCount={pageCount}\n          previousLabel={<KeyboardArrowLeftIcon />}\n          nextLabel={<ChevronRightIcon />}\n          {...paginate}\n        />\n      ) : null}\n    </Box>\n  )\n}\n\nconst MyPaginate = styled(ReactPaginate)<any>`\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  list-style-type: none;\n  padding: 1rem 0;\n  li a {\n    padding: 0.6rem 1rem;\n    cursor: pointer;\n  }\n  li.previous,\n  li.next {\n    margin-top: -2px;\n  }\n  li.previous.disabled,\n  li.next.disabled {\n    opacity: 0.4;\n  }\n  li.previous a,\n  li.next a,\n  li.break a {\n    border-color: transparent;\n  }\n  li.active a {\n    background-color: #0366d6;\n    border-color: transparent;\n    color: white;\n    min-width: 32px;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n  li.selected {\n    color: #1677ff;\n    font-weight: 600;\n  }\n`\n\nconst Table = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  maxWidth: 155,\n  wordBreak: 'break-word',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nexport default TableComponent\n","import { InputProps, styled, Typography } from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n  errorMessage: string\n  value?: string\n}\n\nconst InputError = ({\n  errorMessage,\n  onChange,\n  value,\n  type,\n  onBlur,\n  name,\n}: InputErrorProps) => {\n  return (\n    <>\n      <Input\n        autoComplete=\"Off\"\n        error={!!errorMessage}\n        onChange={onChange}\n        value={value}\n        type={type}\n        name={name}\n        onBlur={onBlur}\n      />\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\n\nexport default InputError\n","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  name?: string\n  options: {\n    code: number\n    name: string\n  }[]\n}\n\nconst SelectError: FC<SelectErrorProps> = ({\n  value,\n  onChange,\n  onBlur,\n  errorMessage,\n  options,\n  name,\n}) => {\n  return (\n    <>\n      <SelectModal\n        name={name}\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: { code: number, name: string }) => {\n          return (\n            <MenuItem key={item.code} value={item.code}>\n              {item.name}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import { Box, Button, SelectChangeEvent, styled } from '@mui/material'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport TableComponent, { Column } from 'components/Table'\nimport {\n  ChangeEvent,\n  FC,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InputError from 'components/common/InputError'\nimport SelectError from 'components/common/SelectError'\nimport { createUser, deleteUser, editUser, listUser } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ProjectType } from 'store/slice/Project/ProjectType'\nimport { isAdmin, optionsRole } from 'utils/auth'\nimport Loading from 'components/common/Loading'\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setIsOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role: '',\n  lab: '',\n  display_name: '',\n  confirmPassword: '',\n}\n\nexport const regexPassword = /^(?=.*\\d)(?=.*[!#$%&()*+,-./@_|])(?=.*[a-zA-Z]).{6,255}$/\nexport const regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\nexport const regexIgnoreS = /[^!#$%&()*+,-./@_|a-zA-Z0-9]/\n\nconst ModalComponent: FC<ModalComponentProps> = ({\n  onSubmitEdit,\n  setIsOpenModal,\n  dataEdit,\n}) => {\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n    dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255, value)\n    if (error) return error\n    if (!regexEmail.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (\n    value: string,\n    isConfirm: boolean = false,\n    values?: { [key: string]: string },\n  ): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255, value)\n    if (errorLength) {\n      return errorLength\n    }\n    let datas = values || formData\n    if (!regexPassword.test(value) && value) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)){\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    if (isConfirm && datas.password !== value && value) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number, value?: string) => {\n    if (!value) return 'This field is required'\n    return validateLength(name, length, value)\n  }\n\n  const validateLength = (name: string, length: number, value?: string) => {\n    if (value && value.length > length)\n      return `The text may not be longer than ${length} characters`\n    if (formData[name]?.length && value && value.length > length) {\n      return `The text may not be longer than ${length} characters`\n    }\n    return ''\n  }\n\n  const validateForm = (): { [key: string]: string } => {\n    const errorName = validateField('display_name', 100, formData.display_name)\n    const errorEmail = validateEmail(formData.email)\n    const errorLab = validateField('lab', 100, formData.lab)\n    const errorRole = validateField('role', 50, formData.role)\n    const errorPassword = validatePassword(formData.password)\n    const errorConfirmPassword = validatePassword(\n      formData.confirmPassword,\n      true,\n    )\n    return {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      display_name: errorName,\n      lab: errorLab,\n      role: errorRole,\n    }\n  }\n\n  const onChangeData = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | SelectChangeEvent,\n    length: number,\n  ) => {\n    const { value, name } = e.target\n    const newDatas = { ...formData, [name]: value }\n    setFormData(newDatas)\n    let error: string =\n      name === 'email'\n        ? validateEmail(value)\n        : validateField(name, length, value)\n    let errorConfirm = errors.confirmPassword\n    if (name.toLowerCase().includes('password')) {\n      error = validatePassword(value, name === 'confirmPassword', newDatas)\n      if (name !== 'confirmPassword' && formData.confirmPassword) {\n        errorConfirm = validatePassword(\n          newDatas.confirmPassword,\n          true,\n          newDatas,\n        )\n      }\n    }\n    setErrors({ ...errors, confirmPassword: errorConfirm, [name]: error })\n  }\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const newErrors = validateForm()\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.uid, formData)\n      setTimeout(() => {\n        if (!dataEdit?.uid) {\n          alert('Your account has been created successfully!')\n        } else {\n          alert('Your account has been successfully updated!')\n        }\n      }, 1)\n      setIsOpenModal(false)\n    } catch {\n      if (!dataEdit?.uid) {\n        setTimeout(() => {\n          alert('This email already exists!')\n        }, 300)\n      }\n    } finally {\n      setIsDisabled(false)\n    }\n  }\n  const onCancel = () => {\n    setIsOpenModal(false)\n  }\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.uid ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Lab: </LabelModal>\n          <InputError\n            name=\"lab\"\n            value={formData?.lab || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.lab}\n          />\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            name=\"display_name\"\n            value={formData?.display_name || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.display_name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role || ''}\n            options={optionsRole}\n            name=\"role\"\n            onChange={(e) => onChangeData(e, 50)}\n            onBlur={(e) => onChangeData(e, 50)}\n            errorMessage={errors.role}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            name=\"email\"\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 255)}\n            onBlur={(e) => onChangeData(e, 255)}\n            errorMessage={errors.email}\n          />\n          {!dataEdit?.uid ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                name=\"password\"\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                name=\"confirmPassword\"\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n        </ButtonModal>\n      </ModalBox>\n      {isDisabled ? <Loading /> : null}\n    </Modal>\n  )\n}\nconst AccountManager = () => {\n  const [openDelete, setOpenDelete] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [dataEdit, setDataEdit] = useState({})\n  const [idDel, setIdDel] = useState<string | undefined>()\n  const [data, setData] = useState<any[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [paginate, setPaginate] = useState({\n    total: 0,\n    per_page: 10,\n    page: -1,\n    next_page_token: [],\n  })\n  const { user } = useUser()\n\n  useEffect(() => {\n    getList()\n    //eslint-disable-next-line\n  }, [])\n\n  const getList = async (page: number = 0) => {\n    const query: { [key: string]: string | number } = {\n      offset: paginate.per_page * page,\n    }\n    if (paginate.next_page_token[page - 1]) {\n      query.next_page_token = paginate.next_page_token[page - 1]\n    }\n    const data = await listUser(query)\n    const nextPageToken: string[] = paginate.next_page_token\n    if (page > paginate.page) {\n      nextPageToken.push(data.next_page_token)\n    }\n    const newData = data.data.map((item: any) => {\n      const name = optionsRole.find((role) => item.role === role.code)?.name\n      return { ...item, role: name }\n    })\n    setData(newData)\n    setPaginate((pre) => ({\n      ...pre,\n      total: data.total_page * paginate.per_page,\n      next_page_token: nextPageToken as any,\n      page,\n    }))\n  }\n\n  const onOpenModal = () => {\n    setIsOpenModal(true)\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = (id?: string | number) => {\n    setIdDel(String(id))\n    setOpenDelete(true)\n  }\n\n  const onForgotPassword = (data: ProjectType) => {\n    const code = optionsRole.find(\n      (role) => String(role.name) === String(data.role),\n    )?.code\n    //todo call api\n    setDataEdit({ ...data, role: code })\n    setIsOpenModal(true)\n  }\n\n  const onDelete = async () => {\n    if (idDel === undefined) return\n    setIsLoading(true)\n    try {\n      await deleteUser(idDel)\n      setIsLoading(false)\n      setTimeout(() => {\n        alert('Your account has been successfully deleted!')\n      }, 100)\n      handleCloseDelete()\n      setIdDel(undefined)\n      setOpenDelete(false)\n      getList()\n    } catch {\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    if (id !== undefined) {\n      await editUser(id, data)\n      setIsOpenModal(false)\n    } else {\n      await createUser(data)\n    }\n    await getList(id !== undefined ? paginate.page : 0)\n    return undefined\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'UID', name: 'uid' },\n      { title: 'Lab', name: 'lab' },\n      { title: 'Name', name: 'display_name' },\n      { title: 'Role', name: 'role' },\n      { title: 'Mail', name: 'email' },\n      {\n        title: '',\n        name: 'action',\n        width: 185,\n        render: (data) => {\n          return (\n            <>\n              <ALink\n                sx={{ color: 'red' }}\n                onClick={() => onForgotPassword(data)}\n              >\n                <EditIcon sx={{ color: 'black' }} />\n              </ALink>\n              {\n                !(data?.uid === user?.uid) &&\n                <ALink\n                    sx={{ ml: 1.25 }}\n                    onClick={() => onConfirmDelete(data?.uid)}\n                >\n                  <DeleteIcon sx={{ color: 'red' }} />\n                </ALink>\n              }\n            </>\n          )\n        },\n      },\n    ],\n    [user?.uid],\n  )\n\n  if (!isAdmin(user?.role)) {\n    return null\n  }\n\n  return (\n    <AccountManagerWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Account Manager</h1>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        isLoading={isLoading}\n        onSubmit={onDelete}\n      />\n      <BoxButton>\n        <ButtonAdd onClick={() => onOpenModal()} variant=\"contained\">\n          Add\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{\n          total: paginate.total,\n          page: paginate.page,\n          page_size: paginate.per_page,\n          onPageChange: ({ selected }) => {\n            getList(selected)\n          },\n        }}\n        data={data}\n        columns={columns}\n      />\n      {isOpenModal ? (\n        <ModalComponent\n          onSubmitEdit={onSubmitEdit}\n          setIsOpenModal={(flag) => {\n            setIsOpenModal(flag)\n            if (!flag) {\n              setDataEdit({})\n            }\n          }}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst BoxButton = styled(Box)({\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  width: 100,\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  height: 550,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport InputPassword from 'components/InputPassword'\nimport { ChangeEvent, FC, useState } from 'react'\nimport { regexIgnoreS, regexPassword } from \"pages/AccountManager\";\n\ntype ModalDeleteAccountProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: (oldPass: string, newPass: string) => void\n}\n\nconst ModalChangePassword: FC<ModalDeleteAccountProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    if(name === 'new_password' && values.confirm_password) {\n      if(!validate?.(value)) {\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: value !== values.confirm_password ? 'Passwords do not match' : ''})\n        return\n      }\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: ''})\n        return\n    }\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if(value.length > 255) return 'The text may not be longer than 255 characters'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.new_password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, new_password } = values\n    if (!new_password) setErrors((pre) => ({ ...pre, new_password: 'This field is required' }))\n    if (reEnter && reEnter !== new_password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  const validateForm = () => {\n    const errorPass = validatePassword(values.password)\n    const errorNewPass = validatePassword(values.new_password)\n    const errorConfirmPass = validatePassword(values.confirm_password)\n    return {\n      password: errorPass,\n      new_password: errorNewPass,\n      confirm_password: errorConfirmPass\n    }\n  }\n\n  const onChangePass = () => {\n    const newErrors: { [key: string]: string } = validateForm()\n    if(errors.password || errors.new_password || errors.confirm_password) return\n    if(newErrors.password || newErrors.new_password || newErrors.confirm_password) {\n      setErrors(newErrors)\n      return\n    }\n    onSubmit(values.password, values.new_password)\n  }\n\n  const onCloseModal = () => {\n    setErrors({})\n    setValues({})\n    onClose()\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              onBlur={(e) => onChangeValue(e, validatePassword)}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n              onBlur={(e) => onChangeValue(e, validateReEnter)}\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={() => onChangePass()}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onCloseModal}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ModalChangePassword\n","import { Box, Button, styled, Typography } from '@mui/material'\nimport { Input } from 'components/common/Input'\nimport ModalChangePassword from 'components/ModalChangePassword'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { useUser } from 'providers'\nimport { useState } from 'react'\nimport { isAdmin, optionsRole } from \"utils/auth\";\nimport {deleteAccountProfile, editNameProfile, editPassProfile} from \"api/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"components/common/Loading\";\n\nconst Account = () => {\n  const { user, setUser } = useUser()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [openChangePw, setOpenChangePw] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const onEditName = async (e: any) => {\n    const { value } = e.target\n    if(!value) {\n      alert('This field is required')\n      setIsEditName(false)\n      return\n    }\n    setIsLoading(true)\n    try {\n      setUser({...user, display_name: value})\n      await editNameProfile({...user, display_name: value})\n    }\n    catch {}\n    finally {\n      setIsLoading(false)\n      setIsEditName(false)\n    }\n  }\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onConfirmDelete = () => {\n    setOpenDelete(true)\n  }\n\n  const onDelete = async () => {\n    //todo call api\n    if(!user) return\n    setIsLoading(true)\n    try {\n      await deleteAccountProfile()\n      navigate('/login')\n    }\n    catch {}\n    finally {\n      setIsLoading(false)\n    }\n    handleCloseDelete()\n  }\n\n  const handleCloseChangePw = () => {\n    setOpenChangePw(false)\n  }\n\n  const onConfirmChangePw = () => {\n    setOpenChangePw(true)\n  }\n\n  const onChangePw = async (oldPass: string, newPass: string) => {\n    //todo call api\n    setIsLoading(true)\n    try {\n      await editPassProfile({old_password: oldPass, new_password: newPass})\n      alert('Your password has been successfully changed.')\n      handleCloseChangePw()\n    }\n    catch {\n      alert('Failed to Change Password!')\n    }\n    finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <AccountWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ModalChangePassword\n        onSubmit={onChangePw}\n        open={openChangePw}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData sx={{ marginTop: isEditName ? -2 : 0 }}>Full name</TitleData>\n        <BoxData>\n          {isEditName ? (\n            <Input\n              autoFocus\n              defaultValue={user?.display_name || ''}\n              onBlur={(e) => onEditName(e)}\n              placeholder=\"Full name\"\n            />\n          ) : (\n            <>\n              {user?.display_name || \"--\"}\n              <Button sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n                Edit\n              </Button>\n            </>\n          )}\n        </BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{optionsRole.find(role => String(role.code) === String(user?.role))?.name}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10 }}>\n        <ButtonSubmit onClick={onConfirmChangePw}>Change Password</ButtonSubmit>\n        {\n          !isAdmin(user?.role) &&\n          <ButtonSubmit onClick={onConfirmDelete}>Delete Account</ButtonSubmit>\n        }\n      </BoxFlex>\n      {\n        isLoading && <Loading />\n      }\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n})\n\nconst ButtonSubmit = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from '../../const/API'\nimport { ProjectCreate } from 'store/slice/Project/ProjectType'\n\nexport const getProjectListApi = async (params?: { [key: string]: string }) => {\n  const response = await axios.get(\n    `${DATABASE_URL_HOST}/workdb/projects/search`,\n    { params },\n  )\n  return response.data\n}\n\nexport const createProjectApi = async (data: ProjectCreate) => {\n  const response = await axios.post(`${DATABASE_URL_HOST}/workdb/project`, data)\n  return response.data\n}\n\nexport const updateProjectApi = async (id: string, data: ProjectCreate) => {\n  const response = await axios.put(`${DATABASE_URL_HOST}/workdb/project/${id}`, data)\n  return response.data\n}\n\nexport const deleteProjectApi = async (project_id: number) => {\n  const response = await axios.delete(\n    `${DATABASE_URL_HOST}/workdb/project/${project_id}`,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  CurrentProject,\n  PROJECT_SLICE_NAME,\n  Project,\n  ProjectCreate,\n  ProjectType,\n} from './ProjectType'\nimport {\n  createProjectApi,\n  deleteProjectApi,\n  getProjectListApi,\n  // updateProjectApi,\n} from 'api/project'\nimport { DatasetPostType } from '../Dataset/DatasetType'\nimport { createDataset } from '../Dataset/DatasetAction'\n\nexport const getProjectList = createAsyncThunk<\n  Project,\n  { callback?: (isSuccess: boolean) => void } | undefined\n>(`${PROJECT_SLICE_NAME}/getProjects`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getProjectListApi()\n    param?.callback?.(true)\n    return response\n  } catch (e) {\n    param?.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const getProjectId = createAsyncThunk<\n  CurrentProject,\n  { project_id: string; callback?: (isSuccess: boolean) => void } | undefined\n>(`${PROJECT_SLICE_NAME}/getProjectId`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    if (!param?.project_id) return undefined\n    const response = await getProjectListApi({ project_id: param.project_id })\n    param?.callback?.(true)\n    return response.projects.find(\n      (project: CurrentProject) =>\n        String(project.id) === String(param.project_id),\n    )\n  } catch (e) {\n    param?.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const createProject = createAsyncThunk<\n  ProjectType,\n  {\n    project: ProjectCreate\n    dataset: DatasetPostType[]\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/createProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await createProjectApi(param.project)\n    thunkAPI.dispatch(\n      createDataset({\n        project_id: response.id,\n        dataset: param.dataset,\n        callback: param.callback,\n      }),\n    )\n    return response\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const editProject = createAsyncThunk<\n  // ProjectType,\n  boolean,\n  {\n    project: ProjectCreate\n    project_id: string\n    dataset: DatasetPostType[]\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/editProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    // const response = await updateProjectApi(param.project_id, param.project)\n    // thunkAPI.dispatch(\n    //   createDataset({\n    //     project_id: response.id,\n    //     dataset: param.dataset,\n    //     callback: param.callback,\n    //   }),\n    // )\n    // return response\n    //todo\n    param.callback?.(true)\n    return true\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n\nexport const deleteProject = createAsyncThunk<\n  null,\n  {\n    project_id: number\n    callback?: (isSuccess: boolean) => void\n  }\n>(`${PROJECT_SLICE_NAME}/deleteProject`, async (param, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    await deleteProjectApi(param.project_id)\n    thunkAPI.dispatch(getProjectList({ callback: param.callback }))\n    return null\n  } catch (e) {\n    param.callback?.(false)\n    return rejectWithValue(e)\n  }\n})\n","import { Box, Button, styled } from '@mui/material'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TableComponent, { Column } from 'components/Table'\nimport { useNavigate } from 'react-router-dom'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport { selectProjectList } from 'store/slice/Project/ProjectSelector'\nimport {\n  deleteProject,\n  getProjectList,\n} from 'store/slice/Project/ProjectAction'\n\nexport type DataProject = {\n  id: number | string\n  uid?: number | string\n  name: string\n  project_type: number\n  image_count: number\n  created_time: string\n  updated_time: string\n  role?: string | number\n}\n\nconst Projects = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const projects = useSelector(selectProjectList)\n  const [idDelete, setIdDelete] = useState<number | string | undefined>()\n  const [page, setPage] = useState(1)\n\n  useEffect(() => {\n    dispatch(getProjectList())\n    //eslint-disable-next-line\n  }, [])\n\n  const onEdit = useCallback((id: number | string) => {\n    navigate(`/projects/new-project?id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onWorkflow = useCallback((id: number | string) => {\n    navigate(`/projects/workflow?tab=0&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onResults = useCallback((id: number | string) => {\n    navigate(`/projects/workflow?tab=1&id=${id}`)\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addNewProject = useCallback(() => {\n    navigate('/projects/new-project')\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onDelete = (id: number | string) => {\n    setIdDelete(id)\n  }\n\n  const onDeleteSubmit = () => {\n    const id = idDelete\n    if (!id) return\n    setIdDelete(undefined)\n    dispatch(deleteProject({ project_id: Number(id) }))\n  }\n\n  const handleCloseDelete = () => {\n    setIdDelete(undefined)\n  }\n\n  const columns = useMemo(\n    (): Column[] => [\n      { title: 'Project Name', name: 'project_name' },\n      { title: 'Created', name: 'created_time' },\n      { title: 'Updated', name: 'updated_time' },\n      { title: 'Images', name: 'image_count', align: 'center' },\n      {\n        title: '',\n        name: 'action',\n        width: 400,\n        render: (data) => {\n          return (\n            <BoxAction>\n              <ButtonAdd variant=\"contained\" onClick={() => onEdit(data.id)}>\n                Edit\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onWorkflow(data.id)}\n              >\n                Workflow\n              </ButtonAdd>\n              <ButtonAdd variant=\"contained\" onClick={() => onResults(data.id)}>\n                Result\n              </ButtonAdd>\n              <ButtonAdd\n                variant=\"contained\"\n                onClick={() => onDelete(data.id)}\n                sx={{ backgroundColor: 'red !important' }}\n              >\n                Del\n              </ButtonAdd>\n            </BoxAction>\n          )\n        },\n      },\n    ],\n    [onWorkflow, onResults, onEdit],\n  )\n  return (\n    <ProjectsWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Project\"\n        description=\"Delete My Project\"\n        onClose={handleCloseDelete}\n        open={!!idDelete}\n        onSubmit={onDeleteSubmit}\n      />\n      <ProjectsTitle>Projects</ProjectsTitle>\n      <BoxButton>\n        <ButtonAdd\n          variant=\"contained\"\n          onClick={addNewProject}\n          sx={{ marginBottom: 2 }}\n        >\n          Add Project\n        </ButtonAdd>\n      </BoxButton>\n      <TableComponent\n        paginate={{\n          total: projects.length,\n          page,\n          page_size: 10,\n          onPageChange: ({ selected }) => setPage(selected),\n        }}\n        data={projects}\n        columns={columns}\n      />\n    </ProjectsWrapper>\n  )\n}\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n}))\n\nconst ProjectsTitle = styled('h1')(({ theme }) => ({}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst BoxAction = styled(BoxButton)({\n  justifyContent: 'flex-start',\n})\n\nconst ButtonAdd = styled(Button)(({ theme }) => ({\n  minWidth: 80,\n  letterSpacing: 'unset',\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nexport default Projects\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  MouseEvent as MouseEventReact,\n  FC,\n  Fragment,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport {\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n} from 'pages/Database'\n\ntype Object = {\n  [key: string]: Object | string\n}\n\nexport type Column = {\n  width?: number\n  title: string\n  dataIndex?: string\n  name?: string\n  child?: string\n  filter?: boolean\n  render?: (\n    item?: RecordDatabase | RecordList | ImagesDatabase,\n    value?: string | object | number,\n    index?: number,\n  ) => JSX.Element | null | undefined | string | number\n}\n\ntype TableComponentProps = {\n  data?: (RecordDatabase | RecordList)[]\n  className?: string\n  columns?: Column[]\n  orderBy?: 'ASC' | 'DESC' | ''\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: 'ASC' | 'DESC' | '') => void\n  rowClick?: (row: ImagesDatabase) => void\n  onClickEvent?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (row?: ImagesDatabase[]) => void\n  onBeginDrag?: () => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  defaultExpand?: boolean\n}\n\ntype RenderColumnProps = {\n  data: RecordDatabase | SessionsDatabase | ImagesDatabase | RecordList\n  columns: Column[]\n  orderBy?: 'ASC' | 'DESC'\n  orderKey?: string\n  onSort?: (orderKey: string, orderBy: string) => void\n  rowClick?: (\n    e: MouseEventReact<HTMLTableRowElement>,\n    row: ImagesDatabase,\n  ) => void\n  draggable?: boolean\n  onDrag?: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    row?: ImagesDatabase[],\n  ) => void\n  onDragEnd?: (row?: ImagesDatabase) => void\n  recordIndex: number\n  defaultExpand?: boolean\n  dataShow?: boolean\n  beginDrag?: boolean\n  draggableProps?: boolean\n  allowMutilKey?: boolean\n  drags: ImagesDatabase[]\n  onMouseDown: (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => void\n}\n\nconst renderCol = (\n  col: Column,\n  item: ImagesDatabase | RecordDatabase | RecordList,\n  index: number,\n) => {\n  const key = col.name || col.dataIndex || ''\n  let value: ImagesDatabase | RecordDatabase | RecordList | string = item\n  if (key.includes('.')) {\n    const keys = key.split('.')\n    keys.forEach((k) => {\n      if (k === 'voxel_size' || k === 'size') {\n        value = JSON.stringify((value as unknown as Object)?.[k])\n      } else {\n        value = (value as unknown as Object)?.[k] as\n          | ImagesDatabase\n          | RecordDatabase\n          | RecordList\n          | string\n      }\n    })\n  } else value = (item as unknown as Object)[key] as string\n  if (col.render) return col.render(item, value, index)\n  return typeof value === 'object' || Array.isArray(value) ? null : value\n}\n\nconst RenderColumn = (props: RenderColumnProps) => {\n  const { columns, data, recordIndex, rowClick, drags, onMouseDown } = props\n  const { draggable, onDrag } = props\n  const [openChild, setOpenChild] = useState(true)\n  const [openChildParent, setOpenChildPrent] = useState(true)\n  const [openSubjects, setOpenSubjects] = useState<string[]>(\n    (data as RecordDatabase)?.subjects?.map?.((e) => e.id) || [],\n  )\n\n  const isDrag = drags.find((drag) => {\n    return (\n      drag.id === data.id &&\n      drag.session_id === (data as ImagesDatabase).session_id &&\n      drag.datatype_index === (data as ImagesDatabase).datatype_index\n    )\n  })\n\n  const onDragEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    return onDrag?.(event, [image])\n  }\n\n  const onSetOpenSubject = (subId: string) => {\n    if (openSubjects.includes(subId)) {\n      setOpenSubjects(openSubjects.filter((o) => o !== subId))\n    } else setOpenSubjects([...openSubjects, subId])\n  }\n\n  if (\n    (data as RecordDatabase)?.subjects?.length ||\n    (data as SessionsDatabase).datatypes?.length\n  ) {\n    return (\n      <Fragment>\n        <Tr\n          style={{\n            transition: 'all 0.3s',\n            backgroundColor: 'rgb(238, 238, 238)',\n          }}\n        >\n          {columns.map((column) => {\n            const key = column.name || column.dataIndex || ''\n            return (\n              <Td\n                key={`col_${column.name || column.dataIndex}`}\n                onClick={() =>\n                  key === 'session' && setOpenChildPrent(!openChildParent)\n                }\n              >\n                {key === 'action' ? null : (\n                  <BoxCenter>\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    )}\n                    {renderCol(\n                      column,\n                      data as RecordDatabase | RecordList,\n                      recordIndex,\n                    ) &&\n                      key === 'session' && (\n                        <ArrowDropDownIcon\n                          style={{\n                            transform: `rotate(${\n                              !openChildParent ? -180 : 0\n                            }deg)`,\n                          }}\n                        />\n                      )}\n                  </BoxCenter>\n                )}\n              </Td>\n            )\n          })}\n        </Tr>\n        {openChildParent &&\n          (data as RecordDatabase).subjects?.map((sub, subject_index) => {\n            return (\n              <Fragment key={sub.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'subject' && onSetOpenSubject(sub.id)\n                        }\n                      >\n                        {key === 'subject' ? (\n                          <BoxCenter>\n                            {sub.label}\n                            {sub.sessions?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openSubjects.includes(sub.id) ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openSubjects.includes(sub.id) &&\n                  sub.sessions.map((session, session_index) => (\n                    <RenderColumn\n                      {...props}\n                      key={session.id}\n                      data={\n                        {\n                          ...session,\n                          session: session.label,\n                          session_index,\n                          subject_index,\n                        } as SessionsDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n        {openChildParent &&\n          (data as SessionsDatabase).datatypes?.map((type, ii) => {\n            return (\n              <Fragment key={type.id}>\n                <Tr\n                  style={{\n                    transition: 'all 0.3s',\n                    backgroundColor: 'rgb(238, 238, 238)',\n                  }}\n                >\n                  {columns.map((column) => {\n                    const key = column.name || column.dataIndex || ''\n                    return (\n                      <Td\n                        key={`col_${column.name || column.dataIndex}`}\n                        onClick={() =>\n                          key === 'datatype' && setOpenChild(!openChild)\n                        }\n                      >\n                        {key === 'datatype' ? (\n                          <BoxCenter>\n                            {type.label}\n                            {type.images?.length ? (\n                              <ArrowDropDownIcon\n                                style={{\n                                  transform: `rotate(${\n                                    !openChild ? -180 : 0\n                                  }deg)`,\n                                }}\n                              />\n                            ) : null}\n                          </BoxCenter>\n                        ) : (\n                          ''\n                        )}\n                      </Td>\n                    )\n                  })}\n                </Tr>\n                {openChild &&\n                  type.images.map((image, index) => (\n                    <RenderColumn\n                      {...props}\n                      key={`row_image_${image.id}_${index}`}\n                      data={\n                        {\n                          ...image,\n                          session_index: (data as SessionsDatabase)\n                            .session_index,\n                          subject_index: (data as SessionsDatabase)\n                            .subject_index,\n                          session_id: data.id,\n                          datatype_index: ii,\n                          image_index: index,\n                          datatype_label: type.label,\n                          subject_id: (data as SessionsDatabase).parent_id,\n                          record_index: recordIndex,\n                        } as ImagesDatabase\n                      }\n                    />\n                  ))}\n              </Fragment>\n            )\n          })}\n      </Fragment>\n    )\n  }\n\n  return (\n    <Tr\n      onClick={(e) => rowClick?.(e, data as ImagesDatabase)}\n      draggable={draggable}\n      onDragStart={(e) => onDragEvent?.(e, data as ImagesDatabase)}\n      onMouseDown={(e) => onMouseDown(e, data as ImagesDatabase)}\n      style={{\n        transition: 'all 0.3s',\n        backgroundColor: isDrag ? 'rgba(25,118,210,0.15)' : '',\n      }}\n    >\n      {columns.map((column) => {\n        return (\n          <Td key={`col_${column.name || column.dataIndex}`}>\n            {renderCol(column, data as ImagesDatabase, recordIndex)}\n          </Td>\n        )\n      })}\n    </Tr>\n  )\n}\n\nconst DatabaseTableComponent: FC<TableComponentProps> = (props) => {\n  const {\n    className,\n    orderKey,\n    orderBy,\n    onSort,\n    draggable,\n    rowClick,\n    onDrag,\n    onDragEnd,\n    onBeginDrag: onBeginDragProps,\n    ...p\n  } = props\n  const { data = [], columns = [] } = props\n  const [drags, setDrags] = useState<ImagesDatabase[]>([])\n  const [mouseMoveRect, setMouseMoveRect] = useState({ pageX: 0, pageY: 0 })\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n\n  const ctrRef = useRef(false)\n  const refTable = useRef<HTMLDivElement | null>(null)\n  const refTdSelect = useRef<{\n    [key: string]: {\n      dom: HTMLTableRowElement\n      tds: { id: number | string; dom: HTMLTableCellElement; html: string }[]\n    }\n  }>({})\n  const mouseStart = useRef<{ pageX: number; pageY: number } | undefined>()\n  const [beginDrag, setBeginDrag] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydownEvent)\n    window.addEventListener('keyup', onKeyupEvent)\n    window.addEventListener('mouseup', onMouseUp)\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('click', onClick)\n    return () => {\n      window.removeEventListener('keydown', onKeyupEvent)\n      window.removeEventListener('keyup', onKeyupEvent)\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('click', onClick)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onKeydownEvent = (event: KeyboardEvent) => {\n    ctrRef.current = event.ctrlKey || event.metaKey\n  }\n\n  const onKeyupEvent = () => {\n    ctrRef.current = false\n  }\n\n  const onClick = (event: MouseEvent) => {\n    if (refTable.current?.contains?.(event.target as Element)) return\n    ctrRef.current = false\n    setDrags([])\n    onDragEnd?.()\n  }\n\n  const onSortHandle = (nameCol: string) => {\n    if (orderKey === nameCol) {\n      let order: 'ASC' | 'DESC' | '' = ''\n      if (orderBy === 'ASC') {\n        order = 'DESC'\n      } else if (!orderBy) {\n        order = 'ASC'\n      }\n      onSort?.(nameCol, order)\n    } else onSort?.(nameCol, 'ASC')\n  }\n\n  const onRowClickEvent = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    const idDom = `${image.id}_${image.datatype_index}_${image.session_id}`\n    if (!ctrRef.current) {\n      if (!timeoutClick.current) {\n        timeoutClick.current = setTimeout(() => {\n          timeoutClick.current = undefined\n        }, 300)\n        if (draggable) {\n          setDrags([image])\n          const tds = event.currentTarget.getElementsByTagName('td')\n          refTdSelect.current[idDom] = {\n            dom: event.currentTarget as unknown as HTMLTableRowElement,\n            tds: [],\n          }\n          for (let i = 0; i < tds.length; i++) {\n            refTdSelect.current[idDom].tds.push({\n              id: tds[i].id,\n              dom: tds[i],\n              html: tds[i].innerHTML,\n            })\n          }\n        }\n        return\n      }\n      return rowClick?.(image)\n    }\n    if (!draggable) return\n    if (\n      drags.find(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      setDrags(\n        drags.filter(\n          (drag: ImagesDatabase) =>\n            drag.id === image.id &&\n            drag.datatype_index === image.datatype_index &&\n            drag.session_index === image.session_index,\n        ),\n      )\n      delete refTdSelect.current[idDom]\n    } else {\n      setDrags([...drags, image])\n      const tds = event.currentTarget.getElementsByTagName('td')\n      refTdSelect.current[idDom] = {\n        dom: event.currentTarget as unknown as HTMLTableRowElement,\n        tds: [],\n      }\n      for (let i = 0; i < tds.length; i++) {\n        refTdSelect.current[idDom].tds.push({\n          id: tds[i].id,\n          dom: tds[i],\n          html: tds[i].innerHTML,\n        })\n      }\n    }\n  }\n\n  const onMouseDown = (\n    event: MouseEventReact<HTMLTableRowElement>,\n    image: ImagesDatabase,\n  ) => {\n    if (\n      !drags.length ||\n      !draggable ||\n      !drags.some(\n        (drag) =>\n          drag.id === image.id &&\n          drag.datatype_index === image.datatype_index &&\n          drag.session_index === image.session_index,\n      )\n    ) {\n      return\n    }\n    mouseStart.current = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n    }\n    onBeginDragProps?.()\n    setMouseMoveRect({ pageX: 0, pageY: 0 })\n    onDrag?.(drags)\n  }\n\n  const onMouseUp = () => {\n    mouseStart.current = undefined\n    setBeginDrag(false)\n    setTimeout(() => {\n      onDrag?.(undefined)\n    }, 100)\n  }\n\n  const onMouseMove = (event: MouseEvent) => {\n    if (!mouseStart.current || !draggable || !mouseStart.current) return\n    setBeginDrag(true)\n    setMouseMoveRect({\n      pageX: event.pageX - mouseStart.current.pageX,\n      pageY: event.pageY - mouseStart.current.pageY,\n    })\n  }\n\n  const onBeginDrag = (\n    e: MouseEventReact<HTMLTableRowElement>,\n    image?: ImagesDatabase[],\n  ) => {\n    e.preventDefault()\n    onDrag?.(image)\n  }\n\n  return (\n    <>\n      <TableWrap ref={refTable} className={className}>\n        <DataTable\n          style={{\n            width: columns.reduce((a, b) => a + (Number(b.width) || 110), 0),\n          }}\n        >\n          <Thead>\n            <Tr>\n              {columns.map((col, iCol) => {\n                const nameCol = col.name || col.dataIndex || ''\n                return (\n                  <Th\n                    onClick={() => onSortHandle(nameCol)}\n                    style={{\n                      maxWidth: col.width,\n                      minWidth: col.width,\n                      width: col.width,\n                      cursor: 'pointer',\n                    }}\n                    key={col.dataIndex || col.name || iCol}\n                  >\n                    {col.title}\n                    <ArrowDownwardIconOrder\n                      style={{\n                        transform: `rotate(${orderBy === 'ASC' ? 180 : 0}deg)`,\n                        opacity:\n                          orderBy && nameCol === orderKey && col.filter ? 1 : 0,\n                    }}\n                    />\n                  </Th>\n                )\n              })}\n            </Tr>\n          </Thead>\n          <TBody>\n            {data.map((item, index) => (\n              <RenderColumn\n                allowMutilKey={ctrRef.current}\n                recordIndex={index}\n                columns={columns}\n                {...p}\n                data={item}\n                rowClick={(e, image) => onRowClickEvent(e, image)}\n                onMouseDown={onMouseDown}\n                beginDrag={beginDrag}\n                draggable={false}\n                draggableProps={draggable}\n                key={`row_table_${item.id}_${index}`}\n                drags={drags}\n                onDrag={onBeginDrag}\n                onDragEnd={onDragEnd}\n              />\n            ))}\n          </TBody>\n        </DataTable>\n        {!data.length ? <NoData>No Data</NoData> : null}\n      </TableWrap>\n      {beginDrag &&\n        drags.map((el) => {\n          const rowId = `${el.id}_${el.datatype_index}_${el.session_id}`\n          const trNow = refTdSelect.current[rowId]\n          const { width, height, top, left } =\n            trNow.dom?.getBoundingClientRect()\n          const style = {\n            width,\n            height,\n            top: top + mouseMoveRect.pageY,\n            left: left + mouseMoveRect.pageX,\n          }\n          return (\n            <BoxDrag key={el.id} style={style}>\n              {trNow.tds.map((td, index) => {\n                const { width } = td.dom.getBoundingClientRect()\n                return (\n                  <Box\n                    key={`${rowId}_-${index}`}\n                    style={{ width, padding: 16 }}\n                  >\n                    {td.html}\n                  </Box>\n                )\n              })}\n            </BoxDrag>\n          )\n        })}\n    </>\n  )\n}\n\nconst BoxDrag = styled(Box)({\n  position: 'absolute',\n  background: '#ffffff',\n  backgroundColor: 'rgba(25,118,210,0.15)',\n  display: 'flex',\n  alignItems: 'center',\n})\n\nconst TableWrap = styled(Box)({\n  overflowX: 'scroll',\n})\n\nconst DataTable = styled('table')({\n  boxSizing: 'border-box',\n  minWidth: '100%',\n  borderCollapse: 'collapse',\n  border: '1px solid rgba(224, 224, 224, 1)',\n})\n\nconst Thead = styled('thead')({})\n\nconst Tr = styled('tr')({})\n\nconst Th = styled('th')(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  backgroundColor: 'none',\n  color: 'rgba(0,0,0,.88)',\n  fontWeight: 600,\n  border: '1px solid rgba(224, 224, 224, 1)',\n  userSelect: 'none',\n  ':first-of-type': {\n    borderTopLeftRadius: 4,\n  },\n  ':last-of-type': {\n    borderTopRightRadius: 4,\n  },\n}))\n\nconst TBody = styled('tbody')(() => ({}))\n\nconst Td = styled('td')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: '1px solid rgba(224, 224, 224, 1)',\n}))\n\nconst NoData = styled(Typography)({\n  textAlign: 'center',\n  fontWeight: '600',\n  fontSize: 20,\n  paddingTop: 16,\n})\n\nconst ArrowDownwardIconOrder = styled(ArrowDownwardIcon)({\n  width: 16,\n  height: 16,\n  transition: 'transform 0.3s',\n  marginBottom: -3,\n  marginLeft: 5,\n})\n\nconst BoxCenter = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n})\n\nexport default DatabaseTableComponent\n","import { Box, styled, Typography } from '@mui/material'\nimport {\n  FC,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  TouchEvent,\n} from 'react'\n\ntype ChangeDragProps = {\n  title: string\n  value: number\n  onChange: (value: number) => void\n  className?: string\n  max?: number\n  min?: number\n  onChangeMin?: (v: number) => any\n  showInputMax?: boolean\n  showInputMin?: boolean\n}\n\nconst ChangeDrag: FC<ChangeDragProps> = (props) => {\n  const { title, value, onChange, className, max = 2, min = 0 } = props\n  const { onChangeMin, showInputMax } = props\n  const [width, setWidth] = useState(0)\n  const mouseDown = useRef(0)\n\n  const refDrag = useRef<any>()\n  const refDot = useRef<any>()\n\n  useEffect(() => {\n    getWidth()\n    //eslint-disable-next-line\n  }, [])\n\n  const getWidth = () => {\n    if (!refDrag.current) getWidth()\n    setWidth(refDrag.current.clientWidth - 24)\n  }\n\n  const onMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n    mouseDown.current = event.pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onTouchStart = useCallback((event: TouchEvent<HTMLDivElement>) => {\n    mouseDown.current = event.touches[0].pageX\n    refDrag.current.style.cursor = 'grabbing'\n    refDot.current.style.cursor = 'grabbing'\n  }, [])\n\n  const onMouseMove = (event: MouseEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.pageX - mouseInit - 12\n    let scale = (mouseMove / width) * (max - min) + min\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(scale)\n  }\n\n  const onTouchMove = (event: TouchEvent<HTMLDivElement>) => {\n    if (!mouseDown.current) return\n    const mouseInit = refDrag.current.getBoundingClientRect().x\n    const mouseMove = event.touches[0].pageX - mouseInit\n    let scale = (mouseMove / width) * (max - min)\n    if (scale > max) scale = max\n    if (scale < min) scale = min\n    onChange(Number(scale.toFixed(2)))\n  }\n\n  const onMouseLeave = useCallback(() => {\n    mouseDown.current = 0\n    refDrag.current.style.cursor = 'default'\n    refDot.current.style.cursor = ''\n  }, [])\n\n  return (\n    <ScaleWrapper\n      className={className}\n      ref={refDrag}\n      onMouseMove={onMouseMove}\n      onTouchMove={onTouchMove}\n      onMouseLeave={onMouseLeave}\n      onMouseUp={onMouseLeave}\n    >\n      <TitleScale>{title}</TitleScale>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Input\n          value={Number(value.toPrecision(2))}\n          onChange={(e) => onChangeMin?.(Number(e.target.value))}\n        />\n        {showInputMax ? (\n          <Input\n            style={{ textAlign: 'right' }}\n            value={Number(max.toPrecision(2))}\n            readOnly\n          />\n        ) : null}\n      </div>\n      <BoxWrapper>\n        <BoxLine style={{ width: ((value - min) * width) / (max - min) }} />\n        <Dot\n          ref={refDot}\n          onMouseDown={onMouseDown}\n          onTouchEnd={onMouseLeave}\n          onTouchStart={onTouchStart}\n          style={{ left: ((value - min) * width) / (max - min) }}\n        />\n      </BoxWrapper>\n    </ScaleWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 4,\n  background: 'rgba(60, 60, 67, 0.18)',\n  position: 'relative',\n  borderRadius: 2,\n  userSelect: 'none',\n}))\n\nconst Dot = styled(Box)(() => ({\n  position: 'absolute',\n  width: 24,\n  height: 24,\n  background: '#7a7a7a',\n  borderRadius: 100,\n  top: -11,\n  cursor: 'pointer',\n}))\n\nconst TitleScale = styled(Typography)(() => ({\n  fontSize: 14,\n  fontWeight: 700,\n}))\n\nconst BoxLine = styled(Box)(() => ({\n  position: 'absolute',\n  height: 4,\n  background: '#0A7AFF',\n  borderRadius: 2,\n}))\n\nconst ScaleWrapper = styled(Box)(({ theme }) => ({\n  paddingBottom: 20,\n  '@media (max-width: 809px)': {\n    paddingTop: theme.spacing(2),\n  },\n}))\n\nconst Input = styled('input')({\n  border: 'none',\n  outline: 'none',\n  width: 50,\n  marginBottom: 20,\n})\n\nexport default ChangeDrag\n","import axios from 'utils/axios'\nimport { DATABASE_URL_HOST } from 'const/API'\n\nexport const getDataBaseTree = async () => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/search`)\n  return response.data\n}\n\nexport const getDataBaseList = async () => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/search/list`)\n  return response.data\n}\n\nexport const getRawdb = async (id: number) => {\n  const response = await axios.get(`${DATABASE_URL_HOST}/rawdb/${id}`)\n  return response.data\n}\n\nexport const editAttributes = async (id: number, data: string) => {\n  const response = await axios.put(`${DATABASE_URL_HOST}/rawdb/${id}`, data)\n  return response.data\n}\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogContentText,\n  IconButton,\n  Modal,\n  styled,\n  Typography,\n  DialogContent,\n  DialogActions\n} from '@mui/material'\nimport { FC, useEffect, useRef, useState } from 'react'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ChangeDrag from './ChangeSize'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { ObjectType } from 'pages/Database'\nimport { editAttributes } from \"api/rawdb\";\nimport Loading from \"../common/Loading\";\n\ntype ImageViewProps = {\n  open: boolean\n  onClose?: () => void\n  onNext?: () => void\n  onPrevious?: () => void\n  url?: string\n  jsonData?: ObjectType\n  disabled?: { left: boolean; right: boolean }\n  id: number\n  editAttribute?: boolean\n}\n\ntype AlertDialogProps = {\n  open: boolean\n  handleClose: () => void\n  handleSaveAttributes: () => void\n}\n\nconst AlertDialog = ({ open, handleClose, handleSaveAttributes }: AlertDialogProps) => {\n  return (\n      <div>\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Do you want Save?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={handleSaveAttributes} autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  );\n}\n\nconst ImageView: FC<ImageViewProps> = ({\n  editAttribute= true,\n  open,\n  onClose,\n  url,\n  onNext,\n  onPrevious,\n  jsonData,\n  disabled,\n  id\n}) => {\n  const viewerRef = useRef<any>()\n  const [worldCoords, setWorldCoords] = useState({ x: 0, y: 0, z: 0 })\n  const [voxelCoords, setVoxelCoords] = useState({ i: 0, j: 0, k: 0 })\n  const [values, setValues] = useState(0)\n  const [opacity, setOpacity] = useState(0)\n  const [thresholds, setThresholds] = useState(0)\n  const [maxThres, setMaxThres] = useState(0)\n  const [contracts, setContracts] = useState(1)\n  const [brightness, setBrightness] = useState(0)\n  const [isLoadFile, setIsLoadFile] = useState(false)\n  const [openSave, setOpenSave] = useState(false)\n  const [textAttribute, setTextAttribute] = useState(JSON.stringify(jsonData || ''))\n  const [errorAttribute, setErrorAttribute] = useState<string>('')\n  const [isLoading, setIsLoading] = useState(false)\n  const volumes = useRef<any>()\n  const refTextArea = useRef<HTMLTextAreaElement | null>(null)\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(loadFile, 0)\n      return\n    }\n    setIsLoadFile(false)\n    setOpacity(0)\n    setContracts(1)\n    setBrightness(0)\n    //eslint-disable-next-line\n  }, [open])\n\n  useEffect(() => {\n    loadFileIndex()\n    //eslint-disable-next-line\n  }, [url])\n  useEffect(() => {\n    setTextAttribute(JSON.stringify(jsonData || ''))\n    //eslint-disable-next-line\n  }, [jsonData])\n\n  const onChangeThreshold = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeContract = (num: number) => {\n    if (!volumes.current) return\n    setContracts(num)\n    volumes.current.display.setContrast(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeBrightness = (num: number) => {\n    if (!volumes.current) return\n    setBrightness(num)\n    volumes.current.display.setBrightness(num)\n    volumes.current.display.refreshPanels()\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeMinThresh = (num: number) => {\n    if (!volumes.current) return\n    volumes.current.intensity_min = num\n    viewerRef.current.redrawVolumes()\n  }\n\n  const onChangeJson = (event: any) => {\n    const { value } = event.target\n    try {\n      JSON.parse(value)\n      setErrorAttribute('')\n    }\n    catch {\n      setErrorAttribute('format JSON invalid')\n    }\n    setTextAttribute(value)\n  }\n\n  const loadFileIndex = () => {\n    if (!url || isLoadFile || !viewerRef.current) return\n    setIsLoadFile(true)\n    viewerRef.current.clearVolumes()\n    viewerRef.current.loadVolumes({\n      volumes: [\n        {\n          type: 'nifti1',\n          nii_url: url,\n          template: {\n            element_id: 'volume-ui-template',\n            viewer_insert_className: 'volume-viewer-display',\n          },\n          overlay: {\n            template: {\n              element_id: 'overlay-ui-template',\n              viewer_insert_className: 'overlay-viewer-display',\n            },\n          },\n          complete: function () {},\n        },\n      ],\n    })\n  }\n\n  const loadFile = () => {\n    if (!url || isLoadFile) return\n    setIsLoadFile(true)\n    const brainbrowser = (window as any).BrainBrowser\n    const color_map_config = brainbrowser.config.get('color_maps')[2]\n    viewerRef.current = brainbrowser.VolumeViewer.start(\n      'brainbrowser',\n      (viewer: any) => {\n        viewer.addEventListener('volumeloaded', function () {\n          setOpacity(1)\n          setIsLoadFile(false)\n        })\n        viewer.addEventListener('sliceupdate', function (event: any) {\n          // const panel = event.target\n          const { volume } = event\n          volumes.current = volume\n          setThresholds(volumes.current.intensity_min)\n          setMaxThres(volumes.current.intensity_max)\n          setValues(volume.getIntensityValue())\n          if (brainbrowser.utils.isFunction(volume.getWorldCoords)) {\n            setWorldCoords(volume.getWorldCoords())\n          }\n          if (brainbrowser.utils.isFunction(volume.getVoxelCoords)) {\n            setVoxelCoords(volume.getVoxelCoords())\n          }\n        })\n        const { url: urlColor, cursor_color } = color_map_config\n        viewer.loadDefaultColorMapFromURL(urlColor, cursor_color)\n        viewer.setDefaultPanelSize(256, 256)\n        viewer.render()\n        viewer.clearVolumes()\n        viewer.loadVolumes({\n          volumes: [\n            {\n              type: 'nifti1',\n              nii_url: url,\n              template: {\n                element_id: 'volume-ui-template',\n                viewer_insert_className: 'volume-viewer-display',\n              },\n              overlay: {\n                template: {\n                  element_id: 'overlay-ui-template',\n                  viewer_insert_className: 'overlay-viewer-display',\n                },\n              },\n              complete: function () {},\n            },\n          ],\n        })\n      },\n    )\n  }\n\n  const handleClickOpenSave = () => {\n    if(errorAttribute) return\n    setOpenSave(true);\n  };\n\n  const handleCloseSave = () => {\n    setOpenSave(false);\n  };\n\n  const handleSaveAttributes = async () => {\n    setIsLoading(true)\n    try {\n      await editAttributes(id, textAttribute)\n    }\n    finally {\n      handleCloseSave()\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <ImageViewWrapper>\n          <div\n            style={{\n              display: !opacity ? 'none' : 'flex',\n              alignItems: 'stretch',\n            }}\n          >\n            <div id=\"brainbrowser-wrapper\">\n              <div\n                id=\"volume-viewer\"\n                style={{\n                  minWidth: 768,\n                  minHeight: 256,\n                  background: '#ffffff',\n                }}\n              >\n                <div id=\"brainbrowser\"></div>\n              </div>\n              {opacity ? (\n                <Box sx={{background: '#ffffff'}}>\n                  <BoxContentData>\n                    <p style={{ margin: 0, padding: '20px 0' }}>\n                      World Coordinates:\n                    </p>\n                    <span>X: {worldCoords.x.toPrecision(4)}</span>\n                    <span style={{ marginLeft: 20 }}>\n                    Y: {worldCoords.y.toPrecision(4)}\n                  </span>\n                    <span style={{ marginLeft: 20 }}>\n                    Z: {worldCoords.z.toPrecision(4)}\n                  </span>\n                    <p>Voxel Coordinates:</p>\n                    <span>I: {voxelCoords.i}</span>\n                    <span style={{ marginLeft: 20 }}>J: {voxelCoords.j}</span>\n                    <span style={{ marginLeft: 20 }}>K: {voxelCoords.k}</span>\n                    <p>Value: {values}</p>\n                    <ChangeDrag\n                        onChangeMin={onChangeMinThresh}\n                        max={maxThres}\n                        min={-maxThres}\n                        title={'Threshold'}\n                        value={thresholds}\n                        showInputMax\n                        showInputMin\n                        onChange={onChangeThreshold}\n                    />\n                    <ChangeDrag\n                        title={'Contrast (0.0 to 2.0)'}\n                        value={contracts}\n                        onChange={onChangeContract}\n                    />\n                    <ChangeDrag\n                        title={'Brightness (-1 to 1):'}\n                        value={brightness}\n                        min={-1}\n                        max={1}\n                        onChange={onChangeBrightness}\n                    />\n                  </BoxContentData>\n                  <WrapperButton sx={{justifyContent: 'flex-end'}}>\n                    <ButtonCanCel onClick={onClose}>Close</ButtonCanCel>\n                  </WrapperButton>\n                </Box>\n              ) : null}\n            </div>\n            {\n              editAttribute &&\n                <WrapperJson>\n                    <WrapArea onClick={() => refTextArea.current?.focus?.()}>\n                        <TextArea\n                            ref={refTextArea}\n                            onChange={(event) => onChangeJson(event)}\n                            value={textAttribute}\n                            readOnly={window.location.pathname === '/projects/new-project'}\n                        />\n                        <Typography sx={{color: 'red', paddingLeft: 1, fontSize: 12}}>{errorAttribute}</Typography>\n                    </WrapArea>\n                    <WrapperButton>\n                        <ButtonOk onClick={handleClickOpenSave}>Save Attributes</ButtonOk>\n                    </WrapperButton>\n                </WrapperJson>\n            }\n            {!disabled?.right ? (\n              <ButtonNext onClick={onNext}>\n                <ArrowForwardIosIconWrapper />\n              </ButtonNext>\n            ) : null}\n            {!disabled?.left ? (\n              <ButtonPrevious onClick={onPrevious}>\n                <ArrowBackIosIconWrapper />\n              </ButtonPrevious>\n            ) : null}\n          </div>\n          {(!opacity || isLoadFile) && (\n            <BoxLoading>\n              <img\n                src=\"/lib/loading.gif\"\n                alt=\"icon loading\"\n                style={{ width: 80, height: 80 }}\n              />\n            </BoxLoading>\n          )}\n          <ButtonClose onClick={onClose}>\n            <CloseIconWrapper />\n          </ButtonClose>\n        </ImageViewWrapper>\n        <AlertDialog\n            open={openSave}\n            handleClose={handleCloseSave}\n            handleSaveAttributes={handleSaveAttributes}\n        />\n        {\n          isLoading && <Loading />\n        }\n      </div>\n    </Modal>\n  )\n}\n\nconst BoxLoading = styled(Box)({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'rgba(255,255,255, 0.1)',\n  zIndex: 88,\n})\n\nconst ButtonClose = styled(IconButton)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '10%',\n  right: '10%',\n  zIndex: 9999,\n  background: 'rgba(255,255,255,0.4)',\n})\n\nconst ButtonNext = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  right: '10%',\n  zIndex: 1,\n})\n\nconst ButtonPrevious = styled(ButtonClose)({\n  width: 50,\n  height: 50,\n  position: 'absolute',\n  top: '50%',\n  left: '10%',\n  zIndex: 1,\n})\n\nconst ImageViewWrapper = styled(Box)({\n  marginTop: 48,\n  margin: 'auto',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst BoxContentData = styled(Box)({\n  margin: '-5px 0 0',\n  padding: '10px',\n  background: '#ffffff',\n})\n\nconst WrapperJson = styled(Box)({\n  minWidth: 300,\n  background: '#ffffff',\n})\n\nconst WrapArea = styled(Box)({\n  height: 'calc(100% - 120px)',\n  borderLeft: '1px solid',\n})\nconst TextArea = styled('textarea')({\n  width: '98%',\n  outline: 'none !important',\n  border: 'none',\n})\n\nconst CloseIconWrapper = styled(CloseIcon)({\n  color: '#ffffff',\n})\n\nconst ArrowBackIosIconWrapper = styled(ArrowBackIosIcon)({\n  color: '#ffffff',\n  marginLeft: 10,\n})\n\nconst ArrowForwardIosIconWrapper = styled(ArrowForwardIosIcon)({\n  color: '#ffffff',\n})\n\nconst WrapperButton = styled(Box)({\n  display: 'flex',\n  gap: 15,\n  paddingBottom: 20,\n  justifyContent: 'center',\n  marginTop: 60,\n})\n\nconst ButtonOk = styled('button')({\n  padding: '10px 20px',\n  border: '2px solid #000',\n  cursor: 'pointer',\n  '&:hover': {\n    background: 'rgba(0, 0, 0, 0.2)',\n  }\n})\n\nconst ButtonCanCel = styled('button')({\n  padding: 10,\n  border: '2px solid #000',\n  cursor: 'pointer',\n  background: '#000000c7',\n  color: 'red',\n  marginRight: 10\n})\n\nexport default ImageView\n","import {\n  DatabaseData,\n  DatabaseListData,\n  DatatypesDatabase,\n  ImagesDatabase,\n  RecordDatabase,\n  RecordList,\n  SessionsDatabase,\n  SubjectDatabase,\n} from 'pages/Database'\nimport { getRawdb } from 'api/rawdb'\n\nexport type OrderKey =\n  | keyof (RecordDatabase | RecordList)\n  | 'subject'\n  | 'session'\n  | 'datatype'\n  | 'image_attributes.image_type'\n  | 'image_attributes.protocol'\n  | 'image_attributes.scale'\n  | 'image_attributes.voxel'\n\nexport const onRowClick = async (\n  datas: DatabaseData | DatabaseListData,\n  row: ImagesDatabase | RecordList,\n  type: 'tree' | 'list' = 'tree',\n) => {\n  const data = await getRawdb(row.id)\n  const view = {\n    open: true,\n    url: row.image_url,\n    id: row.id,\n    session_id: (row as ImagesDatabase).session_id,\n    parent_id: (row as ImagesDatabase).parent_id,\n    jsonData: data,\n    image: row,\n  }\n  const checkNext = onGet(datas, row, false, type)\n  const checkPre = onGet(datas, row, true, type)\n  return { view, checkNext, checkPre }\n}\n\nexport const onGet = (\n  datas: DatabaseData | DatabaseListData,\n  rowClick: ImagesDatabase | RecordList,\n  isSub?: boolean,\n  type: 'tree' | 'list' = 'tree',\n): ImagesDatabase | RecordList | undefined => {\n  if (type === 'tree') {\n    const row = rowClick as ImagesDatabase\n    const dataNow = datas.records[row.record_index || 0] as RecordDatabase\n    const subjectNow = dataNow?.subjects?.[row.subject_index || 0]\n    const sessionNow = subjectNow?.sessions[row.session_index || 0]\n    const datatypeNow = sessionNow?.datatypes[row.datatype_index || 0]\n    if (!isSub) {\n      const imageNext = datatypeNow?.images[(row.image_index || 0) + 1]\n      if (imageNext) {\n        return { ...row, ...imageNext, image_index: (row.image_index || 0) + 1 }\n      }\n      const datatypeNext = sessionNow?.datatypes[(row.datatype_index || 0) + 1]\n      if (datatypeNext) {\n        const images = datatypeNext?.images\n        if (images[0])\n          return {\n            ...row,\n            ...images[0],\n            datatype_index: (row.datatype_index || 0) + 1,\n            image_index: 0,\n          }\n      }\n    } else {\n      const imagePre = datatypeNow?.images[(row.image_index || 0) - 1]\n      if (imagePre) {\n        return { ...row, ...imagePre, image_index: (row.image_index || 0) - 1 }\n      }\n      const datatypeImagePre =\n        sessionNow?.datatypes?.[(row.datatype_index || 0) - 1]\n      if (datatypeImagePre) {\n        const images = datatypeImagePre?.images\n        if (images?.[images.length - 1]) {\n          return {\n            ...row,\n            ...images?.[images.length - 1],\n            datatype_index: (row.datatype_index || 0) - 1,\n            image_index: images.length - 1,\n          }\n        }\n      }\n    }\n  } else {\n    const row = rowClick as RecordList\n    const indexImageNow = datas.records.findIndex(\n      (record) => record.id === row.id,\n    )\n    return datas.records[indexImageNow + (isSub ? -2 : 2)] as RecordList\n  }\n  return undefined\n}\n\nconst sortWithLabName = (\n  datasTable: (RecordDatabase | RecordList)[],\n  orderKey: keyof (RecordDatabase | RecordList),\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return a[orderKey] > b[orderKey] ? -1 : 1\n      }\n      return a[orderKey] < b[orderKey] ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nconst sortSubjectTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort((dataA, dataB) => {\n    const subjectsA = dataA.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    const subjectsB = dataB.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    })\n    if (typeOrder === 'DESC') {\n      return subjectsA[0]?.label > subjectsB[0]?.label ? -1 : 1\n    }\n    return subjectsA[0]?.label < subjectsB[0]?.label ? -1 : 1\n  })\n  return newDatas.map((element) => ({\n    ...element,\n    subjects: element.subjects.sort((subA, subB) => {\n      if (typeOrder === 'DESC') {\n        return subA.label > subB.label ? -1 : 1\n      }\n      return subA.label < subB.label ? -1 : 1\n    }),\n  }))\n}\n\nconst sortSessionTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          const subSess = sub.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          return subSess\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          const subSessB = subB.sessions.sort((sA, sB) => {\n            if (typeOrder === 'DESC') {\n              return sA.label > sB.label ? -1 : 1\n            }\n            return sA.label < sB.label ? -1 : 1\n          })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions.sort((ssA, ssB) => {\n            if (typeOrder === 'DESC') {\n              return ssA.label > ssB.label ? -1 : 1\n            }\n            return ssA.label < ssB.label ? -1 : 1\n          }),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortDataTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const sessionsA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      const sessionsB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((ses) => {\n              const dataTypeA = ses.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              return dataTypeA\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.label > dataB.label ? -1 : 1\n          }\n          return dataA.label < dataB.label ? -1 : 1\n        })\n      if (typeOrder === 'DESC') {\n        return sessionsA[0]?.label > sessionsB[0]?.label ? -1 : 1\n      }\n      return sessionsA[0]?.label < sessionsB[0]?.label ? -1 : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.label > dataB.label ? -1 : 1\n              }\n              return dataA.label < dataB.label ? -1 : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.label > subSessB[0]?.label ? -1 : 1\n          }\n          return subSessA[0]?.label < subSessB[0]?.label ? -1 : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              const dataTypeB = ssB.datatypes.sort((sA, sB) => {\n                if (typeOrder === 'DESC') {\n                  return sA.label > sB.label ? -1 : 1\n                }\n                return sA.label < sB.label ? -1 : 1\n              })\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.label > dataTypeB[0]?.label ? -1 : 1\n              }\n              return dataTypeA[0]?.label < dataTypeB[0]?.label ? -1 : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes.sort((typeA, typeB) => {\n                if (typeOrder === 'DESC') {\n                  return typeA.label > typeB.label ? -1 : 1\n                }\n                return typeA.label < typeB.label ? -1 : 1\n              }),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortAttributesTypeTree = (\n  datasTable: RecordDatabase[],\n  typeOrder?: 'ASC' | 'DESC',\n  key: string = 'type',\n) => {\n  const newDatas = datasTable\n    .sort((dataA, dataB) => {\n      const typeA = dataA.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.image_attributes[key]?.toString?.() >\n                        imageB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return imageA.image_attributes[key]?.toString?.() <\n                      imageB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.image_attributes[key]?.toString?.() >\n              dataB.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return dataA.image_attributes[key]?.toString?.() <\n            dataB.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n      const typeB = dataB.subjects\n        .map((sub) => {\n          return sub.sessions\n            .map((s) => {\n              return s.datatypes\n                .map((type) => {\n                  return type.images.sort((imageA, imageB) => {\n                    if (typeOrder === 'DESC') {\n                      return imageA.image_attributes[key]?.toString?.() >\n                        imageB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return imageA.image_attributes[key]?.toString?.() <\n                      imageB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n        })\n        .flat()\n        .sort((dataA, dataB) => {\n          if (typeOrder === 'DESC') {\n            return dataA.image_attributes[key]?.toString?.() >\n              dataB.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return dataA.image_attributes[key]?.toString?.() <\n            dataB.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n\n      if (typeOrder === 'DESC') {\n        return typeA[0]?.image_attributes[key]?.toString?.() >\n          typeB[0]?.image_attributes[key]?.toString?.()\n          ? -1\n          : 1\n      }\n      return typeA[0]?.image_attributes[key]?.toString?.() <\n        typeB[0]?.image_attributes[key]?.toString?.()\n        ? -1\n        : 1\n    })\n    .map((element) => ({\n      ...element,\n      subjects: element.subjects\n        .sort((subA, subB) => {\n          const subSessA = subA.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n          const subSessB = subB.sessions\n            .map((ss) => {\n              return ss.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n            })\n            .flat()\n            .sort((dataA, dataB) => {\n              if (typeOrder === 'DESC') {\n                return dataA.image_attributes[key]?.toString?.() >\n                  dataB.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataA.image_attributes[key]?.toString?.() <\n                dataB.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n          if (typeOrder === 'DESC') {\n            return subSessA[0]?.image_attributes[key]?.toString?.() >\n              subSessB[0]?.image_attributes[key]?.toString?.()\n              ? -1\n              : 1\n          }\n          return subSessA[0]?.image_attributes[key]?.toString?.() <\n            subSessB[0]?.image_attributes[key]?.toString?.()\n            ? -1\n            : 1\n        })\n        .map((sub) => ({\n          ...sub,\n          sessions: sub.sessions\n            .sort((ssA, ssB) => {\n              const dataTypeA = ssA.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n              const dataTypeB = ssB.datatypes\n                .map((type) => {\n                  return type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                })\n                .flat()\n              if (typeOrder === 'DESC') {\n                return dataTypeA[0]?.image_attributes[key]?.toString?.() >\n                  dataTypeB[0]?.image_attributes[key]?.toString?.()\n                  ? -1\n                  : 1\n              }\n              return dataTypeA[0]?.image_attributes[key]?.toString?.() <\n                dataTypeB[0]?.image_attributes[key]?.toString?.()\n                ? -1\n                : 1\n            })\n            .map((ssA) => ({\n              ...ssA,\n              datatypes: ssA.datatypes\n                .sort((typeA, typeB) => {\n                  const imageA = typeA.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                  const imageB = typeB.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  })\n                  if (typeOrder === 'DESC') {\n                    return imageA[0]?.image_attributes[key]?.toString?.() >\n                      imageB[0]?.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  }\n                  return imageA[0]?.image_attributes[key]?.toString?.() <\n                    imageB[0]?.image_attributes[key]?.toString?.()\n                    ? -1\n                    : 1\n                })\n                .map((type) => ({\n                  ...type,\n                  images: type.images.sort((sA, sB) => {\n                    if (typeOrder === 'DESC') {\n                      return sA.image_attributes[key]?.toString?.() >\n                        sB.image_attributes[key]?.toString?.()\n                        ? -1\n                        : 1\n                    }\n                    return sA.image_attributes[key]?.toString?.() <\n                      sB.image_attributes[key]?.toString?.()\n                      ? -1\n                      : 1\n                  }),\n                })),\n            })),\n        })),\n    }))\n  return newDatas\n}\n\nconst sortWithKey = (\n  datasTable: RecordList[],\n  orderKey: keyof RecordList,\n  typeOrder?: 'ASC' | 'DESC',\n) => {\n  return datasTable.sort((dataA: RecordList, dataB: RecordList) => {\n    let valueA: RecordList | string = dataA\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueA !== 'string') {\n          valueA = valueA?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueA = valueA[orderKey] as string\n\n    let valueB: RecordList | string = dataB\n    if (orderKey.includes('.')) {\n      const keys = orderKey.split('.')\n      keys.forEach((k) => {\n        if (typeof valueB !== 'string') {\n          valueB = valueB?.[k as keyof RecordList] as string\n        }\n      })\n    } else valueB = valueB[orderKey] as string\n    if (typeOrder === 'DESC') {\n      return valueA > valueB ? -1 : 1\n    }\n    return valueA < valueB ? -1 : 1\n  })\n}\n\nconst sortWithTime = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC',\n) => {\n  const newDatas = datasTable.sort(\n    (a: RecordDatabase | RecordList, b: RecordDatabase | RecordList) => {\n      if (typeOrder === 'DESC') {\n        return new Date(a.recording_time) > new Date(b.recording_time) ? -1 : 1\n      }\n      return new Date(a.recording_time) < new Date(b.recording_time) ? -1 : 1\n    },\n  )\n  return newDatas\n}\n\nexport const onSort = (\n  datasTable: (RecordDatabase | RecordList)[],\n  typeOrder: 'ASC' | 'DESC' | '',\n  orderKey: OrderKey,\n  type: string = 'tree',\n): (RecordDatabase | RecordList)[] => {\n  if (!typeOrder) return datasTable\n  let newDatas = datasTable\n  if (type === 'tree') {\n    if (['lab_name', 'user_name'].includes(orderKey)) {\n      newDatas = sortWithLabName(\n        datasTable,\n        orderKey as 'lab_name' | 'user_name',\n        typeOrder,\n      )\n    } else if (orderKey === 'recording_time') {\n      newDatas = sortWithTime(datasTable, typeOrder)\n    } else if (orderKey === 'subject' && type === 'tree') {\n      newDatas = sortSubjectTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'session' && type === 'tree') {\n      newDatas = sortSessionTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'datatype' && type === 'tree') {\n      newDatas = sortDataTypeTree(datasTable as RecordDatabase[], typeOrder)\n    } else if (orderKey === 'image_attributes.image_type' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n      )\n    } else if (orderKey === 'image_attributes.protocol' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'protocol',\n      )\n    } else if (orderKey === 'image_attributes.voxel' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'voxel',\n      )\n    } else if (orderKey === 'image_attributes.scale' && type === 'tree') {\n      newDatas = sortAttributesTypeTree(\n        datasTable as RecordDatabase[],\n        typeOrder,\n        'scale',\n      )\n    }\n  } else {\n    newDatas = sortWithKey(\n      datasTable as RecordList[],\n      orderKey as keyof RecordList,\n      typeOrder,\n    )\n  }\n  return newDatas\n}\n\nexport const onFilterValue = (\n  value: { [key: string]: string },\n  setDatabases: (value: any) => void,\n  initDataTable: DatabaseData,\n  type: 'tree' | 'list',\n) => {\n  if (!Object.keys(value).some((key) => value[key])) {\n    setDatabases(initDataTable)\n    return\n  }\n  if (type === 'list') {\n    const arrFilter = initDataTable.records.filter((item: any) => {\n      return !Object.keys(value).some((key: string) => {\n        if (!value[key]) return false\n        if (key === 'protocol') {\n          return !item.image_attributes[key]\n            ?.toLowerCase()\n            .includes(value[key].toLowerCase?.())\n        }\n        return !item[key]?.includes(value[key].toLowerCase?.())\n      })\n    })\n    setDatabases({\n      pagenation: {\n        page: 0,\n        limit: 0,\n        total: 0,\n        total_pages: 0,\n      },\n      records: arrFilter,\n    })\n    return\n  }\n  const newRecords = initDataTable.records.reduce(\n    (arrRecord: RecordDatabase[], record) => {\n      const subjects = record.subjects.reduce(\n        (arrSub: SubjectDatabase[], subject) => {\n          const sessions = subject.sessions.reduce(\n            (arrSess: SessionsDatabase[], session) => {\n              if (\n                session.label\n                  ?.toLowerCase()\n                  ?.includes((value.session_label || '')?.toLowerCase())\n              ) {\n                const datatypes = session.datatypes.reduce(\n                  (arrDt: DatatypesDatabase[], dt) => {\n                    if (\n                      dt.label\n                        ?.toLowerCase()\n                        ?.includes((value.datatypes_label || '')?.toLowerCase())\n                    ) {\n                      const images = dt.images.filter((image) => {\n                        const { image_type, protocol } = image.image_attributes\n                        return (\n                          (image_type as string)\n                            ?.toLowerCase()\n                            .includes((value.type || '').toLowerCase()) &&\n                          (protocol as string)\n                            ?.toLowerCase()\n                            .includes((value.protocol || '').toLowerCase())\n                        )\n                      })\n                      if (images.length) {\n                        arrDt.push({ ...dt, images })\n                      }\n                    }\n                    return arrDt\n                  },\n                  [],\n                )\n                if (datatypes.length) {\n                  arrSess.push({ ...session, datatypes })\n                }\n              }\n              return arrSess\n            },\n            [],\n          )\n          if (sessions.length) {\n            arrSub.push({ ...subject, sessions })\n          }\n          return arrSub\n        },\n        [],\n      )\n      if (subjects.length) {\n        arrRecord.push({ ...record, subjects })\n      }\n      return arrRecord\n    },\n    [],\n  )\n  setDatabases({\n    pagenation: {\n      page: 0,\n      limit: 0,\n      total: 0,\n      total_pages: 0,\n    },\n    records: newRecords,\n  })\n  return\n}\n","import { Box, Button, IconButton, styled, TextField } from '@mui/material'\nimport { ChangeEvent, useCallback, useEffect, useState } from 'react'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ImageView from 'components/ImageView'\nimport ModalDeleteAccount from 'components/ModalDeleteAccount'\nimport {\n  onFilterValue,\n  onGet,\n  onRowClick,\n  onSort,\n  OrderKey,\n} from 'utils/database'\nimport { User, useUser } from 'providers'\nimport { isReseacher } from 'utils/auth'\nimport { getDataBaseList, getDataBaseTree } from 'api/rawdb'\nimport { DATABASE_URL_HOST } from 'const/API'\nimport Loading from 'components/common/Loading'\nimport { useSearchParams } from 'react-router-dom'\n\ntype PopupSearchProps = {\n  onClose?: () => any\n  onFilter?: (values: { [key: string]: string }) => any\n  defaultValue?: { [key: string]: string }\n}\n\nexport const PopupSearch = ({\n  onClose,\n  defaultValue = {},\n  onFilter,\n}: PopupSearchProps) => {\n  const [values, setValues] = useState(defaultValue)\n\n  const handleFilter = () => {\n    onFilter?.(values)\n    onClose?.()\n  }\n\n  const onChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    setValues({ ...values, [event.target.name]: event.target.value })\n  }\n\n  return (\n    <Popup>\n      <PopupInner>\n        <HeaderTitle>\n          <span>Filter</span>\n          <ButtonControl onClick={onClose}>\n            <CloseIcon />\n          </ButtonControl>\n        </HeaderTitle>\n        <InputSearch\n          onChange={onChange}\n          name={'session_label'}\n          label=\"Session\"\n          variant=\"outlined\"\n          value={values.session_label}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'datatypes_label'}\n          label=\"Datatype\"\n          variant=\"outlined\"\n          value={values.datatypes_label}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'type'}\n          label=\"Type\"\n          variant=\"outlined\"\n          value={values.type}\n        />\n        <InputSearch\n          onChange={onChange}\n          name={'protocol'}\n          label=\"Protocol\"\n          variant=\"outlined\"\n          value={values.protocol}\n        />\n        <Button variant=\"contained\" onClick={handleFilter}>\n          Filter\n        </Button>\n      </PopupInner>\n    </Popup>\n  )\n}\n\nexport type ObjectType = {\n  [key: string]: ObjectType | string | number | number[]\n}\n\nexport type Image = {\n  id: number\n  parent_id: number\n  session_id: number\n  label: string\n  image: {\n    id: number\n    parent_id: number\n    image_url: string\n    image_attributes: ObjectType\n  }\n}\n\nexport type Viewer = {\n  open: boolean\n  url: string\n  jsonData?: ObjectType\n  id?: number | string\n  session_id?: number\n  parent_id?: string\n  image?: ImagesDatabase | RecordList\n}\n\nexport type ImagesDatabase = {\n  id: number\n  parent_id: string\n  image_url: string\n  datatype_label?: string\n  type?: string\n  image_attributes: ObjectType\n  session_id?: number\n  record_index?: number\n  subject_index?: number\n  session_index?: number\n  datatype_index?: number\n  image_index?: number\n}\n\nexport type DatatypesDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  images: ImagesDatabase[]\n}\n\nexport type SessionsDatabase = {\n  id: string\n  parent_id: string\n  session_index?: number\n  label: string\n  datatypes: DatatypesDatabase[]\n  subject_index?: number\n}\n\nexport type SubjectDatabase = {\n  id: string\n  parent_id: string\n  label: string\n  sessions: SessionsDatabase[]\n  subject_index?: number\n}\n\nexport type RecordDatabase = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  created_time: string\n  updated_time: string\n  subjects: SubjectDatabase[]\n}\n\nexport type DatabaseData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordDatabase[]\n}\n\nexport type RecordList = {\n  id: number\n  lab_name: string\n  user_name: string\n  recording_time: string\n  subject_label: string\n  session_label: string\n  datatypes_label: string\n  image_id: number\n  image_url: string\n  image_attributes: {\n    size: number[]\n    type: string\n    protocol: string\n    voxel_size: number[]\n  }\n  created_time: string\n  updated_time: string\n}\n\nexport type DatabaseListData = {\n  pagenation: {\n    page: number\n    limit: number\n    total: number\n    total_pages: number\n  }\n  records: RecordList[]\n}\n\nexport const defaultDatabase: DatabaseData = {\n  pagenation: {\n    page: 0,\n    limit: 0,\n    total: 0,\n    total_pages: 0,\n  },\n  records: [],\n}\n\nexport const columns = (\n  rowClick: Function,\n  setOpenDelete: Function,\n  type: 'tree' | 'list' = 'tree',\n  user?: User,\n): Column[] => [\n  { title: 'Lab', name: 'lab_name', filter: true, width: 100 },\n  { title: 'User', name: 'user_name', filter: true },\n  { title: 'Date', name: 'recording_time', filter: true, width: 110 },\n  {\n    title: 'Subject',\n    name: type === 'tree' ? 'subject' : 'subject_label',\n    filter: true,\n  },\n  {\n    title: 'Session',\n    name: type === 'tree' ? 'session' : 'session_label',\n    child: 'label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Datatype',\n    name: type === 'tree' ? 'datatype' : 'datatypes_label',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Type',\n    name: 'image_attributes.image_type',\n    filter: true,\n    width: 70,\n  },\n  {\n    title: 'Protocol',\n    name: 'image_attributes.protocol',\n    filter: true,\n  },\n  {\n    title: 'Size',\n    name: 'image_attributes.scale',\n    filter: true,\n    render: (_, v) => JSON.stringify(v),\n  },\n  {\n    title: 'Voxel size',\n    name: 'image_attributes.voxel',\n    filter: true,\n    width: 130,\n    render: (_, v) => JSON.stringify(v),\n  },\n  {\n    title: '',\n    name: 'action',\n    render: (data) => {\n      if (isReseacher(user?.role)) return null\n      return (\n        <BoxButton>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              rowClick?.(data)\n            }}\n          >\n            <EditIcon fontSize=\"small\" color={'inherit'} />\n          </ButtonControl>\n          <ButtonControl\n            aria-label=\"Example\"\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              setOpenDelete?.(true)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </ButtonControl>\n        </BoxButton>\n      )\n    },\n  },\n]\n\nconst Database = () => {\n  const [openPopup, setOpenPopup] = useState(false)\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [databases, setDatabases] = useState<DatabaseData | DatabaseListData>()\n  const [openDelete, setOpenDelete] = useState(false)\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [type, setType] = useState<'tree' | 'list'>('tree')\n  const [initDataTable, setInitDataTable] =\n    useState<DatabaseData>(defaultDatabase)\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [isLoading, setIsLoading] = useState(false)\n  const { user } = useUser()\n  const [searchParams, setParams] = useSearchParams()\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const fetchData = useCallback(async () => {\n    const defaultValue = {\n      session_label: searchParams.get('session_label') || '',\n      datatypes_label: searchParams.get('datatypes_label') || '',\n      type: searchParams.get('type') || '',\n      protocol: searchParams.get('protocol') || '',\n    }\n    setIsLoading(true)\n    let data\n    try {\n      data = type === 'tree' ? await getDataBaseTree() : await getDataBaseList()\n      onFilterValue(defaultValue, setDatabases, data, type)\n      setInitDataTable(data)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [type, searchParams])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  const rowClick = async (row: ImagesDatabase | RecordList) => {\n    if (!databases) return\n    const { view, checkNext, checkPre } = await onRowClick(databases, row, type)\n    setViewer(view)\n    setDisabled({\n      left: type === 'list' || !checkPre,\n      right: type === 'list' || !checkNext,\n    })\n  }\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const onDelete = () => {\n    setOpenDelete(false)\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    if (!databases) return\n\n    const data = onSort(\n      JSON.parse(JSON.stringify(databases.records)),\n      orderByValue,\n      orderKey as OrderKey,\n      type,\n    )\n    setDatabases({ ...databases, records: data as any })\n    setColumnSort(orderKey)\n    setOrdeBy(orderByValue)\n  }\n\n  const onNext = async () => {\n    if (!viewer.image) return\n    const imageNext = onGet(databases as any, viewer.image, false, type)\n    if (imageNext) await rowClick(imageNext)\n  }\n\n  const onPrevious = async () => {\n    if (!viewer.image || !databases) return\n    const imagePre = onGet(databases, viewer.image, true, type)\n    if (imagePre) await rowClick(imagePre)\n  }\n\n  const onFilter = (value: { [key: string]: string }) => {\n    if (!databases) return\n    onFilterValue(value, setDatabases, initDataTable, type)\n    if (!Object.keys(value).length) return\n    const newParams = Object.keys(value)\n      .map((key) => value[key] && `${key}=${value[key]}`)\n      .join('&')\n    setParams(newParams)\n  }\n\n  return (\n    <DatabaseWrapper>\n      <ModalDeleteAccount\n        titleSubmit=\"Delete Image\"\n        description={`Are you sure delete?\\n`}\n        onClose={handleCloseDelete}\n        open={openDelete}\n        onSubmit={onDelete}\n      />\n      <ProjectsTitle>\n        <span>Database</span>\n        <ButtonFilter\n          onClick={() => setOpenPopup(true)}\n          style={{ margin: '0 26px 0 0' }}\n        >\n          Filter\n        </ButtonFilter>\n      </ProjectsTitle>\n      <BoxSelectTypeView>\n        <Box\n          onClick={() => setType('tree')}\n          style={{\n            marginRight: 4,\n            fontWeight: type === 'tree' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'tree' ? '' : '#4687f4',\n          }}\n        >\n          Tree\n        </Box>\n        /\n        <Box\n          onClick={() => setType('list')}\n          style={{\n            marginLeft: 4,\n            fontWeight: type === 'list' ? 700 : 500,\n            cursor: 'pointer',\n            color: type === 'list' ? '' : '#4687f4',\n          }}\n        >\n          List\n        </Box>\n      </BoxSelectTypeView>\n      {openPopup && (\n        <PopupSearch\n          onClose={() => setOpenPopup(false)}\n          defaultValue={{\n            session_label: searchParams.get('session_label') || '',\n            datatypes_label: searchParams.get('datatypes_label') || '',\n            type: searchParams.get('type') || '',\n            protocol: searchParams.get('protocol') || '',\n          }}\n          onFilter={onFilter}\n        />\n      )}\n      <DatabaseTableComponent\n        defaultExpand\n        onSort={handleSort}\n        rowClick={rowClick}\n        orderKey={columnSort}\n        orderBy={orderBy}\n        data={databases && databases.records}\n        columns={columns(rowClick, setOpenDelete, type, user)}\n      />\n      <ImageView\n        disabled={disabled}\n        url={viewer.url && `${DATABASE_URL_HOST}${viewer.url}`}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n        id={Number(viewer.id)}\n      />\n      {isLoading && <Loading />}\n    </DatabaseWrapper>\n  )\n}\n\nconst DatabaseWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst HeaderTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst Popup = styled(Box)(() => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n  zIndex: 9999,\n}))\n\nconst PopupInner = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2, 3),\n  backgroundColor: '#fff',\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n}))\n\nconst InputSearch = styled(TextField)(() => ({\n  minWidth: 250,\n}))\n\nconst BoxButton = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  backgroundColor: '#283237 !important',\n  color: '#ffffff',\n}))\n\nconst ButtonControl = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0, 1),\n  width: 30,\n  height: 30,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst ProjectsTitle = styled('h1')(() => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n}))\n\nconst BoxSelectTypeView = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 16,\n})\n\nexport default Database\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { getMe, login } from 'api/auth'\nimport { useUser } from 'providers'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { saveExToken, saveRefreshToken, saveToken } from 'utils/auth'\nimport Loading from '../../components/common/Loading'\n\nconst Login = () => {\n  const { setUser } = useUser()\n  const navigate = useNavigate()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n    try {\n      const { access_token, ex_token, refresh_token } = await login(values)\n      saveToken(access_token)\n      saveRefreshToken(refresh_token)\n      saveExToken(ex_token)\n      getUser()\n    } catch (e) {\n      setErrors({ email: 'Email or password is wrong', password: '' })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const getUser = async () => {\n    const data = await getMe()\n    setUser(data)\n    navigate('/')\n  }\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">\n              {errors.password}\n            </TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {isLoading && <Loading />}\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { createSlice } from '@reduxjs/toolkit'\nimport { PROJECT_SLICE_NAME, Project } from './ProjectType'\nimport { getProjectList, getProjectId } from './ProjectAction'\n\nconst initialState: Project = {\n  projects: [],\n  currentProject: undefined,\n}\n\nexport const projectSlice = createSlice({\n  name: PROJECT_SLICE_NAME,\n  initialState,\n  reducers: {\n    resetCurrentProject: (state) => {\n      state.currentProject = undefined\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getProjectList.fulfilled, (state, action) => {\n      state.projects = action.payload.projects\n    })\n    builder.addCase(getProjectId.fulfilled, (state, action) => {\n      state.currentProject = action.payload\n    })\n  },\n})\n\nexport const { resetCurrentProject } = projectSlice.actions\nexport default projectSlice.reducer\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  styled,\n  Typography,\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport DatabaseTableComponent, { Column } from 'components/DatabaseTable'\nimport React, {\n  useState,\n  DragEvent,\n  Fragment,\n  useRef,\n  CSSProperties,\n  useEffect,\n} from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport {\n  DatabaseData,\n  defaultDatabase,\n  ImagesDatabase,\n  PopupSearch,\n  Viewer,\n} from '../Database'\nimport ImageView from 'components/ImageView'\nimport {\n  onFilterValue,\n  onGet,\n  onRowClick,\n  onSort,\n  OrderKey,\n} from 'utils/database'\nimport { ObjectType } from '../Database'\nimport { ChangeEvent } from 'react'\nimport { RecordDatabase } from '../Database'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { useDispatch } from 'react-redux'\nimport { getDatasetList } from 'store/slice/Dataset/DatasetAction'\nimport { ProjectTypeValue } from 'store/slice/Project/ProjectType'\nimport {\n  createProject,\n  editProject,\n  getProjectId,\n} from 'store/slice/Project/ProjectAction'\nimport Loading from 'components/common/Loading'\nimport { getDataBaseTree } from 'api/rawdb'\nimport { DATABASE_URL_HOST } from 'const/API'\nimport { selectDataset } from 'store/slice/Dataset/DatasetSelector'\nimport { useSelector } from 'react-redux'\nimport { Dataset } from 'store/slice/Dataset/DatasetType'\nimport { selectCurrentProject } from 'store/slice/Project/ProjectSelector'\nimport { resetCurrentProject } from 'store/slice/Project/ProjectSlice'\nimport { reset } from 'store/slice/Dataset/DatasetSlice'\n\nconst columns: Column[] = [\n  { title: 'User', name: 'user_name', filter: true, width: 100 },\n  { title: 'Date', name: 'recording_time', filter: true, width: 130 },\n  { title: 'Subject', name: 'subject', filter: true, width: 120 },\n  {\n    title: 'Session',\n    name: 'session',\n    child: 'label',\n    filter: true,\n    width: 190,\n  },\n  {\n    title: 'Datatype',\n    name: 'datatype',\n    filter: true,\n    width: 100,\n  },\n  {\n    title: 'Size',\n    name: 'image_attributes.scale',\n    filter: true,\n    render: (_, value) => JSON.stringify(value),\n  },\n  {\n    title: 'Voxel size',\n    name: 'image_attributes.voxel',\n    filter: true,\n    render: (_, value) => JSON.stringify(value),\n  },\n]\n\ntype ProjectAdd = {\n  project_name?: string\n  project_type?: string\n  image_count: number\n  image_url: string\n  protocol: string\n  id: string\n  image_id: number\n  jsonData: ObjectType\n}\n\ntype DataWithin = {\n  id: string\n  data: ProjectAdd[]\n  name: string\n}\n\ntype DataFactor = {\n  within: DataWithin[]\n} & DataWithin\n\nconst nameDefault = 'DEFAULT'\n\nconst defaultFactor = [\n  { name: nameDefault, within: [], id: getNanoId(), data: [] },\n]\n\nconst remapDatasetToDataFactor = ({ dataset }: Dataset): DataFactor[] => {\n  if (!dataset) return defaultFactor\n  return dataset.sub_folders.map((sub) => ({\n    id: sub.id,\n    name: sub.folder_name || nameDefault,\n    within: (sub.sub_folders || []).map((sub_within) => ({\n      id: sub_within.id,\n      name: sub_within.folder_name,\n      data: (sub_within.images || []).map((image) => ({\n        project_name: image.attributes.datatype as string,\n        project_type: image.attributes.image_type as string,\n        id: String(image.id),\n        image_count: 1,\n        image_id: image.id,\n        protocol: image.attributes.protocol as string,\n        image_url: image.image_url,\n        jsonData: image.attributes,\n      })),\n    })),\n    data: (sub.images || []).map((image) => ({\n      project_name: image.attributes.datatype as string,\n      project_type: image.attributes.image_type as string,\n      id: String(image.id),\n      image_count: 1,\n      image_id: image.id,\n      protocol: image.attributes.protocol as string,\n      image_url: image.image_url,\n      jsonData: image.attributes,\n    })),\n  }))\n}\n\nconst ProjectFormComponent = () => {\n  const [searchParams, setParams] = useSearchParams()\n  const idEdit = searchParams.get('id')\n  const [viewer, setViewer] = useState<Viewer>({ open: false, url: '' })\n  const [orderBy, setOrdeBy] = useState<'ASC' | 'DESC' | ''>('')\n  const [columnSort, setColumnSort] = useState<string>('')\n  const [loading, setLoading] = useState<boolean>(false)\n  const [imageIDs, setImageIDs] = useState<number[]>([])\n  const routeGoback = searchParams.get('back')\n  const nodeId = searchParams.get('nodeId')\n  const isPendingDrag = useRef(false)\n  const dispatch = useDispatch()\n\n  const dataset = useSelector(selectDataset)\n  const currentProject = useSelector(selectCurrentProject)\n\n  const [databasese, setDatabases] = useState<DatabaseData>(defaultDatabase)\n  const [initDatabase, setInitDatabase] =\n    useState<DatabaseData>(defaultDatabase)\n  const [projectName, setProjectName] = useState(\n    currentProject?.project_name || 'Prj Name 1',\n  )\n  const [projectType, setProjectType] = useState<ProjectTypeValue>(\n    currentProject?.project_type || ProjectTypeValue.FACTOR,\n  )\n  const [disabled, setDisabled] = useState({ left: false, right: false })\n  const [openFilter, setOpenFilter] = useState(false)\n  const [rowDrag, setRowDrag] = useState<ImagesDatabase | ImagesDatabase[]>()\n  const [dataFactors, setDataFactors] = useState<DataFactor[]>(\n    remapDatasetToDataFactor(dataset),\n  )\n\n  const timeoutClick = useRef<NodeJS.Timeout | undefined>()\n  const navigate = useNavigate()\n  const [isEditName, setIsEditName] = useState(false)\n\n  useEffect(() => {\n    if (!idEdit) return\n    setLoading(true)\n    dispatch(getDatasetList({ project_id: idEdit }))\n    dispatch(\n      getProjectId({\n        project_id: idEdit,\n        callback: () => setLoading(false),\n      }),\n    )\n    return () => {\n      dispatch(resetCurrentProject())\n      dispatch(reset())\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    setDataFactors(remapDatasetToDataFactor(dataset))\n  }, [dataset])\n\n  useEffect(() => {\n    if (currentProject?.project_name) {\n      setProjectName(currentProject?.project_name)\n    }\n  }, [currentProject?.project_name])\n\n  useEffect(() => {\n    if (typeof currentProject?.project_type === 'number') {\n      setProjectType(currentProject.project_type)\n    }\n  }, [currentProject?.project_type])\n\n  useEffect(() => {\n    getDataTree().then()\n    //eslint-disable-next-line\n  }, [])\n\n  const onFilter = (value: { [key: string]: string }) => {\n    if (!initDatabase) return\n    onFilterValue(value, setDatabases, initDatabase, 'tree')\n    if (!Object.keys(value).length) return\n    const newParams = Object.keys(value)\n      .map((key) => value[key] && `${key}=${value[key]}`)\n      .join('&')\n    setParams(newParams)\n  }\n\n  const getDataTree = async () => {\n    try {\n      const response = await getDataBaseTree()\n      setDatabases(response)\n      setInitDatabase(response)\n    } catch {}\n  }\n\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n    setProjectName(e.target.value)\n  }\n\n  const handleChangeLevel = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const type = Number(event.target.value) as ProjectTypeValue\n    setProjectType(type)\n    let within: DataWithin[] = []\n    if (type === ProjectTypeValue.WITHIN_FACTOR) {\n      within = [{ name: nameDefault, id: getNanoId(), data: [] }]\n    }\n    setImageIDs([])\n    setDataFactors([{ name: nameDefault, within, id: getNanoId(), data: [] }])\n  }\n\n  const onAddBetween = () => {\n    setDataFactors((pre) => [\n      ...pre,\n      { name: nameDefault, within: [], id: getNanoId(), data: [] },\n    ])\n  }\n\n  const onAddWithin = (idFactor: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === idFactor) {\n          return {\n            ...p,\n            within: [\n              ...p.within,\n              { name: nameDefault, within: [], id: getNanoId(), data: [] },\n            ],\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteFactor = (row: DataFactor) => {\n    setImageIDs((pre) =>\n      pre.filter((id) => {\n        if (projectType === ProjectTypeValue.FACTOR) {\n          return !row.data.find((rowData) => rowData.image_id === id)\n        }\n        return !row.within.find((w) => w.data.find((d) => d.image_id === id))\n      }),\n    )\n    setDataFactors((pre) => pre.filter((e) => e.id !== row.id))\n  }\n\n  const onDeleteWithin = (factor: DataFactor, row: DataWithin) => {\n    setImageIDs((pre) =>\n      pre.filter((id) => !row.data.find((rowData) => rowData.image_id === id)),\n    )\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, within: p.within.filter((w) => w.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataWithin = (\n    factor: DataFactor,\n    within: DataWithin,\n    row: ProjectAdd,\n  ) => {\n    setImageIDs((pre) => pre.filter((id) => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, data: w.data.filter((d) => d.id !== row.id) }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDeleteDataFactor = (factor: DataFactor, row: ProjectAdd) => {\n    setImageIDs((pre) => pre.filter((id) => id !== row.image_id))\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, data: p.data.filter((d) => d.id !== row.id) }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onDragRow = (row: ImagesDatabase[] = []) => {\n    setRowDrag(row)\n  }\n\n  const onBeginDrag = () => {\n    isPendingDrag.current = true\n    const mouseup = () => {\n      isPendingDrag.current = false\n      window.removeEventListener('mouseup', mouseup)\n    }\n    window.addEventListener('mouseup', mouseup)\n  }\n\n  const onDragEnd = () => {\n    setRowDrag(undefined)\n  }\n\n  const onMouseOver = (factor: DataFactor, within?: DataWithin) => {\n    if (isPendingDrag.current) return\n    onDropData(factor, within)\n    setRowDrag(undefined)\n  }\n\n  const onDropData = (factor: DataFactor, within?: DataWithin) => {\n    if (!Array.isArray(rowDrag) && !rowDrag?.image_url) {\n      return\n    }\n    let newData: ProjectAdd[] = []\n    const checkExistIdImage =\n      imageIDs.length &&\n      imageIDs.some((id) => {\n        if (!Array.isArray(rowDrag)) return rowDrag.id === id\n        return rowDrag.some((row) => row.id === id)\n      })\n    if (checkExistIdImage) {\n      return alert('Duplicate images cannot be registered.')\n    }\n    const newIds = Array.isArray(rowDrag)\n      ? rowDrag.map((row) => row.id)\n      : [rowDrag.id]\n    setImageIDs([...imageIDs, ...newIds])\n    if (!Array.isArray(rowDrag)) {\n      newData = [\n        {\n          id: getNanoId(),\n          project_name: rowDrag.datatype_label,\n          image_count: 1,\n          image_id: rowDrag.id,\n          project_type: rowDrag.image_attributes.image_type as string,\n          protocol: rowDrag.image_attributes.protocol as string,\n          image_url: rowDrag?.image_url,\n          jsonData: rowDrag?.image_attributes,\n        },\n      ]\n    } else if (Array.isArray(rowDrag)) {\n      newData = rowDrag.map((row) => ({\n        id: getNanoId(),\n        project_name: row.datatype_label,\n        image_count: 1,\n        image_id: row.id,\n        project_type: row.image_attributes.image_type as string,\n        protocol: row.image_attributes.protocol as string,\n        image_url: row?.image_url,\n        jsonData: row?.image_attributes,\n      }))\n    }\n    if (projectType === ProjectTypeValue.FACTOR) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return { ...p, data: [...p.data, ...newData] }\n          }\n          return p\n        }),\n      )\n      return\n    }\n    if (within) {\n      setDataFactors((pre) =>\n        pre.map((p) => {\n          if (p.id === factor.id) {\n            return {\n              ...p,\n              within: p.within.map((w) => {\n                if (w.id === within.id) {\n                  return { ...w, data: [...w.data, ...newData] }\n                }\n                return w\n              }),\n            }\n          }\n          return p\n        }),\n      )\n    }\n  }\n\n  const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onDragLeave = (event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const onChangeNameFactor = (factor: DataFactor, value: string) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return { ...p, name: value }\n        }\n        return p\n      }),\n    )\n  }\n\n  const onChangeNameWithinFactor = (\n    factor: DataFactor,\n    within: DataWithin,\n    value: string,\n  ) => {\n    setDataFactors((pre) =>\n      pre.map((p) => {\n        if (p.id === factor.id) {\n          return {\n            ...p,\n            within: p.within.map((w) => {\n              if (w.id === within.id) {\n                return { ...w, name: value }\n              }\n              return w\n            }),\n          }\n        }\n        return p\n      }),\n    )\n  }\n\n  const renderData = (\n    data: ProjectAdd[],\n    style?: CSSProperties,\n    onDelete?: (row: ProjectAdd) => void,\n  ) => {\n    return data.map((e, index) => (\n      <BoxItem\n        key={`${e.id}_${index}`}\n        style={style}\n        onClick={() => rowDataClick(e)}\n      >\n        <TypographyBoxItem>{e.project_name}</TypographyBoxItem>\n        <TypographyBoxItem>{e.project_type}</TypographyBoxItem>\n        <TypographyBoxItem>{e.protocol}</TypographyBoxItem>\n        <Box style={{ display: 'flex', justifyContent: 'flex-end', width: 64 }}>\n          <Button\n            onClick={(event) => {\n              event.preventDefault()\n              event.stopPropagation()\n              onDelete?.(e)\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n          </Button>\n        </Box>\n      </BoxItem>\n    ))\n  }\n\n  const onCloseImageView = () => {\n    setViewer({ open: false, url: '' })\n  }\n\n  const rowClick = async (row: ImagesDatabase) => {\n    const { view, checkNext, checkPre } = await onRowClick(databasese, row)\n    setViewer(view)\n    setDisabled({ left: !checkPre, right: !checkNext })\n  }\n\n  const rowDataClick = (row: ProjectAdd) => {\n    if (!row?.image_url || !timeoutClick.current) {\n      timeoutClick.current = setTimeout(() => {\n        timeoutClick.current = undefined\n      }, 300)\n      return\n    }\n    setViewer({\n      open: true,\n      url: row.image_url,\n      jsonData: row.jsonData,\n    })\n    setDisabled({ left: true, right: true })\n  }\n\n  const handleSort = (orderKey: string, orderByValue: 'DESC' | 'ASC' | '') => {\n    const data = onSort(\n      JSON.parse(JSON.stringify(initDatabase.records)),\n      orderByValue,\n      orderKey as OrderKey,\n    )\n    setDatabases({ ...databasese, records: data as RecordDatabase[] })\n    setColumnSort(orderKey)\n    setOrdeBy(orderByValue)\n  }\n\n  const onNext = () => {\n    if (!viewer.image) return\n    const imageNext = onGet(databasese, viewer.image, false)\n    if (imageNext) rowClick(imageNext as ImagesDatabase)\n  }\n\n  const onPrevious = () => {\n    if (!viewer.image) return\n    const imagePre = onGet(databasese, viewer.image, true)\n    if (imagePre) rowClick(imagePre as ImagesDatabase)\n  }\n\n  const onCancle = () => {\n    !routeGoback\n      ? navigate('/projects')\n      : navigate(`${routeGoback}&id=${idEdit}`, { state: { edited: true } })\n  }\n\n  const generateName = (name: string, index: number, subject: string) => {\n    if (name === nameDefault) {\n      return `${subject} factor name ${index}`\n    }\n    return name\n  }\n\n  const getBorderDrag = (): string => {\n    if (\n      (Array.isArray(rowDrag) && rowDrag.length) ||\n      (!Array.isArray(rowDrag) && !!rowDrag)\n    ) {\n      return '1px dashed red'\n    }\n    return ''\n  }\n\n  const onOk = async () => {\n    setLoading(true)\n    const project = {\n      project_name: projectName,\n      project_type: projectType,\n      image_count: imageIDs.length,\n    }\n    const dataset = dataFactors.map((factor, index) => ({\n      folder_name: generateName(factor.name, index, 'Between'),\n      source_image_ids: factor.data.map((d) => d.image_id),\n      sub_folders: factor.within.map((within, iWithin) => ({\n        folder_name: generateName(within.name, iWithin, 'Within'),\n        source_image_ids: within.data.map((d) => d.image_id),\n      })),\n    }))\n    if (nodeId) {\n      dispatch(\n        editProject({\n          project,\n          project_id: nodeId,\n          dataset,\n          callback: (isSuccess: boolean) => {\n            if (isSuccess) {\n              const urls = dataFactors\n                .map((el) => {\n                  if (el.data.length) return el.data\n                  return el.within.map((w) => w.data).flat()\n                })\n                .flat()\n                .map((image) => image.image_url)\n              dispatch(setInputNodeFilePath({ nodeId, filePath: urls }))\n              if (routeGoback) navigate(routeGoback)\n            }\n            setLoading(false)\n          },\n        }),\n      )\n    } else {\n      dispatch(\n        createProject({\n          project,\n          dataset,\n          callback: (isSuccess: boolean) => {\n            if (isSuccess) {\n              return onCancle()\n            }\n            setLoading(false)\n          },\n        }),\n      )\n    }\n  }\n\n  return (\n    <ProjectsWrapper>\n      {openFilter && (\n        <PopupSearch\n          defaultValue={{\n            session_label: searchParams.get('session_label') || '',\n            datatypes_label: searchParams.get('datatypes_label') || '',\n            type: searchParams.get('type') || '',\n            protocol: searchParams.get('protocol') || '',\n          }}\n          onFilter={onFilter}\n          onClose={() => setOpenFilter(false)}\n        />\n      )}\n      <ImageView\n        editAttribute={false}\n        disabled={disabled}\n        url={viewer.url && `${DATABASE_URL_HOST}${viewer.url}`}\n        open={viewer.open}\n        jsonData={viewer.jsonData}\n        onClose={onCloseImageView}\n        onNext={onNext}\n        onPrevious={onPrevious}\n        id={Number(viewer.id)}\n      />\n      {isEditName ? (\n        <InputName\n          autoFocus\n          onBlur={() => setIsEditName(false)}\n          value={projectName}\n          onChange={onChangeName}\n        />\n      ) : (\n        <TextName onClick={() => setIsEditName(true)}>{projectName}</TextName>\n      )}\n      <BoxOptions\n        aria-labelledby=\"demo-radio-buttons-group-label\"\n        value={projectType}\n        name=\"radio-buttons-group\"\n        onChange={handleChangeLevel}\n      >\n        <Box>\n          <Box>\n            <FormControlLabel\n              value={ProjectTypeValue.FACTOR}\n              control={<Radio />}\n              label=\"Between factor\"\n            />\n          </Box>\n          <FormControlLabel\n            value={ProjectTypeValue.WITHIN_FACTOR}\n            control={<Radio />}\n            label=\"Between factor-within factor\"\n            disabled={idEdit ? true : false}\n          />\n        </Box>\n      </BoxOptions>\n      <DropAndDropBox>\n        <DragBox>\n          {dataFactors.map((factor, index) => {\n            return (\n              <Fragment key={factor.id}>\n                <BoxFactor>\n                  <Input\n                    onChange={(e) => onChangeNameFactor(factor, e.target.value)}\n                    style={{ width: 'calc(100% - 64px)' }}\n                    value={generateName(factor.name, index, 'Between')}\n                  />\n                  <Button onClick={() => onDeleteFactor(factor)}>\n                    <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                  </Button>\n                  {projectType === ProjectTypeValue.WITHIN_FACTOR ? (\n                    factor.within.map((within, iWithin) => (\n                      <BoxFactor key={within.id} style={{ marginLeft: 24 }}>\n                        <Input\n                          onChange={(e) => {\n                            const { value } = e.target\n                            onChangeNameWithinFactor(factor, within, value)\n                          }}\n                          style={{ width: 'calc(100% - 64px)' }}\n                          value={generateName(within.name, iWithin, 'Within')}\n                        />\n                        <Button onClick={() => onDeleteWithin(factor, within)}>\n                          <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\n                        </Button>\n                        {renderData(within.data, { marginLeft: 48 }, (row) => {\n                          onDeleteDataWithin(factor, within, row)\n                        })}\n                        <BoxDrag\n                          style={{ borderBottom: getBorderDrag() }}\n                          onDrop={() => onDropData(factor, within)}\n                          onMouseOver={() => onMouseOver(factor, within)}\n                          onDragOver={onDragOver}\n                          onDragLeave={onDragLeave}\n                        />\n                      </BoxFactor>\n                    ))\n                  ) : (\n                    <>\n                      {renderData(factor.data, { marginLeft: 24 }, (row) => {\n                        onDeleteDataFactor(factor, row)\n                      })}\n                      <BoxDrag\n                        style={{ borderBottom: getBorderDrag() }}\n                        onDrop={() => onDropData(factor)}\n                        onDragOver={onDragOver}\n                        onDragLeave={onDragLeave}\n                        onMouseOver={() => onMouseOver(factor)}\n                      />\n                    </>\n                  )}\n                </BoxFactor>\n                {projectType === ProjectTypeValue.WITHIN_FACTOR &&\n                dataFactors.length ? (\n                  <NewRowButton\n                    onClick={() => onAddWithin(factor.id)}\n                    style={{ marginLeft: 24 }}\n                  >\n                    + Add Within Factor\n                  </NewRowButton>\n                ) : null}\n              </Fragment>\n            )\n          })}\n          <NewRowButton onClick={onAddBetween}>\n            + Add Between Factor\n          </NewRowButton>\n        </DragBox>\n        <DropBox>\n          <BoxFilter>\n            <ButtonFilter\n              onClick={() => setOpenFilter(true)}\n              style={{ margin: '0 26px 0 0' }}\n            >\n              Filter\n            </ButtonFilter>\n          </BoxFilter>\n          <DatabaseTableComponent\n            onSort={handleSort}\n            orderKey={columnSort}\n            orderBy={orderBy}\n            rowClick={rowClick}\n            defaultExpand\n            onBeginDrag={onBeginDrag}\n            onDrag={onDragRow}\n            onDragEnd={onDragEnd}\n            draggable\n            data={databasese.records}\n            columns={columns}\n          />\n        </DropBox>\n      </DropAndDropBox>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <ButtonFilter onClick={onOk}>{idEdit ? 'Ok' : 'Add'}</ButtonFilter>\n        <ButtonFilter onClick={onCancle}>Cancel</ButtonFilter>\n      </Box>\n      {loading && <Loading />}\n    </ProjectsWrapper>\n  )\n}\n\nconst TextName = styled(Typography)(({ theme }) => ({\n  textOverflow: 'ellipsis',\n  width: 'calc(40% - 16px)',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  padding: theme.spacing(1),\n  borderWidth: 1,\n  fontSize: 16,\n}))\n\nconst BoxItem = styled(Box)({\n  display: 'flex',\n  height: 40,\n  alignItems: 'center',\n  borderBottom: '1px solid rgba(0,0,0,0.8)',\n  paddingLeft: 16,\n  marginBottom: 4,\n})\n\nconst TypographyBoxItem = styled(Box)({\n  minWidth: 120,\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n})\n\nconst BoxDrag = styled(Box)({\n  paddingBottom: 24,\n  width: '100%',\n  borderWidth: 1,\n})\n\nconst BoxFactor = styled(Box)({})\n\nconst ProjectsWrapper = styled(Box)(({ theme }) => ({\n  width: `calc(100% - ${theme.spacing(2)})`,\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(3),\n  userSelect: 'none',\n}))\n\nconst BoxOptions = styled(RadioGroup)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(1, 2),\n  display: 'flex',\n  flexDirection: 'inherit',\n}))\n\nconst InputName = styled('input')(({ theme }) => ({\n  padding: theme.spacing(1),\n  outline: 'none',\n  borderColor: 'transparent',\n  fontSize: 18,\n  width: 'calc(40% - 16px)',\n  '&:focus': {\n    borderColor: '#000',\n  },\n  display: 'block',\n  borderWidth: 1,\n}))\n\nconst DropAndDropBox = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  gap: theme.spacing(2),\n  height: 'calc(100% - 177px)',\n  overflow: 'hidden',\n}))\n\nconst DragBox = styled(Box)(({ theme }) => ({\n  width: '40%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #000',\n  minHeight: 100,\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst DropBox = styled(Box)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  border: '1px solid #dedede',\n  height: 'calc(100% - 18px)',\n  overflow: 'auto',\n}))\n\nconst NewRowButton = styled(Button)(({ theme }) => ({\n  width: '60%',\n  padding: theme.spacing(1, 2),\n  borderStyle: 'dashed',\n  borderWidth: 1,\n  margin: theme.spacing(1, 0),\n}))\n\nconst ButtonFilter = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(2, 1),\n  minWidth: 80,\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  color: '#ffffff',\n  backgroundColor: '#283237 !important',\n}))\n\nconst BoxFilter = styled(Box)({\n  display: 'flex',\n  marginBottom: 10,\n  justifyContent: 'flex-end',\n})\n\nexport default ProjectFormComponent\n","import { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { resetPassword } from \"api/auth\";\nimport Loading from \"components/common/Loading\";\nimport { useNavigate } from \"react-router-dom\";\nimport { regexEmail } from \"../AccountManager\";\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await resetPassword(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Pls check your mail!`)\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'This field is validate'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Workflow from './components/Project'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport AccountManager from 'pages/AccountManager'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Projects from './pages/Projects'\nimport Database from './pages/Database'\nimport Login from 'pages/Login'\nimport ProjectFormComponent from \"./pages/Projects/Create\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<Dashboard />} />\n            <Route path=\"/projects/workflow\" element={<Workflow />} />\n            <Route path=\"/account-manager\" element={<AccountManager />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            <Route path=\"/database\" element={<Database />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            <Route path=\"/account-deleted\" element={<AccountDelete />} />\n            <Route path=\"/projects/new-project\" element={<ProjectFormComponent />} />\n          </Routes>\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n  fetchExperiment,\n} from './ExperimentsActions'\nimport {\n  convertToExperimentListType,\n  convertToExperimentType,\n} from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          state.experimentList[action.payload.unique_id] =\n            convertToExperimentType(action.payload)\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n  projectReducer,\n  datasetReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n  project: projectReducer,\n  dataset: datasetReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}